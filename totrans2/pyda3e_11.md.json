["```py\nIn [11]: data = pd.Series(np.random.uniform(size=9),\n ....:                  index=[[\"a\", \"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"d\", \"d\"],\n ....:                         [1, 2, 3, 1, 3, 1, 2, 2, 3]])\n\nIn [12]: data\nOut[12]: \na  1    0.929616\n 2    0.316376\n 3    0.183919\nb  1    0.204560\n 3    0.567725\nc  1    0.595545\n 2    0.964515\nd  2    0.653177\n 3    0.748907\ndtype: float64\n```", "```py\nIn [13]: data.index\nOut[13]: \nMultiIndex([('a', 1),\n ('a', 2),\n ('a', 3),\n ('b', 1),\n ('b', 3),\n ('c', 1),\n ('c', 2),\n ('d', 2),\n ('d', 3)],\n )\n```", "```py\nIn [14]: data[\"b\"]\nOut[14]: \n1    0.204560\n3    0.567725\ndtype: float64\n\nIn [15]: data[\"b\":\"c\"]\nOut[15]: \nb  1    0.204560\n 3    0.567725\nc  1    0.595545\n 2    0.964515\ndtype: float64\n\nIn [16]: data.loc[[\"b\", \"d\"]]\nOut[16]: \nb  1    0.204560\n 3    0.567725\nd  2    0.653177\n 3    0.748907\ndtype: float64\n```", "```py\nIn [17]: data.loc[:, 2]\nOut[17]: \na    0.316376\nc    0.964515\nd    0.653177\ndtype: float64\n```", "```py\nIn [18]: data.unstack()\nOut[18]: \n 1         2         3\na  0.929616  0.316376  0.183919\nb  0.204560       NaN  0.567725\nc  0.595545  0.964515       NaN\nd       NaN  0.653177  0.748907\n```", "```py\nIn [19]: data.unstack().stack()\nOut[19]: \na  1    0.929616\n 2    0.316376\n 3    0.183919\nb  1    0.204560\n 3    0.567725\nc  1    0.595545\n 2    0.964515\nd  2    0.653177\n 3    0.748907\ndtype: float64\n```", "```py\nIn [20]: frame = pd.DataFrame(np.arange(12).reshape((4, 3)),\n ....:                      index=[[\"a\", \"a\", \"b\", \"b\"], [1, 2, 1, 2]],\n ....:                      columns=[[\"Ohio\", \"Ohio\", \"Colorado\"],\n ....:                               [\"Green\", \"Red\", \"Green\"]])\n\nIn [21]: frame\nOut[21]: \n Ohio     Colorado\n Green Red    Green\na 1     0   1        2\n 2     3   4        5\nb 1     6   7        8\n 2     9  10       11\n```", "```py\nIn [22]: frame.index.names = [\"key1\", \"key2\"]\n\nIn [23]: frame.columns.names = [\"state\", \"color\"]\n\nIn [24]: frame\nOut[24]: \nstate      Ohio     Colorado\ncolor     Green Red    Green\nkey1 key2 \na    1        0   1        2\n 2        3   4        5\nb    1        6   7        8\n 2        9  10       11\n```", "```py\nIn [25]: frame.index.nlevels\nOut[25]: 2\n```", "```py\nIn [26]: frame[\"Ohio\"]\nOut[26]: \ncolor      Green  Red\nkey1 key2 \na    1         0    1\n 2         3    4\nb    1         6    7\n 2         9   10\n```", "```py\npd.MultiIndex.from_arrays([[\"Ohio\", \"Ohio\", \"Colorado\"],\n [\"Green\", \"Red\", \"Green\"]],\n names=[\"state\", \"color\"])\n```", "```py\nIn [27]: frame.swaplevel(\"key1\", \"key2\")\nOut[27]: \nstate      Ohio     Colorado\ncolor     Green Red    Green\nkey2 key1 \n1    a        0   1        2\n2    a        3   4        5\n1    b        6   7        8\n2    b        9  10       11\n```", "```py\nIn [28]: frame.sort_index(level=1)\nOut[28]: \nstate      Ohio     Colorado\ncolor     Green Red    Green\nkey1 key2 \na    1        0   1        2\nb    1        6   7        8\na    2        3   4        5\nb    2        9  10       11\n\nIn [29]: frame.swaplevel(0, 1).sort_index(level=0)\nOut[29]: \nstate      Ohio     Colorado\ncolor     Green Red    Green\nkey2 key1 \n1    a        0   1        2\n b        6   7        8\n2    a        3   4        5\n b        9  10       11\n```", "```py\nIn [30]: frame.groupby(level=\"key2\").sum()\nOut[30]: \nstate  Ohio     Colorado\ncolor Green Red    Green\nkey2 \n1         6   8       10\n2        12  14       16\n\nIn [31]: frame.groupby(level=\"color\", axis=\"columns\").sum()\nOut[31]: \ncolor      Green  Red\nkey1 key2 \na    1         2    1\n 2         8    4\nb    1        14    7\n 2        20   10\n```", "```py\nIn [32]: frame = pd.DataFrame({\"a\": range(7), \"b\": range(7, 0, -1),\n ....:                       \"c\": [\"one\", \"one\", \"one\", \"two\", \"two\",\n ....:                             \"two\", \"two\"],\n ....:                       \"d\": [0, 1, 2, 0, 1, 2, 3]})\n\nIn [33]: frame\nOut[33]: \n a  b    c  d\n0  0  7  one  0\n1  1  6  one  1\n2  2  5  one  2\n3  3  4  two  0\n4  4  3  two  1\n5  5  2  two  2\n6  6  1  two  3\n```", "```py\nIn [34]: frame2 = frame.set_index([\"c\", \"d\"])\n\nIn [35]: frame2\nOut[35]: \n a  b\nc   d \none 0  0  7\n 1  1  6\n 2  2  5\ntwo 0  3  4\n 1  4  3\n 2  5  2\n 3  6  1\n```", "```py\nIn [36]: frame.set_index([\"c\", \"d\"], drop=False)\nOut[36]: \n a  b    c  d\nc   d \none 0  0  7  one  0\n 1  1  6  one  1\n 2  2  5  one  2\ntwo 0  3  4  two  0\n 1  4  3  two  1\n 2  5  2  two  2\n 3  6  1  two  3\n```", "```py\nIn [37]: frame2.reset_index()\nOut[37]: \n c  d  a  b\n0  one  0  0  7\n1  one  1  1  6\n2  one  2  2  5\n3  two  0  3  4\n4  two  1  4  3\n5  two  2  5  2\n6  two  3  6  1\n```", "```py\nIn [38]: df1 = pd.DataFrame({\"key\": [\"b\", \"b\", \"a\", \"c\", \"a\", \"a\", \"b\"],\n ....:                     \"data1\": pd.Series(range(7), dtype=\"Int64\")})\n\nIn [39]: df2 = pd.DataFrame({\"key\": [\"a\", \"b\", \"d\"],\n ....:                     \"data2\": pd.Series(range(3), dtype=\"Int64\")})\n\nIn [40]: df1\nOut[40]: \n key  data1\n0   b      0\n1   b      1\n2   a      2\n3   c      3\n4   a      4\n5   a      5\n6   b      6\n\nIn [41]: df2\nOut[41]: \n key  data2\n0   a      0\n1   b      1\n2   d      2\n```", "```py\nIn [42]: pd.merge(df1, df2)\nOut[42]: \n key  data1  data2\n0   b      0      1\n1   b      1      1\n2   b      6      1\n3   a      2      0\n4   a      4      0\n5   a      5      0\n```", "```py\nIn [43]: pd.merge(df1, df2, on=\"key\")\nOut[43]: \n key  data1  data2\n0   b      0      1\n1   b      1      1\n2   b      6      1\n3   a      2      0\n4   a      4      0\n5   a      5      0\n```", "```py\nIn [44]: df3 = pd.DataFrame({\"lkey\": [\"b\", \"b\", \"a\", \"c\", \"a\", \"a\", \"b\"],\n ....:                     \"data1\": pd.Series(range(7), dtype=\"Int64\")})\n\nIn [45]: df4 = pd.DataFrame({\"rkey\": [\"a\", \"b\", \"d\"],\n ....:                     \"data2\": pd.Series(range(3), dtype=\"Int64\")})\n\nIn [46]: pd.merge(df3, df4, left_on=\"lkey\", right_on=\"rkey\")\nOut[46]: \n lkey  data1 rkey  data2\n0    b      0    b      1\n1    b      1    b      1\n2    b      6    b      1\n3    a      2    a      0\n4    a      4    a      0\n5    a      5    a      0\n```", "```py\nIn [47]: pd.merge(df1, df2, how=\"outer\")\nOut[47]: \n key  data1  data2\n0   b      0      1\n1   b      1      1\n2   b      6      1\n3   a      2      0\n4   a      4      0\n5   a      5      0\n6   c      3   <NA>\n7   d   <NA>      2\n\nIn [48]: pd.merge(df3, df4, left_on=\"lkey\", right_on=\"rkey\", how=\"outer\")\nOut[48]: \n lkey  data1 rkey  data2\n0    b      0    b      1\n1    b      1    b      1\n2    b      6    b      1\n3    a      2    a      0\n4    a      4    a      0\n5    a      5    a      0\n6    c      3  NaN   <NA>\n7  NaN   <NA>    d      2\n```", "```py\nIn [49]: df1 = pd.DataFrame({\"key\": [\"b\", \"b\", \"a\", \"c\", \"a\", \"b\"],\n ....:                     \"data1\": pd.Series(range(6), dtype=\"Int64\")})\n\nIn [50]: df2 = pd.DataFrame({\"key\": [\"a\", \"b\", \"a\", \"b\", \"d\"],\n ....:                     \"data2\": pd.Series(range(5), dtype=\"Int64\")})\n\nIn [51]: df1\nOut[51]: \n key  data1\n0   b      0\n1   b      1\n2   a      2\n3   c      3\n4   a      4\n5   b      5\n\nIn [52]: df2\nOut[52]: \n key  data2\n0   a      0\n1   b      1\n2   a      2\n3   b      3\n4   d      4\n\nIn [53]: pd.merge(df1, df2, on=\"key\", how=\"left\")\nOut[53]: \n key  data1  data2\n0    b      0      1\n1    b      0      3\n2    b      1      1\n3    b      1      3\n4    a      2      0\n5    a      2      2\n6    c      3   <NA>\n7    a      4      0\n8    a      4      2\n9    b      5      1\n10   b      5      3\n```", "```py\nIn [54]: pd.merge(df1, df2, how=\"inner\")\nOut[54]: \n key  data1  data2\n0   b      0      1\n1   b      0      3\n2   b      1      1\n3   b      1      3\n4   b      5      1\n5   b      5      3\n6   a      2      0\n7   a      2      2\n8   a      4      0\n9   a      4      2\n```", "```py\nIn [55]: left = pd.DataFrame({\"key1\": [\"foo\", \"foo\", \"bar\"],\n ....:                      \"key2\": [\"one\", \"two\", \"one\"],\n ....:                      \"lval\": pd.Series([1, 2, 3], dtype='Int64')})\n\nIn [56]: right = pd.DataFrame({\"key1\": [\"foo\", \"foo\", \"bar\", \"bar\"],\n ....:                       \"key2\": [\"one\", \"one\", \"one\", \"two\"],\n ....:                       \"rval\": pd.Series([4, 5, 6, 7], dtype='Int64')})\n\nIn [57]: pd.merge(left, right, on=[\"key1\", \"key2\"], how=\"outer\")\nOut[57]: \n key1 key2  lval  rval\n0  foo  one     1     4\n1  foo  one     1     5\n2  foo  two     2  <NA>\n3  bar  one     3     6\n4  bar  two  <NA>     7\n```", "```py\nIn [58]: pd.merge(left, right, on=\"key1\")\nOut[58]: \n key1 key2_x  lval key2_y  rval\n0  foo    one     1    one     4\n1  foo    one     1    one     5\n2  foo    two     2    one     4\n3  foo    two     2    one     5\n4  bar    one     3    one     6\n5  bar    one     3    two     7\n```", "```py\nIn [59]: pd.merge(left, right, on=\"key1\", suffixes=(\"_left\", \"_right\"))\nOut[59]: \n key1 key2_left  lval key2_right  rval\n0  foo       one     1        one     4\n1  foo       one     1        one     5\n2  foo       two     2        one     4\n3  foo       two     2        one     5\n4  bar       one     3        one     6\n5  bar       one     3        two     7\n```", "```py\nIn [60]: left1 = pd.DataFrame({\"key\": [\"a\", \"b\", \"a\", \"a\", \"b\", \"c\"],\n ....:                       \"value\": pd.Series(range(6), dtype=\"Int64\")})\n\nIn [61]: right1 = pd.DataFrame({\"group_val\": [3.5, 7]}, index=[\"a\", \"b\"])\n\nIn [62]: left1\nOut[62]: \n key  value\n0   a      0\n1   b      1\n2   a      2\n3   a      3\n4   b      4\n5   c      5\n\nIn [63]: right1\nOut[63]: \n group_val\na        3.5\nb        7.0\n\nIn [64]: pd.merge(left1, right1, left_on=\"key\", right_index=True)\nOut[64]: \n key  value  group_val\n0   a      0        3.5\n2   a      2        3.5\n3   a      3        3.5\n1   b      1        7.0\n4   b      4        7.0\n```", "```py\nIn [65]: pd.merge(left1, right1, left_on=\"key\", right_index=True, how=\"outer\")\nOut[65]: \n key  value  group_val\n0   a      0        3.5\n2   a      2        3.5\n3   a      3        3.5\n1   b      1        7.0\n4   b      4        7.0\n5   c      5        NaN\n```", "```py\nIn [66]: lefth = pd.DataFrame({\"key1\": [\"Ohio\", \"Ohio\", \"Ohio\",\n ....:                                \"Nevada\", \"Nevada\"],\n ....:                       \"key2\": [2000, 2001, 2002, 2001, 2002],\n ....:                       \"data\": pd.Series(range(5), dtype=\"Int64\")})\n\nIn [67]: righth_index = pd.MultiIndex.from_arrays(\n ....:     [\n ....:         [\"Nevada\", \"Nevada\", \"Ohio\", \"Ohio\", \"Ohio\", \"Ohio\"],\n ....:         [2001, 2000, 2000, 2000, 2001, 2002]\n ....:     ]\n ....: )\n\nIn [68]: righth = pd.DataFrame({\"event1\": pd.Series([0, 2, 4, 6, 8, 10], dtype=\"I\nnt64\",\n ....:                                            index=righth_index),\n ....:                        \"event2\": pd.Series([1, 3, 5, 7, 9, 11], dtype=\"I\nnt64\",\n ....:                                            index=righth_index)})\n\nIn [69]: lefth\nOut[69]: \n key1  key2  data\n0    Ohio  2000     0\n1    Ohio  2001     1\n2    Ohio  2002     2\n3  Nevada  2001     3\n4  Nevada  2002     4\n\nIn [70]: righth\nOut[70]: \n event1  event2\nNevada 2001       0       1\n 2000       2       3\nOhio   2000       4       5\n 2000       6       7\n 2001       8       9\n 2002      10      11\n```", "```py\nIn [71]: pd.merge(lefth, righth, left_on=[\"key1\", \"key2\"], right_index=True)\nOut[71]: \n key1  key2  data  event1  event2\n0    Ohio  2000     0       4       5\n0    Ohio  2000     0       6       7\n1    Ohio  2001     1       8       9\n2    Ohio  2002     2      10      11\n3  Nevada  2001     3       0       1\n\nIn [72]: pd.merge(lefth, righth, left_on=[\"key1\", \"key2\"],\n ....:          right_index=True, how=\"outer\")\nOut[72]: \n key1  key2  data  event1  event2\n0    Ohio  2000     0       4       5\n0    Ohio  2000     0       6       7\n1    Ohio  2001     1       8       9\n2    Ohio  2002     2      10      11\n3  Nevada  2001     3       0       1\n4  Nevada  2002     4    <NA>    <NA>\n4  Nevada  2000  <NA>       2       3\n```", "```py\nIn [73]: left2 = pd.DataFrame([[1., 2.], [3., 4.], [5., 6.]],\n ....:                      index=[\"a\", \"c\", \"e\"],\n ....:                      columns=[\"Ohio\", \"Nevada\"]).astype(\"Int64\")\n\nIn [74]: right2 = pd.DataFrame([[7., 8.], [9., 10.], [11., 12.], [13, 14]],\n ....:                       index=[\"b\", \"c\", \"d\", \"e\"],\n ....:                       columns=[\"Missouri\", \"Alabama\"]).astype(\"Int64\")\n\nIn [75]: left2\nOut[75]: \n Ohio  Nevada\na     1       2\nc     3       4\ne     5       6\n\nIn [76]: right2\nOut[76]: \n Missouri  Alabama\nb         7        8\nc         9       10\nd        11       12\ne        13       14\n\nIn [77]: pd.merge(left2, right2, how=\"outer\", left_index=True, right_index=True)\nOut[77]: \n Ohio  Nevada  Missouri  Alabama\na     1       2      <NA>     <NA>\nb  <NA>    <NA>         7        8\nc     3       4         9       10\nd  <NA>    <NA>        11       12\ne     5       6        13       14\n```", "```py\nIn [78]: left2.join(right2, how=\"outer\")\nOut[78]: \n Ohio  Nevada  Missouri  Alabama\na     1       2      <NA>     <NA>\nb  <NA>    <NA>         7        8\nc     3       4         9       10\nd  <NA>    <NA>        11       12\ne     5       6        13       14\n```", "```py\nIn [79]: left1.join(right1, on=\"key\")\nOut[79]: \n key  value  group_val\n0   a      0        3.5\n1   b      1        7.0\n2   a      2        3.5\n3   a      3        3.5\n4   b      4        7.0\n5   c      5        NaN\n```", "```py\nIn [80]: another = pd.DataFrame([[7., 8.], [9., 10.], [11., 12.], [16., 17.]],\n ....:                        index=[\"a\", \"c\", \"e\", \"f\"],\n ....:                        columns=[\"New York\", \"Oregon\"])\n\nIn [81]: another\nOut[81]: \n New York  Oregon\na       7.0     8.0\nc       9.0    10.0\ne      11.0    12.0\nf      16.0    17.0\n\nIn [82]: left2.join([right2, another])\nOut[82]: \n Ohio  Nevada  Missouri  Alabama  New York  Oregon\na     1       2      <NA>     <NA>       7.0     8.0\nc     3       4         9       10       9.0    10.0\ne     5       6        13       14      11.0    12.0\n\nIn [83]: left2.join([right2, another], how=\"outer\")\nOut[83]: \n Ohio  Nevada  Missouri  Alabama  New York  Oregon\na     1       2      <NA>     <NA>       7.0     8.0\nc     3       4         9       10       9.0    10.0\ne     5       6        13       14      11.0    12.0\nb  <NA>    <NA>         7        8       NaN     NaN\nd  <NA>    <NA>        11       12       NaN     NaN\nf  <NA>    <NA>      <NA>     <NA>      16.0    17.0\n```", "```py\nIn [84]: arr = np.arange(12).reshape((3, 4))\n\nIn [85]: arr\nOut[85]: \narray([[ 0,  1,  2,  3],\n [ 4,  5,  6,  7],\n [ 8,  9, 10, 11]])\n\nIn [86]: np.concatenate([arr, arr], axis=1)\nOut[86]: \narray([[ 0,  1,  2,  3,  0,  1,  2,  3],\n [ 4,  5,  6,  7,  4,  5,  6,  7],\n [ 8,  9, 10, 11,  8,  9, 10, 11]])\n```", "```py\nIn [87]: s1 = pd.Series([0, 1], index=[\"a\", \"b\"], dtype=\"Int64\")\n\nIn [88]: s2 = pd.Series([2, 3, 4], index=[\"c\", \"d\", \"e\"], dtype=\"Int64\")\n\nIn [89]: s3 = pd.Series([5, 6], index=[\"f\", \"g\"], dtype=\"Int64\")\n```", "```py\nIn [90]: s1\nOut[90]: \na    0\nb    1\ndtype: Int64\n\nIn [91]: s2\nOut[91]: \nc    2\nd    3\ne    4\ndtype: Int64\n\nIn [92]: s3\nOut[92]: \nf    5\ng    6\ndtype: Int64\n\nIn [93]: pd.concat([s1, s2, s3])\nOut[93]: \na    0\nb    1\nc    2\nd    3\ne    4\nf    5\ng    6\ndtype: Int64\n```", "```py\nIn [94]: pd.concat([s1, s2, s3], axis=\"columns\")\nOut[94]: \n 0     1     2\na     0  <NA>  <NA>\nb     1  <NA>  <NA>\nc  <NA>     2  <NA>\nd  <NA>     3  <NA>\ne  <NA>     4  <NA>\nf  <NA>  <NA>     5\ng  <NA>  <NA>     6\n```", "```py\nIn [95]: s4 = pd.concat([s1, s3])\n\nIn [96]: s4\nOut[96]: \na    0\nb    1\nf    5\ng    6\ndtype: Int64\n\nIn [97]: pd.concat([s1, s4], axis=\"columns\")\nOut[97]: \n 0  1\na     0  0\nb     1  1\nf  <NA>  5\ng  <NA>  6\n\nIn [98]: pd.concat([s1, s4], axis=\"columns\", join=\"inner\")\nOut[98]: \n 0  1\na  0  0\nb  1  1\n```", "```py\nIn [99]: result = pd.concat([s1, s1, s3], keys=[\"one\", \"two\", \"three\"])\n\nIn [100]: result\nOut[100]: \none    a    0\n b    1\ntwo    a    0\n b    1\nthree  f    5\n g    6\ndtype: Int64\n\nIn [101]: result.unstack()\nOut[101]: \n a     b     f     g\none       0     1  <NA>  <NA>\ntwo       0     1  <NA>  <NA>\nthree  <NA>  <NA>     5     6\n```", "```py\nIn [102]: pd.concat([s1, s2, s3], axis=\"columns\", keys=[\"one\", \"two\", \"three\"])\nOut[102]: \n one   two  three\na     0  <NA>   <NA>\nb     1  <NA>   <NA>\nc  <NA>     2   <NA>\nd  <NA>     3   <NA>\ne  <NA>     4   <NA>\nf  <NA>  <NA>      5\ng  <NA>  <NA>      6\n```", "```py\nIn [103]: df1 = pd.DataFrame(np.arange(6).reshape(3, 2), index=[\"a\", \"b\", \"c\"],\n .....:                    columns=[\"one\", \"two\"])\n\nIn [104]: df2 = pd.DataFrame(5 + np.arange(4).reshape(2, 2), index=[\"a\", \"c\"],\n .....:                    columns=[\"three\", \"four\"])\n\nIn [105]: df1\nOut[105]: \n one  two\na    0    1\nb    2    3\nc    4    5\n\nIn [106]: df2\nOut[106]: \n three  four\na      5     6\nc      7     8\n\nIn [107]: pd.concat([df1, df2], axis=\"columns\", keys=[\"level1\", \"level2\"])\nOut[107]: \n level1     level2 \n one two  three four\na      0   1    5.0  6.0\nb      2   3    NaN  NaN\nc      4   5    7.0  8.0\n```", "```py\nIn [108]: pd.concat({\"level1\": df1, \"level2\": df2}, axis=\"columns\")\nOut[108]: \n level1     level2 \n one two  three four\na      0   1    5.0  6.0\nb      2   3    NaN  NaN\nc      4   5    7.0  8.0\n```", "```py\nIn [109]: pd.concat([df1, df2], axis=\"columns\", keys=[\"level1\", \"level2\"],\n .....:           names=[\"upper\", \"lower\"])\nOut[109]: \nupper level1     level2 \nlower    one two  three four\na          0   1    5.0  6.0\nb          2   3    NaN  NaN\nc          4   5    7.0  8.0\n```", "```py\nIn [110]: df1 = pd.DataFrame(np.random.standard_normal((3, 4)),\n .....:                    columns=[\"a\", \"b\", \"c\", \"d\"])\n\nIn [111]: df2 = pd.DataFrame(np.random.standard_normal((2, 3)),\n .....:                    columns=[\"b\", \"d\", \"a\"])\n\nIn [112]: df1\nOut[112]: \n a         b         c         d\n0  1.248804  0.774191 -0.319657 -0.624964\n1  1.078814  0.544647  0.855588  1.343268\n2 -0.267175  1.793095 -0.652929 -1.886837\n\nIn [113]: df2\nOut[113]: \n b         d         a\n0  1.059626  0.644448 -0.007799\n1 -0.449204  2.448963  0.667226\n```", "```py\nIn [114]: pd.concat([df1, df2], ignore_index=True)\nOut[114]: \n a         b         c         d\n0  1.248804  0.774191 -0.319657 -0.624964\n1  1.078814  0.544647  0.855588  1.343268\n2 -0.267175  1.793095 -0.652929 -1.886837\n3 -0.007799  1.059626       NaN  0.644448\n4  0.667226 -0.449204       NaN  2.448963\n```", "```py\nIn [115]: a = pd.Series([np.nan, 2.5, 0.0, 3.5, 4.5, np.nan],\n .....:               index=[\"f\", \"e\", \"d\", \"c\", \"b\", \"a\"])\n\nIn [116]: b = pd.Series([0., np.nan, 2., np.nan, np.nan, 5.],\n .....:               index=[\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"])\n\nIn [117]: a\nOut[117]: \nf    NaN\ne    2.5\nd    0.0\nc    3.5\nb    4.5\na    NaN\ndtype: float64\n\nIn [118]: b\nOut[118]: \na    0.0\nb    NaN\nc    2.0\nd    NaN\ne    NaN\nf    5.0\ndtype: float64\n\nIn [119]: np.where(pd.isna(a), b, a)\nOut[119]: array([0. , 2.5, 0. , 3.5, 4.5, 5. ])\n```", "```py\nIn [120]: a.combine_first(b)\nOut[120]: \na    0.0\nb    4.5\nc    3.5\nd    0.0\ne    2.5\nf    5.0\ndtype: float64\n```", "```py\nIn [121]: df1 = pd.DataFrame({\"a\": [1., np.nan, 5., np.nan],\n .....:                     \"b\": [np.nan, 2., np.nan, 6.],\n .....:                     \"c\": range(2, 18, 4)})\n\nIn [122]: df2 = pd.DataFrame({\"a\": [5., 4., np.nan, 3., 7.],\n .....:                     \"b\": [np.nan, 3., 4., 6., 8.]})\n\nIn [123]: df1\nOut[123]: \n a    b   c\n0  1.0  NaN   2\n1  NaN  2.0   6\n2  5.0  NaN  10\n3  NaN  6.0  14\n\nIn [124]: df2\nOut[124]: \n a    b\n0  5.0  NaN\n1  4.0  3.0\n2  NaN  4.0\n3  3.0  6.0\n4  7.0  8.0\n\nIn [125]: df1.combine_first(df2)\nOut[125]: \n a    b     c\n0  1.0  NaN   2.0\n1  4.0  2.0   6.0\n2  5.0  4.0  10.0\n3  3.0  6.0  14.0\n4  7.0  8.0   NaN\n```", "```py\nIn [126]: data = pd.DataFrame(np.arange(6).reshape((2, 3)),\n .....:                     index=pd.Index([\"Ohio\", \"Colorado\"], name=\"state\"),\n .....:                     columns=pd.Index([\"one\", \"two\", \"three\"],\n .....:                     name=\"number\"))\n\nIn [127]: data\nOut[127]: \nnumber    one  two  three\nstate \nOhio        0    1      2\nColorado    3    4      5\n```", "```py\nIn [128]: result = data.stack()\n\nIn [129]: result\nOut[129]: \nstate     number\nOhio      one       0\n two       1\n three     2\nColorado  one       3\n two       4\n three     5\ndtype: int64\n```", "```py\nIn [130]: result.unstack()\nOut[130]: \nnumber    one  two  three\nstate \nOhio        0    1      2\nColorado    3    4      5\n```", "```py\nIn [131]: result.unstack(level=0)\nOut[131]: \nstate   Ohio  Colorado\nnumber \none        0         3\ntwo        1         4\nthree      2         5\n\nIn [132]: result.unstack(level=\"state\")\nOut[132]: \nstate   Ohio  Colorado\nnumber \none        0         3\ntwo        1         4\nthree      2         5\n```", "```py\nIn [133]: s1 = pd.Series([0, 1, 2, 3], index=[\"a\", \"b\", \"c\", \"d\"], dtype=\"Int64\")\n\nIn [134]: s2 = pd.Series([4, 5, 6], index=[\"c\", \"d\", \"e\"], dtype=\"Int64\")\n\nIn [135]: data2 = pd.concat([s1, s2], keys=[\"one\", \"two\"])\n\nIn [136]: data2\nOut[136]: \none  a    0\n b    1\n c    2\n d    3\ntwo  c    4\n d    5\n e    6\ndtype: Int64\n```", "```py\nIn [137]: data2.unstack()\nOut[137]: \n a     b  c  d     e\none     0     1  2  3  <NA>\ntwo  <NA>  <NA>  4  5     6\n\nIn [138]: data2.unstack().stack()\nOut[138]: \none  a    0\n b    1\n c    2\n d    3\ntwo  c    4\n d    5\n e    6\ndtype: Int64\n\nIn [139]: data2.unstack().stack(dropna=False)\nOut[139]: \none  a       0\n b       1\n c       2\n d       3\n e    <NA>\ntwo  a    <NA>\n b    <NA>\n c       4\n d       5\n e       6\ndtype: Int64\n```", "```py\nIn [140]: df = pd.DataFrame({\"left\": result, \"right\": result + 5},\n .....:                   columns=pd.Index([\"left\", \"right\"], name=\"side\"))\n\nIn [141]: df\nOut[141]: \nside             left  right\nstate    number \nOhio     one        0      5\n two        1      6\n three      2      7\nColorado one        3      8\n two        4      9\n three      5     10\n\nIn [142]: df.unstack(level=\"state\")\nOut[142]: \nside   left          right \nstate  Ohio Colorado  Ohio Colorado\nnumber \none       0        3     5        8\ntwo       1        4     6        9\nthree     2        5     7       10\n```", "```py\nIn [143]: df.unstack(level=\"state\").stack(level=\"side\")\nOut[143]: \nstate         Colorado  Ohio\nnumber side \none    left          3     0\n right         8     5\ntwo    left          4     1\n right         9     6\nthree  left          5     2\n right        10     7\n```", "```py\nIn [144]: data = pd.read_csv(\"examples/macrodata.csv\")\n\nIn [145]: data = data.loc[:, [\"year\", \"quarter\", \"realgdp\", \"infl\", \"unemp\"]]\n\nIn [146]: data.head()\nOut[146]: \n year  quarter   realgdp  infl  unemp\n0  1959        1  2710.349  0.00    5.8\n1  1959        2  2778.801  2.34    5.1\n2  1959        3  2775.488  2.74    5.3\n3  1959        4  2785.204  0.27    5.6\n4  1960        1  2847.699  2.31    5.2\n```", "```py\nIn [147]: periods = pd.PeriodIndex(year=data.pop(\"year\"),\n .....:                          quarter=data.pop(\"quarter\"),\n .....:                          name=\"date\")\n\nIn [148]: periods\nOut[148]: \nPeriodIndex(['1959Q1', '1959Q2', '1959Q3', '1959Q4', '1960Q1', '1960Q2',\n '1960Q3', '1960Q4', '1961Q1', '1961Q2',\n ...\n '2007Q2', '2007Q3', '2007Q4', '2008Q1', '2008Q2', '2008Q3',\n '2008Q4', '2009Q1', '2009Q2', '2009Q3'],\n dtype='period[Q-DEC]', name='date', length=203)\n\nIn [149]: data.index = periods.to_timestamp(\"D\")\n\nIn [150]: data.head()\nOut[150]: \n realgdp  infl  unemp\ndate \n1959-01-01  2710.349  0.00    5.8\n1959-04-01  2778.801  2.34    5.1\n1959-07-01  2775.488  2.74    5.3\n1959-10-01  2785.204  0.27    5.6\n1960-01-01  2847.699  2.31    5.2\n```", "```py\nIn [151]: data = data.reindex(columns=[\"realgdp\", \"infl\", \"unemp\"])\n\nIn [152]: data.columns.name = \"item\"\n\nIn [153]: data.head()\nOut[153]: \nitem         realgdp  infl  unemp\ndate \n1959-01-01  2710.349  0.00    5.8\n1959-04-01  2778.801  2.34    5.1\n1959-07-01  2775.488  2.74    5.3\n1959-10-01  2785.204  0.27    5.6\n1960-01-01  2847.699  2.31    5.2\n```", "```py\nIn [154]: long_data = (data.stack()\n .....:              .reset_index()\n .....:              .rename(columns={0: \"value\"}))\n```", "```py\nIn [155]: long_data[:10]\nOut[155]: \n date     item     value\n0 1959-01-01  realgdp  2710.349\n1 1959-01-01     infl     0.000\n2 1959-01-01    unemp     5.800\n3 1959-04-01  realgdp  2778.801\n4 1959-04-01     infl     2.340\n5 1959-04-01    unemp     5.100\n6 1959-07-01  realgdp  2775.488\n7 1959-07-01     infl     2.740\n8 1959-07-01    unemp     5.300\n9 1959-10-01  realgdp  2785.204\n```", "```py\nIn [156]: pivoted = long_data.pivot(index=\"date\", columns=\"item\",\n .....:                           values=\"value\")\n\nIn [157]: pivoted.head()\nOut[157]: \nitem        infl   realgdp  unemp\ndate \n1959-01-01  0.00  2710.349    5.8\n1959-04-01  2.34  2778.801    5.1\n1959-07-01  2.74  2775.488    5.3\n1959-10-01  0.27  2785.204    5.6\n1960-01-01  2.31  2847.699    5.2\n```", "```py\nIn [159]: long_data[\"value2\"] = np.random.standard_normal(len(long_data))\n\nIn [160]: long_data[:10]\nOut[160]: \n date     item     value    value2\n0 1959-01-01  realgdp  2710.349  0.802926\n1 1959-01-01     infl     0.000  0.575721\n2 1959-01-01    unemp     5.800  1.381918\n3 1959-04-01  realgdp  2778.801  0.000992\n4 1959-04-01     infl     2.340 -0.143492\n5 1959-04-01    unemp     5.100 -0.206282\n6 1959-07-01  realgdp  2775.488 -0.222392\n7 1959-07-01     infl     2.740 -1.682403\n8 1959-07-01    unemp     5.300  1.811659\n9 1959-10-01  realgdp  2785.204 -0.351305\n```", "```py\nIn [161]: pivoted = long_data.pivot(index=\"date\", columns=\"item\")\n\nIn [162]: pivoted.head()\nOut[162]: \n value                    value2 \nitem        infl   realgdp unemp      infl   realgdp     unemp\ndate \n1959-01-01  0.00  2710.349   5.8  0.575721  0.802926  1.381918\n1959-04-01  2.34  2778.801   5.1 -0.143492  0.000992 -0.206282\n1959-07-01  2.74  2775.488   5.3 -1.682403 -0.222392  1.811659\n1959-10-01  0.27  2785.204   5.6  0.128317 -0.351305 -1.313554\n1960-01-01  2.31  2847.699   5.2 -0.615939  0.498327  0.174072\n\nIn [163]: pivoted[\"value\"].head()\nOut[163]: \nitem        infl   realgdp  unemp\ndate \n1959-01-01  0.00  2710.349    5.8\n1959-04-01  2.34  2778.801    5.1\n1959-07-01  2.74  2775.488    5.3\n1959-10-01  0.27  2785.204    5.6\n1960-01-01  2.31  2847.699    5.2\n```", "```py\nIn [164]: unstacked = long_data.set_index([\"date\", \"item\"]).unstack(level=\"item\")\n\nIn [165]: unstacked.head()\nOut[165]: \n value                    value2 \nitem        infl   realgdp unemp      infl   realgdp     unemp\ndate \n1959-01-01  0.00  2710.349   5.8  0.575721  0.802926  1.381918\n1959-04-01  2.34  2778.801   5.1 -0.143492  0.000992 -0.206282\n1959-07-01  2.74  2775.488   5.3 -1.682403 -0.222392  1.811659\n1959-10-01  0.27  2785.204   5.6  0.128317 -0.351305 -1.313554\n1960-01-01  2.31  2847.699   5.2 -0.615939  0.498327  0.174072\n```", "```py\nIn [167]: df = pd.DataFrame({\"key\": [\"foo\", \"bar\", \"baz\"],\n .....:                    \"A\": [1, 2, 3],\n .....:                    \"B\": [4, 5, 6],\n .....:                    \"C\": [7, 8, 9]})\n\nIn [168]: df\nOut[168]: \n key  A  B  C\n0  foo  1  4  7\n1  bar  2  5  8\n2  baz  3  6  9\n```", "```py\nIn [169]: melted = pd.melt(df, id_vars=\"key\")\n\nIn [170]: melted\nOut[170]: \n key variable  value\n0  foo        A      1\n1  bar        A      2\n2  baz        A      3\n3  foo        B      4\n4  bar        B      5\n5  baz        B      6\n6  foo        C      7\n7  bar        C      8\n8  baz        C      9\n```", "```py\nIn [171]: reshaped = melted.pivot(index=\"key\", columns=\"variable\",\n .....:                         values=\"value\")\n\nIn [172]: reshaped\nOut[172]: \nvariable  A  B  C\nkey \nbar       2  5  8\nbaz       3  6  9\nfoo       1  4  7\n```", "```py\nIn [173]: reshaped.reset_index()\nOut[173]: \nvariable  key  A  B  C\n0         bar  2  5  8\n1         baz  3  6  9\n2         foo  1  4  7\n```", "```py\nIn [174]: pd.melt(df, id_vars=\"key\", value_vars=[\"A\", \"B\"])\nOut[174]: \n key variable  value\n0  foo        A      1\n1  bar        A      2\n2  baz        A      3\n3  foo        B      4\n4  bar        B      5\n5  baz        B      6\n```", "```py\nIn [175]: pd.melt(df, value_vars=[\"A\", \"B\", \"C\"])\nOut[175]: \n variable  value\n0        A      1\n1        A      2\n2        A      3\n3        B      4\n4        B      5\n5        B      6\n6        C      7\n7        C      8\n8        C      9\n\nIn [176]: pd.melt(df, value_vars=[\"key\", \"A\", \"B\"])\nOut[176]: \n variable value\n0      key   foo\n1      key   bar\n2      key   baz\n3        A     1\n4        A     2\n5        A     3\n6        B     4\n7        B     5\n8        B     6\n```"]