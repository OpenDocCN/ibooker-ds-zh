["```py\n# robots_allow.txt for www.reuters.com\n# Disallow: /*/key-developments/article/*\n\nUser-agent: *\nDisallow: /finance/stocks/option\n[...]\nDisallow: /news/archive/commentary\n\nSITEMAP: https://www.reuters.com/sitemap_index.xml\nSITEMAP: https://www.reuters.com/sitemap_news_index.xml\nSITEMAP: https://www.reuters.com/sitemap_video_index.xml\nSITEMAP: https://www.reuters.com/sitemap_market_index.xml\nSITEMAP: https://www.reuters.com/brandfeature/sitemap\n\nUser-agent: Pipl\nDisallow: /\n[...]\n\n```", "```py\nimport urllib.robotparser\nrp = urllib.robotparser.RobotFileParser()\nrp.set_url(\"https://www.reuters.com/robots.txt\")\nrp.read()\nrp.can_fetch(\"*\", \"https://www.reuters.com/sitemap.xml\")\n\n```", "```py\nTrue\n\n```", "```py\n[...]\n<url>\n  <loc>https://www.reuters.com/article/\nus-health-vaping-marijuana-idUSKBN1WG4KT</loc>\n  <news:news>\n    <news:publication>\n      <news:name>Reuters</news:name>\n      <news:language>eng</news:language>\n    </news:publication>\n    <news:publication_date>2019-10-01T08:37:37+00:00</news:publication_date>\n    <news:title>Banned in Boston: Without vaping, medical marijuana patients\n               must adapt</news:title>\n    <news:keywords>Headlines,Credit RSS</news:keywords>\n  </news:news>\n</url>\n[...]\n\n```", "```py\nimport xmltodict\nimport requests\n\nsitemap = xmltodict.parse(requests.get(\n          'https://www.reuters.com/sitemap_news_index1.xml').text)\n\n```", "```py\nurls = [url[\"loc\"] for url in sitemap[\"urlset\"][\"url\"]]\n# just print the first few URLs to avoid using too much space\nprint(\"\\n\".join(urls[0:3))\n\n```", "```py\nhttps://www.reuters.com/article/us-japan-fukushima/ex-tepco-bosses-cleared-\nover-fukushima-nuclear-disaster-idUSKBN1W40CP\nhttps://www.reuters.com/article/us-global-oil/oil-prices-rise-as-saudi-supply-\nrisks-come-into-focus-idUSKBN1W405X\nhttps://www.reuters.com/article/us-saudi-aramco/iran-warns-against-war-as-us-\nand-saudi-weigh-response-to-oil-attack-idUSKBN1W40VN\n\n```", "```py\nimport feedparser\nfeed = feedparser.parse('http://feeds.reuters.com/Reuters/worldNews')\n\n```", "```py\n[(e.title, e.link) for e in feed.entries]\n\n```", "```py\n[('Cambodian police search for British woman, 21, missing from beach',\n  'http://feeds.reuters.com/~r/Reuters/worldNews/~3/xq6Hy6R9lxo/cambodian-\npolice-search-for-british-woman-21-missing-from-beach-idUSKBN1X70HX'),\n ('Killing the leader may not be enough to stamp out Islamic State',\n  'http://feeds.reuters.com/~r/Reuters/worldNews/~3/jbDXkbcQFPA/killing-the-\nleader-may-not-be-enough-to-stamp-out-islamic-state-idUSKBN1X7203'), [...]\n]\n\n```", "```py\n[e.id for e in feed.entries]\n\n```", "```py\n['https://www.reuters.com/article/us-cambodia-britain-tourist/cambodian-\npolice-search-for-british-woman-21-missing-from-beach-\nidUSKBN1X70HX?feedType=RSS&feedName=worldNews',\n 'https://www.reuters.com/article/us-mideast-crisis-baghdadi-future-analys/\nkilling-the-leader-may-not-be-enough-to-stamp-out-islamic-state-\nidUSKBN1X7203?feedType=RSS&feedName=worldNews',\n 'https://www.reuters.com/article/us-britain-eu/eu-approves-brexit-delay-\nuntil-january-31-as-pm-johnson-pursues-election-\nidUSKBN1X70NT?feedType=RSS&feedName=worldNews', [...]\n]\n\n```", "```py\n%%time\ns = requests.Session()\nfor url in urls[0:10]:\n    # get the part after the last / in URL and use as filename\n    file = url.split(\"/\")[-1]\n\n    r = s.get(url)\n    if r.ok:\n        with open(file, \"w+b\") as f:\n            f.write(r.text.encode('utf-8'))\n    else:\n        print(\"error with URL %s\" % url)\n\n```", "```py\nCPU times: user 117 ms, sys: 7.71 ms, total: 124 ms\nWall time: 314 ms\n\n```", "```py\nwith open(\"urls.txt\", \"w+b\") as f:\n    f.write(\"\\n\".join(urls).encode('utf-8'))\n\n```", "```py\nwget -nc -i urls.txt\n\n```", "```py\n[...]\n<title>Banned in Boston: Without vaping, medical marijuana patients\nmust adapt - Reuters</title>\n[...]\n<h1 class=\"ArticleHeader_headline\">Banned in Boston: Without vaping,\nmedical marijuana patients must adapt</h1>\n[...]\n\n```", "```py\nimport requests\n\nurl = 'https://www.reuters.com/article/us-health-vaping-marijuana-idUSKBN1WG4KT'\n\n# use the part after the last / as filename\nfile = url.split(\"/\")[-1] + \".html\"\nr = requests.get(url)\nwith open(file, \"w+b\") as f:\n    f.write(r.text.encode('utf-8'))\n\n```", "```py\nimport re\n\nwith open(file, \"r\") as f:\n  html = f.read()\n  g = re.search(r'<title>(.*)</title>', html, re.MULTILINE|re.DOTALL)\n  if g:\n    print(g.groups()[0])\n\n```", "```py\nBanned in Boston: Without vaping, medical marijuana patients must adapt - Reuters\n\n```", "```py\n<h1 class=\"ArticleHeader_headline\">Banned in Boston: Without vaping, medical\nmarijuana patients must adapt</h1>\n\n```", "```py\nfrom bs4 import Beautiful Soup\nsoup = Beautiful Soup(html, 'html.parser')\nsoup.select(\"h1.ArticleHeader_headline\")\n\n```", "```py\n[<h1 class=\"ArticleHeader_headline\">Banned in Boston: Without vaping, medical\nmarijuana patients must adapt</h1>]\n\n```", "```py\nsoup.h1\n\n```", "```py\n<h1 class=\"ArticleHeader_headline\">Banned in Boston: Without vaping, medical\nmarijuana patients must adapt</h1>\n\n```", "```py\nsoup.h1.text\n\n```", "```py\n'Banned in Boston: Without vaping, medical marijuana patients must adapt'\n\n```", "```py\nsoup.title.text\n\n```", "```py\n'\\n                Banned in Boston: Without vaping, medical marijuana patients\nmust adapt - Reuters'\n\n```", "```py\nsoup.select_one(\"div.StandardArticleBody_body\").text\n\n```", "```py\n\"WASHINGTON (Reuters) - In the first few days of the four-month ban [...]\"\n\n```", "```py\nsoup.select(\"div.StandardArticleBody_body figure img\")\n\n```", "```py\n[<img aria-label=\"FILE PHOTO: An employee puts down an eighth of an ounce\n  marijuana after letting a customer smell it outside the Magnolia cannabis\n  lounge in Oakland, California, U.S. April 20, 2018. REUTERS/Elijah Nouvelage\"\n  src=\"//s3.reutersmedia.net/resources/r/\n  ?m=02&amp;d=20191001&amp;t=2&amp;i=1435991144&amp;r=LYNXMPEF90\n  39L&amp;w=20\"/>, <img src=\"//s3.reutersmedia.net/resources/r/\n  ?m=02&amp;d=20191001&amp;t=2&amp;i=1435991145&amp;r=LYNXMPEF90\n  39M\"/>]\n\n```", "```py\nsoup.select(\"div.StandardArticleBody_body figcaption\")\n\n```", "```py\n[<figcaption><div class=\"Image_caption\"><span>FILE PHOTO:\n  An employee puts down an eighth of an ounce marijuana after letting a\n  customer smell it outside the Magnolia cannabis lounge in Oakland,\n  California, U.S. April 20, 2018. REUTERS/Elijah Nouvelage</span></\n  div></figcaption>,\n\n <figcaption class=\"Slideshow_caption\">Slideshow<span class=\"Slideshow_count\">\n  (2 Images)</span></figcaption>]\n\n```", "```py\nsoup.find(\"link\", {'rel': 'canonical'})['href']\n\n```", "```py\n'https://www.reuters.com/article/us-health-vaping-marijuana-idUSKBN1WG4KT'\n\n```", "```py\nsoup.find(\"meta\", {'name': 'Author'})['content']\n\n```", "```py\n'Jacqueline Tempera'\n\n```", "```py\nsel = \"div.BylineBar_first-container.ArticleHeader_byline-bar \\\n div.BylineBar_byline span\"\nsoup.select(sel)\n\n```", "```py\n[<span><a href=\"/journalists/jacqueline-tempera\" target=\"_blank\">\n  Jacqueline Tempera</a>, </span>,\n <span><a href=\"/journalists/jonathan-allen\" target=\"_blank\">\n  Jonathan Allen</a></span>]\n\n```", "```py\n[a.text for a in soup.select(sel)]\n\n```", "```py\n['Jacqueline Tempera, ', 'Jonathan Allen']\n\n```", "```py\nsoup.select_one(\"div.ArticleHeader_channel a\").text\n\n```", "```py\n'Politics'\n\n```", "```py\nsoup.select_one(\"p.BylineBar_reading-time\").text\n\n```", "```py\n'6 Min Read'\n\n```", "```py\nsoup.select_one(\"div.StandardArticle_inner-container\")['id']\n\n```", "```py\n'USKBN1WG4KT'\n\n```", "```py\nsoup.select_one(\"p.Attribution_content\").text\n\n```", "```py\n'Reporting Jacqueline Tempera in Brookline and Boston, Massachusetts, and\nJonathan Allen in New York; Editing by Frank McGurty and Bill Berkrot'\n\n```", "```py\nptime = soup.find(\"meta\", { 'property': \"og:article:published_time\"})['content']\nprint(ptime)\n\n```", "```py\n2019-10-01T19:23:16+0000\n\n```", "```py\nfrom dateutil import parser\nparser.parse(ptime)\n\n```", "```py\ndatetime.datetime(2019, 10, 1, 19, 23, 16, tzinfo=tzutc())\n\n```", "```py\nimport requests\nfrom bs4 import Beautiful Soup\nimport os.path\nfrom dateutil import parser\n\ndef download_archive_page(page):\n    filename = \"page-%06d.html\" % page\n    if not os.path.isfile(filename):\n        url = \"https://www.reuters.com/news/archive/\" + \\\n              \"?view=page&page=%d&pageSize=10\" % page\n        r = requests.get(url)\n        with open(filename, \"w+\") as f:\n            f.write(r.text)\n\ndef parse_archive_page(page_file):\n    with open(page_file, \"r\") as f:\n        html = f.read()\n\n    soup = Beautiful Soup(html, 'html.parser')\n    hrefs = [\"https://www.reuters.com\" + a['href']\n               for a in soup.select(\"article.story div.story-content a\")]\n    return hrefs\n\ndef download_article(url):\n    # check if article already there\n    filename = url.split(\"/\")[-1] + \".html\"\n    if not os.path.isfile(filename):\n        r = requests.get(url)\n        with open(filename, \"w+\") as f:\n            f.write(r.text)\n\ndef parse_article(article_file):\n    with open(article_file, \"r\") as f:\n        html = f.read()\n    r = {}\n    soup = Beautiful Soup(html, 'html.parser')\n    r['id'] = soup.select_one(\"div.StandardArticle_inner-container\")['id']\n    r['url'] = soup.find(\"link\", {'rel': 'canonical'})['href']\n    r['headline'] = soup.h1.text\n    r['section'] = soup.select_one(\"div.ArticleHeader_channel a\").text    \n    r['text'] = soup.select_one(\"div.StandardArticleBody_body\").text\n    r['authors'] = [a.text\n                    for a in soup.select(\"div.BylineBar_first-container.\\\n ArticleHeader_byline-bar\\\n                                          div.BylineBar_byline span\")]\n    r['time'] = soup.find(\"meta\", { 'property':\n                                    \"og:article:published_time\"})['content']\n    return r\n\n```", "```py\n# download 10 pages of archive\nfor p in range(1, 10):\n    download_archive_page(p)\n\n# parse archive and add to article_urls\nimport glob\n\narticle_urls = []\nfor page_file in glob.glob(\"page-*.html\"):\n    article_urls += parse_archive_page(page_file)\n\n# download articles\nfor url in article_urls:\n    download_article(url)\n\n# arrange in pandas DataFrame\nimport pandas as pd\n\ndf = pd.DataFrame()\nfor article_file in glob.glob(\"*-id???????????.html\"):\n    df = df.append(parse_article(article_file), ignore_index=True)\n\ndf['time'] = pd.to_datetime(df.time)\n\n```", "```py\nfrom readability import Document\n\ndoc = Document(html)\ndoc.title()\n\n```", "```py\n'Banned in Boston: Without vaping, medical marijuana patients must adapt -\nReuters'\n\n```", "```py\ndoc.short_title()\n\n```", "```py\n'Banned in Boston: Without vaping, medical marijuana patients must adapt'\n\n```", "```py\ndoc.summary()\n\n```", "```py\n'<html><body><div><div class=\"StandardArticleBody_body\"><p>BOSTON (Reuters) -\nIn the first few days of [...] </p>\n\n<div class=\"Attribution_container\"><div class=\"Attribution_attribution\">\n<p class=\"Attribution_content\">Reporting Jacqueline Tempera in Brookline\nand Boston, Massachusetts, and Jonathan Allen in New York; Editing by Frank\nMcGurty and Bill Berkrot</p></div></div></div></div></body></html>'\n\n```", "```py\ndensity_soup = Beautiful Soup(doc.summary(), 'html.parser')\ndensity_soup.body.text\n\n```", "```py\n'BOSTON (Reuters) - In the first few days of the four-month ban on all vaping\nproducts in Massachusetts, Laura Lee Medeiros, a medical marijuana patient,\nbegan to worry.\\xa0 FILE PHOTO: An employee puts down an eighth of an ounce\nmarijuana after letting a customer smell it outside the Magnolia cannabis\nlounge in Oakland, California, U.S. [...]\n\nReporting Jacqueline Tempera in Brookline and Boston, Massachusetts, and\nJonathan Allen in New York; Editing by Frank McGurty and Bill Berkrot'\n\n```", "```py\nimport scrapy\nimport logging\n\nclass ReutersArchiveSpider(scrapy.Spider):\n    name = 'reuters-archive'\n\n    custom_settings = {\n        'LOG_LEVEL': logging.WARNING,\n        'FEED_FORMAT': 'json',\n        'FEED_URI': 'reuters-archive.json'\n    }\n\n    start_urls = [\n        'https://www.reuters.com/news/archive/',\n    ]\n\n    def parse(self, response):\n        for article in response.css(\"article.story div.story-content a\"):\n            yield response.follow(article.css(\"a::attr(href)\").extract_first(),\n                                  self.parse_article)\n        next_page_url = response.css('a.control-nav-next::attr(href)').\\\n                        extract_first()\n        if (next_page_url is not None) & ('page=2' not in next_page_url):\n            yield response.follow(next_page_url, self.parse)\n\n    def parse_article(self, response):\n        yield {\n          'title': response.css('h1::text').extract_first().strip(),\n          'section': response.css('div.ArticleHeader_channel a::text').\\\n                     extract_first().strip(),\n          'text': \"\\n\".join(response.\\\n                  css('div.StandardArticleBody_body p::text').extract())\n        }\n\n```", "```py\n# this can be run only once from a Jupyter notebook\n# due to Twisted\nfrom scrapy.crawler import CrawlerProcess\nprocess = CrawlerProcess()\n\nprocess.crawl(ReutersArchiveSpider)\nprocess.start()\n\n```"]