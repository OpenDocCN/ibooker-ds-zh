["```py\nIn [1]: %matplotlib inline\n        import matplotlib.pyplot as plt\n        import matplotlib as mpl\n        plt.style.use('seaborn-whitegrid')\n        import numpy as np\n        import pandas as pd\n```", "```py\nIn [2]: # shell command to download the data:\n        # !cd data && curl -O \\\n        #   https://raw.githubusercontent.com/jakevdp/data-CDCbirths/master/\n        #   births.csv\n```", "```py\nIn [3]: from datetime import datetime\n\n        births = pd.read_csv('data/births.csv')\n\n        quartiles = np.percentile(births['births'], [25, 50, 75])\n        mu, sig = quartiles[1], 0.74 * (quartiles[2] - quartiles[0])\n        births = births.query('(births > @mu - 5 * @sig) &\n                               (births < @mu + 5 * @sig)')\n\n        births['day'] = births['day'].astype(int)\n\n        births.index = pd.to_datetime(10000 * births.year +\n                                      100 * births.month +\n                                      births.day, format='%Y%m%d')\n        births_by_date = births.pivot_table('births',\n                                            [births.index.month, births.index.day])\n        births_by_date.index = [datetime(2012, month, day)\n                                for (month, day) in births_by_date.index]\n```", "```py\nIn [4]: fig, ax = plt.subplots(figsize=(12, 4))\n        births_by_date.plot(ax=ax);\n```", "```py\nIn [5]: fig, ax = plt.subplots(figsize=(12, 4))\n        births_by_date.plot(ax=ax)\n\n        # Add labels to the plot\n        style = dict(size=10, color='gray')\n\n        ax.text('2012-1-1', 3950, \"New Year's Day\", **style)\n        ax.text('2012-7-4', 4250, \"Independence Day\", ha='center', **style)\n        ax.text('2012-9-4', 4850, \"Labor Day\", ha='center', **style)\n        ax.text('2012-10-31', 4600, \"Halloween\", ha='right', **style)\n        ax.text('2012-11-25', 4450, \"Thanksgiving\", ha='center', **style)\n        ax.text('2012-12-25', 3850, \"Christmas \", ha='right', **style)\n\n        # Label the axes\n        ax.set(title='USA births by day of year (1969-1988)',\n               ylabel='average daily births')\n\n        # Format the x-axis with centered month labels\n        ax.xaxis.set_major_locator(mpl.dates.MonthLocator())\n        ax.xaxis.set_minor_locator(mpl.dates.MonthLocator(bymonthday=15))\n        ax.xaxis.set_major_formatter(plt.NullFormatter())\n        ax.xaxis.set_minor_formatter(mpl.dates.DateFormatter('%h'));\n```", "```py\nIn [6]: fig, ax = plt.subplots(facecolor='lightgray')\n        ax.axis([0, 10, 0, 10])\n\n        # transform=ax.transData is the default, but we'll specify it anyway\n        ax.text(1, 5, \". Data: (1, 5)\", transform=ax.transData)\n        ax.text(0.5, 0.1, \". Axes: (0.5, 0.1)\", transform=ax.transAxes)\n        ax.text(0.2, 0.2, \". Figure: (0.2, 0.2)\", transform=fig.transFigure);\n```", "```py\nIn [7]: ax.set_xlim(0, 2)\n        ax.set_ylim(-6, 6)\n        fig\n```", "```py\nIn [8]: fig, ax = plt.subplots()\n\n        x = np.linspace(0, 20, 1000)\n        ax.plot(x, np.cos(x))\n        ax.axis('equal')\n\n        ax.annotate('local maximum', xy=(6.28, 1), xytext=(10, 4),\n                    arrowprops=dict(facecolor='black', shrink=0.05))\n\n        ax.annotate('local minimum', xy=(5 * np.pi, -1), xytext=(2, -6),\n                    arrowprops=dict(arrowstyle=\"->\",\n                                    connectionstyle=\"angle3,angleA=0,angleB=-90\"));\n```", "```py\nIn [9]: fig, ax = plt.subplots(figsize=(12, 4))\n        births_by_date.plot(ax=ax)\n\n        # Add labels to the plot\n        ax.annotate(\"New Year's Day\", xy=('2012-1-1', 4100),  xycoords='data',\n                    xytext=(50, -30), textcoords='offset points',\n                    arrowprops=dict(arrowstyle=\"->\",\n                                    connectionstyle=\"arc3,rad=-0.2\"))\n\n        ax.annotate(\"Independence Day\", xy=('2012-7-4', 4250),  xycoords='data',\n                    bbox=dict(boxstyle=\"round\", fc=\"none\", ec=\"gray\"),\n                    xytext=(10, -40), textcoords='offset points', ha='center',\n                    arrowprops=dict(arrowstyle=\"->\"))\n\n        ax.annotate('Labor Day Weekend', xy=('2012-9-4', 4850), xycoords='data',\n                    ha='center', xytext=(0, -20), textcoords='offset points')\n        ax.annotate('', xy=('2012-9-1', 4850), xytext=('2012-9-7', 4850),\n                    xycoords='data', textcoords='data',\n                    arrowprops={'arrowstyle': '|-|,widthA=0.2,widthB=0.2', })\n\n        ax.annotate('Halloween', xy=('2012-10-31', 4600),  xycoords='data',\n                    xytext=(-80, -40), textcoords='offset points',\n                    arrowprops=dict(arrowstyle=\"fancy\",\n                                    fc=\"0.6\", ec=\"none\",\n                                    connectionstyle=\"angle3,angleA=0,angleB=-90\"))\n\n        ax.annotate('Thanksgiving', xy=('2012-11-25', 4500),  xycoords='data',\n                    xytext=(-120, -60), textcoords='offset points',\n                    bbox=dict(boxstyle=\"round4,pad=.5\", fc=\"0.9\"),\n                    arrowprops=dict(\n                        arrowstyle=\"->\",\n                        connectionstyle=\"angle,angleA=0,angleB=80,rad=20\"))\n\n        ax.annotate('Christmas', xy=('2012-12-25', 3850),  xycoords='data',\n                     xytext=(-30, 0), textcoords='offset points',\n                     size=13, ha='right', va=\"center\",\n                     bbox=dict(boxstyle=\"round\", alpha=0.1),\n                     arrowprops=dict(arrowstyle=\"wedge,tail_width=0.5\", alpha=0.1));\n\n        # Label the axes\n        ax.set(title='USA births by day of year (1969-1988)',\n               ylabel='average daily births')\n\n        # Format the x-axis with centered month labels\n        ax.xaxis.set_major_locator(mpl.dates.MonthLocator())\n        ax.xaxis.set_minor_locator(mpl.dates.MonthLocator(bymonthday=15))\n        ax.xaxis.set_major_formatter(plt.NullFormatter())\n        ax.xaxis.set_minor_formatter(mpl.dates.DateFormatter('%h'));\n\n        ax.set_ylim(3600, 5400);\n```"]