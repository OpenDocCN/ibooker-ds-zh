- en: Chapter 32\. Text and Annotation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第32章\. 文本和注释
- en: 'Creating a good visualization involves guiding the reader so that the figure
    tells a story. In some cases, this story can be told in an entirely visual manner,
    without the need for added text, but in others, small textual cues and labels
    are necessary. Perhaps the most basic types of annotations you will use are axes
    labels and titles, but the options go beyond this. Let’s take a look at some data
    and how we might visualize and annotate it to help convey interesting information.
    We’ll start by setting up the notebook for plotting and importing the functions
    we will use:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 创建良好的可视化图表涉及引导读者，使图表讲述一个故事。在某些情况下，可以完全通过视觉方式讲述这个故事，无需添加文本，但在其他情况下，小的文本提示和标签是必要的。也许你会使用的最基本的注释类型是坐标轴标签和标题，但选项远不止于此。让我们看看一些数据及其如何可视化和注释，以传达有趣的信息。我们将开始设置绘图笔记本并导入将要使用的函数：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Example: Effect of Holidays on US Births'
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例：节假日对美国出生的影响
- en: 'Let’s return to some data we worked with earlier, in [“Example: Birthrate Data”](ch21.xhtml#ch_0309-pivot-tables_example-birthrate-data),
    where we generated a plot of average births over the course of the calendar year.
    We’ll start with the same cleaning procedure we used there, and plot the results
    (see [Figure 32-1](#fig_0409-text-and-annotation_files_in_output_6_0)).'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到之前处理的一些数据，在[“例子：出生率数据”](ch21.xhtml#ch_0309-pivot-tables_example-birthrate-data)中，我们生成了一个绘制整个日历年平均出生的图表。我们将从那里使用相同的清理过程开始，并绘制结果（参见[图 32-1](#fig_0409-text-and-annotation_files_in_output_6_0)）。
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![output 6 0](assets/output_6_0.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![output 6 0](assets/output_6_0.png)'
- en: Figure 32-1\. Average daily births by date^([1](ch32.xhtml#idm45858755315264))
  id: totrans-9
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图32-1\. 每日平均出生数按日期统计^([1](ch32.xhtml#idm45858755315264))
- en: When we’re visualizing data like this, it is often useful to annotate certain
    features of the plot to draw the reader’s attention. This can be done manually
    with the `plt.text`/`ax.text` functions, which will place text at a particular
    *x*/*y* value (see [Figure 32-2](#fig_0409-text-and-annotation_files_in_output_8_0)).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们可视化这样的数据时，注释图表的特定特征通常很有用，以吸引读者的注意。可以使用 `plt.text`/`ax.text` 函数手动完成此操作，该函数将文本放置在特定的
    *x*/*y* 值处（参见[图 32-2](#fig_0409-text-and-annotation_files_in_output_8_0)）。
- en: '[PRE4]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![output 8 0](assets/output_8_0.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![output 8 0](assets/output_8_0.png)'
- en: Figure 32-2\. Annotated average daily births by date^([2](ch32.xhtml#idm45858755112736))
  id: totrans-13
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图32-2\. 按日期注释的每日平均出生数^([2](ch32.xhtml#idm45858755112736))
- en: The `ax.text` method takes an *x* position, a *y* position, a string, and then
    optional keywords specifying the color, size, style, alignment, and other properties
    of the text. Here we used `ha='right'` and `ha='center'`, where `ha` is short
    for *horizontal alignment*. See the docstrings of `plt.text` and `mpl.text.Text`
    for more information on the available options.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`ax.text` 方法需要一个 *x* 位置、一个 *y* 位置和一个字符串，然后是可选的关键字，指定文本的颜色、大小、样式、对齐方式和其他属性。这里我们使用了
    `ha=''right''` 和 `ha=''center''`，其中 `ha` 是 *水平对齐* 的缩写。有关可用选项的更多信息，请参阅 `plt.text`
    和 `mpl.text.Text` 的文档字符串。'
- en: Transforms and Text Position
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转换和文本位置
- en: In the previous example, we anchored our text annotations to data locations.
    Sometimes it’s preferable to anchor the text to a fixed position on the axes or
    figure, independent of the data. In Matplotlib, this is done by modifying the
    *transform*.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们将文本注释锚定在数据位置上。有时候，将文本锚定在轴或图的固定位置上，而与数据无关，更为可取。在Matplotlib中，通过修改 *transform*
    来实现这一点。
- en: 'Matplotlib makes use of a few different coordinate systems: a data point at
    <math alttext="left-parenthesis x comma y right-parenthesis equals left-parenthesis
    1 comma 1 right-parenthesis"><mrow><mo>(</mo> <mi>x</mi> <mo>,</mo> <mi>y</mi>
    <mo>)</mo> <mo>=</mo> <mo>(</mo> <mn>1</mn> <mo>,</mo> <mn>1</mn> <mo>)</mo></mrow></math>
    corresponds to a certain location on the axes or figure, which in turn corresponds
    to a particular pixel on the screen. Mathematically, transforming between such
    coordinate systems is relatively straightforward, and Matplotlib has a well-developed
    set of tools that it uses internally to perform these transforms (these tools
    can be explored in the `matplotlib.transforms` submodule).'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 使用几种不同的坐标系统：数学上，位于 <math alttext="left-parenthesis x comma y right-parenthesis
    equals left-parenthesis 1 comma 1 right-parenthesis"><mrow><mo>(</mo> <mi>x</mi>
    <mo>,</mo> <mi>y</mi> <mo>)</mo> <mo>=</mo> <mo>(</mo> <mn>1</mn> <mo>,</mo> <mn>1</mn>
    <mo>)</mo></mrow></math> 处的数据点对应于轴或图的特定位置，进而对应于屏幕上的特定像素。在数学上，这些坐标系统之间的转换相对简单，Matplotlib
    在内部使用一组良好开发的工具来执行这些转换（这些工具可以在 `matplotlib.transforms` 子模块中探索）。
- en: 'A typical user rarely needs to worry about the details of the transforms, but
    it is helpful knowledge to have when considering the placement of text on a figure.
    There are three predefined transforms that can be useful in this situation:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 典型用户很少需要担心变换的细节，但在考虑在图上放置文本时，这些知识是有帮助的。在这种情况下，有三种预定义的变换可能会有所帮助：
- en: '`ax.transData`'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`ax.transData`'
- en: Transform associated with data coordinates
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 与数据坐标相关联的变换
- en: '`ax.transAxes`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`ax.transAxes`'
- en: Transform associated with the axes (in units of axes dimensions)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 与轴相关联的变换（以轴尺寸为单位）
- en: '`fig.transFigure`'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`fig.transFigure`'
- en: Transform associated with the figure (in units of figure dimensions)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 与图形相关联的变换（以图形尺寸为单位）
- en: Let’s look at an example of drawing text at various locations using these transforms
    (see [Figure 32-3](#fig_0409-text-and-annotation_files_in_output_11_0)).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个示例，使用这些变换在不同位置绘制文本（参见 [图 32-3](#fig_0409-text-and-annotation_files_in_output_11_0)）。
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![output 11 0](assets/output_11_0.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![output 11 0](assets/output_11_0.png)'
- en: Figure 32-3\. Comparing Matplotlib’s coordinate systems
  id: totrans-28
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 32-3\. 比较 Matplotlib 的坐标系
- en: Matplotlib’s default text alignment is such that the “.” at the beginning of
    each string will approximately mark the specified coordinate location.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 的默认文本对齐方式是使每个字符串开头的“.”大致标记指定的坐标位置。
- en: The `transData` coordinates give the usual data coordinates associated with
    the x- and y-axis labels. The `transAxes` coordinates give the location from the
    bottom-left corner of the axes (the white box), as a fraction of the total axes
    size. The `transFigure` coordinates are similar, but specify the position from
    the bottom-left corner of the figure (the gray box) as a fraction of the total
    figure size.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`transData` 坐标提供与 x 和 y 轴标签关联的通常数据坐标。`transAxes` 坐标给出了从轴的左下角（白色框）开始的位置，作为总轴尺寸的一部分的分数。`transFigure`
    坐标类似，但指定了从图的左下角（灰色框）开始的位置，作为总图尺寸的一部分的分数。'
- en: Notice now that if we change the axes limits, it is only the `transData` coordinates
    that will be affected, while the others remain stationary (see [Figure 32-4](#fig_0409-text-and-annotation_files_in_output_13_0)).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，现在如果我们更改坐标轴限制，只有 `transData` 坐标会受到影响，而其他坐标保持不变（参见 [图 32-4](#fig_0409-text-and-annotation_files_in_output_13_0)）。
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![output 13 0](assets/output_13_0.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![output 13 0](assets/output_13_0.png)'
- en: Figure 32-4\. Comparing Matplotlib’s coordinate systems
  id: totrans-34
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 32-4\. 比较 Matplotlib 的坐标系
- en: 'This behavior can be seen more clearly by changing the axes limits interactively:
    if you are executing this code in a notebook, you can make that happen by changing
    `%matplotlib inline` to `%matplotlib notebook` and using each plot’s menu to interact
    with the plot.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通过交互式更改坐标轴限制，可以更清楚地看到这种行为：如果您在笔记本中执行此代码，可以通过将 `%matplotlib inline` 更改为 `%matplotlib
    notebook` 并使用每个图的菜单与图进行交互来实现这一点。
- en: Arrows and Annotation
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 箭头和注释
- en: Along with tickmarks and text, another useful annotation mark is the simple
    arrow.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 除了刻度和文本，另一个有用的注释标记是简单的箭头。
- en: 'While there is a `plt.arrow` function available, I wouldn’t suggest using it:
    the arrows it creates are SVG objects that will be subject to the varying aspect
    ratio of your plots, making it tricky to get them right. Instead, I’d suggest
    using the `plt.annotate` function, which creates some text and an arrow and allows
    the arrows to be very flexibly specified.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有 `plt.arrow` 函数可用，但我不建议使用它：它创建的箭头是 SVG 对象，会受到绘图的不同纵横比的影响，使得难以正确使用。相反，我建议使用
    `plt.annotate` 函数，它创建一些文本和箭头，并允许非常灵活地指定箭头。
- en: Here is a demonstration of `annotate` with several of its options (see [Figure 32-5](#fig_0409-text-and-annotation_files_in_output_16_0)).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这里演示了使用几种选项的 `annotate` 的示例（参见 [图 32-5](#fig_0409-text-and-annotation_files_in_output_16_0)）。
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![output 16 0](assets/output_16_0.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![output 16 0](assets/output_16_0.png)'
- en: Figure 32-5\. Annotation examples
  id: totrans-42
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 32-5\. 注释示例
- en: The arrow style is controlled through the `arrowprops` dictionary, which has
    numerous options available. These options are well documented in Matplotlib’s
    online documentation, so rather than repeating them here it is probably more useful
    to show some examples. Let’s demonstrate several of the possible options using
    the birthrate plot from before (see [Figure 32-6](#fig_0409-text-and-annotation_files_in_output_18_0)).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 箭头样式由 `arrowprops` 字典控制，其中有许多可用选项。这些选项在 Matplotlib 的在线文档中有很好的记录，因此不重复在此介绍，更有用的是展示一些示例。让我们使用之前的出生率图来演示几种可能的选项（参见
    [图 32-6](#fig_0409-text-and-annotation_files_in_output_18_0)）。
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The variety of options make `annotate` powerful and flexible: you can create
    nearly any arrow style you wish. Unfortunately, it also means that these sorts
    of features often must be manually tweaked, a process that can be very time-consuming
    when producing publication-quality graphics! Finally, I’ll note that the preceding
    mix of styles is by no means best practice for presenting data, but rather is
    included as a demonstration of some of the available options.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 各种选项使`annotate`功能强大且灵活：您可以创建几乎任何箭头样式。不幸的是，这也意味着这些功能通常必须手动调整，这在生成出版质量的图形时可能非常耗时！最后，我要指出，前述样式混合绝不是展示数据的最佳实践，而是作为展示某些可用选项的示例。
- en: More discussion and examples of available arrow and annotation styles can be
    found in the Matplotlib [Annotations tutorial](https://oreil.ly/abuPw).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于可用箭头和注释样式的讨论和示例可以在Matplotlib的[注释教程](https://oreil.ly/abuPw)中找到。
- en: '![output 18 0](assets/output_18_0.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![output 18 0](assets/output_18_0.png)'
- en: Figure 32-6\. Annotated average birth rates by day^([3](ch32.xhtml#idm45858754301680))
  id: totrans-48
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 32-6\. 按天平均出生率的注释^([3](ch32.xhtml#idm45858754301680))
- en: ^([1](ch32.xhtml#idm45858755315264-marker)) A full-size version of this figure
    can be found on [GitHub](https://oreil.ly/PDSH_GitHub).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch32.xhtml#idm45858755315264-marker)) 该图的完整版本可以在[GitHub](https://oreil.ly/PDSH_GitHub)找到。
- en: ^([2](ch32.xhtml#idm45858755112736-marker)) A full-size version of this figure
    can be found on [GitHub](https://oreil.ly/PDSH_GitHub).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch32.xhtml#idm45858755112736-marker)) 该图的完整版本可以在[GitHub](https://oreil.ly/PDSH_GitHub)找到。
- en: ^([3](ch32.xhtml#idm45858754301680-marker)) A full-size version of this figure
    can be found on [GitHub](https://oreil.ly/PDSH_GitHub).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch32.xhtml#idm45858754301680-marker)) 该图的完整版本可以在[GitHub](https://oreil.ly/PDSH_GitHub)找到。
