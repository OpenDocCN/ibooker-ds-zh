- en: Appendix B. Exercise Answers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录B. 练习答案
- en: Chapter 1
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章
- en: 62.6738 is rational because it has a finite number of decimal places, and therefore
    can be expressed as a fraction 626738 / 10000.
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 62.6738是有理数，因为它的小数位数有限，可以表示为分数626738 / 10000。
- en: <math alttext="10 Superscript 7 Baseline 10 Superscript negative 5 Baseline
    equals 10 Superscript 7 plus negative 5 Baseline equals 10 squared equals 100"><mrow><msup><mn>10</mn>
    <mn>7</mn></msup> <msup><mn>10</mn> <mrow><mo>-</mo><mn>5</mn></mrow></msup> <mo>=</mo>
    <msup><mn>10</mn> <mrow><mn>7</mn><mo>+</mo><mo>-</mo><mn>5</mn></mrow></msup>
    <mo>=</mo> <msup><mn>10</mn> <mn>2</mn></msup> <mo>=</mo> <mn>100</mn></mrow></math>
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <math alttext="10 Superscript 7 Baseline 10 Superscript negative 5 Baseline
    equals 10 Superscript 7 plus negative 5 Baseline equals 10 squared equals 100"><mrow><msup><mn>10</mn>
    <mn>7</mn></msup> <msup><mn>10</mn> <mrow><mo>-</mo><mn>5</mn></mrow></msup> <mo>=</mo>
    <msup><mn>10</mn> <mrow><mn>7</mn><mo>+</mo><mo>-</mo><mn>5</mn></mrow></msup>
    <mo>=</mo> <msup><mn>10</mn> <mn>2</mn></msup> <mo>=</mo> <mn>100</mn></mrow></math>
- en: <math alttext="81 Superscript one-half"><msup><mn>81</mn> <mfrac><mn>1</mn>
    <mn>2</mn></mfrac></msup></math> = <math alttext="StartRoot left-parenthesis EndRoot
    81 right-parenthesis equals 9"><mrow><msqrt><mo>(</mo></msqrt> <mrow><mn>81</mn>
    <mo>)</mo> <mo>=</mo> <mn>9</mn></mrow></mrow></math>
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <math alttext="81 Superscript one-half"><msup><mn>81</mn> <mfrac><mn>1</mn>
    <mn>2</mn></mfrac></msup></math> = <math alttext="StartRoot left-parenthesis EndRoot
    81 right-parenthesis equals 9"><mrow><msqrt><mo>(</mo></msqrt> <mrow><mn>81</mn>
    <mo>)</mo> <mo>=</mo> <mn>9</mn></mrow></mrow></math>
- en: <math alttext="25 Superscript three-halves Baseline equals left-parenthesis
    25 Superscript 1 slash 2 Baseline right-parenthesis cubed equals 5 cubed equals
    125"><mrow><msup><mn>25</mn> <mfrac><mn>3</mn> <mn>2</mn></mfrac></msup> <mo>=</mo>
    <msup><mrow><mo>(</mo><msup><mn>25</mn> <mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></msup>
    <mo>)</mo></mrow> <mn>3</mn></msup> <mo>=</mo> <msup><mn>5</mn> <mn>3</mn></msup>
    <mo>=</mo> <mn>125</mn></mrow></math>
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <math alttext="25 Superscript three-halves Baseline equals left-parenthesis
    25 Superscript 1 slash 2 Baseline right-parenthesis cubed equals 5 cubed equals
    125"><mrow><msup><mn>25</mn> <mfrac><mn>3</mn> <mn>2</mn></mfrac></msup> <mo>=</mo>
    <msup><mrow><mo>(</mo><msup><mn>25</mn> <mrow><mn>1</mn><mo>/</mo><mn>2</mn></mrow></msup>
    <mo>)</mo></mrow> <mn>3</mn></msup> <mo>=</mo> <msup><mn>5</mn> <mn>3</mn></msup>
    <mo>=</mo> <mn>125</mn></mrow></math>
- en: 'The resulting amount would be $1,161.47\. The Python script is as follows:'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 结果金额为$1,161.47。Python脚本如下：
- en: '[PRE0]'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The resulting amount would be $1161.83\. The Python script is as follows:'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 结果金额为$1161.83。Python脚本如下：
- en: '[PRE1]'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The derivative calculates to 6*x*, which would make the slope at *x* = 3 to
    be 18\. The SymPy code is as follows:'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导数计算为6*x*，这使得*x*=3时的斜率为18。SymPy代码如下：
- en: '[PRE2]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The area under the curve between 0 and 2 is 10\. The SymPy code is as follows:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 曲线在0到2之间的面积为10。SymPy代码如下：
- en: '[PRE3]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Chapter 2
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章
- en: 0.3 × 0.4 = 0.12; refer to [“Joint Probabilities”](ch02.xhtml#jointprobsect).
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 0.3 × 0.4 = 0.12；参见[“条件概率和贝叶斯定理”](ch02.xhtml#condprobsect)。
- en: (1 – 0.3) + 0.4 – (.03 × 0.4) = 0.98; refer to [“Union Probabilities”](ch02.xhtml#unionprobsect)
    and remember we are looking for *NO RAIN* so subtract that probability from 1.0.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (1 - 0.3) + 0.4 - (.03 × 0.4) = 0.98；参见[“联合概率”](ch02.xhtml#unionprobsect)，请记住我们在寻找*没有雨*，因此从1.0中减去该概率。
- en: 0.3 × 0.2 = 0.06; refer to [“Conditional Probability and Bayes’ Theorem”](ch02.xhtml#condprobsect).
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 0.3 × 0.2 = 0.06；参见[“条件概率和贝叶斯定理”](ch02.xhtml#condprobsect)。
- en: 'The following Python code calculates an answer of 0.822, adding up the probabilities
    of 50 or more passengers who do not show up:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下Python代码计算出0.822的答案，将50名以上未出现乘客的概率相加：
- en: '[PRE4]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Using the beta distribution shown in the following SciPy code, get the area
    up to 0.5 and subtract it from 1.0\. Result is about 0.98, so this coin is highly
    unlikely to be fair.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用SciPy中显示的Beta分布，获取到0.5的面积并从1.0中减去。结果约为0.98，因此这枚硬币极不可能是公平的。
- en: '[PRE5]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Chapter 3
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章
- en: 'The mean is 1.752 and the standard deviation is approximately 0.02135\. The
    Python code is as follows:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 平均值为1.752，标准差约为0.02135。Python代码如下：
- en: '[PRE6]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Use the CDF to get the value between 30 and 20 months, which is an area of
    about 0.06\. The Python code is as follows:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用CDF获取30到20个月之间的值，大约是0.06的面积。Python代码如下：
- en: '[PRE7]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'There’s a 99% probability the average filament diameter for a roll is between
    1.7026 and 1.7285\. The Python code is as follows:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有99%的概率，卷筒的平均丝径在1.7026到1.7285之间。Python代码如下：
- en: '[PRE8]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The marketing campaign worked with a p-value of 0.01888\. The Python code is
    as follows:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 营销活动的p值为0.01888。Python代码如下：
- en: '[PRE9]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Chapter 4
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章
- en: 'Vector lands on [2, 3]. The Python code is as follows:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向量落在[2, 3]。Python代码如下：
- en: '[PRE10]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Vector lands on [0, -3]. The Python code is as follows:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向量落在[0, -3]。Python代码如下：
- en: '[PRE11]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Determinant is 2.0\. The Python code is as follows:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 行列式为2.0。Python代码如下：
- en: '[PRE12]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Yes, because matrix multiplication allows us to combine several matrices into
    a single matrix representing one consolidated transformation.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，因为矩阵乘法允许我们将多个矩阵合并为一个表示单一转换的矩阵。
- en: '*x* = 19.8, *y* = –5.4, *z* = –6\. The code is as follows:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*x* = 19.8，*y* = –5.4，*z* = –6。代码如下：'
- en: '[PRE13]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Yes, it is linearly dependent. Although we have some floating point imprecision
    with NumPy, the determinant is effectively 0:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，它是线性相关的。尽管在NumPy中存在一些浮点不精确性，行列式有效地为0。
- en: '[PRE14]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To get around the floating point issues, use SymPy and you will get 0:'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了解决浮点问题，使用SymPy，你将得到0：
- en: '[PRE15]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Chapter 5
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章
- en: There are many tools and approaches to perform a linear regression as we learned
    in [Chapter 5](ch05.xhtml#ch05), but here is the solution using scikit-learn.
    The slope is 1.75919315 and the intercept is 4.69359655.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有很多工具和方法可以执行线性回归，就像我们在[第5章](ch05.xhtml#ch05)中学到的一样，但是这里使用scikit-learn进行解决。斜率是1.75919315，截距是4.69359655。
- en: '[PRE16]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'We get a high correlation of 0.92421 and a test value of 23.8355 with a statistically
    significant range of ±1.9844\. This correlation is definitely useful and statistically
    significant. The code is as follows:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们得到高达0.92421的相关性和测试值23.8355，显著统计范围为±1.9844。这种相关性绝对有用且统计上显著。代码如下：
- en: '[PRE17]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'At <math alttext="x equals 50"><mrow><mi>x</mi> <mo>=</mo> <mn>50</mn></mrow></math>
    , the prediction interval is between 50.79 and 134.51\. The code is as follows:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在<math alttext="x equals 50"><mrow><mi>x</mi> <mo>=</mo> <mn>50</mn></mrow></math>时，预测区间在50.79到134.51之间。代码如下：
- en: '[PRE18]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The testing datasets do moderately well when split into thirds and evaluated
    with k-fold, where *k* = 3\. You will get a mean of roughly 0.83 in MSE and a
    standard deviation of 0.03 across the three datasets.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将测试数据集分成三分，并使用k-fold（其中*k* = 3）评估时表现还不错。在这三个数据集中，均方误差大约为0.83，标准偏差为0.03。
- en: '[PRE19]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Chapter 6
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章
- en: The accuracy is extremely high when you run this through scikit-learn. When
    I run it, I get at least 99.9% accuracy on average with the test folds.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你在scikit-learn中运行这个算法时，准确率非常高。我运行时，平均在测试折叠上至少获得99.9%的准确率。
- en: '[PRE20]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The confusion matrix will yield an extremely high number of true positives
    and true negatives, and very few false positives and false negatives. Run this
    code and you will see:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 混淆矩阵将产生大量的真阳性和真阴性，以及很少的假阳性和假阴性。运行这段代码，你会看到：
- en: '[PRE21]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: An interactive shell for testing user-input colors is shown next. Consider testing
    black (0,0,0) and white (255,255,255) to see if dark and light fonts respectively
    are predicted correctly.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下面展示了一个用于测试用户输入颜色的交互式shell。考虑测试黑色（0,0,0）和白色（255,255,255），看看是否能正确预测暗色和浅色字体。
- en: '[PRE22]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Yes, the logistic regression is very effective at predicting light or dark fonts
    for a given background color. Not only is the accuracy extremely high, but the
    confusion matrix has high numbers in the top-right to bottom-left diagonal with
    lower numbers in the other cells.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，逻辑回归在预测给定背景颜色的浅色或暗色字体方面非常有效。准确率不仅极高，而且混淆矩阵在主对角线的右上到左下有很高的数字，其他单元格的数字则较低。
- en: Chapter 7
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章
- en: There’s obviously a lot of experimenting and alchemy you can try with different
    hidden layers, activation functions, different testing dataset sizes, and so on.
    I tried to use one hidden layer with three nodes with a ReLU activation, and I
    struggled to get good predictions on my testing dataset. The confusion matrices
    and accuracy were consistently poor and any configuration changes I ran did just
    as poorly.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，你可以尝试不同的隐藏层、激活函数、不同大小的测试数据集等进行大量的实验和尝试。我尝试使用一个有三个节点的隐藏层，使用ReLU激活函数，但在我的测试数据集上难以得到良好的预测。混淆矩阵和准确率一直很差，我运行的任何配置更是表现不佳。
- en: The reasons the neural network is probably failing are 1) the testing dataset
    is far too small for a neural network (which are extremely data-hungry) and 2)
    there are simpler and more effective models like logistic regression for this
    type of problem. That’s not to say you can’t find a configuration that will work,
    but you have to be careful not to p-hack your way to a good result that overfits
    to the little training and testing data you have.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络可能失败的原因有两个：1）测试数据集对于神经网络来说太小（神经网络对数据需求极大），2）对于这类问题，像逻辑回归这样更简单和更有效的模型存在。这并不是说你不能找到一个适用的配置，但你必须小心，避免通过p-hack的方式使得结果过拟合到你所拥有的少量训练和测试数据。
- en: 'Here is the scikit-learn code I used:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我使用的scikit-learn代码：
- en: '[PRE23]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
