- en: Chapter 8\. Career Advice and the Path Forward
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As we come to a close with this book, it is a good idea to evaluate where to
    go from here. You learned and integrated a wide survey of applied mathematical
    topics: calculus, probability, statistics, and linear algebra. Then you applied
    these techniques to practical applications, including linear regression, logistic
    regression, and neural networks. In this chapter, we will cover how to use this
    knowledge going forward while navigating the strange, exciting, and oddly diverse
    landscape of a data science career. I will emphasize the importance of having
    direction and a tangible objective to work toward, rather than memorizing tools
    and techniques without an actual problem in mind.'
  prefs: []
  type: TYPE_NORMAL
- en: Since we’re moving away from foundational concepts and applied methods, this
    chapter will have a different tone than the rest of the book. You might be expecting
    to learn how you can apply these mathematical modeling skills to your career in
    focused and tangible ways. However, if you want to be successful in a data science
    career, you will have to learn a few more hard skills like SQL and programming,
    as well as soft skills to develop professional awareness. The latter are especially
    important so you do not become lost in the shape-shifting profession that is data
    science and unseen market forces blindside you.
  prefs: []
  type: TYPE_NORMAL
- en: I am not going to presume to know your career goals or what you hope to achieve
    with this information. I will make a few safe bets, though, since you are reading
    this book. I imagine you might be interested in a data science career, or you
    have worked in data analysis and desire to formalize your analytics knowledge.
    Perhaps you come from a software engineering background, seeking to get a grasp
    of AI and machine learning. Maybe you are a project manager of some kind and find
    you need to understand the capabilities of a data science or AI team so you can
    scope accordingly. Maybe you are just a curious professional wondering how math
    can be useful on a practical level, not just an academic one.
  prefs: []
  type: TYPE_NORMAL
- en: I will do my best to meet the concerns of all these groups and hopefully generalize
    some career advice that will be useful to most readers. Let’s start with redefining
    data science. We have objectively studied it and will now look at it in the context
    of career development and the future of the field.
  prefs: []
  type: TYPE_NORMAL
- en: Is the Author Being Anecdotal?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It is hard to not sound anecdotal in tasks like this, where I dispense career
    advice sharing my own experiences (and experiences of others) rather than large,
    controlled surveys and studies like I advocate in [Chapter 3](ch03.xhtml#ch03).
    But here’s my pitch: I have worked in the Fortune 500 world for more than a decade
    and saw the transformation that the data science movement had on organizations.
    I have spoken at many tech conferences around the world and listened to countless
    peers react with “this has happened to us too!” I read many blogs and respected
    publications, from the *Wall Street Journal* to *Forbes*, and I have learned to
    recognize disconnects between popular expectations and reality. I pay especially
    close attention to the kingmakers, leaders, and followers across different industries
    and how they make or follow markets with data science and artificial intelligence.
    Currently, I teach and advise stakeholders in safety-critical applications of
    artificial intelligence at University of Southern California, in the Aviation
    Safety and Security Program.'
  prefs: []
  type: TYPE_NORMAL
- en: I only put a CV here to show that while I have not done formal surveys and studies,
    and perhaps I am compiling anecdotal information, there are persistent narratives
    I have found with all these sources of information. Vicki Boykis, an astute machine
    learning engineer at Tumblr, wrote [a blog article sharing similar findings to
    mine](https://oreil.ly/vm8Vp), and I highly recommend you read it. You are welcome
    to take my findings with a grain of salt, but pay close attention to what is happening
    in your own work environment and identify assumptions that your management and
    colleagues subscribe to.
  prefs: []
  type: TYPE_NORMAL
- en: Redefining Data Science
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Data science is the analysis of data to gain actionable insights. In practice,
    it is an amalgamation of different data-related disciplines rolled into one: statistics,
    data analysis, data visualization, machine learning, operations research, software
    engineering… just to name a few. Pretty much any discipline that touches data
    can be branded as “data science.” This lack of clear definition has been problematic
    for the field. After all, anything that lacks definition is wide open to interpretability,
    like a piece of abstract art. [This is why HR departments struggle with “data
    scientist” job postings, as they tend to be all over the map](https://oreil.ly/NHnbu).
    [Figure 8-1](#tciDOaJmTN) shows an umbrella encompassing different disciplines
    and tools that can fall under data science.'
  prefs: []
  type: TYPE_NORMAL
- en: '![emds 0801](Images/emds_0801.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8-1\. The data science umbrella
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: How did we get here? And how can something lacking definition like data science
    become such a compelling force in the corporate world? Most important, how does
    its definition (or lack thereof) affect your career? These are all important questions
    we talk about in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: This is why I tell my clients a better definition for *data science* is software
    engineering with proficiency in statistics, machine learning, and optimization.
    If you take any of those four disciplines away (software engineering, statistics,
    machine learning, and optimization), the data scientist is at risk of not performing.
    Most organizations have struggled to make clear distinctions about skillsets that
    make a data scientist effective, but the definition provided should give clarity.
    While some may think that software engineering is a controversial requirement,
    I think it is highly necessary given the direction industries are going. We will
    address this point later.
  prefs: []
  type: TYPE_NORMAL
- en: But first, the best way to understand data science is to trace the history of
    the term.
  prefs: []
  type: TYPE_NORMAL
- en: A Brief History of Data Science
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We could trace data science all the way back to the origin of statistics, as
    early as the [17th century or even the 8th century](https://oreil.ly/tYPB5). For
    the sake of brevity, let’s start in the 1990s. Analysts, statisticians, researchers,
    “quants,” and data engineers often maintained distinct roles. Tooling stacks often
    consisted of spreadsheets, R, MATLAB, SAS, and SQL.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, things started to change rapidly after 2000\. The internet and connected
    devices started to generate enormous amounts of data. Alongside the inception
    of Hadoop, Google pushed analytics and data collection to unimaginable heights.
    As 2010 approached, executives at Google [insisted statisticians will have the
    “sexy” job in the next decade](https://oreil.ly/AZgfM). What came next was prescient.
  prefs: []
  type: TYPE_NORMAL
- en: In 2012, the *Harvard Business Review* mainstreamed this concept called data
    science and declared it the [“sexiest job of the 21st century”](https://oreil.ly/XYbrf).
    After the *Harvard Business Review* article, many companies and corporate workers
    raced to fill the data science void. Management consultants were primed and positioned
    to educate Fortune 500 leaders on how to bring data science to their organizations.
    SQL developers, analysts, researchers, quants, statisticians, engineers, physicists,
    and a myriad of other professionals rebranded themselves as “data scientists.”
    Tech companies, feeling that traditional role titles like “analyst,” “statistician,”
    or “researcher” sounded dated, renamed the roles to “data scientist.”
  prefs: []
  type: TYPE_NORMAL
- en: Naturally, management at Fortune 500 companies came under pressure from the
    C-suite to get on the data science bandwagon. The initial reasoning was a lot
    of data was being collected, therefore big data was becoming a trend and data
    scientists were needed to get insight from it. Around this time, the word “data-driven”
    became a maxim across industries. The corporate world believed that unlike people,
    data is objective and unbiased.
  prefs: []
  type: TYPE_NORMAL
- en: 'Reminder: Data Is Not Objective and Unbiased!'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To this day, many professionals and managers fall into the fallacy of thinking
    data is objective and unbiased. Hopefully, after reading this book you know this
    is simply not true, and refer to [Chapter 3](ch03.xhtml#ch03) if you need a refresher
    about why.
  prefs: []
  type: TYPE_NORMAL
- en: 'Management and HR at companies, unable to compete for specialized deep learning
    PhDs that were gobbled up by FAANG (Facebook, Amazon, Apple, Netflix, and Google)
    and still under pressure to check the data science box, made an interesting move.
    They rebranded existing teams of analysts, SQL developers, and Excel jockeys as
    “data scientists.” Cassie Kozyrkov, the Chief Decision Scientist at Google, described
    this open secret in a [2018 blog article on Hackernoon](https://oreil.ly/qNl53):'
  prefs: []
  type: TYPE_NORMAL
- en: With every *data scientist* title I’ve held, I had already been doing the job
    under a different name before rebranding czars in HR applied a little nip-tuck
    to the employee database. My duties didn’t change in the slightest. I’m no exception;
    my social circle is full of former statisticians, decision support engineers,
    quantitative analysts, math professors, big data specialists, business intelligence
    experts, analytics leads, research scientists, software engineers, Excel jockeys,
    niche PhD survivors…all proud Data Scientists of today.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Data science technically does not exclude any of these professionals, because
    they all are using data to gather insight. Of course, there was some pushback
    from the science community, which was reluctant to coronate data science as a
    real science. After all, can you think of a science that does not use data? In
    2011 Pete Warden (who now works as a TensorFlow lead at Google) wrote an interesting
    defense of the data science movement [in an O’Reilly article](https://oreil.ly/HXgvI).
    He also cleanly articulated objectors’ arguments about the lack of definition:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Regarding the lack of definition for data science, this] is probably the deepest
    objection, and the one with the most teeth. There is no widely accepted boundary
    for what’s inside and outside of data science’s scope. Is it just a faddish rebranding
    of statistics? I don’t think so, but I also don’t have a full definition. I believe
    that the recent abundance of data has sparked something new in the world, and
    when I look around I see people with shared characteristics who don’t fit into
    traditional categories. These people tend to work beyond the narrow specialties
    that dominate the corporate and institutional world, handling everything from
    finding the data, processing it at scale, visualizing it and writing it up as
    a story. They also seem to start by looking at what the data can tell them, and
    then picking interesting threads to follow, rather than the traditional scientist’s
    approach of choosing the problem first and then finding data to shed light on
    it.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Pete ironically could not come up with a definition for data science either,
    but he clearly made a case for why data science is flawed but useful. He also
    highlighted the shift of research abandoning the scientific method in favor of
    once-eschewed practices like data mining, which we talked about in [Chapter 3](ch03.xhtml#ch03).
  prefs: []
  type: TYPE_NORMAL
- en: Data science made an interesting pivot just a few years after the *Harvard Business
    Review* article. Perhaps it was more of a merger with AI and machine learning
    than a pivot. Regardless, when machine learning and deep learning dominated headlines
    around 2014, data was sold as the “fuel” for creating artificial intelligence.
    This naturally expanded the scope of data science and created a confluence with
    the AI/machine learning movement. In particular, the ImageNet challenge sparked
    a revived interest in AI and brought on a machine learning and deep learning renaissance.
    Companies like Waymo and Tesla promised self-driving cars in a matter of years
    thanks to advances in deep learning, further fueling media headlines and bootcamp
    enrollments.
  prefs: []
  type: TYPE_NORMAL
- en: This sudden interest in neural networks and deep learning had a interesting
    side effect. Regression techniques like decision trees, support vector machines,
    and logistic regression, which has spent decades hiding in academia and specialized
    statistics professions, rode the coattails of deep learning into the public limelight.
    At the same time, libraries like scikit-learn created a low barrier for entry
    into the field. This had a hidden cost of creating data science professionals
    who did not understand how these libraries or models worked but used them anyway.
  prefs: []
  type: TYPE_NORMAL
- en: Because the discipline of data science has evolved faster than a perceived need
    to define it, it is not uncommon for a data scientist role to be a complete wildcard.
    I have met several individuals who held a data scientist title in Fortune 500
    companies. Some are highly proficient in coding and might even have software engineering
    backgrounds but have no idea what statistical significance is. Others stay confined
    in Excel and barely know SQL, much less Python or R. I met data science folks
    who taught themselves a few functions in scikit-learn and quickly found themselves
    floundering because that was all they knew.
  prefs: []
  type: TYPE_NORMAL
- en: So what does this mean for you? How do you flourish in such a buzzwordy and
    chaotic landscape? It all comes down to what types of problems or industries interest
    you, and not being quick to rely on employers to define roles. You do not have
    to be a data scientist to do data science. There are a wide array of fields you
    can work to your advantage given this knowledge you now have. You can be an analyst,
    researcher, machine learning engineer, advisor, consultant, and a myriad of other
    roles that are not necessarily called data scientist.
  prefs: []
  type: TYPE_NORMAL
- en: But first, let’s address some ways you can continue learning and find your edge
    in the data science job market.
  prefs: []
  type: TYPE_NORMAL
- en: Finding Your Edge
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The practical data science professional needs more than an understanding of
    statistics and machine learning to thrive. In most cases, it is unreasonable to
    expect data to be readily available for machine learning and other projects. Instead,
    you will find yourself chasing data sources, engineering scripts and software,
    scraping documents, scraping Excel workbooks, and even creating your own databases.
    At least 95% of your coding efforts will not be related to machine learning or
    statistical modeling at all, but rather creating, moving, and transforming data
    so it is usable.
  prefs: []
  type: TYPE_NORMAL
- en: On top of that, you have to be aware of the big picture and the dynamics of
    your organization. Your managers can make assumptions in defining your role, and
    it is important to identify these assumptions so you recognize how they affect
    you. While you are relying on your customers and leadership for their industry
    expertise, you should be in a role to provide technical knowledge and articulate
    what is feasible. Let’s look at some hard and soft skills you will likely need.
  prefs: []
  type: TYPE_NORMAL
- en: SQL Proficiency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*SQL*, also called *structured query language*, is a querying language to retrieve,
    transform, and write table data. A *relational database* is the most common way
    to organize data, storing data into tables that are connected to each other much
    like a VLOOKUP in Excel. Relational database platforms like MySQL, Microsoft SQL
    Server, Oracle, SQLite, and PostgreSQL support SQL. As you might notice, SQL and
    relational databases are so tightly coupled that “SQL” is often used in the branding
    of the relational database, like “MySQL” and “Microsoft SQL Server.”'
  prefs: []
  type: TYPE_NORMAL
- en: '[Example 8-1](#oVVEBopWsI) is a simple SQL query that retrieves the `CUSTOMER_ID`
    and `NAME` fields from a `CUSTOMER` table, for records that are in the `STATE`
    of `''TX''`.'
  prefs: []
  type: TYPE_NORMAL
- en: Example 8-1\. A simple SQL query
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Simply put, it is hard to get anywhere as a data science professional without
    proficiency in SQL. Businesses use data warehouses and SQL is almost always the
    means to retrieve the data. `SELECT`, `WHERE`, `GROUP BY`, `ORDER BY`, `CASE`,
    `INNER JOIN`, and `LEFT JOIN` should all be familiar SQL keywords. It is even
    better to know subqueries, derived tables, common table expressions, and windowing
    functions to get the most utility out of your data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Shameless Plug: The Author Has an SQL Book!'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I have written a beginner’s SQL book for O’Reilly called [*Getting Started with
    SQL*](https://oreil.ly/K2Na9). It is barely over one hundred pages so it can be
    finished in a day. It covers the essentials, including joins and aggregations
    as well as creating your own database. The book uses SQLite, which can be set
    up in less than a minute.
  prefs: []
  type: TYPE_NORMAL
- en: There are other great SQL books by O’Reilly, including *Learning SQL, 3rd Ed.*
    by Alan Beaulieu and the *SQL Pocket Guide, 4th Ed.* by Alice Zhao. After speed-reading
    my one-hundred-page primer, check out both of these books too.
  prefs: []
  type: TYPE_NORMAL
- en: SQL is also critical in making Python or other programming languages easily
    talk to databases. If you want to send SQL queries to a database from Python,
    you can bring the data back as Pandas DataFrames, Python collections, and other
    structures.
  prefs: []
  type: TYPE_NORMAL
- en: '[Example 8-2](#DldTDwtodl) shows a simple SQL query run in Python using the
    SQLAlchemy library. It returns the records as named tuples. Just be sure to download
    this [SQLite database file](https://bit.ly/3F8heTS) and place it in your Python
    project, as well as run `pip install sqlalchemy`.'
  prefs: []
  type: TYPE_NORMAL
- en: Example 8-2\. Running an SQL query within Python using SQLAlchemy
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: What About Pandas and NoSQL?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I frequently get questions regarding “alternatives” to SQL such as NoSQL or
    Pandas. These really are not alternatives and instead are different tools residing
    elsewhere in the data science toolchain. Take Pandas, for example. In [Example 8-3](#aRvtaQGQAo),
    I can create an SQL query pulling all records from the table `CUSTOMER` and put
    them in a Pandas `DataFrame`.
  prefs: []
  type: TYPE_NORMAL
- en: Example 8-3\. Importing an SQL query into a Pandas DataFrame
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: SQL was used here to bridge the gap between the relational database and my Python
    environment, and load the data into a Pandas `DataFrame`. If I have demanding
    computations that SQL is equipped to handle, it is more efficient that I do that
    on the database server using SQL rather than locally on my computer using Pandas.
    Simply put, Pandas and SQL can work together and are not competing technologies.
  prefs: []
  type: TYPE_NORMAL
- en: It is the same thing with NoSQL, which includes platforms like Couchbase and
    MongoDB. While some readers might disagree and make valid arguments, I believe
    comparing NoSQL with SQL is comparing apples and oranges. Yes, they both store
    data and provide querying capabilities, but I do not think that puts them in competition.
    They have different qualities for different use cases. NoSQL stands for “not only
    SQL” and is better equipped to store unstructured data, like pictures or free-form
    text articles. SQL is better equipped to store structured data. SQL maintains
    data integrity more aggressively than NoSQL, although at the cost of computing
    overhead and less scalability.
  prefs: []
  type: TYPE_NORMAL
- en: Programming Proficiency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Typically, many data scientists are not skilled at coding, at least not at the
    level of a software engineer. However, it is becoming increasingly important that
    they code. This provides an opportunity to gain an edge. Learn object-oriented
    programming, functional programming, unit tests, version control (e.g., Git and
    GitHub), Big-O algorithm analysis, cryptography, and other relevant computer science
    concepts and language features you come across.
  prefs: []
  type: TYPE_NORMAL
- en: Here is why. Let’s say you created a promising regression model, like a logistic
    regression or neural network, based on some sample data you were given. You ask
    the in-house programmers in your IT department to “plug it in” to an existing
    piece of software.
  prefs: []
  type: TYPE_NORMAL
- en: They look at your pitch warily. “We need to rewrite this in Java, not Python,”
    they say grudgingly. “Where are your unit tests?” another asks. “Do you not have
    any classes or types defined? We have to reengineer this code to be object-oriented.”
    On top of that, they do not understand the math of your model and rightfully worry
    it will misbehave on data it has not seen before. Since you have not defined unit
    tests, which is not straightforward to do with machine learning, they are unsure
    how to verify the quality of your model. They also ask how are two versions of
    code (Python and Java), going to be managed?
  prefs: []
  type: TYPE_NORMAL
- en: You start to feel out of your element, and say, “I don’t understand why the
    Python script cannot just be plugged in.” One of them pauses contemplatively and
    replies, “We could create a web service with Flask and avoid having to rewrite
    in Java. However, the other concerns do not go away. We then have to worry about
    scalability and high traffic hitting the web service. Wait…perhaps we can deploy
    to the Microsoft Azure cloud as a virtual machine scale set, but we still have
    to architect the backends. Look, this has to be reengineered no matter how you
    approach it.”
  prefs: []
  type: TYPE_NORMAL
- en: This is precisely why many data scientists have work that never leaves their
    laptop. As a matter of fact, putting machine learning into production has become
    so elusive it has become a unicorn and hot topic in recent years. There is an
    enormous gap between data scientists and software engineers, so naturally there
    is pressure for data science professionals to now be software engineers.
  prefs: []
  type: TYPE_NORMAL
- en: This may sound overwhelming as data science is already overloaded in scope,
    with many disciplines and requirements. However, this is not to demonstrate that
    you need to learn Java. You can be an effective software engineer in Python (or
    whatever employable language you prefer), but you have to be good at it. Learn
    object-oriented programming, data structures, functional programming, concurrency,
    and other design patterns. Two good books to tackle these topics for Python include
    *Fluent Python, 2nd Ed.* by Luciano Ramalho (O’Reilly) and *Beyond the Basic Stuff
    with Python* by Al Sweigart (No Starch).
  prefs: []
  type: TYPE_NORMAL
- en: After that, learn to solve practical tasks including database APIs, [web services](https://oreil.ly/gN9e7),
    [JSON parsing](https://oreil.ly/N8uef), [regular expressions](https://oreil.ly/IyD2P),
    [web scraping](https://oreil.ly/9oWWb), [security and cryptography](https://oreil.ly/oxliO),
    cloud computing (Amazon Web Services, Microsoft Azure), and whatever else helps
    you become productive in standing up a system.
  prefs: []
  type: TYPE_NORMAL
- en: As stated earlier, the programming language you master does not have to be Python.
    It can be another language but it is encouraged that the language is universally
    used and employable. Languages that have higher employability at the time of writing
    include Python, R, Java, C#, and C++. Swift and Kotlin have a dominant presence
    on Apple and Android devices, and both are fantastic, well-supported languages.
    Although many of these languages are not mainstream for data science purposes,
    it can be helpful to learn at least one other besides Python to get more exposure.
  prefs: []
  type: TYPE_NORMAL
- en: Anchoring Bias and First Programming Languages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is common for technical professionals to get partial to and emotionally invested
    in technologies and platforms, especially programming languages. Please don’t
    do this! This kind of tribalism is not productive and ignores the reality that
    every programming language caters to different qualities and use cases. Another
    reality is that some programming languages catch on while others do not, often
    for reasons that have nothing to do with merits in language design. If a big company
    is not paying for its support, its chances of survival are slim.
  prefs: []
  type: TYPE_NORMAL
- en: We talked about different types of cognitive biases in [Chapter 3](ch03.xhtml#ch03).
    Another one is [anchoring bias](https://oreil.ly/sXNh0), which states that we
    can become partial to the first thing we learn, such as a programming language.
    If you are feeling obligated to learn a new language, be open-minded and give
    it a chance! No language is perfect, and all that matters is it gets the job done.
  prefs: []
  type: TYPE_NORMAL
- en: However, be wary if the language’s support is questionable because it is on
    life support, is not receiving updates, or lacks a corporate maintainer. Examples
    of this include [Microsoft’s VBA](https://oreil.ly/B8c5A), Red Hat’s [Ceylon](https://oreil.ly/LJdw4),
    and [Haskell](https://oreil.ly/ASnnN).
  prefs: []
  type: TYPE_NORMAL
- en: Data Visualization
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another technical skill in which you should have some degree of proficiency
    is data visualization. Be comfortable making charts, graphs, and plots that not
    only tell stories to management but also help your own data exploration efforts.
    You can summarize data with an SQL command, but sometimes a bar chart or scatterplot
    will give you a better sense of your data in less time.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to what tools to use for data visualization, this is much harder
    to answer because there is so much fragmentation and choice. If you work in a
    traditional office environment, Excel and PowerPoint are often the preferred visualization
    tools, and you know what? They are quite all right! I do not use them for everything
    but they do accomplish a great majority of tasks. Need a scatterplot on a small/medium
    dataset? Or a histogram? No problem! You can have one built in a few minutes after
    copying/pasting your data into an Excel workbook. This is great for one-time graph
    visualizations, and there is no shame in using Excel when it works.
  prefs: []
  type: TYPE_NORMAL
- en: However, there are situations where you might want to script the creation of
    graphs so it is repeatable and reusable or it integrates with your Python code.
    [matplotlib](https://matplotlib.org) has been the go-to for some time, and it
    is hard to avoid when Python is your platform. [Seaborn](https://seaborn.pydata.org)
    provides a wrapper on top of matplotlib to make it easier to use for common chart
    types. SymPy, which we used a lot throughout this book, uses matplotlib as its
    backend. However, some consider matplotlib to be so mature it is approaching legacy
    status. Libraries like [Plotly](https://plotly.com/python) have been on the rise
    and are nice to use, and it is based on the JavaScript [D3.js library](https://d3js.org).
    Personally, I am having success with [Manim](https://www.manim.community). The
    3Blue1Brown-style visualizations it produces are extraordinary and have that “Wow!”
    factor with customers, and the API is surprisingly easy to use considering the
    animation power it has. However, it is a young library and has yet to reach maturity,
    meaning you might have breaking code changes as it evolves with each release.
  prefs: []
  type: TYPE_NORMAL
- en: You cannot go wrong with exploring all of these solutions, and if your employer/customer
    does not have a preference, you can find one that works best for you.
  prefs: []
  type: TYPE_NORMAL
- en: There are commercial licensed platforms like [Tableau](https://www.tableau.com/products/desktop),
    which are fine to a degree. They set out to create proprietary software that specializes
    in visualization and create a drag-and-drop interface so it is accessible to nontechnical
    users. Tableau even has a whitepaper titled [“Make Everyone in Your Organization
    a Data Scientist”](https://oreil.ly/kncmP), which does not help the data scientist
    definition problem mentioned earlier. The challenges I have found with Tableau
    is it only does visualization well and requires a hefty license. While you can
    somewhat integrate Python with [TabPy](https://tableau.github.io/TabPy/docs/about.html),
    you might just choose to use the capable open source libraries mentioned earlier
    unless your employer wants to use Tableau.
  prefs: []
  type: TYPE_NORMAL
- en: Software Licenses Can Be Political
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Imagine that you created a Python or Java application that solicits a few user
    inputs, retrieves and wrangles different data sources, runs some highly custom
    algorithms, and then presents a visualization and a table showing the result.
    You present it at a meeting after months of hard work, but then one of the managers
    raises his hand and asks, “Why not just do this in Tableau?”
  prefs: []
  type: TYPE_NORMAL
- en: It’s a hard pill to swallow for some managers, knowing that they have spent
    thousands of dollars for corporate software licenses, and you come in and use
    a more capable (albeit more complex to use) open source solution that has no licensing
    costs. You can emphasize that Tableau does not support these algorithms or integrated
    workflows you had to create. After all, Tableau is just visualization software.
    It is not a from-scratch coding platform to create a customized, highly tailored
    solution.
  prefs: []
  type: TYPE_NORMAL
- en: Leadership is often sold the impression that Tableau, Alteryx, or another commercial
    tool can do everything. After all, they spent a lot of money for it and were probably
    given a good sales pitch by the vendor. Naturally, they want to justify the costs
    and have as many people as possible using the license. They probably spent further
    budget training employees to use the software and want others to be able to maintain
    your work.
  prefs: []
  type: TYPE_NORMAL
- en: Be sensitive to this. If management asks you to use the tool they paid for,
    then explore if you can make it work. But if it has limitations or steep usability
    compromises in your specific tasks, be politely up-front about it.
  prefs: []
  type: TYPE_NORMAL
- en: Knowing Your Industry
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s compare two industries: movie streaming (e.g., Netflix) and aerospace
    defense (e.g., Lockheed Martin). Do they have anything in common? Hardly! Both
    are technology-driven companies, but one is streaming movies for consumers and
    the other is building airplanes with ordnance.'
  prefs: []
  type: TYPE_NORMAL
- en: When I advise on artificial intelligence and system safety, one of the first
    things I point out is these two industries have very different tolerances for
    risk. A movie-streaming company may tout they have an AI system that learns what
    movies to recommend to consumers, but how catastrophic is it when it gives a bad
    recommendation? Well, at worst you have a mildly irritated consumer who wasted
    two hours watching a movie they did not enjoy.
  prefs: []
  type: TYPE_NORMAL
- en: But what about the aerospace defense company? If a fighter jet has AI on board
    that automatically shoots targets, how catastrophic would it be if it were wrong?
    We are talking about human lives now, not movie recommendations!
  prefs: []
  type: TYPE_NORMAL
- en: The risk tolerance gap between both of these industries is wide. Naturally,
    the aerospace defense company is going to be far more conservative implementing
    any experimental system. This means red tape and safety working groups evaluating
    and stopping any project they deem unacceptably high risk, and justifiably so.
    What’s interesting, though, is the success of AI in Silicon Valley startups, most
    in low-risk applications like movie recommendations, have created FOMO (“fear
    of missing out”) with the defense industry executives and leadership. This is
    likely because the disparity in risk tolerance between these two domains is not
    highlighted enough.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, there is a wide spectrum of risk severity between these two industries,
    between “irritated user” and “loss of human life.” Banks may use AI to determine
    who will qualify for loans, but that carries risks in discriminating against certain
    demographics. Criminal justice systems have experimented with AI in parole and
    surveillance systems, only to run into the same discrimination issues. [Social
    media may use AI](https://oreil.ly/VoK95) to determine what user posts are acceptable
    but anger its users when it suppresses “harmless” content (false positives) as
    well as lawmakers when “harmful” content is not suppressed (false negatives).
  prefs: []
  type: TYPE_NORMAL
- en: This demonstrates the need to know your industry. If you want to do lots of
    machine learning, you will probably want to work in low-risk industries where
    false positives and false negatives do not endanger or upset anyone. But if none
    of that appeals to you, and you want to work on bolder applications like [self-driving
    cars](https://oreil.ly/sOYs6), aviation, and medicine, then expect your machine
    learning models to get rejected a lot.
  prefs: []
  type: TYPE_NORMAL
- en: In these higher-risk industries, do not be surprised if specific PhDs and other
    formal credentials are required. Even with a specialized PhD, false positives
    and false negatives do not magically disappear. If you do not want to pursue such
    committed specialization, you will likely be better off learning other tools besides
    machine learning, including software engineering, optimization, statistics, and
    business rule systems/heuristics.
  prefs: []
  type: TYPE_NORMAL
- en: Productive Learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In a 2008 stand-up special, comedian Brian Regan contrasted his lack of curiosity
    to those who read newspapers. Pointing out that a front-page story is never concluded,
    he stated he has no desire to turn to the specified page to find out how it ends.
    “And after a nine-year trial, the jury finally came in with a verdict of continued
    on page 22 on column C…I guess I’ll never know,” he quips dismissively. He then
    contrasts with those who flip the pages, exclaiming, “I want to learn! I want
    to be a learner of things!”
  prefs: []
  type: TYPE_NORMAL
- en: While Brian Regan might have intended to be self-deprecating, maybe he was right
    about something. Learning a topic for the sake of it of is hardly motivation,
    and being disinterested is not always a bad thing. If you pick up a calculus textbook
    and have no purpose for learning it, you will probably end up discouraged and
    frustrated. You need to have a project or objective in mind, and if you find a
    topic uninteresting, why bother learning it? Personally, when I allowed myself
    to lose interest in topics I could not find relevant, it was incredibly liberating.
    Even more surprising, my productivity skyrocketed.
  prefs: []
  type: TYPE_NORMAL
- en: It does not mean you should be uncurious. However, there is so much information
    out there, and prioritizing what you learn is an invaluable skill. You can ask
    questions about why something is useful and, if you cannot get a straight answer,
    allow yourself to move on! Is everybody talking about natural language processing?
    It does not mean you have to! Most businesses do not need natural language processing
    anyway, so it is OK to say it is not worth your effort or time.
  prefs: []
  type: TYPE_NORMAL
- en: Whether you have projects on your job or you create your own for self-study,
    have something tangible to work toward. Only *you* get to decide what is worth
    learning, and you can wave off the FOMO in pursuit of things you find interesting
    and relevant.
  prefs: []
  type: TYPE_NORMAL
- en: Practitioner Versus Advisor
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This might be a generalization, but there are two types of knowledge experts:
    practitioners and advisors. To find your edge, discern which you want to be and
    tune your professional development accordingly.'
  prefs: []
  type: TYPE_NORMAL
- en: In the data science and analytics world, practitioners are the ones writing
    code, creating models, scouring data, and trying to directly create value. Advisors
    are like consultants, telling management whether their objectives are sound, helping
    with strategy, and providing direction. Sometimes a practitioner can work their
    way up to being an advisor. Sometimes advisors were never practitioners. There
    are pros and cons to each role.
  prefs: []
  type: TYPE_NORMAL
- en: A practitioner may enjoy coding, doing data analysis, and performing tangible
    work that directly can create value. A benefit for the practitioner is they actually
    develop and possess hard skills. However, burying oneself in code, math, and data
    makes it easy to lose sight of the big picture and lose touch with the rest of
    the organization and industry. A common complaint I have heard from managers is
    their data scientist wants to work on problems *they* find interesting but that
    do not add value to the organization. I have also heard complaints from practitioners
    who want exposure and upward mobility but feel tucked away and hidden in their
    organization.
  prefs: []
  type: TYPE_NORMAL
- en: An advisor admittedly has a cushier job in some ways. They dispense advice and
    information to managers, and help provide strategic direction to a business. They
    are typically not the ones who write code or scour data, but they help management
    hire the people who do. The career risk is different, as they do not worry about
    meeting sprint deadlines, dealing with code bugs, or misbehaving models like practitioners
    do. But they do have to worry about staying knowledgeable, credible, and relevant.
  prefs: []
  type: TYPE_NORMAL
- en: To be an effective advisor, you have be *really* knowledgeable and know things
    other people do not. It has to be critical and relevant information that is fine-tuned
    to your customer’s needs. To stay relevant, you have to read, read, and read more
    every day…seeking and synthesizing information others are overlooking. It is not
    enough to be familiar with machine learning, statistics, and deep learning. You
    have to be paying attention to your client’s industry as well as other industries,
    tracking who is succeeding and who is not. You also have to learn to pair the
    right solution to the right problem, in a business landscape where many are looking
    for a silver bullet. And to do all of this, you have to be an effective communicator
    and share information in a way that helps your client, not just demonstrate what
    you know.
  prefs: []
  type: TYPE_NORMAL
- en: The greatest risk for an advisor is providing information that ends up being
    wrong. Some consultants are quite effective at redirecting blame to outside factors,
    like “nobody in the industry saw this coming” or “this is a six-sigma event!”
    meaning an undesirable event had a one in a half-billion chance of occurring but
    did anyway. Another risk is not having the hard skills of a practitioner and becoming
    disconnected from the technical side of the business. This is why it is a good
    idea to regularly practice coding and modeling at home, or at least make technical
    books part of your reading.
  prefs: []
  type: TYPE_NORMAL
- en: In the end, a good advisor tries to be a bridge between the customer and their
    end goal, often filling a massive knowledge gap that exists. It is not billing
    the maximum number of hours and inventing busywork, but truly identifying what
    troubles your customer and helping them sleep at night.
  prefs: []
  type: TYPE_NORMAL
- en: When projects are planned on tools rather than problems, there is a high likelihood
    of the project not succeeding. This means as an advisor you have to hone your
    listening skills and identify the questions that clients are struggling to ask,
    much less have the answers to. If a major fast food chain has hired you to help
    with “AI strategy,” and you see their HR rushing to hire deep learning talent,
    it is your job to ask, “What problems with deep learning are you trying to solve?”
    If you cannot get a clear answer, you want to encourage management to step back
    and evaluate what real problems they actually are facing as an industry. Are they
    having staff-scheduling inefficiency? Well, they do not need deep learning. They
    need linear programming! This may seem basic to some readers, but a lot of management
    nowadays struggles to make these distinctions. More than once, I have met vendors
    and consultants who brand their linear programming solutions as AI, which can
    then semantically be conflated with deep learning.
  prefs: []
  type: TYPE_NORMAL
- en: What to Watch Out For in Data Science Jobs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To understand the data science job market, it might be good to draw a comparison
    to a profound piece of American television.
  prefs: []
  type: TYPE_NORMAL
- en: 'In 2010, there was a US TV series *Better Off Ted*. One episode, titled “Jabberwocky”
    (season 1, episode 12), captured something profound about corporate buzzwords.
    In the show Ted, the lead character, makes up a fictitious “Jabberwocky” project
    at his company to hide funding. With humorous results, his manager, the CEO, and
    ultimately the entire company began to “work” on the “Jabberwocky” project without
    even knowing what it is. It continues to escalate and thousands of employees are
    pretending to work on “Jabberwocky” while no one stops to ask what they are actually
    working on. The reason: no one wants to admit they are out of the loop and ignorant
    of something important.'
  prefs: []
  type: TYPE_NORMAL
- en: The *Jabberwocky effect* is an anecdotal theory that an industry or organization
    can perpetuate a buzzword/project even if no one has satisfactorily defined what
    it is. Organizations can cyclically fall victim to this behavior, allowing terms
    to circulate without definition, and group behavior permits the ambiguity. Common
    examples may include blockchain, artificial intelligence, data science, big data,
    Bitcoin, internet of things, quantum computing, NFTs, being “data-driven,” cloud
    computing, and “digital disruption.” Even tangible, high-profile, and specific
    projects can become mysterious buzzwords understood by a few but talked about
    by many.
  prefs: []
  type: TYPE_NORMAL
- en: To stop the Jabberwocky effect, you have to be a catalyst for productive dialogue.
    Be curious about the methods and means (not just the qualities or outcomes) of
    a project or initiative. When it comes to a role, is the company hiring you to
    work on “Jabberwocky” or practical and specific projects? Have they fallen victim
    to buzzwords and hiring you because of FOMO (fear of missing out)? Or do they
    actually have specific and functional needs they are hiring you for? Making this
    discernment can spell the difference between a good fit that cruises smoothly
    or a frustrating speed bump in your career.
  prefs: []
  type: TYPE_NORMAL
- en: With that backdrop, let’s now consider a few things to watch out for in data
    science jobs, starting with role definition.
  prefs: []
  type: TYPE_NORMAL
- en: Role Definition
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s say you are hired as a data scientist. The interview went great. You asked
    questions about the role and got straight answers. You are offered a job, and
    most important, you should know what projects you will be working on.
  prefs: []
  type: TYPE_NORMAL
- en: You always want to go into a role that is clearly defined and has tangible objectives.
    There is no guessing what you are supposed to be working on. Even better, you
    should have leadership with a clear vision that understands what the business
    needs. You become the executor of clearly defined objectives and know your customer.
  prefs: []
  type: TYPE_NORMAL
- en: Conversely, if you were hired into a role because the department wants to be
    “data-driven” or have a competitive edge in “data science,” this is a red flag.
    Chances are you will be burdened with finding problems to solve and selling any
    low-hanging fruit you find. When you ask for strategic guidance, you are told
    to apply “machine learning” to the business. But of course, when all you have
    is a hammer, everything starts to look like a nail. Data science teams feel pressured
    to have a solution (e.g., machine learning) before they even have an objective
    or problem to solve. Once a problem is found, getting stakeholder buy-in and aligning
    resources are found to be difficult, and focus starts to bounce from one low-hanging
    fruit to another.
  prefs: []
  type: TYPE_NORMAL
- en: The problem here is you were hired for a role based on a buzzword, not a function.
    Poor role definition tends to propagate to other problems discussed next. Let’s
    move on to organizational focus.
  prefs: []
  type: TYPE_NORMAL
- en: Organizational Focus and Buy-In
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another factor to watch out for is how aligned the organization is on specific
    objectives and whether all parties are bought in.
  prefs: []
  type: TYPE_NORMAL
- en: Since the data science boom, many organizations restructured to have a central
    data science team. The executives’ vision is to have the data science team rove,
    advise, and help other departments become data-driven and employ innovative techniques
    like machine learning. They may also be tasked with breaking down data silos between
    the departments. While this sounds like a good idea on paper, many organizations
    discover this is full of challenges.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s why: management creates a data science team but there’s no clear objective.
    Therefore, this team is tasked with looking for problems to solve rather than
    empowered to solve known problems. As stated, this is why data science teams are
    notorious for having a solution (e.g., machine learning) before they have an objective.
    They are especially ill-equipped to be a driving force for breaking down data
    silos, as this is completely outside their lane of expertise.'
  prefs: []
  type: TYPE_NORMAL
- en: Breaking Down Data Silos Is an IT Job!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is misguided to use a data science team to “break down data silos” in an
    organization. Data silos are often due to a lack of data-warehousing infrastructure,
    and departments are housing their data in spreadsheets and secret databases rather
    than a centralized and supported database.
  prefs: []
  type: TYPE_NORMAL
- en: If data silos are deemed a problem, you need servers, cloud instances, certified
    database administrators, security protocols, and an IT task force to put all this
    together. This is not something a data science team is equipped to do, as they
    likely do not have the needed expertise, budget, and organizational authority
    to pull this off except in very small companies.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once a problem is found, getting stakeholder buy-in and aligning resources
    are difficult. If an opportunity is found, strong leadership is needed to do the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: Have a clearly defined objective and road map
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Obtain budget to collect data and support the infrastructure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attain data access and negotiate data ownership
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Include stakeholder buy-in and domain knowledge
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Budget time and meetings from stakeholders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These requirements are much harder to do *after* a data science team has been
    hired, rather than before, because the data science team’s roles are being scoped
    and budgeted reactively. If higher leadership has not aligned resources and buy-in
    from all necessary parties, the data science project will not succeed. This is
    why there is no shortage of articles blaming organizations for not being ready
    for data science, from [*Harvard Business Review*](https://oreil.ly/IlicW) to
    [*MIT Sloan Review*](https://oreil.ly/U9C9F).
  prefs: []
  type: TYPE_NORMAL
- en: It is better to work on a data science team that organizationally is in the
    same department as its customer. Information, budgets, and communication are shared
    more freely and cohesively. That way, there is less tension, as interdepartmental
    politics are mitigated by putting everyone on the same team rather than in political
    competition.
  prefs: []
  type: TYPE_NORMAL
- en: Data Access Is Political
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It is no secret organizations are protective of their data, but this is not
    just due to security or distrust concerns. Data itself is a highly political asset,
    and many people are reluctant to provide access even to their own colleagues.
    Even departments inside the same organization will not share data with one another
    for this reason: they do not want others doing their job, much less doing it incorrectly.
    It may require *their* full-time expertise to interpret the data, and it requires
    *their* domain knowledge. After all, their data is their business! And if you
    are asking for access to *their* data, you are asking to get into *their* business.'
  prefs: []
  type: TYPE_NORMAL
- en: On top of that, data scientists can overestimate their ability to interpret
    foreign datasets and the domain expertise needed to use them. To overcome this
    hurdle, you have to develop trust and buy-in with each partner with expertise,
    negotiate a knowledge transfer, and if needed, give them a significant role in
    the project.
  prefs: []
  type: TYPE_NORMAL
- en: Adequate Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another risk to watch out for is not getting adequate resources to do your job.
    It is difficult being thrown into a role and not having what you need. Of course,
    being scrappy and resourceful is an invaluable trait. But even the scrappiest
    software engineer/data scientist rock star can quickly find themselves in over
    their head. Sometimes you need things that cost money and your employer cannot
    budget for it.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s say you need a database to perform forecasting work. You have a poor connection
    to a third-party database, with frequent downtime and disconnects. The last thing
    you want to hear is to “make it work” but that is your situation. You contemplate
    replicating the database locally but to do that, you need to store 40 GB a day,
    and therefore you need a server or cloud instance. Now you are clearly in over
    your head, a data scientist becoming an IT department without an IT budget!
  prefs: []
  type: TYPE_NORMAL
- en: In these situations, you have to contemplate how you can cut corners without
    hurting your project. Can you hold only the rolling latest data and delete the
    rest? Can you create some error-handling Python script that reconnects when a
    disconnect happens, while breaking up the data in batches so it picks up from
    the last successful batch?
  prefs: []
  type: TYPE_NORMAL
- en: If this problem/solution sounds specific, yes, I did have to do this, and yes,
    it did work! It is satisfying to come up with workaround solutions and streamline
    a process without incurring more costs. But inevitably, for many data projects
    you may need data pipelines, servers, clusters, GPU-based workstations, and other
    computational resources that a desktop computer cannot offer. In other words,
    these things can cost money and your organization may be unable to budget for
    them.
  prefs: []
  type: TYPE_NORMAL
- en: Where’s the Mathematical Modeling?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are wondering how you were hired to do regression, statistics, machine
    learning, and other applied mathematics only to find yourself doing rogue IT work,
    this is not uncommon in the current corporate climate.
  prefs: []
  type: TYPE_NORMAL
- en: You are working with data, however, and that implicitly can lead to IT-like
    work. The important thing is to make sure your skills still match the job and
    the needed outcome. We will address this throughout the rest of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Reasonable Objectives
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is a big one to watch out for. In a landscape full of hype and moonshot
    promises, it is easy to encounter unreasonable objectives.
  prefs: []
  type: TYPE_NORMAL
- en: There are situations where a manager hires a data scientist and expects them
    to waltz in effortlessly and add exponential value to the organization. This can
    certainly happen if the organization is still doing manual work and opportunities
    to automate are everywhere. For example, if the organization is doing all its
    work in spreadsheets and forecasts are done by pure guesses, this is a great opportunity
    for a data science professional to streamline processes into a database and make
    strides with even simple regression models.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, if the organization hires a data scientist to implement machine
    learning into their software specifically recognizing objects in images, this
    is much harder. A well-informed data scientist has to explain to management this
    is an endeavor that will cost hundreds of thousands of dollars at least! Not only
    do pictures have to be gathered, but [manual labor has to be hired to label the
    objects in the images](https://oreil.ly/ov7S5). And that is just collecting the
    data!
  prefs: []
  type: TYPE_NORMAL
- en: 'It is common for a data scientist to spend their first 18 months explaining
    to management why they have not delivered, because they are still trying to gather
    and clean data, which is 95% of machine learning efforts. Management can become
    disillusioned with this because they fell victim to a popular narrative that machine
    learning and AI would do away with manual processes, only to discover they traded
    one set of manual processes for another: the procurement of labeled data.'
  prefs: []
  type: TYPE_NORMAL
- en: So be wary of environments that set unreasonable objectives, and find diplomatic
    ways to manage expectations with management especially when others promised them
    an “EASY button.” There are a lot of claims from otherwise reputable business
    journals and high-dollar management consultancies that super-intelligent AI is
    around the corner. Managers who lack technical expertise can fall victim to this
    hyped narrative.
  prefs: []
  type: TYPE_NORMAL
- en: Cui Bono?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Latin expression cui bono means “who benefits?” It is a good question to
    ask when you find yourself trying to make sense of behaviors when the Jabberwocky
    effect is in full swing. When the media promotes stories about artificial intelligence,
    who benefits from that? Regardless of your answer, the media also benefits from
    the clicks and ad revenue. High-dollar management consultancies create more billable
    hours around “AI strategy.” A chip manufacturer can promote deep learning to sell
    more graphics cards, and cloud platforms can sell more data storage and CPU time
    for machine learning projects.
  prefs: []
  type: TYPE_NORMAL
- en: What do all of these parties have in common? It is not just that they are using
    AI as a means to sell their products, but they have no long-term stake in their
    customers’ success. They are selling units, not a project outcome, much like selling
    shovels during a gold rush.
  prefs: []
  type: TYPE_NORMAL
- en: However, I’m not saying these media and vendor motivations are unethical. It
    is their employees’ job to make money for their company and provide for their
    families. The claims that promote their product may even be legitimate and achievable.
    However, it cannot be dismissed that once a claim is promoted, it is difficult
    to walk it back, even when it is realized to be unattainable. Many businesses
    might pivot and redirect their efforts rather than admit their claims did not
    pan out. So just be aware of this dynamic and always ask “cui bono?”
  prefs: []
  type: TYPE_NORMAL
- en: Competing with Existing Systems
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This caution might fall under “reasonable objectives,” but I think this situation
    is common enough that it warrants its own category. A subtle but problematic type
    of role is one that competes with an existing system that is not actually broken.
    These situations may arise in work environments that lack things to do and need
    to look busy.
  prefs: []
  type: TYPE_NORMAL
- en: Your employer contracted a vendor to install a sales-forecasting system several
    years ago. Your manager now asks you to improve the forecasting system by increasing
    accuracy by 1%.
  prefs: []
  type: TYPE_NORMAL
- en: Do you see the statistical problem here? If you read [Chapter 3](ch03.xhtml#ch03),
    1% should not feel statistically significant, and randomness can easily give you
    that 1% without any effort on your part. Conversely, randomness can swing the
    opposite direction and market forces out of your control can negate any effort
    you implement. A bad sales quarter and factors outside your control (such as competitors
    moving into your company’s market) decrease revenue by -3% rather than the 1%
    you inevitably p-hacked.
  prefs: []
  type: TYPE_NORMAL
- en: The overarching problem here, besides the redundancy of work, is the outcome
    is not in your sphere of influence. This may become a less than optimal situation.
    It’s one thing if the existing system you are competing with is broken and rudimentary,
    or done completely manually without automation. But competing with a system that
    is not broken is setting yourself up for a bad time. If possible, run for the
    hills when you see this kind of project.
  prefs: []
  type: TYPE_NORMAL
- en: A Role Is Not What You Expected
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you start a role and find out it is not what you expected, what do you
    do? For example, you were told your role would be statistics and machine learning
    but you find yourself doing IT-like work instead, as the data foundation of the
    organization is simply not developed enough to do machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: You might be able to make lemonade. You can certainly accept your data scientist
    role turning into an IT role, and maybe get some database and programming skills
    in the process. You might even become indispensable as the resident SQL expert
    or technical guru, and it can be professionally comfortable. As you streamline
    your business’s data operations and workflows, you are setting your business up
    to be better prepared for more sophisticated applications down the road. As your
    operations run smoothly, you can allocate time to learn and grow professionally
    in what interests you.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, if you were expecting to do statistical analysis and machine
    learning, and instead find yourself debugging broken spreadsheets, Microsoft Access,
    and VBA macros, you will probably feel disappointment. In this situation, at least
    become an advocate for change. Push to modernize the tooling, advocating using
    Python and a modern database platform, like MySQL or even SQLite. If you can achieve
    that, then at least you will be on a platform that allows more innovation, and
    be that much closer to applying concepts in this book. This will also benefit
    the organization, as support and flexibility of tools will increase, and Python
    talent is more readily available than dated technologies like Microsoft Access
    and VBA.
  prefs: []
  type: TYPE_NORMAL
- en: Does Your Dream Job Not Exist?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While you can always walk away from a role, always be sure to assess how realistic
    your expectations are, too. Are the cutting-edge technologies you are pursuing
    perhaps too cutting-edge?
  prefs: []
  type: TYPE_NORMAL
- en: 'Take natural language processing for example. You want to build chatbots using
    deep learning. However, the number of actual jobs that do this are scarce, as
    most companies do not have practical need for chatbots. Why? Chatbots are simply
    not there yet. While companies like [OpenAI have interesting research like GPT-3](https://openai.com/blog/gpt-3-apps),
    that is mostly what it amounts to: interesting research. GPT-3 in the end is a
    probability-based pattern recognizer chaining words together, and therefore it
    has no common sense. There is research demonstrating this, including some by [Gary
    Marcus at New York University](https://oreil.ly/fxakC).'
  prefs: []
  type: TYPE_NORMAL
- en: This means creating chatbots with broader applications is an open problem and
    has yet to be a value proposition for a great majority of businesses. If natural
    language processing is something you really want to pursue, and you are finding
    a disconnect with career opportunities, your best bet might be to go into the
    academic world and do research. While there are companies like Alphabet that do
    academic-like research, many of those employees came from academia.
  prefs: []
  type: TYPE_NORMAL
- en: So again, keep your expectations realistic as you navigate the job market. If
    your expectations exceed what the job market can provide, strongly consider the
    academic route. You also should consider this route when the type of job you want
    frequently requires a PhD or specific academic credentials, and this becomes a
    barrier to doing your dream job.
  prefs: []
  type: TYPE_NORMAL
- en: Where Do I Go Now?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we covered the data science landscape, where do we go from here? And
    what is the future of data science?
  prefs: []
  type: TYPE_NORMAL
- en: First, consider the burdens of having a data scientist job title. It carries
    an implicit requirement to have knowledge without boundaries, mostly due to the
    lack of standardized definition with a restricted scope. If we learned anything
    from the last 10 years watching the data science movement, definition matters.
    A data scientist is evolving to be a software engineer with proficiency in statistics,
    optimization, and machine learning. A data scientist may not even have that data
    scientist title anymore. While this is a much broader umbrella of requirements
    than when the data scientist was declared the “sexiest job of the 21st century,”
    it is becoming necessary to have these skills.
  prefs: []
  type: TYPE_NORMAL
- en: Another option is to specialize in favor of more focused titles, and this has
    been happening increasingly for the past few years. Roles like computer vision
    engineer, data engineer, data analyst, researcher, operations research analyst,
    and advisor/consultant are making a comeback. We are seeing less of the data scientist
    role, and this trend is likely to continue in the next 10 years, primarily due
    to role specialization. It is certainly an option to follow this trend.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is critical to note that the labor market has changed drastically, and this
    is why you need the competitive edges listed in this chapter. While data scientists
    were seen as unicorns in 2014 commanding six-figure salaries, nowadays a given
    data scientist job at any company can easily receive hundreds or thousands of
    applications while only offering a five-figure salary. Data science degrees and
    bootcamps have created an enormous boom of supply in data science professionals.
    Therefore, it is competitive landing jobs marketed as a data scientist or data
    science in general. This is why going after roles like analyst, operations research,
    and software developer is not necessarily a bad idea! Vicki Boykis, a machine
    learning engineer at Tumblr, probably says it best on her [blog article “Data
    Science is Different Now”](https://oreil.ly/vm8Vp):'
  prefs: []
  type: TYPE_NORMAL
- en: Remember that the ultimate goal…is to beat the hordes doing data science degrees,
    bootcamps, and working through tutorials.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: You want to get your foot in the door, *get a data-adjacent position*, and move
    towards whatever your dream job is, while finding out as much as you can about
    the tech industry in general.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Don’t get paralysis by analysis. Pick a small piece of something and start there.
    Do something small. Learn something small, build something small. Tell other people.
    Remember that your first job in data science will probably not be as a data scientist.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This was a different chapter from the rest in this book, but it is important
    if you want to navigate the data science job landscape and effectively apply the
    knowledge in this book. It might be disconcerting to learn statistical tools and
    machine learning only to find much of the job landscape will pivot you into other
    work. When this happens, take the opportunity to continue learning and gaining
    skills. When you integrate your essential math knowledge with a programming and
    software engineering proficiency, your value will increase tenfold just from having
    an understanding of the IT and data science gap.
  prefs: []
  type: TYPE_NORMAL
- en: Remember to eschew the hype in favor of practical solutions, and do not get
    so caught up in the technical purview that you become blindsided by market forces.
    Understand management and leadership motivations, as well as the motivations of
    people in general. Understand *why* things work, not just *how* they work. Be
    curious *why* a technique or tool solves a problem, not just *how* the technical
    aspects of it operate.
  prefs: []
  type: TYPE_NORMAL
- en: Learn not for the sake of it, but to develop capabilities and pair the right
    tool to the right problem. One of the most effective ways to learn is to pick
    a problem (not a tool!) you find interesting. Pulling that thread leads to another
    thing to be curious about, and then another, and then another. You have a goal
    in mind, so continue going down the right rabbit holes and know when to pull yourself
    out of others. It is absolutely rewarding to take this approach, and it is amazing
    how much expertise you can gain in a short amount of time.
  prefs: []
  type: TYPE_NORMAL
