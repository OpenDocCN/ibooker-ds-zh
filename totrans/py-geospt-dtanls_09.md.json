["```py\nspyder-env/Users/bonnymcclain/opt/miniconda3/envs/spyder-env\n\nconda install -c conda-forge spyder\n```", "```py\nConda install -c conda-forge gdal\n```", "```py\ngdalinfo —-version\n```", "```py\n(minimal_ds) MacBook-Pro-8:~ bonnymcclain$ cd TIFFs\n(minimal_ds) MacBook-Pro-8:TIFFs bonnymcclain$ ls\n```", "```py\nls/Downloads/another folder\n\n(minimal_ds) MacBook-Pro-8:~ bonnymcclain$ cd TIFFs\n(minimal_ds) MacBook-Pro-8:TIFFs bonnymcclain$ ls\n```", "```py\nTIFFs bonnymcclain$ ls\n```", "```py\ngdalinfo [--help-general] [-json] [-mm] [-stats | -approx_stats] [-hist] [-nogcp] \n[-nomd]\n         [-norat] [-noct] [-nofl] [-checksum] [-proj4]\n         [-listmdd] [-mdd domain|`all`]* [-wkt_format WKT1|WKT2|...]\n         [-sd subdataset] [-oo NAME=VALUE]* [-if format]* datasetname\n```", "```py\n(minimal_ds) MacBook-Pro-8:TIFFs bonnymcclain$ gdalinfo Sentinel2_RGB20200501.tif\n```", "```py\n(minimal_ds) MacBook-Pro-8:TIFFs bonnymcclain$ gdalinfo Sentinel2_RGB20200501.tif\nDriver: GTiff/GeoTIFF  This is the format of the saved file\nFiles: Sentinel2_RGB20200501.tif\nSize is 5579, 4151\nCoordinate System is:\nPROJCRS[\"WGS 84 / UTM zone 29N\",\n    BASEGEOGCRS[\"WGS 84\",\n        …\nPixel Size = (10.000000000000000,-10.000000000000000)\nMetadata:\n  AREA_OR_POINT=Area\nImage Structure Metadata:\n  COMPRESSION=LZW\n  INTERLEAVE=PIXEL\nCorner Coordinates:\nUpper Left  (566320.000, 4133200.000) (8d15' 4.53\"W, 37d20'35.24\"N)\nLower Left  (566320.000, 4091690.000) (8d15'17.78\"W, 36d58' 8.31\"N)\nUpper Right (622110.000, 4133200.000) (7d37'17.50\"W, 37d20'14.86\"N)\nLower Right (622110.000, 4091690.000) (7d37'41.89\"W, 36d57'48.20\"N)\nCenter      (594215.000, 4112445.000) (7d56'20.39\"W, 37d 9'13.16\"N)\n```", "```py\nBand 1 Block=256x256 Type=Float32, ColorInterp=Gray\n  Description = B2\nBand 2 Block=256x256 Type=Float32, ColorInterp=Undefined\n  Description = B3\nBand 3 Block=256x256 Type=Float32, ColorInterp=Undefined\n  Description = B4\n```", "```py\ngdal_edit.py -colorinterp_1 blue -colorinterp_2 green -colorinterp_3 red \nSentinel2_RGB20200501.tif\n```", "```py\ngdalwarp -t_srs EPSG: xxxxx  Sentinel2_RGB20200501.tif output_rd.tif\ngdalinfo Sentinel2_RGB20200501.tif\n```", "```py\n(minimal_ds) MacBook-Pro-8:TIFFs bonnymcclain$ gdalinfo -stats srtm_41_19_4326.tif\n```", "```py\n    STATISTICS_MAXIMUM=640\n    STATISTICS_MEAN=256.70790240722\n    STATISTICS_MINIMUM=27\n    STATISTICS_STDDEV=119.8746675927\n    STATISTICS_VALID_PERCENT=100\n```", "```py\nfrom osgeo import gdal\nimport numpy as np #to manipulate the array from raster\nimport matplotlib.pyplot as plt #to view figure\n```", "```py\nds = gdal.Open(\"slope.tif\")\ngt = ds.GetGeoTransform()\nproj =ds.GetProjection()\nband = ds.GetRasterBand(1)\narray = band.ReadAsArray()\n```", "```py\nds.RasterCount\n```", "```py\nband = ds.GetRasterBand(1)\n\narray = band.ReadAsArray()\n```", "```py\nbinmask = np.where((array >=np.mean(array)),1,0)\nplt.figure()\nplt.imshow(binmask)\n```", "```py\nbinmask.shape\n```", "```py\n#Now we want to save as GeoTiff so we need a GDAL driver\ndriver = gdal.GetDriverByName(\"GTiff\")\ndriver.Register()\noutds = driver.Create(\"binmask.tif\", xsize = binmask.shape[1],\n                      ysize = binmask.shape[0], bands =1,\n                      eType=gdal.GDT_Int16)\n```", "```py\n#need geotransform to be complete\noutds.SetGeoTransform(gt)\noutds.SetProjection(proj)\noutband = outds.GetRasterBand(1)\noutband.WriteArray(binmask)\noutband.SetNoDataValue(np.nan)\noutband.FlushCache()\n\n#close\noutband = None\noutds = None\n```", "```py\nfrom osgeo import gdal\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nds = gdal.Open(\"slope.tif\")\ngt = ds.GetGeoTransform()\nproj=ds.GetProjection()\nband = ds.GetRasterBand(1)\narray = band.ReadAsArray()\n\n#plt.figure()\n#plt.imshow(array)\n\nbinmask = np.where((array >=np.mean(array)),1,0)\nplt.figure()\nplt.imshow(binmask)\n\ndriver = gdal.GetDriverByName(\"GTiff\")\ndriver.Register()\noutds = driver.Create(\"binmask.tif\", xsize = binmask.shape[1],\n                      ysize = binmask.shape[0], bands =1,\n                      eType=gdal.GDT_Int16)\n\noutds.SetGeoTransform(gt)\noutds.SetProjection(proj)\noutband = outds.GetRasterBand(1)\noutband.WriteArray(binmask)\noutband.SetNoDataValue(np.nan)\noutband.FlushCache()\n\n#DON’T FORGET TO CLOSE FILE\n\noutband = None\noutds = None\n\n```"]