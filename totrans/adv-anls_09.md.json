["```py\n# For importing and exploring data\nlibrary(tidyverse)\n\n# For reading in Excel files\nlibrary(readxl)\n\n# For descriptive statistics\nlibrary(psych)\n\n# For writing data to Excel\nlibrary(writexl)\n```", "```py\nmy_number <- 8.2\nsqrt(my_number)\n#> [1] 2.863564\n\nmy_char <- 'Hello, world'\ntoupper(my_char)\n#> [1] \"HELLO, WORLD\"\n```", "```py\nis.vector(my_number)\n#> [1] TRUE\n```", "```py\nlength(my_number)\n#> [1] 1\n```", "```py\nmy_numbers <- c(5, 8, 2, 7)\n```", "```py\nis.vector(my_numbers)\n#> [1] TRUE\n\nstr(my_numbers)\n#> [1] num [1:4] 5 8 2 7\n\nlength(my_numbers)\n#> [1] 4\n```", "```py\nsqrt(my_numbers)\n#> [1] 2.236068 2.828427 1.414214 2.645751\n```", "```py\nroster_names <- c('Jack', 'Jill', 'Billy', 'Susie', 'Johnny')\ntoupper(roster_names)\n#> [1] \"JACK\"   \"JILL\"   \"BILLY\"  \"SUSIE\"  \"JOHNNY\"\n```", "```py\nmy_vec <- c('A', 2, 'C')\nmy_vec\n#> [1] \"A\" \"2\" \"C\"\n\nstr(my_vec)\n#> chr [1:3] \"A\" \"2\" \"C\"\n```", "```py\n# Get third element of roster_names vector\nroster_names[3]\n#> [1] \"Billy\"\n```", "```py\n# Get first through third elements\nroster_names[1:3]\n#> [1] \"Jack\"  \"Jill\"  \"Billy\"\n```", "```py\n# Get second through last elements\nroster_names[2:length(roster_names)]\n#> [1] \"Jill\"   \"Billy\"  \"Susie\"  \"Johnny\"\n```", "```py\n# Get second and fifth elements\nroster_names[c(2, 5)]\n#> [1] \"Jill\"   \"Johnny\"\n```", "```py\nroster <- data.frame(\n   name = c('Jack', 'Jill', 'Billy', 'Susie', 'Johnny'),\n   height = c(72, 65, 68, 69, 66),\n   injured = c(FALSE, TRUE, FALSE, FALSE, TRUE))\n\nroster\n#>     name height injured\n#> 1   Jack     72   FALSE\n#> 2   Jill     65    TRUE\n#> 3  Billy     68   FALSE\n#> 4  Susie     69   FALSE\n#> 5 Johnny     66    TRUE\n```", "```py\ndata()\n```", "```py\nhead(iris)\n#> Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#> 1          5.1         3.5          1.4         0.2  setosa\n#> 2          4.9         3.0          1.4         0.2  setosa\n#> 3          4.7         3.2          1.3         0.2  setosa\n#> 4          4.6         3.1          1.5         0.2  setosa\n#> 5          5.0         3.6          1.4         0.2  setosa\n#> 6          5.4         3.9          1.7         0.4  setosa\n```", "```py\nis.data.frame(iris)\n#> [1] TRUE\n```", "```py\nstr(iris)\n#> 'data.frame':\t150 obs. of  5 variables:\n#> $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n#> $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n#> $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n#> $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n#> $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 ...\n```", "```py\ndata(package = 'psych')\n```", "```py\ndata('sat.act')\nstr(sat.act)\n#> 'data.frame':\t700 obs. of  6 variables:\n#> $ gender   : int  2 2 2 1 1 1 2 1 2 2 ...\n#> $ education: int  3 3 3 4 2 5 5 3 4 5 ...\n#> $ age      : int  19 23 20 27 33 26 30 19 23 40 ...\n#> $ ACT      : int  24 35 21 26 31 28 36 22 22 35 ...\n#> $ SATV     : int  500 600 480 550 600 640 610 520 400 730 ...\n#> $ SATQ     : int  500 500 470 520 550 640 500 560 600 800 ...\n```", "```py\ngetwd()\n#> [1] \"C:/Users/User/Documents\"\n```", "```py\ngetwd()\n#> [1] \"/Users/user\"\n```", "```py\nfile.exists('test-file.csv')\n#> [1] TRUE\n```", "```py\nfile.exists('test-folder/test-file.csv')\n#> [1] TRUE\n```", "```py\nfile.exists('../test-file.csv')\n#> [1] TRUE\n```", "```py\nread_csv('datasets/star/districts.csv')\n#>-- Column specification ---------------------------\n#> cols(\n#>  schidkn = col_double(),\n#>  school_name = col_character(),\n#>  county = col_character()\n#> )\n#>\n#> # A tibble: 89 x 3\n#>   schidkn school_name     county\n#>     <dbl> <chr>           <chr>\n#> 1       1 Rosalia         New Liberty\n#> 2       2 Montgomeryville Topton\n#> 3       3 Davy            Wahpeton\n#> 4       4 Steelton        Palestine\n#> 5       5 Bonifay         Reddell\n#> 6       6 Tolchester      Sattley\n#> 7       7 Cahokia         Sattley\n#> 8       8 Plattsmouth     Sugar Mountain\n#> 9       9 Bainbridge      Manteca\n#>10      10 Bull Run        Manteca\n#> # ... with 79 more rows\n```", "```py\ndistricts <- read_csv('datasets/star/districts.csv')\n```", "```py\ndistricts\n#> # A tibble: 89 x 3\n#>   schidkn school_name     county\n#>     <dbl> <chr>           <chr>\n#> 1       1 Rosalia         New Liberty\n#> 2       2 Montgomeryville Topton\n#> 3       3 Davy            Wahpeton\n#> 4       4 Steelton        Palestine\n#> 5       5 Bonifay         Reddell\n#> 6       6 Tolchester      Sattley\n#> 7       7 Cahokia         Sattley\n#> 8       8 Plattsmouth     Sugar Mountain\n#> 9       9 Bainbridge      Manteca\n#> 10      10 Bull Run        Manteca\n#> # ... with 79 more rows\n```", "```py\nstar <- read_xlsx('datasets/star/star.xlsx')\nhead(star)\n#> # A tibble: 6 x 8\n#>  tmathssk treadssk classk       totexpk sex   freelunk race  schidkn\n#>     <dbl>    <dbl> <chr>          <dbl> <chr> <chr>    <chr>   <dbl>\n#> 1      473      447 small.class        7 girl  no       white      63\n#> 2      536      450 small.class       21 girl  no       black      20\n#> 3      463      439 regular.wit~       0 boy   yes      black      19\n#> 4      559      448 regular           16 boy   no       white      69\n#> 5      489      447 small.class        5 boy   yes      white      79\n#> 6      454      431 regular            8 boy   yes      white       5\n```", "```py\nView(star)\n```", "```py\nglimpse(star)\n#> Rows: 5,748\n#> Columns: 8\n#> $ tmathssk <dbl> 473, 536, 463, 559, 489,...\n#> $ treadssk <dbl> 447, 450, 439, 448, 447,...\n#> $ classk   <chr> \"small.class\", \"small.cl...\n#> $ totexpk  <dbl> 7, 21, 0, 16, 5, 8, 17, ...\n#> $ sex      <chr> \"girl\", \"girl\", \"boy\", \"...\n#> $ freelunk <chr> \"no\", \"no\", \"yes\", \"no\",...\n#> $ race     <chr> \"white\", \"black\", \"black...\n#> $ schidkn  <dbl> 63, 20, 19, 69, 79, 5, 1...\n```", "```py\nsummary(star)\n#>     tmathssk        treadssk        classk             totexpk\n#>  Min.   :320.0   Min.   :315.0   Length:5748        Min.   : 0.000\n#>  1st Qu.:454.0   1st Qu.:414.0   Class :character   1st Qu.: 5.000\n#>  Median :484.0   Median :433.0   Mode  :character   Median : 9.000\n#>  Mean   :485.6   Mean   :436.7                      Mean   : 9.307\n#>  3rd Qu.:513.0   3rd Qu.:453.0                      3rd Qu.:13.000\n#>  Max.   :626.0   Max.   :627.0                      Max.   :27.000\n#>      sex              freelunk             race\n#>  Length:5748        Length:5748        Length:5748\n#>  Class :character   Class :character   Class :character\n#>  Mode  :character   Mode  :character   Mode  :character\n#>     schidkn\n#>  Min.   : 1.00\n#>  1st Qu.:20.00\n#>  Median :39.00\n#>  Mean   :39.84\n#>  3rd Qu.:60.00\n#>  Max.   :80.00\n```", "```py\ndescribe(star)\n#>           vars    n   mean    sd median trimmed   mad min max range  skew\n#> tmathssk     1 5748 485.65 47.77    484  483.20 44.48 320 626   306  0.47\n#> treadssk     2 5748 436.74 31.77    433  433.80 28.17 315 627   312  1.34\n#> classk*      3 5748   1.95  0.80      2    1.94  1.48   1   3     2  0.08\n#> totexpk      4 5748   9.31  5.77      9    9.00  5.93   0  27    27  0.42\n#> sex*         5 5748   1.49  0.50      1    1.48  0.00   1   2     1  0.06\n#> freelunk*    6 5748   1.48  0.50      1    1.48  0.00   1   2     1  0.07\n#> race*        7 5748   2.35  0.93      3    2.44  0.00   1   3     2 -0.75\n#> schidkn      8 5748  39.84 22.96     39   39.76 29.65   1  80    79  0.04\n#>           kurtosis   se\n#> tmathssk      0.29 0.63\n#> treadssk      3.83 0.42\n#> classk*      -1.45 0.01\n#> totexpk      -0.21 0.08\n#> sex*         -2.00 0.01\n#> freelunk*    -2.00 0.01\n#> race*        -1.43 0.01\n#> schidkn      -1.23 0.30\n```", "```py\n# Third row, second column of data frame\nroster[3, 2]\n#> [1] 68\n```", "```py\n# Second through fourth rows, first through third columns\nroster[2:4, 1:3]\n#>    name height injured\n#> 2  Jill     65    TRUE\n#> 3 Billy     68   FALSE\n#> 4 Susie     69   FALSE\n```", "```py\n# Second and third rows only\nroster[2:3,]\n#>    name height injured\n#> 2  Jill     65    TRUE\n#> 3 Billy     68   FALSE\n\n# First and third columns only\nroster[, c(1,3)]\n#>     name injured\n#> 1   Jack   FALSE\n#> 2   Jill    TRUE\n#> 3  Billy   FALSE\n#> 4  Susie   FALSE\n#> 5 Johnny    TRUE\n```", "```py\nroster$height\n#> [1] 72 65 68 69 66\nis.vector(roster$height)\n#> [1] TRUE\n```", "```py\n# Write roster data frame to csv\nwrite_csv(roster, 'output/roster-output-r.csv')\n```", "```py\n# Write roster data frame to csv\nwrite_xlsx(roster, 'output/roster-output-r.xlsx')\n```"]