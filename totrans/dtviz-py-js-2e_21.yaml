- en: Chapter 15\. Imagining a Nobel Visualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In [Chapter 13](ch13.xhtml#chapter_delivery_restful), we explored the Nobel
    Prize dataset, looking for interesting stories to tell based on aspects of the
    data that should engage and educate. We found some interesting nuggets, among
    them:'
  prefs: []
  type: TYPE_NORMAL
- en: Maria Goeppert, the only female physicist other than Marie Curie to win a Physics
    Nobel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The post-WWII surge of American Nobel prizes, passing the declining tallies
    of the three biggest European winners: the UK, Germany, and France'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The difference in continental prize distributions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The dominance of the Scandinavian countries when prize tallies are adjusted
    for population size
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These and a number of other narratives require particular types of visualization.
    Comparison of Nobel Prize numbers by nation is probably best achieved by means
    of a conventional bar chart, whereas geographic prize distributions demand a map.
    In this chapter, we will try to design a modern, interactive visualization that
    incorporates some of the key stories we discovered while exploring the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Who Is It For?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first consideration when imagining a visualization is its target audience.
    A visualization intended for display in a gallery or museum will likely be very
    different from one intended for an in-house dashboard, even though they could
    use the same dataset. The Nobel Prize visualization anticipated for this book
    has as its chief constraint that it teach a key subset of D3 and the JavaScript
    needed to create a modern interactive web visualization. It is a fairly informal
    dataviz and should entertain and inform. It does not require a specialist audience.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing Visual Elements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first constraint on our Nobel Prize visualization is that it be simple enough
    to teach and provide a set of the key D3 skills. But even if that constraint was
    not in place, it is probably sensible to limit the scope of any visualization.
    This scope depends very much on the context,^([1](ch15.xhtml#idm45607751421728))
    but, as in many learning contexts, less is often more. Too much interactivity
    risks overwhelming the user and diluting the impact of any stories we might wish
    to tell.
  prefs: []
  type: TYPE_NORMAL
- en: With this in mind, let’s look at the key elements we want to include and how
    these are to be visually arranged.
  prefs: []
  type: TYPE_NORMAL
- en: A menu bar of some sort is a must, allowing the user to engage with the visualization
    and manipulate the data. Its functionality will depend on the stories we choose
    to tell, but it will certainly provide some way to explore or filter the dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, the visualization should display each prize by year and this display
    should update itself as the user refines the data through the menu bar. Given
    that national and regional trends are of interest, a map should be included, highlighting
    the prize-winning countries selected and giving some indication of their tally.
    A bar chart is the best way to compare the number of prizes by country, and this
    too should adapt dynamically to any data changes. There should also be a choice
    of measuring the absolute number of prizes by country or per capita, taking into
    account the respective population sizes.
  prefs: []
  type: TYPE_NORMAL
- en: In order to personalize the visualization, we should be able to select individual
    winners, showing any available picture and the short biography we scraped from
    Wikipedia. This requires a list of currently selected winners and a window in
    which to display the selected individual.
  prefs: []
  type: TYPE_NORMAL
- en: The aforementioned elements provide enough scope to tell the key stories we
    discovered in the last chapter, and with a bit of finessing should fit into a
    standard form factor.^([2](ch15.xhtml#idm45607751417968))
  prefs: []
  type: TYPE_NORMAL
- en: Our Nobel Prize visualization uses a fixed size for all devices, which means
    compromising larger devices with higher resolutions in order to accommodate smaller
    ones, such as last-generation smartphones or tablets. I find that for a lot of
    visualization work, a fixed size gives you much-needed control over specific placement
    of visual content blocks, information boxes, labels, and so on. For some visualizations,
    particularly multielement dashboards, a different approach may be required. [Responsive
    web design (RWD)](https://oreil.ly/AURTe) attempts to adapt the look and feel
    of your visualization to optimize for the specific device. Some popular CSS libraries
    such as [Bootstrap](https://getbootstrap.com) detect the device size (e.g., a
    tablet with resolution of 1,280×800 pixels) and change the stylesheet applied
    in order to get the most out of the available screen real estate. Specifying a
    fixed size for your visualization and using absolute positioning within it is
    the way to go if you require pinpoint control of the placement of your visual
    elements. However, you should be aware of the challenges of RWD, particularly
    when required to build multicomponent dashboards and the like.
  prefs: []
  type: TYPE_NORMAL
- en: Now let’s aim to pin down the look, feel, and requirements of the individual
    elements of our Nobel Prize visualization, beginning with the main user control,
    the menu bar.
  prefs: []
  type: TYPE_NORMAL
- en: Menu Bar
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An interactive visualization is driven by the user selecting from options, clicking
    on things, manipulating sliders, and so on. These allow the user to define the
    scope of the visualization, which is why we’ll deal with them first. Our user
    controls will appear as a toolbar at the top of the visualization.
  prefs: []
  type: TYPE_NORMAL
- en: A standard way to drive interesting discoveries is to allow the user to filter
    the data in key dimensions. The obvious options for our Nobel Prize visualization
    are category, gender, and country, the focus of our exploration in the last chapter.
    These filters should be cumulative, so, for example, selecting gender female and
    category Physics should return the two winning female physicists. In addition
    to those filters, we should have a radio button to choose between absolute and
    per capita numbers of national prize winners.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 15-1](#imagine_ui) shows a menu bar that meets our requirements. Placed
    at the top of our visualization, it has selectors to filter our required dimensions
    and a radio button to select our national winner metric, either absolute or per
    capita.'
  prefs: []
  type: TYPE_NORMAL
- en: '![dpj2 1501](assets/dpj2_1501.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-1\. The user’s controls
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The menu bar will sit atop the key component of our visualization, a chart showing
    all the Nobel Prizes over time. Let’s describe that next.
  prefs: []
  type: TYPE_NORMAL
- en: Prizes by Year
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The last chapter showed a lot of interesting historical trends in the Nobel
    Prizes by country. We also saw that although female recipients have increased
    recently, they are way behind in the sciences. One way of allowing these trends
    to be discovered is to show all the Nobel Prizes on a timeline and provide a filter
    to select the prizes by gender, country, and category (using the menu bar just
    discussed).
  prefs: []
  type: TYPE_NORMAL
- en: If we make our visualization 1,000 pixels wide, then, with 114 years of prizes
    to cover, we are allowed around 8 pixels per prize, enough to differentiate them.
    The highest number of prizes awarded in any one year is 14, in the year 2000,
    giving a minimal height for this element of 8×14 pixels, around 120\. A circle,
    color-coded by category, seems a good way to represent the individual prizes,
    giving us a chart something like the one shown in [Figure 15-2](#imagine_timeline).
  prefs: []
  type: TYPE_NORMAL
- en: '![dpj2 1801](assets/dpj2_1801.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-2\. A timeline of Nobel Prizes by year, color-coded by category
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The individual prizes are the essence of the visualization, so we’ll place this
    timeline prominently at the top above our central element, which should be a map,
    reflecting the international nature of the prize and allowing the user to see
    any global trends.
  prefs: []
  type: TYPE_NORMAL
- en: A Map Showing Selected Nobel Countries
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mapping is one of D3’s strengths, with many global projections available, from
    the classic Mercator to 3D spherical presentations.^([3](ch15.xhtml#idm45607751391536))
    Though maps are obviously engaging, they are also often overused and inappropriate
    when presenting nongeographical data. For example, unless you’re careful, large
    geographical areas, such as countries in Europe or states of the US, tend to outweigh
    smaller ones even when the latter have far larger populations. When you are presenting
    demographic information, this skew is hard to avoid and misrepresentation can
    result.^([4](ch15.xhtml#idm45607751388656))
  prefs: []
  type: TYPE_NORMAL
- en: But the Nobel Prize is an international one and the distribution of prizes by
    continent is of interest, making a global map a good way to depict the filtered
    data. If we superimpose a filled circle at the center of each country to reflect
    the prize measure (absolute or per capita), then we avoid skewing in favor of
    the larger land masses. In Europe, with many relatively small countries by land
    mass, these circles will intersect. By making them slightly transparent,^([5](ch15.xhtml#idm45607751386960))
    we can still see the superimposed circles and, by adding the opacities, give a
    sense of prize density. [Figure 15-3](#imagine_map) demonstrates this.
  prefs: []
  type: TYPE_NORMAL
- en: '![dpj2 1901](assets/dpj2_1901.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-3\. Global distribution of prizes
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: We’ll provide a little tooltip for the map, both as a way of demonstrating how
    to build this handy visual component and also to help a little with naming the
    countries. [Figure 15-4](#imag_tooltip) shows what we’re aiming for.
  prefs: []
  type: TYPE_NORMAL
- en: '![dpj2 1906](assets/dpj2_1906.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-4\. A simple tooltip for our Nobel Prize map
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The last of the larger elements will be placed below the map: a bar chart allowing
    the user to make clear comparisons of the number of Nobel Prizes by country.'
  prefs: []
  type: TYPE_NORMAL
- en: A Bar Chart Showing Number of Winners by Country
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is a lot of evidence that bar charts are great for making numeric comparisons.^([6](ch15.xhtml#idm45607751375056))
    A reconfigurable bar chart gives our visualization a lot of flexibility, allowing
    it to present the results of user-directed data filtering, choice of metric (i.e.,
    absolute versus per capita counts), and more.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 15-5](#imagine_bar) shows the bar chart we’ll use to compare the prize
    hauls of chosen countries. Both the axes ticks and bars should respond dynamically
    to user interaction, driven by the menu bar (see [Figure 15-1](#imagine_ui)).
    An animated transition between bar chart states would be good and (as we’ll see
    in [“Transitions”](ch17.xhtml#sect_transitions)) pretty much comes free with D3\.
    As well as being attractive, there’s reason to think such transitions are also
    effective communicators. See this [Stanford University paper](https://stanford.io/1Ue3cBR)
    on the effectiveness of animated transitions in data visualization for some insights.'
  prefs: []
  type: TYPE_NORMAL
- en: '![dpj2 1505](assets/dpj2_1505.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-5\. A bar chart component
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: To the side of the map and bar chart, we’ll place a list of currently selected
    winners and a biography box, allowing the user to discover something about individual
    winners.
  prefs: []
  type: TYPE_NORMAL
- en: A List of the Selected Winners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We want the user to be able to select individual winners, displaying a mini-biography
    and picture when available. The easiest way to achieve this is to have a list
    box, showing the currently selected winners, filtered from the full dataset using
    the menu bar selectors. Ordering these by year, in descending order, is a sensible
    default. And although we could allow the list to be sorted by column, it seems
    an unnecessary complication.
  prefs: []
  type: TYPE_NORMAL
- en: A simple HTML table with column headers should do the job here. It will look
    something like [Figure 15-6](#imagine_list).
  prefs: []
  type: TYPE_NORMAL
- en: '![dpj2 1506](assets/dpj2_1506.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-6\. A list of selected winners
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The list will have clickable rows, allowing the user to select an individual
    winner to be displayed in our last element, a small biography box.
  prefs: []
  type: TYPE_NORMAL
- en: A Mini-Biography Box with Picture
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Nobel Prize is given to individuals, each with a story to tell. To both
    humanize and enrich our visualization, we should use the individual mini-biographies
    and images we scraped from Wikipedia (see [Chapter 6](ch06.xhtml#chapter_heavy_scraping))
    to display the result of selecting an individual from our list element.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 15-7](#imagine_winner) shows a biography box with a colored top border
    indicating the category of prize, with colors shared by our time chart ([Figure 15-2](#imagine_timeline)),
    a top-right photograph (when available), and the first few paragraphs of Wikipedia’s
    biographic entry.'
  prefs: []
  type: TYPE_NORMAL
- en: '![dpj2 1507](assets/dpj2_1507.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-7\. A mini-biography of the selected winner with picture, if available
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The bio-box completes our set of visual components. We can now put them together
    in our specified 1,000×800 pixel frame.
  prefs: []
  type: TYPE_NORMAL
- en: The Complete Visualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Figure 15-8](#imagine_complete) shows our complete Nobel Prize visualization
    with the five key elements plus the topmost user controls arranged to fit in a
    1,000×800 pixel frame. Because we decided our timeline should take pride of place
    and the global map rather demanded the center, the other elements order themselves.
    The bar chart needs extra width to accommodate the labeled bars of all 58 countries,
    while the list of selected winners and mini-bio fit nicely to the right.'
  prefs: []
  type: TYPE_NORMAL
- en: '![dpj2 1601](assets/dpj2_1601.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-8\. The complete Nobel Prize visualization
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Let’s summarize our imaginings before proceeding to the next chapter, where
    we’ll see how to realize them.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we imagined our Nobel visualization, establishing a minimal
    set of visual elements necessary to tell the key stories discovered during our
    explorations of the last chapter. These fit neatly into our complete creation,
    shown in [Figure 15-8](#imagine_complete). In the next chapters, I will show you
    how to build the individual elements and how to stitch them together to form a
    modern, interactive web visualization. We’ll start with a gentle introduction
    to D3, by way of the simple story of a bar chart.
  prefs: []
  type: TYPE_NORMAL
- en: ^([1](ch15.xhtml#idm45607751421728-marker)) A specialized dashboard, designed
    for experts, could tolerate more functionality than a general-purpose educational
    visualization.
  prefs: []
  type: TYPE_NORMAL
- en: ^([2](ch15.xhtml#idm45607751417968-marker)) With a pixel measure, it’s worth
    keeping track of changing device resolutions. As of May 2022, pretty much all
    devices will accommodate a 1,000×800 pixel visualization.
  prefs: []
  type: TYPE_NORMAL
- en: ^([3](ch15.xhtml#idm45607751391536-marker)) These 3D orthographic projections
    are “fake” in the sense that they do not use a 3D graphics context, such as WebGL.
    There are some nice examples from [Jason Davies](https://oreil.ly/E7Rf3), [observablehq](https://oreil.ly/mi2TC),
    and [nullschool](https://oreil.ly/dLUlD).
  prefs: []
  type: TYPE_NORMAL
- en: ^([4](ch15.xhtml#idm45607751388656-marker)) See [xkcd](https://xkcd.com/1138)
    for an example.
  prefs: []
  type: TYPE_NORMAL
- en: ^([5](ch15.xhtml#idm45607751386960-marker)) By adjusting the alpha channel in
    the RGBA code with the CSS property `opacity`, from `0` (none) to `1` (full).
  prefs: []
  type: TYPE_NORMAL
- en: ^([6](ch15.xhtml#idm45607751375056-marker)) See Stephen Few’s insightful [blog
    post](https://oreil.ly/TAK5T).
  prefs: []
  type: TYPE_NORMAL
