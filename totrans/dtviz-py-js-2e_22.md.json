["```py\nnobel_viz\n├── index.xhtml\n└── static\n    ├── css\n    │   └── style.css\n    ├── data          ![1](assets/1.png)\n    │   ├── nobel_winners_biopic.json\n    │   ├── winning_country_data.json\n    │   ├── world-110m.json\n    │   └── world-country-names-nobel.csv\n    ├── images\n    │   └── winners  ![2](assets/2.png)\n    │       └── full\n    │           ├── 002b4f05aa3758e2d6acadde4ed80aa991ed6357.jpg\n    │           ├── 00d7ed381db8b5d18edc84694b7f9ce14ee57c5b.jpg\n    │           ├── ...\n    └── js                  ![3](assets/3.png)\n        ├── nbviz_bar.mjs\n        ├── nbviz_core.mjs\n        ├── nbviz_details.mjs\n        ├── nbviz_main.mjs\n        ├── nbviz_map.mjs\n        ├── nbviz_menu.mjs\n        └── nbviz_time.mjs\n    └── libs\n        ├── crossfilter.min.js\n        ├── d3.min.js\n        └── topojson.min.js\n```", "```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Visualizing the Nobel Prize</title>\n<!-- 1\\. IMPORT THE visualization'S CSS STYLING -->\n<link rel=\"stylesheet\" href=\"static/css/style.css\"\nmedia=\"screen\" />\n<body>\n  <div id='chart'>\n    <!-- 2\\. A HEADER WITH TITLE AND SOME EXPLANATORY INFO -->\n    <div id='title'>Visualizing the Nobel Prize</div>\n    <div id=\"info\">\n      This is a companion piece to the book <a href='http://'>\n      Data visualization with Python and JavaScript</a>, in which\n      its construction is detailed. The data used was scraped\n      Wikipedia using the <a href=\n      'https://en.wikipedia.org/wiki\n /List_of_Nobel_laureates_by_country'>\n      list of winners by country</a> as a starting point. The\n      accompanying GitHub repo is <a href=\n      'http://github.com/Kyrand/dataviz-with-python-and-js-ed-2'>\n      here</a>.\n    </div>\n    <!-- 3\\. THE PLACEHOLDERS FOR OUR VISUAL COMPONENTS  -->\n    <div id=\"nbviz\">\n      <!-- BEGIN MENU BAR -->\n      <div id=\"nobel-menu\">\n        <div id=\"cat-select\">\n          Category\n          <select></select>\n        </div>\n        <div id=\"gender-select\">\n          Gender\n          <select>\n            <option value=\"All\">All</option>\n            <option value=\"female\">Female</option>\n            <option value=\"male\">Male</option>\n          </select>\n        </div>\n        <div id=\"country-select\">\n          Country\n          <select></select>\n        </div>\n        <div id='metric-radio'>\n          Number of Winners:&nbsp;\n          <form>\n            <label>absolute\n              <input type=\"radio\" name=\"mode\" value=\"0\" checked>\n            </label>\n            <label>per-capita\n              <input type=\"radio\" name=\"mode\" value=\"1\">\n            </label>\n          </form>\n        </div>\n      </div>\n      <!-- END MENU BAR  -->\n      <!-- BEGIN NOBEL-VIZ COMPONENTS -->\n      <div id='chart-holder' class='_dev'>\n        <!-- TIME LINE OF PRIZES -->\n        <div id=\"nobel-time\"></div>\n        <!-- MAP AND TOOLTIP -->\n        <div id=\"nobel-map\">\n          <div id=\"map-tooltip\">\n            <h2></h2>\n            <p></p>\n          </div>\n        </div>\n        <!-- LIST OF WINNERS -->\n        <div id=\"nobel-list\">\n          <h2>Selected winners</h2>\n          <table>\n            <thead>\n              <tr>\n                <th id='year'>Year</th>\n                <th id='category'>Category</th>\n                <th id='name'>Name</th>\n              </tr>\n            </thead>\n            <tbody>\n            </tbody>\n          </table>\n        </div>\n        <!-- BIOGRAPHY BOX -->\n        <div id=\"nobel-winner\">\n          <div id=\"picbox\"></div>\n          <div id='winner-title'></div>\n          <div id='infobox'>\n            <div class='property'>\n              <div class='label'>Category</div>\n              <span name='category'></span>\n            </div>\n            <div class='property'>\n              <div class='label'>Year</div>\n              <span name='year'></span>\n            </div>\n            <div class='property'>\n              <div class='label'>Country</div>\n              <span name='country'></span>\n            </div>\n          </div>\n          <div id='biobox'></div>\n          <div id='readmore'>\n            <a href='#'>Read more at Wikipedia</a>\n          </div>\n        </div>\n        <!-- NOBEL BAR CHART -->\n        <div id=\"nobel-bar\"></div>\n      </div>\n      <!-- END NOBEL-VIZ COMPONENTS -->\n    </div>\n  </div>\n  <!-- 4\\. THE JAVASCRIPT FILES -->\n  <!-- THIRD-PARTY JAVASCRIPT LIBRARIES, MAINLY D3  -->\n  <script src=\"libs/d3.min.js\"></script>\n  <!-- ... -->\n  <!-- THE MAIN JAVASCRIPT MODULE FOR OUR NOBEL ELEMENTS -->\n  <script src=\"static/js/nbviz_main.mjs\" ></script>\n</body>\n```", "```py\nbody {\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    background: #fefefe; ![1](assets/1.png)\n    width: 1000px;\n    margin: 0 auto; /* top and bottom 0, left and right auto */\n}\n\na:link {\n    color: royalblue;\n    text-decoration: none; ![2](assets/2.png)\n}\n\na:hover {\n    text-decoration: underline;\n}\n```", "```py\n#nbviz {\n    position: absolute;\n    top: 90px;\n    width: 100%;\n}\n\n#title {\n    position: absolute;\n    font-size: 30px;\n    font-weight: 100;\n    top: 20px;\n}\n\n#info {\n    position: absolute;\n    font-size: 11px;\n    top: 18px;\n    width: 300px;\n    right: 0px;\n    line-height: 1.2;\n}\n```", "```py\n#chart-holder {\n    width: 100%;\n    height: 750px;\n    position: relative;\n    padding: 0 0 20px 0; /* top right bottom left */\n}\n\n#chart-holder svg { ![1](assets/1.png)\n    width: 100%;\n    height: 100%;\n}\n```", "```py\n#nobel-map, #nobel-winner, #nobel-bar, #nobel-time, #nobel-list{\n    position:absolute; ![1](assets/1.png)\n}\n\n#nobel-time {\n    top: 0;\n    height: 150px;\n    width: 100%; ![2](assets/2.png)\n}\n\n#nobel-map {\n    background: azure;\n    top: 160px;\n    width: 700px;\n    height: 350px;\n}\n\n#nobel-winner {\n    top: 510px;\n    left: 700px;\n    height: 240px;\n    width: 300px;\n}\n\n#nobel-bar {\n    top: 510px;\n    height: 240px;\n    width: 700px;\n}\n\n#nobel-list {\n    top: 160px;\n    height: 340px;\n    width: 290px;\n    left: 700px;\n    padding-left: 10px; ![3](assets/3.png)\n}\n```", "```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\"> ... <body> ... <!-- THIRD-PARTY JAVASCRIPT LIBRARIES, MAINLY D3 BASED  --> ![1](assets/1.png)\n  <script src=\"static/libs/d3.min.js\"></script>\n  <script src=\"static/libs/topojson.min.js\"></script>\n  <script src=\"static/libs/crossfilter.min.js\"></script>\n  <!-- THE JAVASCRIPT FOR OUR NOBEL ELEMENTS -->\n  <script src=\"static/js/nbviz_main.mjs\"></script> ![2](assets/2.png)\n</body>\n```", "```py\n/* js/nbviz_core.js\n/* global $, _, crossfilter, d3  */ ![1](assets/1.png)\n(function(nbviz) {\n     //... MODULES PRIVATE VARS ETC..\n     nbviz.foo = function(){ //... ![2](assets/2.png)\n     };\n}(window.nbviz = window.nbviz || {})); ![3](assets/3.png)\n```", "```py\n// static/js/nbviz_main.mjs import nbviz from './nbviz_core.mjs'\nimport { initMenu } from './nbviz_menu.mjs'\nimport { initMap } from './nbviz_map.mjs'\nimport './nbviz_bar.mjs' ![1](assets/1.png)\nimport './nbviz_details.mjs'\nimport './nbviz_time.mjs'\n```", "```py\nlet nbviz = {}\nnbviz.ALL_CATS = 'All Categories'\nnbviz.TRANS_DURATION = 2000 // time in ms for our visual transitions nbviz.MAX_CENTROID_RADIUS = 30\nnbviz.MIN_CENTROID_RADIUS = 2\nnbviz.COLORS = { palegold: '#E6BE8A' } // any named colors used \nnbviz.data = {} // our main data store nbviz.valuePerCapita = 0 // metric flag nbviz.activeCountry = null\nnbviz.activeCategory = nbviz.ALL_CATS\n\nnbviz.CATEGORIES = [\n    \"Chemistry\", \"Economics\", \"Literature\", \"Peace\",\n    \"Physics\", \"Physiology or Medicine\"\n];\n// takes a category like Physics and returns a color nbviz.categoryFill = function(category){\n    var i = nbviz.CATEGORIES.indexOf(category);\n    return d3.schemeCategory10[i]; ![1](assets/1.png)\n};\n\nlet nestDataByYear = function(entries) {          ![2](assets/2.png)\n//... };\n\nnbviz.makeFilterAndDimensions = function(winnersData){\n//... };\n\nnbviz.filterByCountries = function(countryNames) {\n//... };\n\nnbviz.filterByCategory = function(cat) {\n//... };\n\nnbviz.getCountryData = function() {\n// ... };\n\nnbviz.callbacks = []\nnbviz.onDataChange = function () { ![3](assets/3.png)\n  nbviz.callbacks.forEach((cb) => cb())\n}\n\nexport default nbviz ![4](assets/4.png)\n```", "```py\n// static/js/nbviz_main.mjs //...\n  Promise.all([ ![1](assets/1.png)\n    d3.json('static/data/world-110m.json'),\n    d3.csv('static/data/world-country-names-nobel.csv'),\n    d3.json('static/data/winning_country_data.json'),\n    d3.json('static/data/nobel_winners_biopic.json'),\n  ]).then(ready)\n\n  function ready([worldMap, countryNames, countryData, winnersData]) { ![2](assets/2.png)\n    // STORE OUR COUNTRY-DATA DATASET\n    nbviz.data.countryData = countryData\n    nbviz.data.winnersData = winnersData\n    //... }\n```", "```py\n//...\n  function ready([worldMap, countryNames, countryData, winnersData]) {\n    // STORE OUR COUNTRY-DATA DATASET\n    nbviz.data.countryData = countryData\n    nbviz.data.winnersData = winnersData\n    // MAKE OUR FILTER AND ITS DIMENSIONS\n    nbviz.makeFilterAndDimensions(winnersData) ![1](assets/1.png)\n    // INITIALIZE MENU AND MAP\n    initMenu()\n    initMap(worldMap, countryNames)\n    // TRIGGER UPDATE WITH FULL WINNERS' DATASET\n    nbviz.onDataChange()\n  }\n```", "```py\n// nbviz_core.js nbviz.callbacks = [] ![1](assets/1.png)\n\nnbviz.onDataChange = function () {\n  nbviz.callbacks.forEach((cb) => cb()) ![2](assets/2.png)\n}\n```", "```py\n// nbviz_bar.mjs import nbviz from './nbviz_core.mjs'\n// ... nbviz.callbacks.push(() => {\n  let data = nbviz.getCountryData()\n  updateBarChart(data) ![1](assets/1.png)\n})\n```", "```py\nnbviz.getCountryData = function() {\n    var countryGroups = nbviz.countryDim.group().all(); ![1](assets/1.png)\n\n    // make main data-ball\n    var data = countryGroups.map( function(c) { ![2](assets/2.png)\n        var cData = nbviz.data.countryData[c.key]; ![3](assets/3.png)\n        var value = c.value;\n        // if per capita value then divide by pop. size\n        if(nbviz.valuePerCapita){\n            value = value / cData.population; ![4](assets/4.png)\n        }\n        return {\n            key: c.key, // e.g., Japan\n            value: value, // e.g., 19 (prizes)\n            code: cData.alpha3Code, // e.g., JPN\n        };\n    })\n        .sort(function(a, b) { ![5](assets/5.png)\n            return b.value - a.value; // descending\n        });\n\n    return data;\n};\n```", "```py\n[{\n  name:\"C\\u00e9sar Milstein\",\n  category:\"Physiology or Medicine\",\n  gender:\"male\",\n  country:\"Argentina\",\n  year: 1984\n },\n {\n  name:\"Auguste Beernaert\",\n  category:\"Peace\",\n  gender:\"male\",\n  country:\"Belgium\",\n  year: 1909\n },\n ...\n}];\n```", "```py\nnbviz.makeFilterAndDimensions = function(winnersData){\n    // ADD OUR FILTER AND CREATE CATEGORY DIMENSIONS\n    nbviz.filter = crossfilter(winnersData);\n    //...\n};\n```", "```py\nnbviz.makeFilterAndDimensions = function(winnersData){\n//...\n    nbviz.genderDim = nbviz.filter.dimension(function(o) {\n        return o.gender;\n    });\n//...\n}\n```", "```py\nnbviz.genderDim.filter('female'); ![1](assets/1.png)\nvar femaleWinners = nbviz.genderDim.top(Infinity); ![2](assets/2.png)\nfemaleWinners.length // 47\n```", "```py\nnbviz.genderDim.filter();\nnbviz.genderDim.top(Infinity) //  the full Array[858] of objects\n```", "```py\nnbviz.categoryDim = nbviz.filter.dimension(function(o) {\n    return o.category;\n});\n```", "```py\nnbviz.genderDim.filter('female');\nnbviz.categoryDim.filter('Physics');\nnbviz.genderDim.top(Infinity);\n// Out:\n// [\n//  {name:\"Marie Sklodowska-Curie\", category:\"Physics\",...\n//  {name:\"Maria Goeppert-Mayer\", category:\"Physics\",...\n// ]\n```", "```py\nnbviz.categoryDim.filter();\nnbviz.genderDim.top(Infinity); // Array[47] of objects\n```", "```py\nnbviz.genderDim.filter(); // reset gender dimension var countryGroup = nbviz.countryDim.group(); ![1](assets/1.png)\ncountryGroup.all(); ![2](assets/2.png)\n\n// Out: // [ //  {key:\"Argentina\", value:5}, ![3](assets/3.png)\n//  {key:\"Australia\", value:9}, //  {key:\"Austria\", value:14}, // ...]\n```", "```py\n    nbviz.makeFilterAndDimensions = function(winnersData){\n        // ADD OUR FILTER AND CREATE CATEGORY DIMENSIONS\n        nbviz.filter = crossfilter(winnersData);\n        nbviz.countryDim = nbviz.filter.dimension(function(o){ ![1](assets/1.png)\n            return o.country;\n        });\n\n        nbviz.categoryDim = nbviz.filter.dimension(function(o) {\n            return o.category;\n        });\n\n        nbviz.genderDim = nbviz.filter.dimension(function(o) {\n            return o.gender;\n        });\n    };\n```", "```py\n$ python -m http.server 8080\nServing HTTP on 0.0.0.0 port 8080 ...\n```"]