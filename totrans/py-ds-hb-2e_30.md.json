["```py\nIn [1]: %matplotlib inline\n        import matplotlib.pyplot as plt\n        plt.style.use('seaborn-whitegrid')\n        import numpy as np\n```", "```py\nIn [2]: fig = plt.figure()\n        ax = plt.axes()\n```", "```py\nIn [3]: fig = plt.figure()\n        ax = plt.axes()\n\n        x = np.linspace(0, 10, 1000)\n        ax.plot(x, np.sin(x));\n```", "```py\nIn [4]: plt.plot(x, np.sin(x));\n```", "```py\nIn [5]: plt.plot(x, np.sin(x))\n        plt.plot(x, np.cos(x));\n```", "```py\nIn [6]: plt.plot(x, np.sin(x - 0), color='blue')        # specify color by name\n        plt.plot(x, np.sin(x - 1), color='g')           # short color code (rgbcmyk)\n        plt.plot(x, np.sin(x - 2), color='0.75')        # grayscale between 0 and 1\n        plt.plot(x, np.sin(x - 3), color='#FFDD44')     # hex code (RRGGBB, 00 to FF)\n        plt.plot(x, np.sin(x - 4), color=(1.0,0.2,0.3)) # RGB tuple, values 0 to 1\n        plt.plot(x, np.sin(x - 5), color='chartreuse'); # HTML color names supported\n```", "```py\nIn [7]: plt.plot(x, x + 0, linestyle='solid')\n        plt.plot(x, x + 1, linestyle='dashed')\n        plt.plot(x, x + 2, linestyle='dashdot')\n        plt.plot(x, x + 3, linestyle='dotted');\n\n        # For short, you can use the following codes:\n        plt.plot(x, x + 4, linestyle='-')  # solid\n        plt.plot(x, x + 5, linestyle='--') # dashed\n        plt.plot(x, x + 6, linestyle='-.') # dashdot\n        plt.plot(x, x + 7, linestyle=':'); # dotted\n```", "```py\nIn [8]: plt.plot(x, x + 0, '-g')   # solid green\n        plt.plot(x, x + 1, '--c')  # dashed cyan\n        plt.plot(x, x + 2, '-.k')  # dashdot black\n        plt.plot(x, x + 3, ':r');  # dotted red\n```", "```py\nIn [9]: plt.plot(x, np.sin(x))\n\n        plt.xlim(-1, 11)\n        plt.ylim(-1.5, 1.5);\n```", "```py\nIn [10]: plt.plot(x, np.sin(x))\n\n         plt.xlim(10, 0)\n         plt.ylim(1.2, -1.2);\n```", "```py\nIn [11]: plt.plot(x, np.sin(x))\n         plt.axis('tight');\n```", "```py\nIn [12]: plt.plot(x, np.sin(x))\n         plt.axis('equal');\n```", "```py\nIn [13]: plt.plot(x, np.sin(x))\n         plt.title(\"A Sine Curve\")\n         plt.xlabel(\"x\")\n         plt.ylabel(\"sin(x)\");\n```", "```py\nIn [14]: plt.plot(x, np.sin(x), '-g', label='sin(x)')\n         plt.plot(x, np.cos(x), ':b', label='cos(x)')\n         plt.axis('equal')\n\n         plt.legend();\n```", "```py\nIn [15]: ax = plt.axes()\n         ax.plot(x, np.sin(x))\n         ax.set(xlim=(0, 10), ylim=(-2, 2),\n                xlabel='x', ylabel='sin(x)',\n                title='A Simple Plot');\n```"]