["```py\nIn [1]: import numpy as np\n        import pandas as pd\n```", "```py\nIn [2]: data = pd.Series([0.25, 0.5, 0.75, 1.0])\n        data\nOut[2]: 0    0.25\n        1    0.50\n        2    0.75\n        3    1.00\n        dtype: float64\n```", "```py\nIn [3]: data.values\nOut[3]: array([0.25, 0.5 , 0.75, 1.  ])\n```", "```py\nIn [4]: data.index\nOut[4]: RangeIndex(start=0, stop=4, step=1)\n```", "```py\nIn [5]: data[1]\nOut[5]: 0.5\n```", "```py\nIn [6]: data[1:3]\nOut[6]: 1    0.50\n        2    0.75\n        dtype: float64\n```", "```py\nIn [7]: data = pd.Series([0.25, 0.5, 0.75, 1.0],\n                         index=['a', 'b', 'c', 'd'])\n        data\nOut[7]: a    0.25\n        b    0.50\n        c    0.75\n        d    1.00\n        dtype: float64\n```", "```py\nIn [8]: data['b']\nOut[8]: 0.5\n```", "```py\nIn [9]: data = pd.Series([0.25, 0.5, 0.75, 1.0],\n                         index=[2, 5, 3, 7])\n        data\nOut[9]: 2    0.25\n        5    0.50\n        3    0.75\n        7    1.00\n        dtype: float64\n```", "```py\nIn [10]: data[5]\nOut[10]: 0.5\n```", "```py\nIn [11]: population_dict = {'California': 39538223, 'Texas': 29145505,\n                            'Florida': 21538187, 'New York': 20201249,\n                            'Pennsylvania': 13002700}\n         population = pd.Series(population_dict)\n         population\nOut[11]: California      39538223\n         Texas           29145505\n         Florida         21538187\n         New York        20201249\n         Pennsylvania    13002700\n         dtype: int64\n```", "```py\nIn [12]: population['California']\nOut[12]: 39538223\n```", "```py\nIn [13]: population['California':'Florida']\nOut[13]: California    39538223\n         Texas         29145505\n         Florida       21538187\n         dtype: int64\n```", "```py\npd.Series(data, index=index)\n```", "```py\nIn [14]: pd.Series([2, 4, 6])\nOut[14]: 0    2\n         1    4\n         2    6\n         dtype: int64\n```", "```py\nIn [15]: pd.Series(5, index=[100, 200, 300])\nOut[15]: 100    5\n         200    5\n         300    5\n         dtype: int64\n```", "```py\nIn [16]: pd.Series({2:'a', 1:'b', 3:'c'})\nOut[16]: 2    a\n         1    b\n         3    c\n         dtype: object\n```", "```py\nIn [17]: pd.Series({2:'a', 1:'b', 3:'c'}, index=[1, 2])\nOut[17]: 1    b\n         2    a\n         dtype: object\n```", "```py\nIn [18]: area_dict = {'California': 423967, 'Texas': 695662, 'Florida': 170312,\n                      'New York': 141297, 'Pennsylvania': 119280}\n         area = pd.Series(area_dict)\n         area\nOut[18]: California      423967\n         Texas           695662\n         Florida         170312\n         New York        141297\n         Pennsylvania    119280\n         dtype: int64\n```", "```py\nIn [19]: states = pd.DataFrame({'population': population,\n                                'area': area})\n         states\nOut[19]:               population    area\n         California      39538223  423967\n         Texas           29145505  695662\n         Florida         21538187  170312\n         New York        20201249  141297\n         Pennsylvania    13002700  119280\n```", "```py\nIn [20]: states.index\nOut[20]: Index(['California', 'Texas', 'Florida', 'New York', 'Pennsylvania'],\n          > dtype='object')\n```", "```py\nIn [21]: states.columns\nOut[21]: Index(['population', 'area'], dtype='object')\n```", "```py\nIn [22]: states['area']\nOut[22]: California      423967\n         Texas           695662\n         Florida         170312\n         New York        141297\n         Pennsylvania    119280\n         Name: area, dtype: int64\n```", "```py\nIn [23]: pd.DataFrame(population, columns=['population'])\nOut[23]:              population\n           California   39538223\n                Texas   29145505\n              Florida   21538187\n             New York   20201249\n         Pennsylvania   13002700\n```", "```py\nIn [24]: data = [{'a': i, 'b': 2 * i}\n                 for i in range(3)]\n         pd.DataFrame(data)\nOut[24]:    a  b\n         0  0  0\n         1  1  2\n         2  2  4\n```", "```py\nIn [25]: pd.DataFrame([{'a': 1, 'b': 2}, {'b': 3, 'c': 4}])\nOut[25]:      a  b    c\n         0  1.0  2  NaN\n         1  NaN  3  4.0\n```", "```py\nIn [26]: pd.DataFrame({'population': population,\n                       'area': area})\nOut[26]:               population    area\n         California      39538223  423967\n         Texas           29145505  695662\n         Florida         21538187  170312\n         New York        20201249  141297\n         Pennsylvania    13002700  119280\n```", "```py\nIn [27]: pd.DataFrame(np.random.rand(3, 2),\n                      columns=['foo', 'bar'],\n                      index=['a', 'b', 'c'])\nOut[27]:         foo       bar\n         a  0.471098  0.317396\n         b  0.614766  0.305971\n         c  0.533596  0.512377\n```", "```py\nIn [28]: A = np.zeros(3, dtype=[('A', 'i8'), ('B', 'f8')])\n         A\nOut[28]: array([(0, 0.), (0, 0.), (0, 0.)], dtype=[('A', '<i8'), ('B', '<f8')])\n```", "```py\nIn [29]: pd.DataFrame(A)\nOut[29]:    A    B\n         0  0  0.0\n         1  0  0.0\n         2  0  0.0\n```", "```py\nIn [30]: ind = pd.Index([2, 3, 5, 7, 11])\n         ind\nOut[30]: Int64Index([2, 3, 5, 7, 11], dtype='int64')\n```", "```py\nIn [31]: ind[1]\nOut[31]: 3\n```", "```py\nIn [32]: ind[::2]\nOut[32]: Int64Index([2, 5, 11], dtype='int64')\n```", "```py\nIn [33]: print(ind.size, ind.shape, ind.ndim, ind.dtype)\nOut[33]: 5 (5,) 1 int64\n```", "```py\nIn [34]: ind[1] = 0\nTypeError: Index does not support mutable operations\n```", "```py\nIn [35]: indA = pd.Index([1, 3, 5, 7, 9])\n         indB = pd.Index([2, 3, 5, 7, 11])\n```", "```py\nIn [36]: indA.intersection(indB)\nOut[36]: Int64Index([3, 5, 7], dtype='int64')\n```", "```py\nIn [37]: indA.union(indB)\nOut[37]: Int64Index([1, 2, 3, 5, 7, 9, 11], dtype='int64')\n```", "```py\nIn [38]: indA.symmetric_difference(indB)\nOut[38]: Int64Index([1, 2, 9, 11], dtype='int64')\n```"]