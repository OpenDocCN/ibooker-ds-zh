["```py\npip install missingno\n```", "```py\nimport pandas as pd\nNYPD = pd.read_csv(\"/content/NYPD_Complaint_Data_Historic.csv\")\nimport missingno as msno\n%matplotlib inline\nmsno.matrix(NYPD.sample(1000))\n```", "```py\nNYPD.info()\n```", "```py\nNYPD.shape\n(7375993, 35)\n```", "```py\nNYPD = pd.read_csv('/content/drive/MyDrive/NYPD_Complaint_Data_Historic.csv',\n                   parse_dates=['CMPLNT_FR_TM'])\nNYPD.dtypes.head()\n\nCMPLNT_NUM               int64\nCMPLNT_FR_DT            object\nCMPLNT_FR_TM    datetime64[ns]\n\nNYPD = NYPD.drop(columns =['CMPLNT_TO_DT','CMPLNT_FR_TM','PARKS_NM','HADEVELOPT', 'HOUSING_PSA'])\n```", "```py\ndf.describe()\n```", "```py\nsize, scale = 1000, 10\nComplaints = pd.Series(np.random.gamma(scale, size=size) ** 1.5)\n\nComplaints.plot.hist(grid=True, bins=20, rwidth=0.9,\n                 color='#607c8e')\nplt.title('Distribution of Complaint Types')\nplt.xlabel('CMPLNT_NUM')\nplt.ylabel('OFNS_DESC')\nplt.grid(axis='y', alpha=0.75)size, scale = 1000, 10\nComplaints = pd.Series(np.random.gamma(scale, size=size) ** 1.5)\n\nComplaints.plot.hist(grid=True, bins=20, rwidth=0.9,\n                 color='#607c8e')\nplt.title('Distribution of Complaint Types')\nplt.xlabel('PATROL_BORO')\nplt.ylabel('OFNS_DESC')\nplt.grid(axis='y', alpha=0.75)\n```", "```py\ndf_test = pd.read_csv(\"/content/NYPD_Complaint_Data_Historic.csv\", \nna_values = 'NaN')\nprint(df)\n```", "```py\nmsno.bar(NYPD.sample(1000))\n```", "```py\nmsno.dendrogram(NYPD)\n```", "```py\nimport pandas as pd\n```", "```py\ndf = pd.read_csv('/content/drive/MyDrive/NYPD_Complaint_Data_Historic.csv')\n```", "```py\ndf.head()\n```", "```py\n!pip install geopandas\nimport geopandas as gpd\nfrom shapely.geometry import Point, Polygon\nimport matplotlib.pyplot as plt\nstreet_map = gpd.read_file('/content/tl_2021_36_place.shp')\n```", "```py\n# designate coordinate system\ncrs = {'init': 'epsg:4326'}\n# zip x and y coordinates into single feature\ngeometry = [Point(xy) for xy in zip(df['Longitude'], df['Latitude'])]\n# create GeoPandas dataframe\ngeo_df = gpd.GeoDataFrame(df,\ncrs = crs,\ngeometry = geometry)\n```", "```py\ngeo_df.head()\n```", "```py\n# create figure and define axes, assign to subplot (matplotlib) fig, ax = plt.subplots(figsize=(30,30))\n# add .shp mapfile to axes street_map.plot(ax=ax, alpha=0.4,color='grey')\n# add geodataframe to axes\n# assign 'OFNS_DESC' variable to represent coordinates on graph\n# add legend\n# make data points transparent using alpha\n# assign size of points using markersize geo_df.plot(column='OFNS_DESC',ax=ax,alpha=0.5, legend=**True**,markersize=10)\n# add title to graph plt.title('Reported Offenses', fontsize=15,fontweight='bold')\n# set Latitude and Longitude boundaries for map display plt.xlim(-74.02,-73.925)\nplt.ylim( 40.7,40.8)\n# show map plt.show()\n```", "```py\nfig, ax = plt.subplots(figsize=(15,15))\nstreet_map.plot(ax=ax, alpha=0.4,color='grey',legend=True,markersize=20)\ngeo_df.loc[df['OFNS_DESC'] == 'BURGLARY']\ngeo_df.plot(ax=ax, alpha=0.5,)\nplt.xlim(-74.02,-73.925)\nplt.ylim( 40.7,40.8)\nplt.show()\n```", "```py\ndf.loc[df['OFNS_DESC'].isin([value1, value2, value3, ...])]\n```", "```py\ndf.loc[(df['OFNS_DESC'] == value) & (df['TRANSIT_DISTRICT'] == value)]\n```"]