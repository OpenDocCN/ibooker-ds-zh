- en: Chapter 6\. Company Matching
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章. 公司匹配
- en: In [Chapter 5](ch05.html#chapter_5), we examined the challenge of resolving
    a larger set of individual entities, matching on name and date of birth. In this
    chapter, we consider another typical scenario, resolving organization entities
    so that we can get a more complete picture of their business.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第5章](ch05.html#chapter_5)中，我们讨论了解决更大规模的个体实体集合的挑战，匹配名称和出生日期。在本章中，我们考虑另一种典型情景，解决组织实体，以便能够更全面地了解其业务。
- en: We could perhaps use the date of incorporation of the organization as a discriminator,
    similar to the way we used date of birth to help identify unique individuals.
    However, this incorporation date information is not typically included in organization
    datasets; it is much more common for a company to be identified by its registered
    address.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 或许我们可以使用组织成立日期作为区分因子，类似于我们使用出生日期帮助识别唯一个体的方式。然而，公司的这一成立日期信息通常不包括在组织数据集中；更常见的是公司通过其注册地址来进行识别。
- en: Therefore, in this chapter, we will use company address information, along with
    company names, to identify likely matches. We will then consider how to evaluate
    a new record for matches against the original data sources without having to undertake
    a time-consuming retrain of the model.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本章中，我们将使用公司地址信息以及公司名称来识别可能的匹配项。然后，我们将考虑如何评估新记录与原始数据源的匹配情况，而无需进行耗时的模型重新训练。
- en: Sample Problem
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 样本问题
- en: In this chapter, we will resolve a list of company names that is published by
    the UK Maritime and Coastguard Agency (MCA) against basic organization details
    published in the Companies House register. This problem illustrates some of the
    challenges of identifying unique references to the same company, simply based
    on name and address data.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将解析由英国海事及海岸警卫局（MCA）发布的公司名称列表，与公司注册处发布的基本组织详情进行匹配。这个问题展示了仅基于名称和地址数据识别同一公司唯一引用的一些挑战。
- en: UK Companies House provides a free downloadable data snapshot containing basic
    company data of live companies on the register. This data complements the “person
    with significant control” data we used in [Chapter 5](ch05.html#chapter_5).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 英国公司注册处提供了一个免费可下载的数据快照，包含注册公司的基本公司数据。这些数据是我们在[第5章](ch05.html#chapter_5)中使用的“有重大控制权的人”数据的补充。
- en: The MCA publishes a list of recruitment and placement agencies approved under
    Regulation 1.4 of the Maritime Labour Convention (MLC) 2006.^([1](ch06.html#id470))
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: MCA发布了根据2006年《海事劳工公约》1.4条款批准的招聘和安置机构名单。^([1](ch06.html#id470))
- en: Data Acquisition
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据获取
- en: To acquire the datasets, we use the same approach we used in [Chapter 5](ch05.html#chapter_5).
    The MCA data, published as a single comma-separated values (CSV) file, is downloaded
    and ingested into a DataFrame. The Companies House snapshot data is downloaded
    as ZIP files, and the extracted JSON structure is then parsed into a DataFrame.
    Unwanted columns are then removed and the snapshot DataFrames are concatenated
    into a single composite DataFrame. Both raw datasets are then stored locally as
    CSV files for ease of reloading.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获取数据集，我们使用了与[第5章](ch05.html#chapter_5)相同的方法。MCA数据以单个逗号分隔值（CSV）文件的形式发布，下载并将其载入DataFrame。公司注册处快照数据以ZIP文件形式下载，解压后的JSON结构再解析为DataFrame。然后移除不需要的列，并将快照DataFrame串联成一个单一的复合DataFrame。两个原始数据集都以CSV文件的形式存储在本地，以便于重新加载。
- en: The code is available as *Chapter6.ipynb* in the [GitHub repository](https://github.com/mshearer0/HandsOnEntityResolution).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 代码可以在[GitHub存储库](https://github.com/mshearer0/HandsOnEntityResolution)中的*Chapter6.ipynb*文件中找到。
- en: Data Standardization
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据标准化
- en: To match the MCA company list to the Companies House organization dataset, we
    need to standardize the name and address data into the same format. We have seen
    how to cleanse names. Addresses, however, pose more of a challenge.  Even within
    reasonably consistent data from same source, we often see considerable variation
    in address format and content.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将MCA公司列表与公司注册处的组织数据集进行匹配，我们需要将名称和地址数据标准化为相同的格式。我们已经看到了如何清理名称。然而，地址则更具挑战性。即使在来自同一来源的合理一致数据中，我们经常看到地址格式和内容上有相当大的变化。
- en: For example, consider the first three records in the MCA list, as shown in [Table 6-1](#table-6-1).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑MCA列表中的前三条记录，如[表6-1](#table-6-1)所示。
- en: Table 6-1\. MCA sample addresses
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 表6-1. MCA样本地址
- en: '| Address attribute |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 地址属性 |'
- en: '| --- |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| --- |'
- en: '| 48 Charlotte Street, London, W1T 2NS |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 48 Charlotte Street, London, W1T 2NS |'
- en: '| 4th Floor, 105 George Street, Glasgow, G2 1PB |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 苏格兰格拉斯哥乔治街105号四楼，邮编 G2 1PB |'
- en: '| Unit 16, Beaverbank Business Park EH7 4HG |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 英国爱丁堡 Beaverbank 商业园区16号单元，邮编 EH7 4HG |'
- en: We can see the first address is made up of three comma-separated elements, the
    second record by four elements, and the third again by only two. In each case,
    the postcode is contained in the final element, but in the third record, it is
    grouped with part of the address itself. The building number is present in either
    the first element or the second element.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个地址由三个逗号分隔的元素组成，第二个记录由四个元素组成，第三个再次由两个元素组成。在每种情况下，邮政编码都包含在最后一个元素中，但在第三个记录中，它与地址本身的一部分分组在一起。建筑编号出现在第一个元素或第二个元素中。
- en: 'To view a histogram distribution of the number of address elements in the MCA
    list we can use:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看 MCA 名单中地址元素数量的直方图分布，可以使用：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This gives us the distribution chart presented in [Figure 6-1](#fig-6-1).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这使我们得到了[图表 6-1](#fig-6-1)中呈现的分布图。
- en: '![](assets/hoer_0601.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/hoer_0601.png)'
- en: Figure 6-1\. MCA address element count
  id: totrans-25
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图表 6-1\. MCA 地址元素计数
- en: This lack of consistency makes parsing addresses consistently into the same
    discrete elements for matching quite difficult. Therefore, for this example, we
    will use just exact postcode matches to compare addresses. More advanced parsing
    and matching techniques, such as natural language processing and geocoding, are
    discussed in [Chapter 11](ch11.html#chapter_11).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这种一致性不足使得将地址一致地解析为用于匹配的相同离散元素变得非常困难。因此，对于本例，我们将仅使用精确的邮政编码匹配来比较地址。更高级的解析和匹配技术，如自然语言处理和地理编码，在[第11章](ch11.html#chapter_11)中进行了讨论。
- en: Companies House Data
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 公司注册数据
- en: In many jurisdictions companies are required to declare the nature of their
    incorporation at the end of their name, for example, adding “Limited” or “Ltd”
    if they are constituted as a limited liability company. These variable suffixes
    may not always be present, so standardization is challenging.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多司法管辖区，公司需要在其名称末尾声明其组织形式，例如，如果它们作为有限责任公司成立，则添加“有限公司”或“Ltd”。这些可变后缀可能并不总是存在，因此标准化具有挑战性。
- en: To ensure a mismatch doesn’t unduly negatively interfere with the matching process,
    it is advisable to separate these lower-value terms from the name record as part
    of the standardization process. This will remove the chance of missing a potential
    match due to inconsistencies in suffix format, at the risk of declaring a false
    positive match between, say, a public limited company and a limited company with
    similar names.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保不匹配不会对匹配过程造成不必要的负面干扰，建议在标准化过程中将这些低价值术语与名称记录分开。这将消除由于后缀格式不一致而错过潜在匹配的机会，但也有可能会声明出现错误匹配，例如，公众有限公司与名称相似的有限公司之间。
- en: In addition to removing incorporation suffixes, it can also be helpful to remove
    common terms that don’t differentiate between companies and whose inclusion would
    otherwise exaggerate the similarity of our name matches.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 除了删除公司名称中不区分公司并且其包含会使我们的名称匹配过于相似的常见术语外，还可以删除并入后缀。
- en: Although we choose to remove these terms, or *stopwords*, from the company name
    attribute, they do still contain some value that may be useful when the decision
    to declare a match is in the balance.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们选择从公司名称属性中删除这些术语或*停用词*，它们仍包含一些在决定声明匹配时可能有用的价值。
- en: 'The following helper function strips these stopwords, returning the cleansed
    company name and the removed terms:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下辅助函数剥离这些停用词，返回清洗后的公司名称和已移除的术语：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can apply this function to the Company House data using:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下方法将此函数应用于公司注册数据：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `*` operator unzips the series of tuples (containing `CompanyName` and `Stopwords`)
    returned by the helper function. We assemble these value lists into a two-row
    DataFrame that we then transpose to columns so that we can add as new attributes.
    This approach is efficient as we only have to create a new DataFrame once as opposed
    to per row.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`*` 运算符解压了由辅助函数返回的元组序列（包含 `CompanyName` 和 `Stopwords`）。我们将这些值列表组装成一个两行的 DataFrame，然后将其转置为列，以便我们可以作为新属性添加。这种方法效率高，因为我们只需创建一个新的
    DataFrame，而不是每行都创建一个。'
- en: 'Because we already have a discrete column containing a discrete postcode, all
    that remains is to standardize the column name:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们已经有一个包含离散邮政编码的离散列，所以只需标准化列名即可：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Maritime and Coastguard Agency Data
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 海事与海岸警卫局数据
- en: 'To standardize the MCA company name, we first convert the name to uppercase:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要使 MCA 公司名称标准化，我们首先将名称转换为大写：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We also remove the stopwords and then we need to extract the postcode from the
    address field. A convenient way to do this is to use a *regular expression*.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还会去除停用词，然后需要从地址字段提取邮政编码。一个方便的方法是使用*正则表达式*。
- en: Regular Expression
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正则表达式
- en: A regular expression is a sequence of characters that specifies a match pattern
    in text. Usually such patterns are used by string-searching algorithms for “find”
    or “find and replace” operations on strings, or for input validation.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 正则表达式是一系列字符的序列，用于指定文本中的匹配模式。通常这些模式由字符串搜索算法用于字符串的“查找”或“查找和替换”操作，或者用于输入验证。
- en: 'A UK postcode is made up of two parts. The first part compromises one or two
    capital letters followed by a single digit and then either a single digit or a
    single capital letter. After a space, the second part begins with a single digit
    followed by two capital letters (excluding CIKMOV). This can be encoded as:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 英国的邮政编码由两部分组成。第一部分由一个或两个大写字母，后跟一个数字，然后是一个数字或一个大写字母。在一个空格后，第二部分以一个数字开头，后跟两个大写字母（不包括CIKMOV）。这可以编码为：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We can construct a helper function to find, extract, and return a matching
    pattern of characters or return a null value if not found:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以构建一个辅助函数来查找、提取和返回字符匹配模式，如果找不到则返回空值：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'As before, we can apply this function to every row:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 就像以前一样，我们可以将此函数应用于每一行：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Record Blocking and Attribute Comparison
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 记录阻塞和属性比较
- en: As in the previous chapter, we will use the Splink tool to perform the matching
    process. Let’s consider the settings that will allow us to do this.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 与前一章一样，我们将使用Splink工具执行匹配过程。让我们考虑一下可以执行此操作的设置。
- en: 'First, we can expect organizations with matching postcodes to be reasonable
    match candidates and similarly those with exactly equivalent names. We can use
    these conditions as our blocking rules, only calculating predictions when either
    condition is fulfilled:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们可以期望具有相同邮政编码的组织成为合理的匹配候选者，同样地，那些名字完全相同的组织也是如此。我们可以将这些条件作为我们的阻塞规则，只有在满足其中任一条件时才计算预测：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Splink provides a handy visualization for us to see the volume of record pairs
    that will pass the blocking rules. As expected, there are a significant number
    of postcode matches and very few exact name matches, as shown in [Figure 6-2](#fig-6-2).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Splink为我们提供了一个便捷的可视化工具，用来查看将通过阻塞规则的记录对的数量。正如预期的那样，有大量的邮政编码匹配，但几乎没有完全相同的名称匹配，如图6-2所示。
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](assets/hoer_0602.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/hoer_0602.png)'
- en: Figure 6-2\. Blocking rule comparisons
  id: totrans-58
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6-2\. 阻塞规则比较
- en: 'Within that subset of potential combinations, we evaluate the similarity of
    the selected pair of `CompanyName` entries in four segments:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在潜在组合的子集中，我们评估所选的`CompanyName`条目在四个段落中的相似性：
- en: Exact match
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 精确匹配
- en: Jaro-Winkler score of >0.9
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jaro-Winkler得分大于0.9
- en: Jaro-Winkler score between 0.8 and 0.9
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jaro-Winkler得分在0.8到0.9之间
- en: Jaro-Winkler score of <0.8
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jaro-Winkler得分小于0.8
- en: We also evaluate the stopwords in a similar manner.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还以类似的方式评估停用词。
- en: 'The corresponding Splink settings are:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对应的Splink设置为：
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Of course, those pairs that pass the blocking rule as exact name equivalents
    will be evaluated as exact matches, whereas those with only a postcode match will
    be evaluated as candidates for both exact and approximate name matching.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，那些通过阻塞规则作为完全相同名称等同物的配对将被评估为完全匹配，而仅具有邮政编码匹配的配对则将被评估为精确和近似名称匹配的候选者。
- en: 'Before we can apply the blocking rules and calculate our match probabilities,
    we need to train our model. The Cartesian product of the two DataFrames is >500
    million pairwise combinations, so we train the *u* value using random sampling
    over 50 million target rows to have a reasonable sample:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用阻塞规则并计算我们的匹配概率之前，我们需要训练我们的模型。两个数据框的笛卡尔积有超过5亿个成对组合，因此我们使用随机抽样在5000万个目标行上训练*u*值，以获得合理的样本：
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'As in [Chapter 5](ch05.html#chapter_5), we use the expectation-maximization
    algorithm to estimate the *m* values. Here we block on only matching postcodes
    because the tiny relative proportion of name matches has no beneficial effect
    on the parameter estimation:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如同[第5章](ch05.html#chapter_5)中所述，我们使用期望最大化算法来估计*m*值。在这里，我们仅根据匹配的邮政编码进行阻塞，因为姓名匹配的微小相对比例对参数估计没有好处：
- en: '[PRE12]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We can display the proportion of records in each segment that the trained model
    observes using:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下方法显示训练模型在每个段落中观察到的记录比例：
- en: '[PRE13]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The record comparison chart, seen in [Figure 6-3](#fig-6-3), shows a strong
    differentiation on `CompanyName` similarity between matching and nonmatching records.
    For the stopwords, there is only a marked differentiation between the approximately
    matching records at similarity threshold equal to or greater than 0.9, but not
    exact.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 记录比较图表，见[图 6-3](#fig-6-3)，显示了匹配和不匹配记录之间`CompanyName`相似性的明显差异。对于停用词，仅在相似度阈值大于或等于0.9时，近似匹配记录之间才有显著差异，而不是精确匹配。
- en: '![](assets/hoer_0603.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/hoer_0603.png)'
- en: Figure 6-3\. Proportion of record comparisons by match status
  id: totrans-76
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-3\. 记录比较比例
- en: 'As expected, the parameters chart (as shown in [Figure 6-4](#fig-6-4)) shows
    that exact and approximate `CompanyName` matches have strong match weights:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期的那样，参数图（如[图 6-4](#fig-6-4)所示）显示精确和近似的`CompanyName`匹配具有较强的匹配权重：
- en: '[PRE14]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](assets/hoer_0604.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/hoer_0604.png)'
- en: Figure 6-4\. Model parameters
  id: totrans-80
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-4\. 模型参数
- en: Match Classification
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 匹配分类
- en: 'In this example, we expect to find a match for each of the MCA organizations
    in the Companies House dataset, so we set a low match threshold of 0.05 to make
    sure we surface as many potential matches as possible:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们期望在公司注册局的数据集中为每个MCA组织找到一个匹配项，因此我们将匹配阈值设置得很低，为0.05，以确保尽可能多地显示潜在的匹配项：
- en: '[PRE15]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To identify the MCA entities where we failed to find at least one match, we
    can merge our predictions with the MCA dataset by `unique_id` and then select
    those results with a null match weight:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要识别我们未能找到至少一个匹配项的MCA实体，我们可以通过`unique_id`将我们的预测与MCA数据集合并，然后选择那些匹配权重为空的结果：
- en: '[PRE16]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: As shown in [Figure 6-5](#fig-6-5), this produces 11 records for which we didn’t
    find any match.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 正如[图 6-5](#fig-6-5)所示，这产生了11条我们找不到任何匹配项的记录。
- en: '![](assets/hoer_0605.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/hoer_0605.png)'
- en: Figure 6-5\. Unmatched records
  id: totrans-88
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-5\. 未匹配的记录
- en: At the time of writing, a manual search of Companies House reveals that 7 of
    these 11 entities have candidate matches, but these candidates do not have exact
    matching postcodes or names and so were filtered out by our blocking rules. Two
    of these entities have candidates with exact match postcodes but significantly
    different names and so fall below our approximate similarity threshold. Finally,
    the two remaining candidates  have been dissolved and so are not included in our
    live companies snapshot.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写时，通过对公司注册局的手动搜索，我们发现这11个实体中有7个有候选匹配项，但这些候选项没有精确匹配的邮政编码或名称，因此被我们的阻塞规则过滤掉了。其中两个实体有具有精确匹配邮政编码但名称显著不同的候选项，因此低于我们的近似相似度阈值。最后，剩下的两个候选项已经解散，因此不包括在我们的实时公司快照中。
- en: 'A convenient way to examine the predicted matches and the contribution that
    an attribute makes to the overall match score is to draw a match weight waterfall
    chart:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 检查预测匹配项及其对总体匹配得分的贡献的方便方法是绘制匹配权重瀑布图：
- en: '[PRE17]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In the example given in [Figure 6-6](#fig-6-6), we can see that the prior match
    weight, a measure of the likelihood that two records chosen at random refer to
    the same entity, is –13.29\. From this starting point, we add a match weight of
    20.92 when we find an exact match of the `CompanyName` “Bespoke Crew.” This represents
    the degree to which it’s more likely to find exact equivalence on `CompanyName`
    within the `match` population than within the `notmatch` population.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 6-6](#fig-6-6)的示例中，我们可以看到先前的匹配权重，这是两个随机选择的记录指向同一实体的可能性的度量，为-13.29。从这个起点开始，当我们发现`CompanyName`“Bespoke
    Crew”的精确匹配时，我们添加了20.92的匹配权重。这代表了在`match`人口中找到`CompanyName`精确等价性的概率大于在`notmatch`人口中找到的概率。
- en: '![](assets/hoer_0606.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/hoer_0606.png)'
- en: Figure 6-6\. Match weights waterfall chart
  id: totrans-94
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-6\. 匹配权重瀑布图
- en: However, we also need to subtract 0.45 due to the exact match on “Limited,”
    as an exact equivalent on stopwords is more likely to occur on `notmatch`es as
    opposed to `match`es. This gives us a final match weight of 7.19, which translates
    into a probability of almost 1.0.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于“Limited”上的精确匹配更有可能发生在`notmatch`中而不是`match`中，因此我们还需要减去0.45。这使我们得到了一个最终匹配权重为7.19，这相当于几乎是1.0的概率。
- en: Measuring Performance
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测量表现
- en: After standardizing, the MCA data has 96 organizations.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 标准化后，MCA数据有96个组织。
- en: At a 0.05 match threshold, our results are shown in [Table 6-2](#table-6-2).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在0.05的匹配阈值下，我们的结果显示在[表 6-2](#table-6-2)中。
- en: Table 6-2\. MCA match results—low threshold
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6-2\. MCA匹配结果—低阈值
- en: '| **Match threshold = 0.05** | **Number of matches** | **Unique entities matched**
    |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| **匹配阈值 = 0.05** | **匹配数量** | **匹配的唯一实体** |'
- en: '| --- | --- | --- |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Name and postcode match | 47 | 45 |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| 名称和邮政编码匹配 | 47 | 45 |'
- en: '| Name match only | 37 | 31 |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| 仅名称匹配 | 37 | 31 |'
- en: '| Postcode match only | 116 | 27 |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| 仅邮政编码匹配 | 116 | 27 |'
- en: '| **Total matches** | **200** | **85 (deduped)** |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| **总匹配数** | **200** | **85 (去重后)** |'
- en: '| Unmatched |   | 11 (of which 2 dissolved) |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| 未匹配 |   | 11 (其中2个解散) |'
- en: '| **Total organizations** |   | **96** |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| **总组织数** |   | **96** |'
- en: 'If we assume the deduped unique matches are true positive matches, 9 of the
    11 unmatched entities are false negatives, and the 2 dissolved entities are true
    negatives, then we can evaluate our performance as:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们假设去重后的唯一匹配是真正的正匹配，那么11个未匹配的实体中有9个是假阴性，2个解散的实体是真阴性，那么我们可以评估我们的表现为：
- en: <math alttext="upper T r u e p o s i t i v e m a t c h e s left-parenthesis
    upper T upper P right-parenthesis equals 85"><mrow><mi>T</mi> <mi>r</mi> <mi>u</mi>
    <mi>e</mi> <mi>p</mi> <mi>o</mi> <mi>s</mi> <mi>i</mi> <mi>t</mi> <mi>i</mi> <mi>v</mi>
    <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi> <mi>h</mi> <mi>e</mi> <mi>s</mi>
    <mo>(</mo> <mi>T</mi> <mi>P</mi> <mo>)</mo> <mo>=</mo> <mn>85</mn></mrow></math>
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper T r u e p o s i t i v e m a t c h e s left-parenthesis
    upper T upper P right-parenthesis equals 85"><mrow><mi>T</mi> <mi>r</mi> <mi>u</mi>
    <mi>e</mi> <mi>p</mi> <mi>o</mi> <mi>s</mi> <mi>i</mi> <mi>t</mi> <mi>i</mi> <mi>v</mi>
    <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi> <mi>h</mi> <mi>e</mi> <mi>s</mi>
    <mo>(</mo> <mi>T</mi> <mi>P</mi> <mo>)</mo> <mo>=</mo> <mn>85</mn></mrow></math>
- en: <math alttext="upper F a l s e p o s i t i v e m a t c h e s left-parenthesis
    upper F upper P right-parenthesis equals 200 minus 85 equals 115"><mrow><mi>F</mi>
    <mi>a</mi> <mi>l</mi> <mi>s</mi> <mi>e</mi> <mi>p</mi> <mi>o</mi> <mi>s</mi> <mi>i</mi>
    <mi>t</mi> <mi>i</mi> <mi>v</mi> <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi>
    <mi>h</mi> <mi>e</mi> <mi>s</mi> <mo>(</mo> <mi>F</mi> <mi>P</mi> <mo>)</mo> <mo>=</mo>
    <mn>200</mn> <mo>-</mo> <mn>85</mn> <mo>=</mo> <mn>115</mn></mrow></math>
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper F a l s e p o s i t i v e m a t c h e s left-parenthesis
    upper F upper P right-parenthesis equals 200 minus 85 equals 115"><mrow><mi>F</mi>
    <mi>a</mi> <mi>l</mi> <mi>s</mi> <mi>e</mi> <mi>p</mi> <mi>o</mi> <mi>s</mi> <mi>i</mi>
    <mi>t</mi> <mi>i</mi> <mi>v</mi> <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi>
    <mi>h</mi> <mi>e</mi> <mi>s</mi> <mo>(</mo> <mi>F</mi> <mi>P</mi> <mo>)</mo> <mo>=</mo>
    <mn>200</mn> <mo>-</mo> <mn>85</mn> <mo>=</mo> <mn>115</mn></mrow></math>
- en: <math alttext="upper F a l s e n e g a t i v e m a t c h e s left-parenthesis
    upper F upper N right-parenthesis equals 11 minus 2 equals 9"><mrow><mi>F</mi>
    <mi>a</mi> <mi>l</mi> <mi>s</mi> <mi>e</mi> <mi>n</mi> <mi>e</mi> <mi>g</mi> <mi>a</mi>
    <mi>t</mi> <mi>i</mi> <mi>v</mi> <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi>
    <mi>h</mi> <mi>e</mi> <mi>s</mi> <mo>(</mo> <mi>F</mi> <mi>N</mi> <mo>)</mo> <mo>=</mo>
    <mn>11</mn> <mo>-</mo> <mn>2</mn> <mo>=</mo> <mn>9</mn></mrow></math>
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper F a l s e n e g a t i v e m a t c h e s left-parenthesis
    upper F upper N right-parenthesis equals 11 minus 2 equals 9"><mrow><mi>F</mi>
    <mi>a</mi> <mi>l</mi> <mi>s</mi> <mi>e</mi> <mi>n</mi> <mi>e</mi> <mi>g</mi> <mi>a</mi>
    <mi>t</mi> <mi>i</mi> <mi>v</mi> <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi>
    <mi>h</mi> <mi>e</mi> <mi>s</mi> <mo>(</mo> <mi>F</mi> <mi>N</mi> <mo>)</mo> <mo>=</mo>
    <mn>11</mn> <mo>-</mo> <mn>2</mn> <mo>=</mo> <mn>9</mn></mrow></math>
- en: <math alttext="upper T r u e n e g a t i v e s equals 2"><mrow><mi>T</mi> <mi>r</mi>
    <mi>u</mi> <mi>e</mi> <mi>n</mi> <mi>e</mi> <mi>g</mi> <mi>a</mi> <mi>t</mi> <mi>i</mi>
    <mi>v</mi> <mi>e</mi> <mi>s</mi> <mo>=</mo> <mn>2</mn></mrow></math>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper T r u e n e g a t i v e s equals 2"><mrow><mi>T</mi> <mi>r</mi>
    <mi>u</mi> <mi>e</mi> <mi>n</mi> <mi>e</mi> <mi>g</mi> <mi>a</mi> <mi>t</mi> <mi>i</mi>
    <mi>v</mi> <mi>e</mi> <mi>s</mi> <mo>=</mo> <mn>2</mn></mrow></math>
- en: <math alttext="upper P r e c i s i o n equals StartFraction upper T upper P
    Over left-parenthesis upper T upper P plus upper F upper P right-parenthesis EndFraction
    equals StartFraction 85 Over left-parenthesis 85 plus 115 right-parenthesis EndFraction
    almost-equals 42 percent-sign"><mrow><mi>P</mi> <mi>r</mi> <mi>e</mi> <mi>c</mi>
    <mi>i</mi> <mi>s</mi> <mi>i</mi> <mi>o</mi> <mi>n</mi> <mo>=</mo> <mfrac><mrow><mi>T</mi><mi>P</mi></mrow>
    <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mn>85</mn> <mrow><mo>(</mo><mn>85</mn><mo>+</mo><mn>115</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>42</mn> <mo>%</mo></mrow></math>
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper P r e c i s i o n equals StartFraction upper T upper P
    Over left-parenthesis upper T upper P plus upper F upper P right-parenthesis EndFraction
    equals StartFraction 85 Over left-parenthesis 85 plus 115 right-parenthesis EndFraction
    almost-equals 42 percent-sign"><mrow><mi>P</mi> <mi>r</mi> <mi>e</mi> <mi>c</mi>
    <mi>i</mi> <mi>s</mi> <mi>i</mi> <mi>o</mi> <mi>n</mi> <mo>=</mo> <mfrac><mrow><mi>T</mi><mi>P</mi></mrow>
    <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mn>85</mn> <mrow><mo>(</mo><mn>85</mn><mo>+</mo><mn>115</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>42</mn> <mo>%</mo></mrow></math>
- en: <math alttext="upper R e c a l l equals StartFraction upper T upper P Over left-parenthesis
    upper T upper P plus upper F upper N right-parenthesis EndFraction equals StartFraction
    85 Over left-parenthesis 85 plus 9 right-parenthesis EndFraction almost-equals
    90 percent-sign"><mrow><mi>R</mi> <mi>e</mi> <mi>c</mi> <mi>a</mi> <mi>l</mi>
    <mi>l</mi> <mo>=</mo> <mfrac><mrow><mi>T</mi><mi>P</mi></mrow> <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mn>85</mn> <mrow><mo>(</mo><mn>85</mn><mo>+</mo><mn>9</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>90</mn> <mo>%</mo></mrow></math>
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper R e c a l l equals StartFraction upper T upper P Over left-parenthesis
    upper T upper P plus upper F upper N right-parenthesis EndFraction equals StartFraction
    85 Over left-parenthesis 85 plus 9 right-parenthesis EndFraction almost-equals
    90 percent-sign"><mrow><mi>R</mi> <mi>e</mi> <mi>c</mi> <mi>a</mi> <mi>l</mi>
    <mi>l</mi> <mo>=</mo> <mfrac><mrow><mi>T</mi><mi>P</mi></mrow> <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mn>85</mn> <mrow><mo>(</mo><mn>85</mn><mo>+</mo><mn>9</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>90</mn> <mo>%</mo></mrow></math>
- en: <math alttext="upper A c c u r a c y equals StartFraction left-parenthesis upper
    T upper P plus upper T upper N right-parenthesis Over left-parenthesis upper T
    upper P plus upper T upper N plus upper F upper P plus upper F upper N right-parenthesis
    EndFraction equals StartFraction left-parenthesis 85 plus 2 right-parenthesis
    Over left-parenthesis 85 plus 2 plus 115 plus 9 right-parenthesis EndFraction
    almost-equals 41 percent-sign"><mrow><mi>A</mi> <mi>c</mi> <mi>c</mi> <mi>u</mi>
    <mi>r</mi> <mi>a</mi> <mi>c</mi> <mi>y</mi> <mo>=</mo> <mfrac><mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>)</mo></mrow>
    <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mrow><mo>(</mo><mn>85</mn><mo>+</mo><mn>2</mn><mo>)</mo></mrow>
    <mrow><mo>(</mo><mn>85</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>115</mn><mo>+</mo><mn>9</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>41</mn> <mo>%</mo></mrow></math>
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper A c c u r a c y equals StartFraction left-parenthesis upper
    T upper P plus upper T upper N right-parenthesis Over left-parenthesis upper T
    upper P plus upper T upper N plus upper F upper P plus upper F upper N right-parenthesis
    EndFraction equals StartFraction left-parenthesis 85 plus 2 right-parenthesis
    Over left-parenthesis 85 plus 2 plus 115 plus 9 right-parenthesis EndFraction
    almost-equals 41 percent-sign"><mrow><mi>A</mi> <mi>c</mi> <mi>c</mi> <mi>u</mi>
    <mi>r</mi> <mi>a</mi> <mi>c</mi> <mi>y</mi> <mo>=</mo> <mfrac><mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>)</mo></mrow>
    <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mrow><mo>(</mo><mn>85</mn><mo>+</mo><mn>2</mn><mo>)</mo></mrow>
    <mrow><mo>(</mo><mn>85</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>115</mn><mo>+</mo><mn>9</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>41</mn> <mo>%</mo></mrow></math>
- en: Recalculating our predictions at a threshold of 0.9 removes postcode-only matches,
    giving us the results shown in [Table 6-3](#table-6-3).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在阈值为0.9时重新计算我们的预测将删除仅有邮政编码匹配的结果，给出了[表格 6-3](#table-6-3)中显示的结果。
- en: Table 6-3\. MCA match result—high threshold
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 表格 6-3\. MCA匹配结果—高阈值
- en: '| **Match threshold = 0.9** | **Number of matches** | **Unique entities matched**
    |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| **匹配阈值 = 0.9** | **匹配数量** | **唯一匹配的实体** |'
- en: '| --- | --- | --- |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Name and postcode match | 47 | 45 |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| 名称和邮政编码匹配 | 47 | 45 |'
- en: '| Name match only | 37 | 31 |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| 仅名称匹配 | 37 | 31 |'
- en: '| Postcode match only | 3 | 1 |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| 仅邮政编码匹配 | 3 | 1 |'
- en: '| **Total matches** | **87** | **73 (deduped)** |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| **总匹配数** | **87** | **73 (去重后)** |'
- en: '| Unmatched |   | 23 (of which 2 dissolved) |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| 未匹配 |   | 23 (其中2个解散) |'
- en: '| **Total organizations** |   | **96** |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| **总组织数** |   | **96** |'
- en: <math alttext="upper T r u e p o s i t i v e m a t c h e s left-parenthesis
    upper T upper P right-parenthesis equals 73"><mrow><mi>T</mi> <mi>r</mi> <mi>u</mi>
    <mi>e</mi> <mi>p</mi> <mi>o</mi> <mi>s</mi> <mi>i</mi> <mi>t</mi> <mi>i</mi> <mi>v</mi>
    <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi> <mi>h</mi> <mi>e</mi> <mi>s</mi>
    <mo>(</mo> <mi>T</mi> <mi>P</mi> <mo>)</mo> <mo>=</mo> <mn>73</mn></mrow></math>
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper T r u e p o s i t i v e m a t c h e s left-parenthesis
    upper T upper P right-parenthesis equals 73"><mrow><mi>T</mi> <mi>r</mi> <mi>u</mi>
    <mi>e</mi> <mi>p</mi> <mi>o</mi> <mi>s</mi> <mi>i</mi> <mi>t</mi> <mi>i</mi> <mi>v</mi>
    <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi> <mi>h</mi> <mi>e</mi> <mi>s</mi>
    <mo>(</mo> <mi>T</mi> <mi>P</mi> <mo>)</mo> <mo>=</mo> <mn>73</mn></mrow></math>
- en: <math alttext="upper F a l s e p o s i t i v e m a t c h e s left-parenthesis
    upper F upper P right-parenthesis equals 87 minus 73 equals 14"><mrow><mi>F</mi>
    <mi>a</mi> <mi>l</mi> <mi>s</mi> <mi>e</mi> <mi>p</mi> <mi>o</mi> <mi>s</mi> <mi>i</mi>
    <mi>t</mi> <mi>i</mi> <mi>v</mi> <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi>
    <mi>h</mi> <mi>e</mi> <mi>s</mi> <mo>(</mo> <mi>F</mi> <mi>P</mi> <mo>)</mo> <mo>=</mo>
    <mn>87</mn> <mo>-</mo> <mn>73</mn> <mo>=</mo> <mn>14</mn></mrow></math>
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper F a l s e p o s i t i v e m a t c h e s left-parenthesis
    upper F upper P right-parenthesis equals 87 minus 73 equals 14"><mrow><mi>F</mi>
    <mi>a</mi> <mi>l</mi> <mi>s</mi> <mi>e</mi> <mi>p</mi> <mi>o</mi> <mi>s</mi> <mi>i</mi>
    <mi>t</mi> <mi>i</mi> <mi>v</mi> <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi>
    <mi>h</mi> <mi>e</mi> <mi>s</mi> <mo>(</mo> <mi>F</mi> <mi>P</mi> <mo>)</mo> <mo>=</mo>
    <mn>87</mn> <mo>-</mo> <mn>73</mn> <mo>=</mo> <mn>14</mn></mrow></math>
- en: <math alttext="upper F a l s e n e g a t i v e m a t c h e s left-parenthesis
    upper F upper N right-parenthesis equals 23 minus 2 equals 21"><mrow><mi>F</mi>
    <mi>a</mi> <mi>l</mi> <mi>s</mi> <mi>e</mi> <mi>n</mi> <mi>e</mi> <mi>g</mi> <mi>a</mi>
    <mi>t</mi> <mi>i</mi> <mi>v</mi> <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi>
    <mi>h</mi> <mi>e</mi> <mi>s</mi> <mo>(</mo> <mi>F</mi> <mi>N</mi> <mo>)</mo> <mo>=</mo>
    <mn>23</mn> <mo>-</mo> <mn>2</mn> <mo>=</mo> <mn>21</mn></mrow></math>
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper F a l s e n e g a t i v e m a t c h e s left-parenthesis
    upper F upper N right-parenthesis equals 23 minus 2 equals 21"><mrow><mi>F</mi>
    <mi>a</mi> <mi>l</mi> <mi>s</mi> <mi>e</mi> <mi>n</mi> <mi>e</mi> <mi>g</mi> <mi>a</mi>
    <mi>t</mi> <mi>i</mi> <mi>v</mi> <mi>e</mi> <mi>m</mi> <mi>a</mi> <mi>t</mi> <mi>c</mi>
    <mi>h</mi> <mi>e</mi> <mi>s</mi> <mo>(</mo> <mi>F</mi> <mi>N</mi> <mo>)</mo> <mo>=</mo>
    <mn>23</mn> <mo>-</mo> <mn>2</mn> <mo>=</mo> <mn>21</mn></mrow></math>
- en: <math alttext="upper T r u e n e g a t i v e s equals 2"><mrow><mi>T</mi> <mi>r</mi>
    <mi>u</mi> <mi>e</mi> <mi>n</mi> <mi>e</mi> <mi>g</mi> <mi>a</mi> <mi>t</mi> <mi>i</mi>
    <mi>v</mi> <mi>e</mi> <mi>s</mi> <mo>=</mo> <mn>2</mn></mrow></math>
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper T r u e n e g a t i v e s equals 2"><mrow><mi>T</mi> <mi>r</mi>
    <mi>u</mi> <mi>e</mi> <mi>n</mi> <mi>e</mi> <mi>g</mi> <mi>a</mi> <mi>t</mi> <mi>i</mi>
    <mi>v</mi> <mi>e</mi> <mi>s</mi> <mo>=</mo> <mn>2</mn></mrow></math>
- en: <math alttext="upper P r e c i s i o n equals StartFraction upper T upper P
    Over left-parenthesis upper T upper P plus upper F upper P right-parenthesis EndFraction
    equals StartFraction 73 Over left-parenthesis 73 plus 14 right-parenthesis EndFraction
    almost-equals 84 percent-sign"><mrow><mi>P</mi> <mi>r</mi> <mi>e</mi> <mi>c</mi>
    <mi>i</mi> <mi>s</mi> <mi>i</mi> <mi>o</mi> <mi>n</mi> <mo>=</mo> <mfrac><mrow><mi>T</mi><mi>P</mi></mrow>
    <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mn>73</mn> <mrow><mo>(</mo><mn>73</mn><mo>+</mo><mn>14</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>84</mn> <mo>%</mo></mrow></math>
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper P r e c i s i o n equals StartFraction upper T upper P
    Over left-parenthesis upper T upper P plus upper F upper P right-parenthesis EndFraction
    equals StartFraction 73 Over left-parenthesis 73 plus 14 right-parenthesis EndFraction
    almost-equals 84 percent-sign"><mrow><mi>P</mi> <mi>r</mi> <mi>e</mi> <mi>c</mi>
    <mi>i</mi> <mi>s</mi> <mi>i</mi> <mi>o</mi> <mi>n</mi> <mo>=</mo> <mfrac><mrow><mi>T</mi><mi>P</mi></mrow>
    <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mn>73</mn> <mrow><mo>(</mo><mn>73</mn><mo>+</mo><mn>14</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>84</mn> <mo>%</mo></mrow></math>
- en: <math alttext="upper R e c a l l equals StartFraction upper T upper P Over left-parenthesis
    upper T upper P plus upper F upper N right-parenthesis EndFraction equals StartFraction
    73 Over left-parenthesis 73 plus 21 right-parenthesis EndFraction almost-equals
    78 percent-sign"><mrow><mi>R</mi> <mi>e</mi> <mi>c</mi> <mi>a</mi> <mi>l</mi>
    <mi>l</mi> <mo>=</mo> <mfrac><mrow><mi>T</mi><mi>P</mi></mrow> <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mn>73</mn> <mrow><mo>(</mo><mn>73</mn><mo>+</mo><mn>21</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>78</mn> <mo>%</mo></mrow></math>
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper R e c a l l equals StartFraction upper T upper P Over left-parenthesis
    upper T upper P plus upper F upper N right-parenthesis EndFraction equals StartFraction
    73 Over left-parenthesis 73 plus 21 right-parenthesis EndFraction almost-equals
    78 percent-sign"><mrow><mi>R</mi> <mi>e</mi> <mi>c</mi> <mi>a</mi> <mi>l</mi>
    <mi>l</mi> <mo>=</mo> <mfrac><mrow><mi>T</mi><mi>P</mi></mrow> <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mn>73</mn> <mrow><mo>(</mo><mn>73</mn><mo>+</mo><mn>21</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>78</mn> <mo>%</mo></mrow></math>
- en: <math alttext="upper A c c u r a c y equals StartFraction left-parenthesis upper
    T upper P plus upper T upper N right-parenthesis Over left-parenthesis upper T
    upper P plus upper T upper N plus upper F upper P plus upper F upper N right-parenthesis
    EndFraction equals StartFraction left-parenthesis 73 plus 2 right-parenthesis
    Over left-parenthesis 73 plus 2 plus 14 plus 21 right-parenthesis EndFraction
    almost-equals 69 percent-sign"><mrow><mi>A</mi> <mi>c</mi> <mi>c</mi> <mi>u</mi>
    <mi>r</mi> <mi>a</mi> <mi>c</mi> <mi>y</mi> <mo>=</mo> <mfrac><mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>)</mo></mrow>
    <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mrow><mo>(</mo><mn>73</mn><mo>+</mo><mn>2</mn><mo>)</mo></mrow>
    <mrow><mo>(</mo><mn>73</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>14</mn><mo>+</mo><mn>21</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>69</mn> <mo>%</mo></mrow></math>
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper A c c u r a c y equals StartFraction left-parenthesis upper
    T upper P plus upper T upper N right-parenthesis Over left-parenthesis upper T
    upper P plus upper T upper N plus upper F upper P plus upper F upper N right-parenthesis
    EndFraction equals StartFraction left-parenthesis 73 plus 2 right-parenthesis
    Over left-parenthesis 73 plus 2 plus 14 plus 21 right-parenthesis EndFraction
    almost-equals 69 percent-sign"><mrow><mi>A</mi> <mi>c</mi> <mi>c</mi> <mi>u</mi>
    <mi>r</mi> <mi>a</mi> <mi>c</mi> <mi>y</mi> <mo>=</mo> <mfrac><mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>)</mo></mrow>
    <mrow><mo>(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo>)</mo></mrow></mfrac>
    <mo>=</mo> <mfrac><mrow><mo>(</mo><mn>73</mn><mo>+</mo><mn>2</mn><mo>)</mo></mrow>
    <mrow><mo>(</mo><mn>73</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>14</mn><mo>+</mo><mn>21</mn><mo>)</mo></mrow></mfrac>
    <mo>≈</mo> <mn>69</mn> <mo>%</mo></mrow></math>
- en: Therefore, as expected, we see that a higher match threshold increases our precision
    from 42% to 86%, but at the cost of missing nearly twice as many potential matches
    (up from 9 to 21 false negatives).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，正如预期的那样，我们看到更高的匹配阈值将我们的精确度从42%提高到86%，但代价是几乎错过了两倍的潜在匹配（从9个假阴性增加到21个）。
- en: Tuning an entity resolution solution requires a degree of trial and error, adjusting
    blocking rules, similarity thresholds, and overall match thresholds to find the
    optimum balance. This will depend heavily on the characteristics of your data
    and your risk appetite for failing to identify potential matches.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 调整实体解析解决方案需要一定的试错，调整阻塞规则、相似度阈值和整体匹配阈值，以找到最佳平衡点。这将大大依赖于您数据的特性以及对于未能识别潜在匹配的风险偏好。
- en: Matching New Entities
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 匹配新实体
- en: 'As we have seen, model training is not a quick process. What if we have a new
    entity, say a new entry onto the MCA list, that we’d like to resolve against the
    Companies House data? Splink provides the option to match new records against
    previously matched datasets without retraining. We can also use this feature to
    find all potential matches, without the constraint of blocking rules or match
    thresholds, to help us understand why those candidates weren’t identified. For
    example, if we take the last entity in our unmatched population:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，模型训练并不是一个快速的过程。如果我们有一个新实体，比如说MCA列表中的新条目，我们想要与公司注册数据进行解决，Splink提供了一种选择，可以对新记录与先前匹配的数据集进行匹配而无需重新训练。我们还可以利用此功能找出所有潜在匹配，而不受阻塞规则或匹配阈值的约束，以帮助我们理解为什么这些候选者没有被识别。例如，如果我们考虑未匹配人群中的最后一个实体：
- en: '[PRE18]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This results in a full list of candidate matches, the first four of which, with
    the highest match probabilities, are listed in [Figure 6-7](#fig-6-7).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了一个候选匹配的完整列表，其中前四个具有最高的匹配概率，列在[图 6-7](#fig-6-7)中。
- en: '![](assets/hoer_0607.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/hoer_0607.png)'
- en: Figure 6-7\. New potential matches
  id: totrans-140
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-7\. 新潜在匹配
- en: The first entry in the table is the original record in the MCA dataset. The
    next three records, as candidates matches from the Companies House data, don’t
    have exact postcodes or name matches and so would have been excluded by our blocking
    rules. However, the second record does have a somewhat similar name and a close
    match on postcode and so looks like a good potential candidate.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 表格中的第一条目是MCA数据集中的原始记录。接下来的三条记录作为公司注册数据的候选匹配，由于没有精确的邮政编码或名称匹配，因此会被我们的阻塞规则排除。然而，第二条记录的名称有些相似，并且邮政编码也很接近，看起来是一个很好的潜在候选者。
- en: Summary
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we used a combination of name and address matching to resolve
    company entities across two datasets. We separated stopwords from our organization
    names and employed a regular expression to extract postcodes for comparison.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们使用名称和地址匹配的组合解决了两个数据集中公司实体的问题。我们从组织名称中去除了停用词，并采用正则表达式提取邮政编码进行比较。
- en: We used exact equivalence blocking rules and then calculated our match probabilities
    based on name similarity above a threshold. We evaluated our results by examining
    the trade-off between setting a low match threshold that produced a relatively
    large number of false positives and using a high threshold with the consequence
    that we missed some potentially promising match candidates.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们采用了精确等价阻塞规则，然后根据姓名相似性在一定阈值以上计算我们的匹配概率。通过评估结果，我们发现在设置较低的匹配阈值以产生相对较多的误报之间进行权衡，以及使用较高阈值导致可能错过一些潜在有希望的匹配候选者之间存在着折衷。
- en: This chapter has also illustrated that, even employing blocking techniques,
    entity resolution at scale can become a time-consuming and compute-intensive task.
    In subsequent chapters we will examine how to leverage cloud computing infrastructure
    to distribute our matching workload across a number of machines in parallel.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 本章还表明，即使采用阻塞技术，大规模实体解析也可能成为一项耗时且计算密集的任务。在接下来的章节中，我们将探讨如何利用云计算基础设施，将我们的匹配工作负载分布到多台机器上并行处理。
- en: ^([1](ch06.html#id470-marker)) MLC 2006 regulates the operation of seafarer
    recruitment and placement services to inform seafarers seeking employment on ships
    flying flags other than those of their own countries.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch06.html#id470-marker)) 根据2006年《海员劳工公约》（MLC 2006），规定航运公司需向寻求在非本国旗船只上工作的海员提供相关招聘和安置服务信息。
