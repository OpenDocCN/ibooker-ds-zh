["```py\nIn [1]: import matplotlib.pyplot as plt\n        plt.style.use('classic')\n        import numpy as np\n\n        %matplotlib inline\n```", "```py\nIn [2]: x = np.random.randn(1000)\n        plt.hist(x);\n```", "```py\nIn [3]: # use a gray background\n        fig = plt.figure(facecolor='white')\n        ax = plt.axes(facecolor='#E6E6E6')\n        ax.set_axisbelow(True)\n\n        # draw solid white gridlines\n        plt.grid(color='w', linestyle='solid')\n\n        # hide axis spines\n        for spine in ax.spines.values():\n            spine.set_visible(False)\n\n        # hide top and right ticks\n        ax.xaxis.tick_bottom()\n        ax.yaxis.tick_left()\n\n        # lighten ticks and labels\n        ax.tick_params(colors='gray', direction='out')\n        for tick in ax.get_xticklabels():\n            tick.set_color('gray')\n        for tick in ax.get_yticklabels():\n            tick.set_color('gray')\n\n        # control face and edge color of histogram\n        ax.hist(x, edgecolor='#E6E6E6', color='#EE6666');\n```", "```py\nIn [4]: from matplotlib import cycler\n        colors = cycler('color',\n                        ['#EE6666', '#3388BB', '#9988DD',\n                         '#EECC55', '#88BB44', '#FFBBBB'])\n        plt.rc('figure', facecolor='white')\n        plt.rc('axes', facecolor='#E6E6E6', edgecolor='none',\n               axisbelow=True, grid=True, prop_cycle=colors)\n        plt.rc('grid', color='w', linestyle='solid')\n        plt.rc('xtick', direction='out', color='gray')\n        plt.rc('ytick', direction='out', color='gray')\n        plt.rc('patch', edgecolor='#E6E6E6')\n        plt.rc('lines', linewidth=2)\n```", "```py\nIn [5]: plt.hist(x);\n```", "```py\nIn [6]: for i in range(4):\n            plt.plot(np.random.rand(10))\n```", "```py\nIn [7]: plt.style.available[:5]\nOut[7]: ['Solarize_Light2', '_classic_test_patch', 'bmh', 'classic',\n        >'dark_background']\n```", "```py\nplt.style.use('*`stylename`*')\n\n```", "```py\nwith plt.style.context('*`stylename`*'):\n    make_a_plot()\n\n```", "```py\nIn [8]: def hist_and_lines():\n            np.random.seed(0)\n            fig, ax = plt.subplots(1, 2, figsize=(11, 4))\n            ax[0].hist(np.random.randn(1000))\n            for i in range(3):\n                ax[1].plot(np.random.rand(10))\n            ax[1].legend(['a', 'b', 'c'], loc='lower left')\n```", "```py\nIn [9]: with plt.style.context('default'):\n            hist_and_lines()\n```", "```py\nIn [10]: with plt.style.context('fivethirtyeight'):\n             hist_and_lines()\n```", "```py\nIn [11]: with plt.style.context('ggplot'):\n             hist_and_lines()\n```", "```py\nIn [12]: with plt.style.context('bmh'):\n             hist_and_lines()\n```", "```py\nIn [13]: with plt.style.context('dark_background'):\n             hist_and_lines()\n```", "```py\nIn [14]: with plt.style.context('grayscale'):\n             hist_and_lines()\n```", "```py\nIn [15]: with plt.style.context('seaborn-whitegrid'):\n             hist_and_lines()\n```"]