["```py\nIn [1]: import pandas as pd\n        import numpy as np\n```", "```py\nIn [2]: rng = np.random.default_rng(42)\n        ser = pd.Series(rng.integers(0, 10, 4))\n        ser\nOut[2]: 0    0\n        1    7\n        2    6\n        3    4\n        dtype: int64\n```", "```py\nIn [3]: df = pd.DataFrame(rng.integers(0, 10, (3, 4)),\n                          columns=['A', 'B', 'C', 'D'])\n        df\nOut[3]:    A  B  C  D\n        0  4  8  0  6\n        1  2  0  5  9\n        2  7  7  7  7\n```", "```py\nIn [4]: np.exp(ser)\nOut[4]: 0       1.000000\n        1    1096.633158\n        2     403.428793\n        3      54.598150\n        dtype: float64\n```", "```py\nIn [5]: np.sin(df * np.pi / 4)\nOut[5]:               A             B         C         D\n        0  1.224647e-16 -2.449294e-16  0.000000 -1.000000\n        1  1.000000e+00  0.000000e+00 -0.707107  0.707107\n        2 -7.071068e-01 -7.071068e-01 -0.707107 -0.707107\n```", "```py\nIn [6]: area = pd.Series({'Alaska': 1723337, 'Texas': 695662,\n                          'California': 423967}, name='area')\n        population = pd.Series({'California': 39538223, 'Texas': 29145505,\n                                'Florida': 21538187}, name='population')\n```", "```py\nIn [7]: population / area\nOut[7]: Alaska              NaN\n        California    93.257784\n        Florida             NaN\n        Texas         41.896072\n        dtype: float64\n```", "```py\nIn [8]: area.index.union(population.index)\nOut[8]: Index(['Alaska', 'California', 'Florida', 'Texas'], dtype='object')\n```", "```py\nIn [9]: A = pd.Series([2, 4, 6], index=[0, 1, 2])\n        B = pd.Series([1, 3, 5], index=[1, 2, 3])\n        A + B\nOut[9]: 0    NaN\n        1    5.0\n        2    9.0\n        3    NaN\n        dtype: float64\n```", "```py\nIn [10]: A.add(B, fill_value=0)\nOut[10]: 0    2.0\n         1    5.0\n         2    9.0\n         3    5.0\n         dtype: float64\n```", "```py\nIn [11]: A = pd.DataFrame(rng.integers(0, 20, (2, 2)),\n                          columns=['a', 'b'])\n         A\nOut[11]:     a  b\n         0  10  2\n         1  16  9\n```", "```py\nIn [12]: B = pd.DataFrame(rng.integers(0, 10, (3, 3)),\n                          columns=['b', 'a', 'c'])\n         B\nOut[12]:    b  a  c\n         0  5  3  1\n         1  9  7  6\n         2  4  8  5\n```", "```py\nIn [13]: A + B\nOut[12]:       a     b   c\n         0  13.0   7.0 NaN\n         1  23.0  18.0 NaN\n         2   NaN   NaN NaN\n```", "```py\nIn [14]: A.add(B, fill_value=A.values.mean())\nOut[14]:        a      b      c\n         0  13.00   7.00  10.25\n         1  23.00  18.00  15.25\n         2  17.25  13.25  14.25\n```", "```py\nIn [15]: A = rng.integers(10, size=(3, 4))\n         A\nOut[15]: array([[4, 4, 2, 0],\n                [5, 8, 0, 8],\n                [8, 2, 6, 1]])\n```", "```py\nIn [16]: A - A[0]\nOut[16]: array([[ 0,  0,  0,  0],\n                [ 1,  4, -2,  8],\n                [ 4, -2,  4,  1]])\n```", "```py\nIn [17]: df = pd.DataFrame(A, columns=['Q', 'R', 'S', 'T'])\n         df - df.iloc[0]\nOut[17]:    Q  R  S  T\n         0  0  0  0  0\n         1  1  4 -2  8\n         2  4 -2  4  1\n```", "```py\nIn [18]: df.subtract(df['R'], axis=0)\nOut[18]:    Q  R  S  T\n         0  0  0 -2 -4\n         1 -3  0 -8  0\n         2  6  0  4 -1\n```", "```py\nIn [19]: halfrow = df.iloc[0, ::2]\n         halfrow\nOut[19]: Q    4\n         S    2\n         Name: 0, dtype: int64\n```", "```py\nIn [20]: df - halfrow\nOut[20]:      Q   R    S   T\n         0  0.0 NaN  0.0 NaN\n         1  1.0 NaN -2.0 NaN\n         2  4.0 NaN  4.0 NaN\n```"]