["```py\nPython 3.9.2 (v3.9.2:1a79785e3e, Feb 19 2021, 09:06:10)\nType 'copyright', 'credits' or 'license' for more information\nIPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help.\n\nIn [1]:\n```", "```py\n$ jupyter lab\n\n```", "```py\n$ jupyter lab\n[ServerApp] Serving notebooks from local directory: /Users/jakevdp/ \\\nPythonDataScienceHandbook\n[ServerApp] Jupyter Server 1.4.1 is running at:\n[ServerApp] http://localhost:8888/lab?token=dd852649\n[ServerApp] Use Control-C to stop this server and shut down all kernels\n(twice to skip confirmation).\n\n```", "```py\nIn [1]: help(len)\nHelp on built-in function len in module builtins:\n\nlen(obj, /)\n    Return the number of items in a container.\n```", "```py\nIn [2]: len?\nSignature: len(obj, /)\nDocstring: Return the number of items in a container.\nType:      builtin_function_or_method\n```", "```py\nIn [3]: L = [1, 2, 3]\nIn [4]: L.insert?\nSignature: L.insert(index, object, /)\nDocstring: Insert object before index.\nType:      builtin_function_or_method\n```", "```py\nIn [5]: L?\nType:        list\nString form: [1, 2, 3]\nLength:      3\nDocstring:\nBuilt-in mutable sequence.\n\nIf no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.\n```", "```py\nIn [6]: def square(a):\n  ....:     \"\"\"Return the square of a.\"\"\"\n  ....:     return a ** 2\n  ....:\n```", "```py\nIn [7]: square?\nSignature: square(a)\nDocstring: Return the square of a.\nFile:      <ipython-input-6>\nType:      function\n```", "```py\nIn [8]: square??\nSignature: square(a)\nSource:\ndef square(a):\n    \"\"\"Return the square of a.\"\"\"\n    return a ** 2\nFile:      <ipython-input-6>\nType:      function\n```", "```py\nIn [9]: len??\nSignature: len(obj, /)\nDocstring: Return the number of items in a container.\nType:      builtin_function_or_method\n```", "```py\nIn [10]: L.<TAB>\n            append() count    insert   reverse\n            clear    extend   pop      sort\n            copy     index    remove\n```", "```py\nIn [10]: L.c<TAB>\n             clear() count()\n             copy()\n\nIn [10]: L.co<TAB>\n              copy()  count()\n```", "```py\nIn [10]: L.cou<TAB>\n```", "```py\nIn [10]: L._<TAB>\n           __add__             __delattr__     __eq__\n           __class__           __delitem__     __format__()\n           __class_getitem__() __dir__()       __ge__            >\n           __contains__        __doc__         __getattribute__\n```", "```py\nIn [10]: from itertools import co<TAB>\n         combinations()                  compress()\n         combinations_with_replacement() count()\n```", "```py\nIn [10]: import <TAB>\n            abc                 anyio\n            activate_this       appdirs\n            aifc                appnope        >\n            antigravity         argon2\n\nIn [10]: import h<TAB>\n            hashlib html\n            heapq   http\n            hmac\n```", "```py\nIn [10]: *Warning?\nBytesWarning                  RuntimeWarning\nDeprecationWarning            SyntaxWarning\nFutureWarning                 UnicodeWarning\nImportWarning                 UserWarning\nPendingDeprecationWarning     Warning\nResourceWarning\n```", "```py\nIn [11]: str.*find*?\nstr.find\nstr.rfind\n```", "```py\nIn [1]:\n(reverse-i-search)`':\n```", "```py\nIn [1]:\n(reverse-i-search)`sqa': square??\n```", "```py\nIn [1]:\n(reverse-i-search)`sqa': def square(a):\n    \"\"\"Return the square of a\"\"\"\n    return a ** 2\n```", "```py\nIn [1]: def square(a):\n    \"\"\"Return the square of a\"\"\"\n    return a ** 2\n\nIn [2]: square(2)\nOut[2]: 4\n```"]