["```py\n`from` `pathlib` `import` `Path`\n`import` `os`\n`import` `chardet`\n\n`co2_file_path` `=` `Path``(``'``data``'``)` `/` `'``co2_mm_mlo.txt``'`\n\n`[``os``.``path``.``getsize``(``co2_file_path``)``,` \n `chardet``.``detect``(``co2_file_path``.``read_bytes``(``)``)``[``'``encoding``'``]``]`\n\n```", "```py\n[51131, 'ascii']\n\n```", "```py\n`lines` `=` `co2_file_path``.``read_text``(``)``.``split``(``'``\\n``'``)`\n`len``(``lines``)`\n\n```", "```py\n811\n\n```", "```py\n`lines``[``:``6``]`\n\n```", "```py\n['# --------------------------------------------------------------------',\n '# USE OF NOAA ESRL DATA',\n '# ',\n '# These data are made freely available to the public and the',\n '# scientific community in the belief that their wide dissemination',\n '# will lead to greater understanding and new scientific insights.']\n\n```", "```py\n`lines``[``69``:``75``]`\n\n```", "```py\n['#',\n '#            decimal     average   interpolated    trend    #days',\n '#             date                             (season corr)',\n '1958   3    1958.208      315.71      315.71      314.62     -1',\n '1958   4    1958.292      317.45      317.45      315.29     -1',\n '1958   5    1958.375      317.50      317.50      314.71     -1']\n\n```", "```py\n`co2` `=` `pd``.``read_csv``(``'``data/co2_mm_mlo.txt``'``,` \n                  `header``=``None``,` `skiprows``=``72``,` `sep``=``'``\\``s+``'``,`\n                  `names``=``[``'``Yr``'``,` `'``Mo``'``,` `'``DecDate``'``,` `'``Avg``'``,` `'``Int``'``,` `'``Trend``'``,` `'``days``'``]``)`\n`co2``.``head``(``3``)`\n\n```", "```py\n\tpx.line(co2, x='DecDate', y='Avg', width=350, height=250,\n\t\t\tlabels={'DecDate':'Date', 'Avg':'Average monthly CO₂'})\n\n```", "```py\n`co2``.``describe``(``)``[``3``:``]`\n\n```", "```py\n`co2``.``shape`\n\n```", "```py\n(738, 7)\n\n```", "```py\n`co2``[``\"``Mo``\"``]``.``value_counts``(``)``.``reindex``(``range``(``1``,``13``)``)``.``tolist``(``)`\n\n```", "```py\n[61, 61, 62, 62, 62, 62, 62, 62, 61, 61, 61, 61]\n\n```", "```py\n`px``.``histogram``(``co2``,` `x``=``'``days``'``,` `width``=``350``,` `height``=``250``,`\n            `labels``=``{``'``days``'``:``'``Days operational in a month``'``}``)`\n\n```", "```py\n`px``.``scatter``(``co2``,` `x``=``'``Yr``'``,` `y``=``'``days``'``,` `width``=``350``,` `height``=``250``,`\n           `labels``=``{``'``Yr``'``:``'``Year``'``,` `'``days``'``:``'``Days operational in month``'` `}``)`\n\n```", "```py\n`px``.``histogram``(``co2``,` `x``=``'``Avg``'``,` `width``=``350``,` `height``=``250``,`\n             `labels``=``{``'``Avg``'``:``'``Average monthly CO₂``'``}``)`\n\n```", "```py\n`co2``[``co2``[``\"``Avg``\"``]` `<` `0``]`\n\n```", "```py\n`bus``[``'``postal_code``'``]``.``value_counts``(``)``.``tail``(``10``)`\n\n```", "```py\n92672        1\n64110        1\n94120        1\n            ..\n94621        1\n941033148    1\n941          1\nName: postal_code, Length: 10, dtype: int64\n\n```", "```py\ndisplay_df(pd.crosstab(dawn['age'], dawn['type']), rows=12)\n\n```", "```py\n`pd``.``value_counts``(``insp``[``'``type``'``]``)`\n\n```", "```py\nroutine      14221\ncomplaint        1\nName: type, dtype: int64\n\n```", "```py\n`bus``[``bus``[``'``postal_code``'``]` `==` `\"``Ca``\"``]`\n\n```", "```py\n1 row × 9 columns\n```", "```py\n`insp``.``head``(``4``)`\n\n```", "```py\n`insp``[``'``date``'``]``.``dtype`\n\n```", "```py\ndtype('int64')\n\n```", "```py\n`date_format` `=` `'``%Y``%m``%d``'`\n\n`insp_dates` `=` `pd``.``to_datetime``(``insp``[``'``date``'``]``,` `format``=``date_format``)`\n`insp_dates``[``:``3``]`\n\n```", "```py\n0   2016-05-13\n1   2017-12-11\n2   2017-11-01\nName: date, dtype: datetime64[ns]\n\n```", "```py\n`insp_dates``.``dt``.``year``[``:``3``]`\n\n```", "```py\n0    2016\n1    2017\n2    2017\nName: date, dtype: int32\n\n```", "```py\n`insp` `=` `insp``.``assign``(``timestamp``=``insp_dates``,`\n                   `dow``=``insp_dates``.``dt``.``dayofweek``)`\n`insp``.``head``(``3``)`\n\n```", "```py\n`insp``[``'``dow``'``]``.``value_counts``(``)``.``reset_index``(``)`\n\n```", "```py\n`date_format` `=` `'``%Y``%m``%d``'`\n\n`def` `parse_dates_and_years``(``df``,` `column``=``'``date``'``)``:`\n    `dates` `=` `pd``.``to_datetime``(``df``[``column``]``,` `format``=``date_format``)`\n    `years` `=` `dates``.``dt``.``year`\n    `return` `df``.``assign``(``timestamp``=``dates``,` `year``=``years``)`\n\n```", "```py\n`insp` `=` `(``pd``.``read_csv``(``\"``data/inspections.csv``\"``)`\n        `.``pipe``(``parse_dates_and_years``)``)`\n\n```", "```py\n`def` `extract_day_of_week``(``df``,` `col``=``'``timestamp``'``)``:`\n    `return` `df``.``assign``(``dow``=``df``[``col``]``.``dt``.``day_of_week``)`\n\n`insp` `=` `(``pd``.``read_csv``(``\"``data/inspections.csv``\"``)`\n        `.``pipe``(``parse_dates_and_years``)`\n        `.``pipe``(``extract_day_of_week``)``)`\n`insp`\n\n```", "```py\n14222 rows × 7 columns\n```", "```py\n`viol` `=` `(``pd``.``read_csv``(``\"``data/violations.csv``\"``)`\n        `.``pipe``(``parse_dates_and_years``)``)` \n`viol``.``head``(``2``)`\n\n```", "```py\n`co2_pivot` `=` `pd``.``pivot_table``(`\n    `co2``[``10``:``34``]``,`\n    `index``=``'``Yr``'``,`   `# Column to turn into new index`\n    `columns``=``'``Mo``'``,`  `# Column to turn into new columns`\n    `values``=``'``Avg``'``)` `# Column to aggregate` \n\n`co2_wide` `=` `co2_pivot``.``reset_index``(``)`\n\n`display_df``(``co2_wide``,` `cols``=``10``)`\n\n```", "```py\n2 rows × 13 columns\n```", "```py\n`co2_long` `=` `co2_wide``.``melt``(``id_vars``=``[``'``Yr``'``]``,`\n                         `var_name``=``'``month``'``,`\n                         `value_name``=``'``average``'``)`\n\n`display_df``(``co2_long``,` `rows``=``4``)`\n\n```", "```py\n24 rows × 3 columns\n```", "```py\n`pd``.``value_counts``(``insp``[``'``year``'``]``)`\n\n```", "```py\nyear\n2016    5443\n2017    5166\n2015    3305\n2018     308\nName: count, dtype: int64\n\n```", "```py\n`def` `subset_2016``(``df``)``:`\n    `return` `df``.``query``(``'``year == 2016``'``)`\n\n`vio2016` `=` `viol``.``pipe``(``subset_2016``)`\n`ins2016` `=` `insp``.``pipe``(``subset_2016``)`\n\n```", "```py\n`ins2016``.``head``(``5``)`\n\n```", "```py\n`vio2016``.``head``(``5``)`\n\n```", "```py\n`num_vios` `=` `(``vio2016`\n            `.``groupby``(``[``'``business_id``'``,` `'``timestamp``'``]``)`\n            `.``size``(``)`\n            `.``reset_index``(``)`\n            `.``rename``(``columns``=``{``0``:` `'``num_vio``'``}``)``)``;`\n`num_vios``.``head``(``3``)`\n\n```", "```py\n`def` `left_join_vios``(``ins``)``:`\n    `return` `ins``.``merge``(``num_vios``,` `on``=``[``'``business_id``'``,` `'``timestamp``'``]``,` `how``=``'``left``'``)`\n\n`ins_and_num_vios` `=` `ins2016``.``pipe``(``left_join_vios``)`\n`ins_and_num_vios`\n\n```", "```py\n5443 rows × 7 columns\n```", "```py\n`ins_and_num_vios``[``'``num_vio``'``]``.``isnull``(``)``.``sum``(``)`\n\n```", "```py\n833\n\n```", "```py\n`def` `zero_vios_for_perfect_scores``(``df``)``:`\n    `df` `=` `df``.``copy``(``)`\n    `df``.``loc``[``df``[``'``score``'``]` `==` `100``,` `'``num_vio``'``]` `=` `0`\n    `return` `df`\n\n`ins_and_num_vios` `=` `(``ins2016``.``pipe``(``left_join_vios``)`\n                    `.``pipe``(``zero_vios_for_perfect_scores``)``)`\n\n```", "```py\n`ins_and_num_vios``[``'``num_vio``'``]``.``isnull``(``)``.``sum``(``)`\n\n```", "```py\n65\n\n```", "```py\ndisplay_df(vio2016['description'].value_counts().head(15).to_frame(), rows=15)\n\n```", "```py\n`def` `make_vio_categories``(``vio``)``:`\n    `def` `has``(``term``)``:`\n        `return` `vio``[``'``description``'``]``.``str``.``contains``(``term``)`\n\n    `return` `vio``[``[``'``business_id``'``,` `'``timestamp``'``]``]``.``assign``(`\n        `high_risk`        `=` `has``(``r``\"``high risk``\"``)``,`\n        `clean`            `=` `has``(``r``\"``clean|sanit``\"``)``,`\n        `food_surface`     `=` `(``has``(``r``\"``surface``\"``)` `&` `has``(``r``\"``\\``Wfood``\"``)``)``,`\n        `vermin`           `=` `has``(``r``\"``vermin``\"``)``,`\n        `storage`          `=` `has``(``r``\"``thaw|cool|therm|storage``\"``)``,`\n        `permit`           `=` `has``(``r``\"``certif|permit``\"``)``,`\n        `non_food_surface` `=` `has``(``r``\"``wall|ceiling|floor|surface``\"``)``,`\n        `human`            `=` `has``(``r``\"``hand|glove|hair|nail``\"``)``,`\n    `)`\n\n```", "```py\n`vio_ctg` `=` `vio2016``.``pipe``(``make_vio_categories``)`\n`vio_ctg`\n\n```", "```py\n15624 rows × 10 columns\n```", "```py\n`vio_counts` `=` `vio_ctg``.``groupby``(``[``'``business_id``'``,` `'``timestamp``'``]``)``.``sum``(``)``.``reset_index``(``)`\n`vio_counts`\n\n```", "```py\n4806 rows × 10 columns\n```", "```py\n`feature_names` `=` `[``'``high_risk``'``,` `'``clean``'``,` `'``food_surface``'``,` `'``vermin``'``,`\n                 `'``storage``'``,` `'``permit``'``,` `'``non_food_surface``'``,` `'``human``'``]`\n`def` `left_join_features``(``ins``)``:`\n    `return` `(``ins``[``[``'``business_id``'``,` `'``timestamp``'``,` `'``score``'``]``]`\n            `.``merge``(``vio_counts``,` `on``=``[``'``business_id``'``,` `'``timestamp``'``]``,` `how``=``'``left``'``)``)`\n\n`def` `zero_features_for_perfect_scores``(``ins``)``:`\n    `ins` `=` `ins``.``copy``(``)`\n    `ins``.``loc``[``ins``[``'``score``'``]` `==` `100``,` `feature_names``]` `=` `0`\n    `return` `ins`\n\n```", "```py\n`ins_and_vios` `=` `(``ins2016``.``pipe``(``left_join_features``)`\n                `.``pipe``(``zero_features_for_perfect_scores``)``)`\n`ins_and_vios``.``head``(``3``)`\n\n```", "```py\n3 rows × 11 columns\n```"]