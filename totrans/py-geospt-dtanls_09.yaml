- en: Chapter 9\. Exploring the Geospatial Data Abstraction Library (GDAL)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章 探索地理空间数据抽象库（GDAL）
- en: No discussion of open source platforms and libraries would be complete without
    an introduction to the [Geospatial Data Abstraction Library (GDAL)](https://gdal.org),
    a resource for efficiently processing raster and vector geospatial data. Working
    with both raster and vector data requires a collection of tools, and GDAL operates
    under the hood of many of the programs you’ve used in this book, including ArcGIS,
    QGIS, and Google Earth. When relying on the programmatic ease of a graphical user
    interface, it is often easy to forget the complexity of combining diverse data
    types and formats in order to work efficiently with a unified data model. This
    is why GDAL is an important tool. It simplifies working with geospatial data across
    a wide range of formats and spatial reference systems.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论开源平台和库，如果没有介绍[Geospatial Data Abstraction Library (GDAL)](https://gdal.org)，将是不完整的。这是一个有效处理栅格和矢量地理空间数据的资源。处理栅格和矢量数据需要一系列工具，而GDAL在本书中使用的许多程序的内部工作中起着关键作用，包括ArcGIS、QGIS和Google
    Earth。当依赖图形用户界面的程序化便利时，很容易忘记将多种数据类型和格式结合起来，以便以统一的数据模型高效地工作。这就是为什么GDAL是一个重要工具。它简化了在各种格式和空间参考系统中处理地理空间数据的工作。
- en: 'In this chapter, we’ll work with rasters and look at how to use the Spyder
    IDE to work with GDAL, including how to change your map projection with the `warp`
    function, work with raster bands, transform files, and create binary masks. We’ll
    also do a quick orientation to three other useful resources for datasets to explore
    with GDAL: EarthExplorer, Copernicus Open Access Hub, and Google Earth Engine
    (GEE).'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将处理栅格数据，并看看如何使用Spyder IDE处理GDAL，包括如何使用`warp`函数更改地图投影，处理栅格波段，转换文件并创建二进制掩模。我们还将快速介绍另外三个有用的数据集资源：EarthExplorer、Copernicus开放访问中心和Google
    Earth Engine（GEE）。
- en: First, I’ll show you how to use the command line interface, also known as the
    *terminal,* to quickly read, transform, and reproject your geospatial data. Why
    the command line? If you’re working with multiple files that require the same
    functions, you don’t have to go through them one by one manually, attempting to
    recall the necessary steps and processes while working in QGIS or ArcGIS. Using
    the command line, you can save a simple line of code as a script that you can
    use to process a wide variety of files and datasets. These scripts also run in
    QGIS, as you’ll see a little later on in the chapter. While working in the command
    line, I recommend viewing the results in QGIS, or you can refer to the Spyder
    IDE section once you are comfortable with working in the terminal.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我会向你展示如何使用命令行界面，也称为*终端*，快速读取、转换和重新投影你的地理空间数据。为什么要使用命令行？如果你正在处理多个需要相同功能的文件，你不必手动逐个操作，试图在QGIS或ArcGIS中回忆必要的步骤和过程。使用命令行，你可以将一行简单的代码保存为脚本，用来处理各种文件和数据集。正如本章稍后将看到的那样，这些脚本也可以在QGIS中运行。在命令行工作时，我建议在QGIS中查看结果，或者在你对终端工作感到舒适后，可以参考Spyder
    IDE部分。
- en: Second, I’ll show you how to work with GDAL using an IDE, a tool that consolidates
    programming and application development. Many beginner Python courses are taught
    within IDEs, so if you have some background in Python programming, you may be
    familiar with at least one IDE. There are many IDEs for Python, but in this chapter
    we’ll use one called Spyder. IDEs like Spyder simplify working with and writing
    code, thanks to features like real-time code introspection (which lets you see
    directly how the functions and classes are executed and what information they
    contain), in-line graphics displayed with matplotlib, and my favorite, the *variable
    explorer,* which provides built-in support for editing and visualizing the objects
    in your code. IDEs look the same regardless of the operating system you are using,
    which is handy when your end users are accessing different workflows and resources.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我会向你展示如何在IDE中使用GDAL，这是一种集成了编程和应用开发的工具。许多初学者Python课程都是在IDE中教授的，所以如果你有一些Python编程背景，可能对至少一个IDE比较熟悉。Python有很多IDE，但在本章中，我们将使用一个叫做Spyder的IDE。像Spyder这样的IDE通过实时代码内省（允许你直接查看函数和类是如何执行以及它们包含的信息）、与matplotlib一起显示的内联图形以及我最喜欢的*变量资源管理器*（提供了编辑和可视化代码中对象的内置支持）等功能，简化了与代码的工作和编写。不管你使用哪个操作系统，IDE看起来都是一样的，这在你的最终用户访问不同的工作流程和资源时非常方便。
- en: Setting Up GDAL
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置GDAL
- en: Historically, the library was referred to as *GDAL/OGR*, with GDAL being the
    raster side and OpenGIS Simple Features Reference Implementation (OGR) the vector
    side of the library. The combined libraries are now commonly referred to as *GDAL*.
    I know there are many data scientists working almost exclusively at the command
    line, so I want to quickly demonstrate how this is accomplished. For me, working
    at the command line made it easier to become familiar with the syntax of calling
    functions in GDAL. Its classes and functions are a little different than those
    you know from Python, although the syntax will be familiar when you engage with
    the Python API. GDAL maintains bindings for Python, but this will differ from
    how you have been working with Python libraries thus far. Even with Python bindings,
    you will need to know how to call GDAL functions and understand what they do.^([1](ch09.xhtml#ch01fn12))
    We’ll then get back to Python in the section on working with the IDE.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 从历史上看，这个库被称为*GDAL/OGR*，其中GDAL是栅格库的一部分，而OpenGIS简单要素参考实现（OGR）是库的矢量部分。现在，这些组合库通常被称为*GDAL*。我知道有许多数据科学家几乎完全在命令行上工作，所以我想快速演示一下如何实现这一点。对我来说，在命令行工作使我更容易熟悉调用GDAL函数的语法。它的类和函数与你从Python中了解到的有些不同，尽管在使用Python
    API时，语法会很熟悉。GDAL保持对Python的绑定，但这与你迄今为止使用Python库的方式有所不同。即使使用Python绑定，你也需要知道如何调用GDAL函数并理解它们的功能。^([1](ch09.xhtml#ch01fn12))
    在使用IDE工作的部分中，我们将回到Python。
- en: Installing Spyder
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Spyder
- en: The Spyder IDE is written entirely in Python. It is best known for being used
    by data scientists, data analysts, and data engineers. Its features include autocompletion
    and real-time analysis. Let’s install it first.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Spyder IDE完全由Python编写。它以被数据科学家、数据分析师和数据工程师使用而闻名。其功能包括自动补全和实时分析。让我们首先安装它。
- en: I recommend creating a new environment for the Spyder installation. Installing
    GDAL into an existing environment is also possible; you can enter `**conda env
    list**` to see what environments you already have. You will need to add NumPy
    and matplotlib as well.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议为Spyder安装创建一个新环境。也可以将GDAL安装到现有环境中；你可以输入`**conda env list**`查看已有的环境。你还需要添加NumPy和matplotlib。
- en: 'Install Spyder and GDAL in the same environment and directory, substituting
    your own filepath for mine:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在相同的环境和目录中安装Spyder和GDAL，用你自己的文件路径替换我的：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Once you’ve installed Spyder, you can launch it by writing `**spyder**` into
    the terminal.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完Spyder后，可以通过在终端中输入`**spyder**`来启动它。
- en: Installing GDAL
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装GDAL
- en: 'You’ll also install GDAL at the command line. Open the terminal and run the
    following command at the prompt:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你还将在命令行安装GDAL。打开终端并在提示符下运行以下命令：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To check if the installation was successful, run:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查安装是否成功，请运行：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You might have to set the path to your installation folder to access it from
    the terminal. The steps on how you can do this will follow. I also recommend reviewing
    the [GDAL documentation](https://oreil.ly/ye9fu).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 可能需要设置安装文件夹的路径以从终端访问它。接下来将介绍如何完成这些步骤。我还建议查阅[GDAL文档](https://oreil.ly/ye9fu)。
- en: Working with GDAL at the Command Line
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在命令行中使用GDAL
- en: 'Today, the average computer user works mostly in a GUI: a layer of graphics
    that makes it easier to visualize files and perform tasks. But the command line
    has its advantages, including faster processing. There’s no need to load a bunch
    of files, and if you want to repeat an analysis on different datasets, you can
    save small shell scripts to perform repeated actions.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，普通计算机用户主要在GUI中工作：这是一个图形层，使得可视化文件和执行任务变得更加容易。但命令行也有其优点，包括更快的处理速度。不需要加载大量文件，如果想在不同数据集上重复分析，可以保存小型shell脚本执行重复操作。
- en: 'Activate your preferred environment, conda activate `minimal_ds`, or the Spyder
    environment you just created for working with GDAL. I would like to work with
    files in my TIFFs folder so I have entered `cd` to make that my current directory.
    You can now see TIFFs added as my working directory:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 激活你首选的环境，conda activate `minimal_ds`，或者你刚创建的用于处理GDAL的Spyder环境。我想要在我的TIFF文件夹中操作文件，所以我已经输入`cd`来将其设置为当前目录。现在你可以看到TIFF文件被添加为我的工作目录：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To move between different directories, use `ls/` to dig deeper into your directory
    structure. For example, if you want to work with your Downloads folder (assuming
    it isn’t your current directory), use the following code to explore a folder within
    your Downloads directory:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要在不同目录之间移动，请使用`ls/`深入了解您的目录结构。例如，如果您想要处理Downloads文件夹（假设它不是您当前的目录），请使用以下代码来浏览Downloads目录中的文件夹：
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Spend a little time moving in and out of directories, as understanding the structure
    is the most important lesson for working in the terminal with the GDAL package.
    Again, you will need to understand the structure when accessing packages, libraries,
    and files in the Spyder IDE.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 花点时间在不同目录之间移动，因为理解结构是在终端中使用GDAL包进行工作时最重要的一课。再次强调，访问Spyder IDE中的包、库和文件时，您需要理解结构。
- en: 'If you are in the correct directory, you will see the directory name after
    the colon and right before your username. This will output a list of the files
    in this directory:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在正确的目录中，冒号后面和您的用户名之前将会看到目录名。这将输出该目录中的文件列表。
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: I have included a section on resources for creating your own files using [GEE](https://oreil.ly/6dRtp)
    for following along. [Copernicus Open Access Hub](https://oreil.ly/Z8FSL) and
    [EarthExplorer](https://oreil.ly/WvlrA) are also sources of raster data but are
    often rendered slowly due to the sizes of larger files.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经包括了一个关于使用[GEE](https://oreil.ly/6dRtp)创建您自己文件资源的部分，以便您可以跟进。[Copernicus公开访问中心](https://oreil.ly/Z8FSL)和[EarthExplorer](https://oreil.ly/WvlrA)也是获取栅格数据的来源，但由于较大文件的大小通常渲染速度较慢。
- en: Now that your installation is working, you are ready to learn a few commands
    to help you get started. Here is the [GDAL documentation](https://oreil.ly/ye9fu)
    to help you through any lingering problems with the downloading and installation.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的安装已经完成，您可以学习一些命令来帮助您入门。这里是[GDAL文档](https://oreil.ly/ye9fu)，可以帮助您解决下载和安装中的任何问题。
- en: Editing Your Data with GDAL
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用GDAL编辑您的数据
- en: 'The `gdalinfo` command line parameters demonstrate the information available
    to you about your raster dataset. You can see the parameters by using the command
    `gdalinfo` and supplying the name of a file within the active directory. Enter
    this code in the terminal:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`gdalinfo`命令行参数展示了关于您的栅格数据集的可用信息。您可以使用`gdalinfo`命令并提供活动目录中文件的名称来查看这些参数。在终端中输入以下代码：'
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In this example I’ve selected a saved file from a GEE data snippet. You can
    learn more about the command line parameters in the [documentation](https://oreil.ly/lu9Z0).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我从GEE数据片段中选择了一个保存的文件。您可以在[文档](https://oreil.ly/lu9Z0)中了解更多关于命令行参数的信息。
- en: 'Enter the following code, substituting the name of your *.tif* file in your
    directory (notice that parentheses are not needed):'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 输入以下代码，用您目录中*.tif*文件的名称替换（注意不需要括号）：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here is a snippet of the output:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是输出的一部分片段：
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You can see from the second line that the format of the saved file is GTiff/GeoTIFF.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从第二行看出保存文件的格式是GTiff/GeoTIFF。
- en: Tip
  id: totrans-39
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 小贴士
- en: To see a list of other formats, enter `gdal_translate --formats` in the command
    line. You can also see the size of the file, coordinate system, pixel size, and
    coordinates.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看其他格式的列表，请在命令行中输入`gdal_translate --formats`。您还可以查看文件大小、坐标系、像素大小和坐标。
- en: 'Here is a section of the output that shows information about the color bands:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是显示关于颜色波段信息的输出部分：
- en: '[PRE9]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Notice the color interpretation of the bands in the Sentinel satellite data.
    They are set as `Gray` for B2 and `ColorInterp=Undefined` for the remaining two
    bands. Because the metadata was not downloaded, you’ll need to help GDAL interpret
    these bands.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 注意Sentinel卫星数据波段的颜色解释。它们被设置为`Gray`用于B2波段，对于剩余的两个波段则是`ColorInterp=Undefined`。由于未下载元数据，您需要帮助GDAL解释这些波段。
- en: Since this is [Sentinel 2 data](https://oreil.ly/mO6iH), you know that the bands
    are blue (B2), green (B3), and red (B4). You’re going to edit the dataset right
    in place, using the command `gdal_edit.py`, followed by the options (such as `colorinterp`),
    and finally the value (here, the color value of the band). The last step is to
    provide the input file, *Sentinel2_RGB20200501.tif:*
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是[Sentinel 2数据](https://oreil.ly/mO6iH)，您知道波段是蓝色（B2）、绿色（B3）和红色（B4）。您将直接在原地编辑数据集，使用命令`gdal_edit.py`，接着是选项（如`colorinterp`），最后是值（这里是波段的颜色值）。最后一步是提供输入文件，*Sentinel2_RGB20200501.tif*：
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If your function requires an output file, you will also add *output.tif*. Only
    the input file is needed here.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的功能需要输出文件，则还需要添加*output.tif*。这里只需要输入文件。
- en: When you rerun `gdalinfo Sentinel2_RGB20200501.tif`, you will see that the color
    bands have been updated and now show as blue, green, and red.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当您重新运行 `gdalinfo Sentinel2_RGB20200501.tif` 时，您会看到颜色波段已更新，现在显示为蓝色、绿色和红色。
- en: The Warp Function
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变形功能
- en: You can also change the raster projection by learning to use the `gdal_warp`
    function. (Once you’re familiar with the `warp` function, you can use it to learn
    other common functions; to explore them, I recommend starting with the GDAL documentation
    for the [Python API](https://oreil.ly/AKsHX).)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过学习使用 `gdal_warp` 函数来更改栅格投影。（一旦熟悉 `warp` 函数，您可以用它来学习其他常见函数；要探索它们，建议从 [Python
    API](https://oreil.ly/AKsHX) 的 GDAL 文档开始。）
- en: 'In the following code, the argument `-t_srs` specifies the coordinate system
    you are targeting. Every geographic coordinate system, for example, is assigned
    a unique EPSG code. Where the `*xxxxx*` appears, enter the EPSG code you would
    like to change to. The input is the raster file, and the output is the renamed
    modified file, shown here as *output_rd.tif*:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码中，参数 `-t_srs` 指定您要定位的坐标系统。例如，每个地理坐标系统都分配了唯一的 EPSG 代码。`*xxxxx*` 的位置，请输入您希望更改为的
    EPSG 代码。输入是栅格文件，输出是重命名的修改文件，如 *output_rd.tif* 所示：
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Your output will demonstrate the new projection.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您的输出将展示新的投影。
- en: Capturing Input Raster Bands
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 捕获输入栅格波段
- en: 'Next, you’ll use the command line with GDAL to capture image statistics for
    the projected bands:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将使用 GDAL 命令行捕获投影波段的图像统计信息：
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'An excerpt from the output:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 输出摘录：
- en: '[PRE13]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Why would you capture input raster bands for statistical analyses? Mostly for
    classification: to identify clusters when looking at different locations. For
    example, band characteristics help define whether you are observing vegetation,
    a body of water, or perhaps a residential area.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么要捕获输入栅格波段进行统计分析？主要用于分类：在查看不同位置时识别群集。例如，波段特征有助于确定您是否观察到植被、水体或者住宅区。
- en: I mentioned earlier in the chapter that GDAL runs under the hood in QGIS as
    well as in a wide variety of other programs. [Figure 9-1](#gdalinfo_displayed_in_qgis)
    demonstrates the code running within the QGIS platform, uploading your *.tif*
    file(s), and selecting raster information.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我在本章前面提到，GDAL 在 QGIS 中以及多种其他程序中运行。 [图 9-1](#gdalinfo_displayed_in_qgis) 展示了代码在
    QGIS 平台上的运行，上传您的 *.tif* 文件，并选择栅格信息。
- en: '![gdalinfo displayed in QGIS](assets/pgda_0901.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![在 QGIS 中显示的 gdalinfo](assets/pgda_0901.png)'
- en: Figure 9-1\. `gdalinfo` displayed in QGIS
  id: totrans-61
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-1\. 在 QGIS 中显示 `gdalinfo`
- en: Now that you have a taste of working with GDAL in the command line, I encourage
    you to explore more of the tasks available. These skills are useful for working
    with and editing some of the core algorithms of geospatial data and applications.
    The ability to transform data across platforms and diverse formats is important,
    especially when you’re working with a wide variety of vector and raster data formats.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经体验了在命令行中使用 GDAL，我鼓励您进一步探索更多可用的任务。这些技能对处理和编辑地理空间数据和应用程序的核心算法非常有用。在处理各种矢量和栅格数据格式时，跨平台和多样化格式转换的能力尤为重要。
- en: Next, we will work with GDAL integrated with Python.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将与 Python 集成的 GDAL 进行操作。
- en: Working with the GDAL Library in Python
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 处理 GDAL 库
- en: When you launch Spyder (again, by typing `**spyder**` into the terminal), the
    Spyder console will open in a new browser window, as seen in [Figure 9-2](#the_spyder_console),
    except it will be blank.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当您启动 Spyder（再次在终端中键入 `**spyder**`）时，Spyder 控制台将在新的浏览器窗口中打开，如 [图 9-2](#the_spyder_console)
    所示，但是会是空白的。
- en: '![The Spyder console](assets/pgda_0902.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![Spyder 控制台](assets/pgda_0902.png)'
- en: Figure 9-2\. The Spyder console
  id: totrans-67
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-2\. Spyder 控制台
- en: Getting Oriented in Spyder
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Spyder 中的初始定位
- en: On the left side of [Figure 9-2](#the_spyder_console) is Spyder’s script editor
    where you create and open files. (You can arrange the panels and consoles however
    you like.) The two consoles on the right are where you can explore the variables
    you generate and locate files. The panel that shows the images is the plots pane.
    You can write simple code in the bottom console. For help, select the Help tab
    in the upper window.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 9-2](#the_spyder_console) 的左侧是 Spyder 的脚本编辑器，您可以在其中创建和打开文件。（您可以自由排列面板和控制台。）右侧的两个控制台是您可以探索生成的变量和定位文件的地方。显示图像的面板是绘图窗格。您可以在底部控制台中编写简单的代码。如需帮助，请选择上窗口的帮助选项卡。'
- en: You can run code in the Python console or from the Editor. You can also use
    the Python console to control Spyder’s debugger. The images and figures you generate
    will be visible in the plots plane or embedded in the console.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Python控制台或编辑器中运行代码。您还可以使用Python控制台控制Spyder的调试器。您生成的图像和图表将显示在绘图面板中或嵌入到控制台中。
- en: The variable explorer, shown in the top right pane in [Figure 9-2](#the_spyder_console),
    is one of my favorite reasons for working in an IDE. These are the objects generated
    when you run your code. Click on a variable to explore it in more detail.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 变量资源管理器显示在[图 9-2](#the_spyder_console)右上窗格中，是我在集成开发环境中喜欢工作的一个原因。这些对象是在运行代码时生成的。点击一个变量以深入探索其详细信息。
- en: Each console window also has a “hamburger” icon, or ☰, which expands into a
    menu ([Figure 9-3](#working_in_console_directories)) where you can find additional
    information about the pane.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 每个控制台窗口还有一个“汉堡包”图标，或☰，展开成一个菜单（[图 9-3](#working_in_console_directories)），您可以在其中找到有关窗格的其他信息。
- en: '![Working in console directories](assets/pgda_0903.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![在控制台目录中工作](assets/pgda_0903.png)'
- en: Figure 9-3\. Working in console directories
  id: totrans-74
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-3\. 在控制台目录中工作
- en: These options are customizable. I suggest heading over to the [Spyder website](https://oreil.ly/SGOgy)
    for details about the interface as well as to explore all of the available panes.
    If you would like to try Spyder before installing, there is also a [Binder option](https://mybinder.org)
    that runs in your browser.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这些选项是可定制的。我建议访问[Spyder网站](https://oreil.ly/SGOgy)获取界面详细信息以及探索所有可用窗格。如果您想在安装之前尝试Spyder，还有一个[Binder选项](https://mybinder.org)，可以在浏览器中运行。
- en: Although it’s not necessary, I like to start a new project when working in Spyder,
    as demonstrated in [Figure 9-4](#creating_a_new_project_in_spyder). This simplifies
    returning to your prior files, regardless of your current working directory. The
    project pane will also become visible. It reminds me of the ease of QGIS, since
    the files are easily within reach.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这并非必须，但我喜欢在Spyder中启动一个新项目，就像在[图 9-4](#creating_a_new_project_in_spyder)中演示的那样。这简化了返回到之前文件的过程，而不管当前工作目录如何。项目窗格也将变得可见。这让我想起QGIS的便利，因为文件很容易到手。
- en: '![Creating a new project in Spyder](assets/pgda_0904.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![在Spyder中创建新项目](assets/pgda_0904.png)'
- en: Figure 9-4\. Creating a new project in Spyder
  id: totrans-78
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-4\. 在Spyder中创建新项目
- en: The Project pane can also integrate with Git for version control. Explore the
    [Spyder file documentation to learn](https://oreil.ly/8M3ZI) how to set up the
    functionality with your repository.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 项目窗格还可以与Git集成，用于版本控制。查阅[Spyder文件文档](https://oreil.ly/8M3ZI)以了解如何在您的存储库中设置此功能。
- en: Exploring Your Data in Spyder
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Spyder中探索您的数据
- en: 'You’re just a few lines of code away from exploring your raster data within
    an IDE. The first step is to import the necessary packages: GDAL, NumPY, and matplotlib:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您距离在集成开发环境中探索您的栅格数据只有几行代码。第一步是导入必要的包：GDAL、NumPY和matplotlib：
- en: '[PRE14]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: NumPY will manipulate the array you are creating from the raster file, and matplotlib
    will allow you to view the file. The raster programs you can explore are included
    in the [GDAL documentation](https://oreil.ly/rxgLu).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: NumPY将操作从栅格文件创建的数组，而matplotlib将允许您查看文件。您可以探索的栅格程序包含在[GDAL文档](https://oreil.ly/rxgLu)中。
- en: '*Utility scripts* belong to a *utility class*, which is a collection of related
    methods available across the application. The Python utility scripts are located
    inside the `osgeo_utils.samples` submodule shown in the following code:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '*实用脚本*属于*实用类*，这是一个跨应用程序可用的相关方法集合。Python实用脚本位于`osgeo_utils.samples`子模块中，如下面的代码所示：'
- en: '[PRE15]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: If you are not sure where to find *.tif* files, skip ahead to [“Exploring Open
    Source Raster Files”](#exploring_open_source_raster_files), where I will review
    how to find raster files to explore. These are simple digital elevation models
    (DEMs), where each point or pixel has an elevation value. Typically, these are
    represented as DEM *.tif* files. If you’ve been exploring as you work through
    this book, your Downloads folder probably harbors quite a few by now.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不确定如何找到*.tif*文件，请跳转到[“探索开源栅格文件”](#exploring_open_source_raster_files)，我将介绍如何查找栅格文件以进行探索。这些是简单的数字高程模型（DEMs），其中每个点或像素都具有高程值。通常，它们表示为DEM
    *.tif*文件。如果您在阅读本书时一直在探索，那么您的下载文件夹可能已经拥有不少文件了。
- en: The code scripts you will be writing into the editor are explained in the text;
    additional information is available from the [GDAL Python API](https://oreil.ly/lHQri).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你将写入编辑器的代码脚本在文本中有解释；更多信息可从[GDAL Python API](https://oreil.ly/lHQri)获取。
- en: You can call your variable anything, but for simplicity I am using `ds` to represent
    the dataset. After importing your *.tif* file and creating the variable `ds`,
    you will see the variable populate in the variable explorer. The format of the
    `ds` file is `gdal.Dataset`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以随意给你的变量取任何名字，但为了简单起见，我使用 `ds` 来表示数据集。导入你的 *.tif* 文件并创建变量 `ds` 后，你会看到变量出现在变量资源管理器中。`ds`
    文件的格式是 `gdal.Dataset`。
- en: Transforming Files in GDAL
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GDAL中的文件转换
- en: You will need to transform your *.tif* file from the table format that you see
    in [Figure 9-6](#the_projection_of_the_bandscomma_as_rea) to geographic coordinates,
    so next you’ll define `gt`, the geotransform.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要将你的 *.tif* 文件从[图 9-6](#the_projection_of_the_bandscomma_as_rea)中所见的表格格式转换为地理坐标，因此接下来你将定义
    `gt`，地理转换。
- en: 'The six coefficients in [Figure 9-5](#geotransforms_to_georeferenced_coordina),
    read from top to bottom, correspond to:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图中[图 9-5](#geotransforms_to_georeferenced_coordina)中的六个系数，从上到下依次对应：
- en: '0'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '0'
- en: The *x*-coordinate of the upper-left corner of the upper-left pixel (262846.525725)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 左上角像素的*x*坐标（262846.525725）
- en: '1'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '1'
- en: Pixel resolution, west to east (25.0)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 像素分辨率，从西到东（25.0）
- en: '2'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '2'
- en: Row rotation (usually 0)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 行旋转（通常为0）
- en: '3'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '3'
- en: The *y*-coordinate of the upper-left corner of the upper-left pixel (4464275.0)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 左上角的像素的*y*坐标（4464275.0）
- en: '4'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '4'
- en: Column rotation (again, usually 0)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 列旋转（再次，通常为0）
- en: '5'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '5'
- en: The northwest pixel resolution and height (usually negative for a north-up image),
    -25.0
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 北西像素分辨率和高度（通常为负值表示北向图像），-25.0
- en: '![Geotransforms to georeferenced coordinates](assets/pgda_0905.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![地理转换为地理参考坐标](assets/pgda_0905.png)'
- en: Figure 9-5\. Geotransforms to georeferenced coordinates
  id: totrans-105
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-5\. 地理转换为地理参考坐标
- en: The projection information is visible in the variable explorer ([Figure 9-2](#the_spyder_console))
    but is shown larger in [Figure 9-6](#the_projection_of_the_bandscomma_as_rea).
    In the Universal Transverse Mercator (UTM), the projection is UTM zone 30 N; the
    EPSG code is EPSG:32630.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 投影信息在变量资源管理器中可见（[图 9-2](#the_spyder_console)），但在[图 9-6](#the_projection_of_the_bandscomma_as_rea)中显示更大。在通用横轴墨卡托投影（UTM）中，投影是
    UTM 30 北区；EPSG 代码是 EPSG:32630。
- en: '![The projection of the bands, as read by GDAL](assets/pgda_0906.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![GDAL读取的波段的投影](assets/pgda_0906.png)'
- en: Figure 9-6\. The projection of the bands, as read by GDAL
  id: totrans-108
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-6\. GDAL读取的波段的投影
- en: '`GetRasterBand` fetches the bands into the dataset. To determine how many bands
    you have, write into the console:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`GetRasterBand` 将波段提取到数据集中。要确定你有多少个波段，写入控制台：'
- en: '[PRE16]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This outputs: `1`.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这会输出：`1`。
- en: 'Enter the number of bands into the function:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 输入波段数到函数中：
- en: '[PRE17]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Exploring the array variable, you can see that Python has read the GDAL file
    into a NumPY array. The array shares elevations from our DEM, as shown in [Figure 9-7](#numpy_object_array_of_dem_dottif_file).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 探索数组变量，你会看到Python已经将GDAL文件读入NumPY数组。数组共享我们DEM中的高程，如[图 9-7](#numpy_object_array_of_dem_dottif_file)所示。
- en: '![NumPY object array of DEM .tif file](assets/pgda_0907.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![DEM .tif文件的NumPY对象数组](assets/pgda_0907.png)'
- en: Figure 9-7\. NumPY object array of DEM .tif file
  id: totrans-116
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-7\. DEM .tif文件的NumPY对象数组
- en: Using the Binmask in GDAL
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在GDAL中使用二进制掩码
- en: '*Masking* is useful for clipping boundaries or values to a specific range.
    A *binary mask* (often called *binmask)* is a tool that filters out elevation
    values above or below a certain number (for instance, if you want to look only
    at locations that are below sea level). If you want to save everything that is
    equal to or larger than the mean, you will assign it a value of 1; otherwise,
    it will be a 0\. The output is shown in [Figure 9-8](#binary_mask_output). The
    dark values are at lower elevation.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '*掩模* 对于裁剪边界或值到特定范围非常有用。 *二进制掩模*（通常称为*binmask)* 是一个过滤掉高于或低于某个数字的高度值的工具（例如，如果你只想查看低于海平面的位置）。如果你想保存一切大于或等于平均值的内容，你将把它赋值为1；否则，它将是0\.
    输出显示在[图 9-8](#binary_mask_output)中。暗值处于较低高度。'
- en: 'The `binmask` variable in the code refers to the NumPy (`np`) function that
    returns the elements in the array based on a condition, such as the `mean`:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 代码中的 `binmask` 变量指的是基于条件（如 `mean`）返回数组中元素的 NumPy (`np`) 函数：
- en: '[PRE18]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'To save this data as a GeoTIFF file, you will need a GDAL driver to support
    your chosen raster file format. You can view the long list of different drivers
    available, including for GeoTIFF, in the [GDAL documentation](https://oreil.ly/MCFi9).
    To get the shape of your binmask, you only need to register the driver and run
    the following code:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 要将这些数据保存为GeoTIFF文件，您将需要一个GDAL驱动程序来支持您选择的栅格文件格式。您可以查看不同驱动程序的长列表，包括GeoTIFF，在[GDAL文档](https://oreil.ly/MCFi9)中找到。
- en: '[PRE19]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This outputs (410, 601).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这输出为（410，601）。
- en: '![Binary mask output](assets/pgda_0908.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![二进制掩模输出](assets/pgda_0908.png)'
- en: Figure 9-8\. Binary mask output
  id: totrans-125
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-8\. 二进制掩模输出
- en: 'Recall how to use the `index` function in Python. The binmask shape is 410
    rows and 601 columns. In the following code snippet, `xsize` refers to the number
    of columns. You call columns by index, in this case as `[1]`, to get a count (in
    this case, 601). You can do the same with `ysize` and the index `[0]` to grab
    the number of rows (in this case, 410):'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾如何在Python中使用`index`函数。binmask的形状为410行601列。在下面的代码片段中，`xsize`指的是列数。您通过索引调用列，在本例中为`[1]`，以获取计数（在本例中为601）。您可以用`ysize`和索引`[0]`来获取行数（在本例中为410）：
- en: '[PRE20]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '`gdalconst` defines the data type in the image. Since you are defining the
    shape of the binmask with `0` and `1`, you need to set the value as an integer,
    which you’ll do using `gdal.GDT_Int16`. Now you only need to print the datatype
    property.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`gdalconst`定义了图像中的数据类型。由于您正在使用`0`和`1`定义binmask的形状，您需要将值设置为整数，这将使用`gdal.GDT_Int16`完成。现在，您只需要打印数据类型属性。'
- en: 'The last step is another geotransform. The settings can stay the same since
    you didn’t change anything. Once you close the files, they will be available for
    you to use. If you forget, you will not be able to use them. You also don’t need
    to read the array, since you haven’t stored it anywhere yet. `WriteArray(binmask)`
    will provide the output:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是另一个地理转换。由于您没有更改任何内容，设置可以保持不变。一旦关闭文件，它们将可供您使用。如果您忘记了，您将无法使用它们。您也不需要读取数组，因为您还没有将其存储在任何地方。`WriteArray(binmask)`将提供输出：
- en: '[PRE21]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: To recap, you’ve identified and generated an image from a DEM and converted
    the output to a GeoTIFF file. The raster image is saved along with any information
    or metadata about the image’s location on the Earth’s surface at the pixel level.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，您已经从DEM识别并生成了一幅图像，并将输出转换为GeoTIFF文件。栅格图像与关于图像在地球表面像素级位置的任何信息或元数据一起保存。
- en: The Complete Script
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完整脚本
- en: 'Here is the code in its entirety; uncomment the print option when you want
    to view the figure:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这是完整的代码；当您想查看图像时，请取消注释打印选项：
- en: '[PRE22]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Exploring Open Source Raster Files
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索开源栅格文件
- en: The open source geospatial community has a huge arsenal of [publicly available
    datasets](https://oreil.ly/GIbyH) to continue your learning and fuel current and
    future projects. This book is intended to be a living resource that invites additional
    learning and skill development. So in the next few sections, I’ll provide the
    basics you need to get started with exploring some of these resources, rather
    than full exercises. The goal is to get you to a point where you can start exploring
    for yourself.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 开源地理空间社区拥有大量的[公开数据集](https://oreil.ly/GIbyH)，供您继续学习并支持当前和未来的项目。这本书旨在成为一个不断发展的资源，邀请您进行额外的学习和技能发展。因此，在接下来的几节中，我将提供一些基础知识，让您开始探索这些资源，而不是进行完整的练习。目标是让您能够开始自主探索。
- en: USGS EarthExplorer
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: USGS EarthExplorer
- en: The USGS hosts one of the largest free repositories of satellite and aerial
    imagery data, called EarthExplorer.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 美国地质调查局（USGS）托管了最大的免费卫星和航空图像数据库之一，名为EarthExplorer。
- en: You will need to register for a free account at [EarthExplorer](https://oreil.ly/WvlrA).
    If you have a compressed ZIP file that includes a shapefile (*.shp*), you can
    upload it using the KML/Shapefile Upload button in the upper left corner. Free
    open source data resources often offer the option to download a zipped shapefile.
    All of the accompanying files must be uploaded along with the shapefile.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要注册一个免费帐户在[EarthExplorer](https://oreil.ly/WvlrA)。如果您有一个包含shapefile（*.shp*）的压缩ZIP文件，您可以使用左上角的KML/Shapefile上传按钮上传它。免费的开源数据资源通常提供下载压缩的shapefile的选项。必须上传shapefile的所有附带文件。
- en: To work with EarthExplorer, you can upload a shapefile you want to work with.
    [Figure 9-9](#uploading_a_shapefile_to_earthexplorer) shows a file I uploaded
    called “Bodega Marine Laboratory and Reserve.” When I draw a polygon (shown in
    red) around the area I want to look at, I can download the GeoTiff file. You can
    change the coordinates to reshape the polygon.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 EarthExplorer，你可以上传一个你想处理的 shapefile。[图 9-9](#uploading_a_shapefile_to_earthexplorer)展示了我上传的名为“Bodega
    海洋实验室和保护区”的文件。当我在我想查看的区域绘制一个多边形（显示为红色）时，我可以下载 GeoTiff 文件。你可以更改坐标来重新定义多边形的形状。
- en: '![Uploading a shapefile to EarthExplorer](assets/pgda_0909.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![上传 shapefile 到 EarthExplorer](assets/pgda_0909.png)'
- en: Figure 9-9\. Uploading a shapefile to EarthExplorer
  id: totrans-142
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-9\. 上传 shapefile 到 EarthExplorer
- en: 'In addition to uploading a shapefile, there are a few other ways to create
    an image:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 除了上传一个 shapefile 外，还有几种创建图像的方式：
- en: Zoom to an area you wish to explore and draw a polygon or circle
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩放到你希望探索的区域并绘制多边形或圆圈
- en: Search for an address ([Figure 9-10](#searching_for_satellite_images_in_your))
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搜索地址（[图 9-10](#searching_for_satellite_images_in_your)）
- en: Double-click the map and select the Use Map button
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双击地图并选择使用地图按钮
- en: Select a date range
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择一个日期范围
- en: You can also enter a date range or a cloud cover range in the menu shown in
    [Figure 9-10](#searching_for_satellite_images_in_your). For this exercise, use
    the method of your choice to follow me to the Bodega Marine Laboratory and Reserve.
    Enter the location into the search criteria.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以在菜单中输入日期范围或云覆盖范围，如[图 9-10](#searching_for_satellite_images_in_your)所示。在这个练习中，使用你选择的方法跟随我来到
    Bodega 海洋实验室和保护区。将位置输入到搜索条件中。
- en: '![Searching for satellite images in your region of interest](assets/pgda_0910.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![搜索感兴趣区域的卫星图像](assets/pgda_0910.png)'
- en: Figure 9-10\. Searching for satellite images in your region of interest
  id: totrans-150
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-10\. 搜索感兴趣区域的卫星图像
- en: Once you’re at the Bodega Marine Laboratory and Reserve, select Digital Elevation
    Data and then SRTM Void Filled, as shown in [Figure 9-11](#digital_elevation_srtm_data_in_earthexp).
    *SRTM* stands for Shuttle Radar Topography Mission. Void-filled SRTMs have additional
    processing to fill in missing data.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你到达 Bodega 海洋实验室和保护区，选择数字高程数据，然后选择 SRTM Void Filled，如[图 9-11](#digital_elevation_srtm_data_in_earthexp)所示。*SRTM*
    是空中雷达地形测量任务的缩写。Void Filled SRTMs 经过额外处理以填补缺失数据。
- en: '![](assets/pgda_0911.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/pgda_0911.png)'
- en: Figure 9-11\. Digital elevation SRTM data in EarthExplorer
  id: totrans-153
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-11\. 地球测量数字高程 SRTM 数据
- en: If there are any images that meet your criteria, they will load as search results
    ([Figure 9-12](#search_results_in_earthexplorer)). Once you adjust your parameters,
    you will see thumbnails of the datasets. Find the best dataset for your needs
    and download the GeoTIFF. Save it to the folder within your working directory
    or use the absolute (complete) filepath to upload it into your Spyder console.^([2](ch09.xhtml#ch01fn13))
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有符合你条件的图像，它们将作为搜索结果加载（[图 9-12](#search_results_in_earthexplorer)）。一旦调整了参数，你将看到数据集的缩略图。找到最适合你需求的数据集并下载
    GeoTIFF。将其保存到工作目录中的文件夹或使用绝对路径（完整路径）将其上传到 Spyder 控制台中。^([2](ch09.xhtml#ch01fn13))
- en: '![](assets/pgda_0912.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/pgda_0912.png)'
- en: Figure 9-12\. Search results in EarthExplorer
  id: totrans-156
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-12\. EarthExplorer 中的搜索结果
- en: Copernicus Open Access Hub
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 哥白尼开放获取中心
- en: The next data resource I want to show you is [Copernicus Open Access Hub](https://oreil.ly/WR178).
    You’ll access it similarly to how you accessed EarthExplorer, navigating the settings
    within a dashboard. While Copernicus’s interface is perhaps less intuitive than
    EarthExplorer’s, it offers some great data. Try searching for Sentinel satellite
    data ([Figure 9-13](#copernicus_open_access_hub_sentinel_dat)).
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我要向你展示的下一个数据资源是[哥白尼开放获取中心](https://oreil.ly/WR178)。你可以通过仪表板中的设置来访问它，类似于你访问 EarthExplorer
    的方式。虽然哥白尼的界面可能不如 EarthExplorer 直观，但它提供了一些很棒的数据。尝试搜索 Sentinel 卫星数据（[图 9-13](#copernicus_open_access_hub_sentinel_dat)）。
- en: '![Copernicus Open Access Hub Sentinel data](assets/pgda_0913.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![哥白尼开放获取中心 Sentinel 数据](assets/pgda_0913.png)'
- en: Figure 9-13\. Copernicus Open Access Hub Sentinel data
  id: totrans-160
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-13\. 哥白尼开放获取中心 Sentinel 数据
- en: Google Earth Engine
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谷歌地球引擎
- en: You learned about GEE in [Chapter 8](ch08.xhtml#data_cleaning), so here I’ll
    just briefly touch on how to use it with GDAL. GEE data is available in the cloud
    on a planetary scale, so you don’t have to download it. You can even use functions
    such as clipping satellite data.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 你在[第 8 章](ch08.xhtml#data_cleaning)中学习了 GEE，所以这里我只简要提一下如何与 GDAL 结合使用它。GEE 数据以全球范围在云端提供，因此无需下载。你甚至可以使用诸如裁剪卫星数据之类的函数。
- en: Run search for GEE DEM files. Find Earth Engine snippet *ee.Image(“USGS/sDEP/10m”)*,
    shown in [Figure 9-14](#gee_catalog_of_dem_files). You can copy the JavaScript
    code and paste it into the GEE console.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 运行搜索 GEE DEM 文件。找到 Earth Engine 代码片段 *ee.Image(“USGS/sDEP/10m”)*，如 [图 9-14](#gee_catalog_of_dem_files)
    所示。您可以复制 JavaScript 代码并粘贴到 GEE 控制台中。
- en: '![GEE catalog of DEM files](assets/pgda_0914.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![GEE DEM 文件目录](assets/pgda_0914.png)'
- en: Figure 9-14\. GEE catalog of DEM files
  id: totrans-165
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-14\. GEE DEM 文件目录
- en: In the GEE console, select Run. This will generate the map shown in [Figure 9-15](#google_earth_engine_dem_dottif_file).
    You can select a polygon and create a geometry import. The layers panel will allow
    you to change the opacity of a layer or toggle layer displays on and off. Simply
    save the file as a GeoTIFF, and you have another option for a DEM file.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在 GEE 控制台中，选择运行。这将生成图中显示的地图（见 [图 9-15](#google_earth_engine_dem_dottif_file)）。您可以选择一个多边形并创建几何导入。图层面板允许您更改图层的不透明度或切换图层的显示和隐藏。只需将文件保存为
    GeoTIFF，您就有了另一个 DEM 文件选项。
- en: '![Google Earth Engine DEM .tif file](assets/pgda_0915.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![Google Earth Engine DEM .tif 文件](assets/pgda_0915.png)'
- en: Figure 9-15\. Google Earth Engine DEM .tif file
  id: totrans-168
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-15\. Google Earth Engine DEM .tif 文件
- en: GDAL can be complex, but it’s worth learning how to use this resource library
    to extend your geospatial skills.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: GDAL 可能很复杂，但学习如何使用这个资源库来扩展您的地理空间技能是值得的。
- en: Summary
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: You have observed how to work in both a terminal and an IDE, both useful in
    their own respects specific to personal preference and often accessibility. These
    skills highlight the utility of both options as well as a powerful interface relied
    on by cross-platform applications in both the enterprise (Esri) and open source
    communities.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经了解了如何在终端和集成开发环境中工作，这两者都根据个人喜好具有各自的用途和通常的可访问性。这些技能突显了这两个选项的效用，以及跨平台应用程序中企业（Esri）和开源社区依赖的强大界面。
- en: Remember, when working with geospatial data and a broad array of available tools,
    especially in the open source community, it is important to read the user documentation
    to grow your skills and your ability to interact with your data. Don’t hesitate
    to reach out to the community with questions or insights.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理地理空间数据和广泛的可用工具时，特别是在开源社区中，重要的是阅读用户文档，以提升您的技能和与数据交互的能力。不要犹豫，如果有问题或见解，请向社区寻求帮助。
- en: ^([1](ch09.xhtml#ch01fn12-marker)) You may recall that *bindings* are libraries
    that bridge two programming languages so that a library written for one language
    can be used in another.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch09.xhtml#ch01fn12-marker)) 您可能还记得 *绑定* 是连接两种编程语言的库，使得一个语言编写的库可以在另一种语言中使用。
- en: ^([2](ch09.xhtml#ch01fn13-marker)) The *relative filepath* is the path relative
    to your current working directory; the *absolute filepath* is the path provided
    from your root directory.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch09.xhtml#ch01fn13-marker)) *相对文件路径* 是相对于您当前工作目录的路径；*绝对文件路径* 是从根目录提供的路径。
