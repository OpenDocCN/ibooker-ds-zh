["```py\n`from` `pathlib` `import` `Path`\n\n`# Create a Path pointing to our datafile`\n`insp_path` `=` `Path``(``'``data/donkeys.csv``'``)`\n\n`with` `insp_path``.``open``(``)` `as` `f``:`\n    `# Display first five lines of file`\n    `for` `_` `in` `range``(``5``)``:`\n        `print``(``f``.``readline``(``)``,` `end``=``'``'``)`\n\n```", "```py\nBCS,Age,Sex,Length,Girth,Height,Weight,WeightAlt\n3,<2,stallion,78,90,90,77,NA\n2.5,<2,stallion,91,97,94,100,NA\n1.5,<2,stallion,74,93,95,74,NA\n3,<2,female,87,109,96,116,NA\n\n```", "```py\n`donkeys` `=` `pd``.``read_csv``(``\"``data/donkeys.csv``\"``)`\n`donkeys`\n\n```", "```py\n544 rows × 8 columns\n```", "```py\n`donkeys` `=` `donkeys``.``assign``(``difference``=``donkeys``[``\"``WeightAlt``\"``]` `-` `donkeys``[``\"``Weight``\"``]``)`\n\n`px``.``histogram``(``donkeys``,` `x``=``\"``difference``\"``,` `nbins``=``15``,`\n    `labels``=``dict``(`\n        `difference``=``\"``Differences of two weighings (kg)<br>on the same donkey``\"`\n    `)``,`\n    `width``=``350``,` `height``=``250``,`\n`)`\n\n```", "```py\n`donkeys``[``'``BCS``'``]``.``value_counts``(``)`\n\n```", "```py\nBCS\n3.0    307\n2.5    135\n3.5     55\n      ... \n1.5      5\n4.5      1\n1.0      1\nName: count, Length: 8, dtype: int64\n\n```", "```py\n`donkeys``[``(``donkeys``[``'``BCS``'``]` `==` `1.0``)` `|` `(``donkeys``[``'``BCS``'``]` `==` `4.5``)``]`\n\n```", "```py\n`def` `remove_bcs_outliers``(``donkeys``)``:`\n    `return` `donkeys``[``(``donkeys``[``'``BCS``'``]` `>``=` `1.5``)` `&` `(``donkeys``[``'``BCS``'``]` `<``=` `4``)``]` \n\n`donkeys` `=` `(``pd``.``read_csv``(``'``data/donkeys.csv``'``)`\n           `.``pipe``(``remove_bcs_outliers``)``)`\n\n```", "```py\n`px``.``histogram``(``donkeys``,` `x``=``'``Weight``'``,` `nbins``=``40``,` `width``=``350``,` `height``=``250``,`\n            `labels``=``{``'``Weight``'``:``'``Weight (kg)``'``}``)`\n\n```", "```py\n`px``.``scatter``(``donkeys``,` `x``=``'``Height``'``,` `y``=``'``Weight``'``,` `width``=``350``,` `height``=``250``,`\n          `labels``=``{``'``Weight``'``:``'``Weight (kg)``'``,` `'``Height``'``:``'``Height (cm)``'``}``)`\n\n```", "```py\n`def` `remove_weight_outliers``(``donkeys``)``:`\n    `return` `donkeys``[``(``donkeys``[``'``Weight``'``]` `>``=` `40``)``]`\n\n`donkeys` `=` `(``pd``.``read_csv``(``'``data/donkeys.csv``'``)`\n           `.``pipe``(``remove_bcs_outliers``)`\n           `.``pipe``(``remove_weight_outliers``)``)`\n\n`donkeys``.``shape`\n\n```", "```py\n(541, 8)\n\n```", "```py\n`np``.``random``.``seed``(``42``)`\n`n` `=` `len``(``donkeys``)`\n`indices` `=` `np``.``arange``(``n``)`\n`np``.``random``.``shuffle``(``indices``)`\n`n_train` `=` `int``(``np``.``round``(``(``0.8` `*` `n``)``)``)`\n\n```", "```py\n`train_set` `=` `donkeys``.``iloc``[``indices``[``:``n_train``]``]`\n`test_set` `=` `donkeys``.``iloc``[``indices``[``n_train``:``]``]`\n\n```", "```py\n`f1` `=` `px``.``box``(``train_set``,` `x``=``\"``Age``\"``,` `y``=``\"``Weight``\"``,` \n            `category_orders` `=` `{``\"``Age``\"``:``[``'``<2``'``,` `'``2-5``'``,` `'``5-10``'``,` \n                                      `'``10-15``'``,` `'``15-20``'``,` `'``>20``'``]``}``)`\n`f2` `=` `px``.``box``(``train_set``,` `x``=``\"``Sex``\"``,` `y``=``\"``Weight``\"``)`\n\n`# We wrote the left_right function as a shorthand for plotly's make_subplots`\n`fig` `=` `left_right``(``f1``,` `f2``,` `column_widths``=``[``0.7``,` `0.3``]``)`\n\n`fig``.``update_xaxes``(``title``=``'``Age (yr)``'``,` `row``=``1``,` `col``=``1``)`\n`fig``.``update_xaxes``(``title``=``'``Sex``'``,` `row``=``1``,` `col``=``2``)`\n`fig``.``update_yaxes``(``title``=``'``Weight (kg)``'``,` `row``=``1``,` `col``=``1``)`\n\n```", "```py\n`fig` `=` `px``.``box``(``train_set``,` `x``=``\"``BCS``\"``,` `y``=``\"``Weight``\"``,` `points``=``\"``all``\"``,`\n             `labels``=``{``'``Weight``'``:``'``Weight (kg)``'``,` `'``BCS``'``:``'``Body condition score``'``}``,`\n             `width``=``550``,` `height``=``250``)`\n`fig`\n\n```", "```py\n`train_numeric``.``corr``(``)`\n\n```", "```py\n`def` `anes_loss``(``x``)``:`\n    `w` `=` `(``x` `>``=` `0``)` `+` `3` `*` `(``x` `<` `0``)`\n    `return` `np``.``square``(``x``)` `*` `w`\n\n```", "```py\n`X` `=` `train_set``.``assign``(``intr``=``1``)``[``[``'``intr``'``,` `'``Girth``'``]``]`\n`y` `=` `train_set``[``'``Weight``'``]`\n`X`\n\n```", "```py\n433 rows × 2 columns\n```", "```py\n`from` `scipy``.``optimize` `import` `minimize`\n\n`def` `training_loss``(``X``,` `y``)``:`\n    `def` `loss``(``theta``)``:`\n        `predicted` `=` `X` `@` `theta`\n        `return` `np``.``mean``(``anes_loss``(``100` `*` `(``y` `-` `predicted``)` `/` `predicted``)``)`\n    `return` `loss`\n\n`results` `=` `minimize``(``training_loss``(``X``,` `y``)``,` `np``.``ones``(``2``)``)`\n`theta_hat` `=` `results``[``'``x``'``]`\n\n```", "```py\nAfter fitting:\nθ₀ = -218.51\nθ₁ =    3.16\n\n```", "```py\npredicted = X @ theta_hat\nresids = 100 * (y - predicted) / predicted\n\n```", "```py\nresid = pd.DataFrame({\n    'Predicted weight (kg)': predicted, 'Percent error': resids})\npx.scatter(resid, x='Predicted weight (kg)', y='Percent error',\n           width=350, height=250)\n\n```", "```py\n[['Girth'],\n ['Length'],\n ['Height'],\n ['Girth', 'Length'],\n ['Girth', 'Height'],\n ['Length', 'Height'],\n ['Girth', 'Length', 'Height']]\n\n```", "```py\n`def` `training_error``(``model``)``:`\n    `X` `=` `train_set``.``assign``(``intr``=``1``)``[``[``'``intr``'``,` `*``model``]``]`\n    `theta_hat` `=` `minimize``(``training_loss``(``X``,` `y``)``,` `np``.``ones``(``X``.``shape``[``1``]``)``)``[``'``x``'``]`\n    `predicted` `=` `X` `@` `theta_hat`\n    `return` `np``.``mean``(``anes_loss``(``100` `*` `(``y` `-` `predicted``)``/` `predicted``)``)`\n\n`model_risks` `=` `[`\n    `training_error``(``model``)`\n    `for` `model` `in` `models`\n`]`\n\n```", "```py\n`X_one_hot` `=` `(`\n    `train_set``.``assign``(``intr``=``1``)`\n    `[``[``'``intr``'``,` `'``Length``'``,` `'``Girth``'``,` `'``BCS``'``,` `'``Age``'``,` `'``Sex``'``]``]`\n    `.``pipe``(``pd``.``get_dummies``,` `columns``=``[``'``BCS``'``,` `'``Age``'``,` `'``Sex``'``]``)`\n    `.``drop``(``columns``=``[``'``BCS_3.0``'``,` `'``Age_5-10``'``,` `'``Sex_female``'``]``)`\n`)`\n`X_one_hot`\n\n```", "```py\n433 rows × 15 columns\n```", "```py\n`results` `=` `minimize``(``training_loss``(``X_one_hot``,` `y``)``,` `np``.``ones``(``X_one_hot``.``shape``[``1``]``)``)`\n\n`theta_hat` `=` `results``[``'``x``'``]`\n\n`y_pred` `=` `X_one_hot` `@` `theta_hat`\n`training_error` `=` `(``np``.``mean``(``anes_loss``(``100` `*` `(``y` `-` `y_pred``)``/` `y_pred``)``)``)`\n\n`print``(``f``'``Training error:` `{``training_error``:``.2f``}``'``)`\n\n```", "```py\nTraining error: 51.47\n\n```", "```py\n`def` `combine_bcs``(``X``)``:`\n    `new_bcs_2` `=` `X``[``'``BCS_2.0``'``]` `+` `X``[``'``BCS_1.5``'``]`\n    `return` `X``.``assign``(``*``*``{``'``BCS_2.0``'``:` `new_bcs_2``}``)``.``drop``(``columns``=``[``'``BCS_1.5``'``]``)`\n\n`def` `combine_age_and_sex``(``X``)``:`\n    `return` `X``.``drop``(``columns``=``[``'``Age_10-15``'``,` `'``Age_15-20``'``,` `'``Age_>20``'``,`\n                           `'``Sex_gelding``'``,` `'``Sex_stallion``'``]``)`\n\n`X_one_hot_simple` `=` `(`\n    `X_one_hot``.``pipe``(``combine_bcs``)`\n    `.``pipe``(``combine_age_and_sex``)`\n`)`\n\n```", "```py\n`results` `=` `minimize``(``training_loss``(``X_one_hot_simple``,` `y``)``,`\n                   `np``.``ones``(``X_one_hot_simple``.``shape``[``1``]``)``)`\n`theta_hat` `=` `results``[``'``x``'``]`\n`y_pred` `=` `X_one_hot_simple` `@` `theta_hat`\n`training_error` `=` `(``np``.``mean``(``anes_loss``(``100` `*` `(``y` `-` `y_pred``)``/` `y_pred``)``)``)`\n`print``(``f``'``Training error:` `{``training_error``:``.2f``}``'``)`\n\n```", "```py\nTraining error: 53.20\n\n```", "```py\n`y_test` `=` `test_set``[``'``Weight``'``]`\n\n`X_test` `=` `(`\n    `test_set``.``assign``(``intr``=``1``)`\n    `[``[``'``intr``'``,` `'``Length``'``,` `'``Girth``'``,` `'``BCS``'``,` `'``Age``'``,` `'``Sex``'``]``]`\n    `.``pipe``(``pd``.``get_dummies``,` `columns``=``[``'``BCS``'``,` `'``Age``'``,` `'``Sex``'``]``)`\n    `.``drop``(``columns``=``[``'``BCS_3.0``'``,` `'``Age_5-10``'``,` `'``Sex_female``'``]``)`\n    `.``pipe``(``combine_bcs``)`\n    `.``pipe``(``combine_age_and_sex``)`\n`)`\n\n```", "```py\n`y_pred_test` `=` `X_test` `@` `theta_hat`\n`test_set_error` `=` `100` `*` `(``y_test` `-` `y_pred_test``)` `/` `y_pred_test`\n\n```"]