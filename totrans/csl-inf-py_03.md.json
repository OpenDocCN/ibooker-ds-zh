["```py\nimport pandas as pd\npath = \"https://github.com/causal-methods/Data/raw/master/\" \ndf = pd.read_stata(path + \"lakisha_aer.dta\")\ndf.head(4) \n```", "```py\ncallback = df.loc[:, ('call', 'race')]\ncallback \n```", "```py\n# Round 2 decimals\npd.set_option('precision', 4)\n\nimport numpy as np\ncallback.groupby('race').agg([np.size, np.mean]) \n```", "```py\ndf['college'] = np.where(df['education'] == 4, 1, 0) \n```", "```py\ncollege = df.loc[:, ('college', 'race')]\ncollege.groupby('race').agg([np.size, np.mean]) \n```", "```py\nresume = ['college', 'yearsexp', 'volunteer', 'military',\n          'email', 'workinschool', 'honors',\n          'computerskills', 'specialskills']\nboth = df.loc[:, resume]\nboth.head() \n```", "```py\nblack = both[df['race']=='b']\nwhite = both[df['race']=='w']\nsummary = {'mean_both': both.mean(),   'std_both': both.std(),\n           'mean_black': black.mean(), 'std_black': black.std(),\n           'mean_white': white.mean(), 'std_white': white.std()}\npd.DataFrame(summary) \n```", "```py\ndf['Intercept'] = 1\ndf['Treatment'] = np.where(df['race'] =='b', 1, 0)\nimport statsmodels.api as sm\nols = sm.OLS(df['call'], df[['Intercept', 'Treatment']],\n                    missing='drop').fit() \n```", "```py\nC:\\Anaconda\\envs\\textbook\\lib\\site-packages\\statsmodels\\tools\\_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n  import pandas.util.testing as tm \n```", "```py\nprint(ols.summary().tables[1]) \n```", "```py\n==============================================================================\n                 coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nIntercept      0.0965      0.006     17.532      0.000       0.086       0.107\nTreatment     -0.0320      0.008     -4.115      0.000      -0.047      -0.017\n============================================================================== \n```", "```py\ncallback.groupby('race').agg([np.size, np.mean]) \n```", "```py\nother_factors = ['college', 'yearsexp', 'volunteer', 'military',\n          'email', 'workinschool', 'honors',\n          'computerskills', 'specialskills']\nmultiple_reg = sm.OLS(df['call'],\n                      df[['Intercept', 'Treatment'] + other_factors],\n                      missing='drop').fit() \n```", "```py\nprint(multiple_reg.summary().tables[1]) \n```", "```py\n==================================================================================\n                     coef    std err          t      P>|t|      [0.025      0.975]\n----------------------------------------------------------------------------------\nIntercept          0.0547      0.015      3.727      0.000       0.026       0.083\nTreatment         -0.0311      0.008     -4.032      0.000      -0.046      -0.016\ncollege            0.0068      0.009      0.768      0.443      -0.010       0.024\nyearsexp           0.0029      0.001      3.630      0.000       0.001       0.005\nvolunteer         -0.0032      0.011     -0.295      0.768      -0.024       0.018\nmilitary          -0.0033      0.014     -0.232      0.817      -0.032       0.025\nemail              0.0143      0.011      1.285      0.199      -0.008       0.036\nworkinschool       0.0008      0.009      0.093      0.926      -0.016       0.018\nhonors             0.0642      0.018      3.632      0.000       0.030       0.099\ncomputerskills    -0.0202      0.011     -1.877      0.061      -0.041       0.001\nspecialskills      0.0634      0.009      7.376      0.000       0.047       0.080\n================================================================================== \n```", "```py\ncontingency_table = pd.crosstab(df['Treatment'], df['h'], \n                                values=df['call'], aggfunc='mean')\ncontingency_table \n```", "```py\ndf['h_Treatment'] = df['h']*df['Treatment']\ninteraction = sm.OLS(df['call'],\n                      df[['Intercept', 'Treatment', 'h', 'h_Treatment'] ],\n                      missing='drop').fit()\nprint(interaction.summary().tables[1]) \n```", "```py\n===============================================================================\n                  coef    std err          t      P>|t|      [0.025      0.975]\n-------------------------------------------------------------------------------\nIntercept       0.0850      0.008     10.895      0.000       0.070       0.100\nTreatment      -0.0231      0.011     -2.094      0.036      -0.045      -0.001\nh               0.0229      0.011      2.085      0.037       0.001       0.045\nh_Treatment    -0.0178      0.016     -1.142      0.253      -0.048       0.013\n=============================================================================== \n```", "```py\ninteraction = sm.OLS(df['call'],\n                      df[['Intercept', 'Treatment', 'h'] ],\n                      missing='drop').fit()\nprint(interaction.summary().tables[1]) \n```", "```py\n==============================================================================\n                 coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nIntercept      0.0894      0.007     13.250      0.000       0.076       0.103\nTreatment     -0.0320      0.008     -4.116      0.000      -0.047      -0.017\nh              0.0141      0.008      1.806      0.071      -0.001       0.029\n============================================================================== \n```"]