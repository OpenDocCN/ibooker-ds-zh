["```py\n`from` `pathlib` `import` `Path`\n`import` `os`\n\n`file_path` `=` `Path``(``)` `/` `'``data``'` `/` `'``CDS_ERA5_22-12.nc``'`\n\n`kib` `=` `1024`\n`size` `=` `os``.``path``.``getsize``(``file_path``)`\n`np``.``round``(``size` `/` `kib``*``*``3``)`\n\n```", "```py\n2.0\n\n```", "```py\n`import` `xarray` `as` `xr`\n\n`ds` `=` `xr``.``open_dataset``(``file_path``)`\n\n```", "```py\n`ds``.``dims`\n\n```", "```py\nFrozen(SortedKeysDict({'longitude': 1440, 'latitude': 721, 'time': 408}))\n\n```", "```py\n`ds``.``coords`\n\n```", "```py\nCoordinates:\n  * longitude  (longitude) float32 0.0 0.25 0.5 0.75 ... 359.0 359.2 359.5 359.8\n  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0\n  * time       (time) datetime64[ns] 2022-12-15 ... 2022-12-31T23:00:00\n\n```", "```py\n`ds``.``data_vars`\n\n```", "```py\nData variables:\n    t2m      (time, latitude, longitude) float32 ...\n    lsrr     (time, latitude, longitude) float32 ...\n    tp       (time, latitude, longitude) float32 ...\n\n```", "```py\n`ds``.``tp``.``attrs`\n\n```", "```py\n{'units': 'm', 'long_name': 'Total precipitation'}\n\n```", "```py\n`ds``.``attrs`\n\n```", "```py\n{'Conventions': 'CF-1.6',\n 'history': '2023-01-19 19:54:37 GMT by grib_to_netcdf-2.25.1: /opt/ecmwf/mars-client/bin/grib_to_netcdf.bin -S param -o /cache/data6/adaptor.mars.internal-1674158060.3800251-17201-13-c46a8ac2-f1b6-4b57-a14e-801c001f7b2b.nc /cache/tmp/c46a8ac2-f1b6-4b57-a14e-801c001f7b2b-adaptor.mars.internal-1674158033.856014-17201-20-tmp.grib'}\n\n```", "```py\n`plt``.``figure``(``)`\n`(``ds``.``sel``(``latitude``=``37.75``,` `longitude``=``237.5``)``.``tp` `*` `100``)``.``plot``(``figsize``=``(``8``,``3``)``)`\n`plt``.``xlabel``(``'``'``)`\n`plt``.``ylabel``(``'``Total precipitation (cm)``'``)`\n`plt``.``show``(``)``;`\n\n```", "```py\n<Figure size 288x216 with 0 Axes>\n\n```", "```py\n`import` `datetime`\n`one_day` `=` `datetime``.``datetime``(``2022``,` `12``,` `31``,` `13``,` `0``,` `0``)`\n\n```", "```py\n`min_lon``,` `min_lat``,` `max_lon``,` `max_lat` `=` `232``,` `21``,` `300``,` `50`\n\n`mask_lon` `=` `(``ds``.``longitude` `>` `min_lon``)` `&` `(``ds``.``longitude` `<` `max_lon``)`\n`mask_lat` `=` `(``ds``.``latitude` `>` `min_lat``)` `&` `(``ds``.``latitude` `<` `max_lat``)`\n\n`ds_oneday_us` `=` `ds``.``sel``(``time``=``one_day``)``.``t2m``.``where``(``mask_lon` `&` `mask_lat``,` `drop``=``True``)`\n\n```", "```py\n`ds_oneday_us``.``plot``(``figsize``=``(``8``,``4``)``)`\n\n```", "```py\n`ds``.``close``(``)`\n\n```", "```py\n{\"lender_id\":\"matt\",  \n  \"loan_count\":23,\n  \"status\":[2,  1,  3],  \n  \"sponsored\":  false,  \n  \"sponsor_name\":  null,\n  \"lender_dem\":{\"sex\":\"m\",\"age\":77  }  \n}\n\n```", "```py\n`import` `json`\n`from` `pathlib` `import` `Path`\n\n`file_path` `=` `Path``(``)` `/` `'``data``'` `/` `'``js_ex``'` `/` `'``ex.json``'`\n\n```", "```py\n`ex_dict` `=` `json``.``load``(``open``(``file_path``)``)`\n`ex_dict`\n\n```", "```py\n{'lender_id': 'matt',\n 'loan_count': 23,\n 'status': [2, 1, 3],\n 'sponsored': False,\n 'sponsor_name': None,\n 'lender_dem': {'sex': 'm', 'age': 77}}\n\n```", "```py\n`ex_df` `=` `pd``.``json_normalize``(``ex_dict``)`\n`ex_df`\n\n```", "```py\n{\"Header\": [\n    {\"status\": \"Success\",\n     \"request_time\": \"2022-12-29T01:48:30-05:00\",\n     \"url\": \"https://aqs.epa.gov/data/api/dailyData/...\",\n     \"rows\": 4\n    }\n  ],\n  \"Data\": [\n    {\"site\": \"0014\", \"date\": \"02-27\", \"aqi\": 30},\n    {\"site\": \"0014\", \"date\": \"02-24\", \"aqi\": 17},\n    {\"site\": \"0014\", \"date\": \"02-21\", \"aqi\": 60},\n    {\"site\": \"0014\", \"date\": \"01-15\", \"aqi\": null}\n  ]\n}\n\n```", "```py\n`from` `pathlib` `import` `Path`\n`import` `os`\n\n`epa_file_path` `=` `Path``(``'``data/js_ex/epa_row.json``'``)`\n\n```", "```py\n`data_row` `=` `json``.``loads``(``epa_file_path``.``read_text``(``)``)`\n`data_row`\n\n```", "```py\n{'Header': [{'status': 'Success',\n   'request_time': '2022-12-29T01:48:30-05:00',\n   'url': 'https://aqs.epa.gov/data/api/dailyData/...',\n   'rows': 4}],\n 'Data': [{'site': '0014', 'date': '02-27', 'aqi': 30},\n  {'site': '0014', 'date': '02-24', 'aqi': 17},\n  {'site': '0014', 'date': '02-21', 'aqi': 60},\n  {'site': '0014', 'date': '01-15', 'aqi': None}]}\n\n```", "```py\n`pd``.``DataFrame``(``data_row``[``\"``Data``\"``]``)`\n\n```", "```py\n`epa_col_path` `=` `Path``(``'``data/js_ex/epa_col.json``'``)`\n`print``(``epa_col_path``.``read_text``(``)``)`\n\n```", "```py\n{\"site\":[ \"0014\", \"0014\", \"0014\", \"0014\"],\n\"date\":[\"02-27\", \"02-24\", \"02-21\", \"01-15\"],\n\"aqi\":[30,17,60,null]}\n\n```", "```py\n`pd``.``read_json``(``epa_col_path``)`\n\n```", "```py\n{'vars': ['site', 'date', 'aqi'],\n 'data': [['0014', '02-27', 30],\n  ['0014', '02-24', 17],\n  ['0014', '02-21', 60],\n  ['0014', '01-15', None]]}\n\n```", "```py\n`pd``.``DataFrame``(``data_mat``[``\"``data``\"``]``,` `columns``=``data_mat``[``\"``vars``\"``]``)`\n\n```", "```py\nGET /wiki/1500_metres_world_record_progression HTTP/1.1\nHost: en.wikipedia.org\nUser-Agent: curl/7.65.2\nAccept: */* \n{blank_line}\n\n```", "```py\n< HTTP/1.1 200 OK\n< date: Fri, 24 Feb 2023 00:11:49 GMT\n< server: mw1369.eqiad.wmnet\n< x-content-type-options: nosniff\n< content-language: en\n< vary: Accept-Encoding,Cookie,Authorization\n< last-modified: Tue, 21 Feb 2023 15:00:46 GMT\n< content-type: text/html; charset=UTF-8\n...\n< content-length: 153912\n{blank_line}\n\n```", "```py\n`import` `requests`\n\n`url_1500` `=` `'``https://en.wikipedia.org/wiki/1500_metres_world_record_progression``'`\n\n```", "```py\n`resp_1500` `=` `requests``.``get``(``url_1500``)`\n\n```", "```py\n`resp_1500``.``status_code`\n\n```", "```py\n200\n\n```", "```py\n`for` `key` `in` `resp_1500``.``request``.``headers``:`\n    `print``(``f``'``{``key``}``:` `{``resp_1500``.``request``.``headers``[``key``]``}``'``)`\n\n```", "```py\nUser-Agent: python-requests/2.25.1\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\n\n```", "```py\n`len``(``resp_1500``.``headers``)`\n\n```", "```py\n20\n\n```", "```py\n`keys` `=` `[``'``date``'``,` `'``content-type``'``,` `'``content-length``'` `]`\n`for` `key` `in` `keys``:`\n    `print``(``f``'``{``key``}``:` `{``resp_1500``.``headers``[``key``]``}``'``)`\n\n```", "```py\ndate: Fri, 10 Mar 2023 01:54:13 GMT\ncontent-type: text/html; charset=UTF-8\ncontent-length: 23064\n\n```", "```py\n`resp_1500``.``text``[``:``600``]`\n\n```", "```py\n'<!DOCTYPE html>\\n<html class=\"client-nojs vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-language-alert-in-sidebar-enabled vector-feature-sticky-header-disabled vector-feature-page-tools-disabled vector-feature-page-tools-pinned-disabled vector-feature-toc-pinned-enabled vector-feature-main-menu-pinned-disabled vector-feature-limited-width-enabled vector-feature-limited-width-content-enabled\" lang=\"en\" dir=\"ltr\">\\n<head>\\n<meta charset=\"UTF-8\"/>\\n<title>1500 metres world record progression - Wikipedia</title>\\n<script>document.documentE'\n\n```", "```py\n`url` `=` `\"``https://www.youtube.com/404errorwow``\"`\n`bad_loc` `=` `requests``.``get``(``url``)`\n`bad_loc``.``status_code`\n\n```", "```py\n404\n\n```", "```py\n`resp_1500``.``request``.``method`\n\n```", "```py\n'GET'\n\n```", "```py\n`AUTH_URL` `=` `'``https://accounts.spotify.com/api/token``'`\n\n```", "```py\n`import` `requests`\n`auth_response` `=` `requests``.``post``(``AUTH_URL``,` `{`\n    `'``grant_type``'``:` `'``client_credentials``'``,`\n    `'``client_id``'``:` `CLIENT_ID``,`\n    `'``client_secret``'``:` `CLIENT_SECRET``,`\n`}``)`\n\n```", "```py\n`auth_response``.``status_code`\n\n```", "```py\n200\n\n```", "```py\n`auth_response``.``headers``[``'``content-type``'``]`\n\n```", "```py\n'application/json'\n\n```", "```py\n`auth_response_data` `=` `auth_response``.``json``(``)`\n`auth_response_data``.``keys``(``)`\n\n```", "```py\ndict_keys(['access_token', 'token_type', 'expires_in'])\n\n```", "```py\n`access_token` `=` `auth_response_data``[``'``access_token``'``]`\n`token_type` `=` `auth_response_data``[``'``token_type``'``]`\n\n```", "```py\n`bad_ID` `=` `'``0123456789``'`\n`bad_SECRET` `=` `'``a1b2c3d4e5``'`\n\n`auth_bad` `=` `requests``.``post``(``AUTH_URL``,` `{`\n    `'``grant_type``'``:` `'``client_credentials``'``,`\n    `'``client_id``'``:` `bad_ID``,` `'``client_secret``'``:` `bad_SECRET``,`\n`}``)`\n\n```", "```py\n`auth_bad``.``status_code`\n\n```", "```py\n400\n\n```", "```py\nres_clash.status_code\n\n401\n\n```", "```py\n`headers` `=` `{``\"``Authorization``\"``:` `f``\"``{``token_type``}`  `{``access_token``}``\"``}`\n\n```", "```py\n`artist_id` `=` `'``3RGLhK1IP9jnYFH4BRFJBS``'`\n\n```", "```py\n`BASE_URL` `=` `\"``https://api.spotify.com/v1/``\"`\n\n`res_clash` `=` `requests``.``get``(`\n    `BASE_URL` `+` `\"``artists/``\"` `+` `artist_id` `+` `\"``/albums``\"``,`\n    `headers``=``headers``,`\n    `params``=``{``\"``include_groups``\"``:` `\"``album``\"``}``,`\n`)`\n\n```", "```py\n`res_clash``.``status_code`\n\n```", "```py\n200\n\n```", "```py\n`res_clash``.``headers``[``'``content-type``'``]`\n\n```", "```py\n'application/json; charset=utf-8'\n\n```", "```py\n`clash_albums` `=` `res_clash``.``json``(``)`\n\n```", "```py\n`clash_albums``[``'``items``'``]``[``0``]``.``keys``(``)`\n\n```", "```py\ndict_keys(['album_group', 'album_type', 'artists', 'available_markets', 'external_urls', 'href', 'id', 'images', 'name', 'release_date', 'release_date_precision', 'total_tracks', 'type', 'uri'])\n\n```", "```py\n`for` `album` `in` `clash_albums``[``'``items``'``]``[``:``4``]``:`\n    `print``(``'``ID:` `'``,` `album``[``'``id``'``]``,` `'` `'``,` `album``[``'``name``'``]``,` `'``----``'``,` `album``[``'``release_date``'``]``)`\n\n```", "```py\nID:  7nL9UERtRQCB5eWEQCINsh   Combat Rock + The People's Hall ---- 2022-05-20\nID:  3un5bLdxz0zKhiZXlmnxWE   Live At Shea Stadium ---- 2008-08-26\nID:  4dMWTj1OkiCKFN5yBMP1vS   Live at Shea Stadium (Remastered) ---- 2008\nID:  1Au9637RH9pXjBv5uS3JpQ   From Here To Eternity Live ---- 1999-10-04\n\n```", "```py\n`tracks` `=` `[``]`\n\n`for` `album` `in` `clash_albums``[``'``items``'``]``:` \n    `tracks_url` `=` `f``\"``{``BASE_URL``}``albums/``{``album``[``'``id``'``]``}``/tracks``\"`\n    `res_tracks` `=` `requests``.``get``(``tracks_url``,` `headers``=``headers``)`\n    `album_tracks` `=` `res_tracks``.``json``(``)``[``'``items``'``]`\n\n    `for` `track` `in` `album_tracks``:`\n        `features_url` `=` `f``\"``{``BASE_URL``}``audio-features/``{``track``[``'``id``'``]``}``\"`\n        `res_feat` `=` `requests``.``get``(``features_url``,` `headers``=``headers``)`\n        `features` `=` `res_feat``.``json``(``)`\n\n        `features``.``update``(``{`\n            `'``track_name``'``:` `track``.``get``(``'``name``'``)``,`\n            `'``album_name``'``:` `album``[``'``name``'``]``,`\n            `'``release_date``'``:` `album``[``'``release_date``'``]``,`\n            `'``album_id``'``:` `album``[``'``id``'``]`\n        `}``)`\n\n        `tracks``.``append``(``features``)` \n\n```", "```py\n<catalog>                                The topmost node, aka root node.\n    <plant>                              The first child of the root node.\n        <common>Bloodroot</common>       common is the first child of plant.\n        <botanical>Sanguinaria canadensis</botanical>\n        <zone>4</zone>                   This zone node has text content: 4.\n        <light>Mostly Shady</light>\n        <price curr=\"USD\">$2.44</price>  This node has an attribute.\n        <availability date=\"0399\"/>      Empty nodes can be collapsed.\n    </plant>                             Nodes must be closed. \n    <plant>                              The two plant nodes are siblings.\n        <common>Columbine</common>\n        <botanical>Aquilegia canadensis</botanical>\n        <zone>3</zone>\n        <light>Mostly Shady</light>\n        <price curr=\"CAD\">$9.37</price>\n        <availability date=\"0199\"/>\n    </plant>\n</catalog>\n\n```", "```py\n<table>\n <tbody>\n  <tr>\n   <th>A</th><th>B</th><th>C</th> \n  </tr>\n  <tr>\n   <td>1</td><td>2</td><td>3</td>\n  </tr>\n  <tr>\n   <td>5</td><td>6</td><td>7</td>\n  </tr>\n </tbody>\n</table>\n\n```", "```py\n`from` `lxml` `import` `html`\n\n`tree_1500` `=` `html``.``fromstring``(``resp_1500``.``content``)`\n\n```", "```py\n`type``(``tree_1500``)`\n\n```", "```py\nlxml.html.HtmlElement\n\n```", "```py\n`tables` `=` `tree_1500``.``xpath``(``'``//table``'``)`\n`type``(``tables``)`\n\n```", "```py\nlist\n\n```", "```py\n`len``(``tables``)`\n\n```", "```py\n7\n\n```", "```py\n`times` `=` `tree_1500``.``xpath``(``'``//table[3]/tbody/tr/td[1]/b/text()``'``)`\n`names` `=` `tree_1500``.``xpath``(``'``//table[3]/tbody/tr/td[3]/a/text()``'``)`\n`dates` `=` `tree_1500``.``xpath``(``'``//table[3]/tbody/tr/td[4]/text()``'``)`\n\n```", "```py\n`type``(``times``[``0``]``)`\n\n```", "```py\nlxml.etree._ElementUnicodeResult\n\n```", "```py\n`date_str` `=` `[``str``(``s``)` `for` `s` `in` `dates``]`\n`name_str` `=` `[``str``(``s``)` `for` `s` `in` `names``]`\n\n```", "```py\n`def` `get_sec``(``time``)``:`\n    `\"\"\"convert time into seconds.\"\"\"`\n    `time` `=` `str``(``time``)`\n    `time` `=` `time``.``replace``(``\"``+``\"``,``\"``\"``)`\n    `m``,` `s` `=` `time``.``split``(``'``:``'``)`\n    `return` `float``(``m``)` `*` `60` `+` `float``(``s``)`\n\n```", "```py\n`time_sec` `=` `[``get_sec``(``rt``)` `for` `rt` `in` `times``]`\n`race_year` `=` `pd``.``to_datetime``(``date_str``,` `format``=``'``%Y``-``%m``-``%d``\\n``'``)``.``year`\n\n```", "```py\n`from` `lxml` `import` `etree`\n\n`catalog` `=` `etree``.``parse``(``'``data/catalog.xml``'``)`\n\n```", "```py\n`catalog``.``xpath``(``'``//light/text()``'``)`\n\n```", "```py\n['Mostly Shady', 'Mostly Shady']\n\n```", "```py\n`catalog``.``xpath``(``'``//price[@curr=``\"``CAD``\"``]/../common/text()``'``)`\n\n```", "```py\n['Columbine']\n\n```", "```py\n`url_base` `=` `'``https://www.ecb.europa.eu/stats/eurofxref/``'`\n`url2` `=` `'``eurofxref-hist-90d.xml?d574942462c9e687c3235ce020466aae``'`\n`resECB` `=` `requests``.``get``(``url_base``+``url2``)`\n\n```", "```py\n`resECB``.``status_code`\n\n```", "```py\n200\n\n```", "```py\n`ecb_tree` `=` `etree``.``fromstring``(``resECB``.``content``)`\n\n```", "```py\n<gesmes:Envelope xmlns:gesmes=\"http://www.gesmes.org/xml/2002-08-01\"\n        xmlns=\"http://www.ecb.int/vocabulary/2002-08-01/eurofxref\">\n<gesmes:subject>Reference rates</gesmes:subject>\n<gesmes:Sender>\n<gesmes:name>European Central Bank</gesmes:name>\n</gesmes:Sender>\n<Cube>\n<Cube time=\"2023-02-24\">\n<Cube currency=\"USD\" rate=\"1.057\"/>\n<Cube currency=\"JPY\" rate=\"143.55\"/>\n<Cube currency=\"BGN\" rate=\"1.9558\"/>\n</Cube>\n<Cube time=\"2023-02-23\">\n<Cube currency=\"USD\" rate=\"1.0616\"/>\n<Cube currency=\"JPY\" rate=\"143.32\"/>\n<Cube currency=\"BGN\" rate=\"1.9558\"/>\n</Cube>\n</Cube>\n</gesmes:Envelope>\n\n```", "```py\n`namespaceURI` `=` `'``http://www.ecb.int/vocabulary/2002-08-01/eurofxref``'`\n\n`date` `=` `ecb_tree``.``xpath``(``'``./x:Cube/x:Cube/@time``'``,` `namespaces` `=` `{``'``x``'``:``namespaceURI``}``)`\n`date``[``:``5``]`\n\n```", "```py\n['2023-07-18', '2023-07-17', '2023-07-14', '2023-07-13', '2023-07-12']\n\n```", "```py\n`date_str` `=` `[``str``(``s``)` `for` `s` `in` `date``]`\n`timestamps` `=` `pd``.``to_datetime``(``date_str``)`\n`xrates` `=` `pd``.``DataFrame``(``{``\"``date``\"``:``timestamps``}``)`\n\n```", "```py\n`currs` `=` `[``'``GBP``'``,` `'``USD``'``,` `'``CAD``'``]`\n\n`for` `ctry` `in` `currs``:`\n    `expr` `=` `'``.//x:Cube[@currency =` `\"``'` `+` `ctry` `+` `'``\"``]/@rate``'`\n    `rates` `=` `ecb_tree``.``xpath``(``expr``,` `namespaces` `=` `{``'``x``'``:``namespaceURI``}``)`\n    `rates_num` `=` `[``float``(``rate``)` `for` `rate` `in` `rates``]`\n    `first` `=` `rates_num``[``len``(``rates_num``)``-``1``]`\n    `xrates``[``ctry``]` `=` `[``rate` `/` `first` `for` `rate` `in` `rates_num``]`  \n\n```"]