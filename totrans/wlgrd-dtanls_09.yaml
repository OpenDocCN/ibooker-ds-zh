- en: '10 Rapid prototyping: Data analysis'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10 快速原型：数据分析
- en: This chapter covers
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本章涵盖
- en: Prototyping ideas quickly to support a business case
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速原型化想法以支持商业案例
- en: Exploring a dataset to build a proof of concept
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索数据集以构建概念验证
- en: Sometimes, data analysis is about investigating whether an idea is viable. For
    example, is the available data good enough for the business to build a data-driven
    app? We can answer questions like this one by analyzing the data, but it would
    be even more powerful if we could build a working *proof of concept*. By doing
    this, we make the idea come to life for our stakeholders. Crucially, we also discover
    any obstacles to using the data for this purpose.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，数据分析是关于调查一个想法是否可行。例如，现有数据是否足够让公司构建一个数据驱动的应用程序？我们可以通过分析数据来回答这样的问题，但如果我们能构建一个可工作的*概念验证*，那就更有力量了。通过这样做，我们让我们的利益相关者看到这个想法的可行性。关键的是，我们也会发现使用数据实现这一目的的任何障碍。
- en: 'Real business case: Building a proof of concept'
  id: totrans-5
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 真实商业案例：构建概念验证
- en: This chapter was inspired by one of the first projects I delivered as a data
    scientist. The data team was tasked with creating a revenue-generating product.
    The idea was an app that lets someone enter a vehicle’s registration and display
    the current market conditions for that vehicle and vehicles similar to it. Defining
    what made a vehicle similar enough was the hard part, and that was the data-driven
    secret sauce behind the product. Once we’d established some rules, I built a quick
    proof of concept to show stakeholders that the idea worked. Building this proof
    of concept also meant I could communicate the specific challenges of building
    the product for real, which I knew because I had actually tried to make it work
    with the available data and systems.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的灵感来源于我作为数据科学家交付的第一个项目之一。数据团队的任务是创建一个盈利产品。想法是一个应用程序，允许用户输入车辆的注册信息，并显示该车辆及其类似车型的当前市场状况。定义什么使一辆车足够相似是难点，而这正是产品背后的数据驱动秘密。一旦我们确立了某些规则，我就构建了一个快速的概念验证，向利益相关者展示这个想法是可行的。构建这个概念验证也意味着我可以传达构建真实产品的具体挑战，因为我实际上已经尝试过使用可用的数据和系统使其工作。
- en: In this project, spanning this chapter and the next, we practice the skill of
    *rapid prototyping* by exploring a new dataset and building a proof of concept.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章和下一章的项目中，我们通过探索一个新的数据集并构建一个概念验证来练习*快速原型*的技能。
- en: 10.1 The rapid prototyping process
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10.1 快速原型制作过程
- en: Data teams often sit in an R&D function or are expected to do R&D as part of
    their job. This means they don’t just analyze data to answer questions but sometimes
    build things that don’t currently exist in the company. A valuable and often overlooked
    skill for an analyst is to be able to put something functional together to investigate
    the feasibility of an idea. This something is often called a *proof of concept*
    (POC), a *prototype*, or a *minimum viable product* (MVP), although an MVP is
    often even further along than a prototype.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 数据团队通常位于研发部门，或者作为他们工作的一部分被期望进行研发。这意味着他们不仅分析数据来回答问题，有时还会构建公司目前不存在的物品。对于分析师来说，一项宝贵且经常被忽视的技能是能够将某些功能组合在一起，以调查一个想法的可行性。这个“某些东西”通常被称为*概念验证*（POC）、*原型*或*最小可行产品*（MVP），尽管MVP通常比原型更进阶。
- en: Note  Terminology in this area tends to vary. In this chapter, I will be using
    specific definitions of “proof of concept” and “prototype.” The project task will
    be to build a proof of concept, but in the chapter title, the more general process
    of building something to test an idea is called “rapid prototyping.”
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 备注：本领域的术语往往有所不同。在本章中，我将使用“概念验证”和“原型”的具体定义。项目任务将是构建一个概念验证，但在章节标题中，构建某物以测试想法的更一般过程被称为“快速原型”。
- en: 'Although these terms tend to be used interchangeably, they are subtly different:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些术语往往可以互换使用，但它们之间有细微的差别：
- en: A proof of concept is something that tests an idea. It doesn’t have to be a
    polished product; it just needs to be complex enough to see whether an idea is
    feasible.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概念验证是测试一个想法的东西。它不一定要是一个精良的产品；它只需要足够复杂，以便可以看到一个想法是否可行。
- en: A prototype evolves from a proof of concept. Once an idea has been tested, we
    can build a small, usable product based on the proof of concept with real data.
    It won’t be finished, it can live in a development environment like someone’s
    laptop, and it won’t have the features of fully functioning software, but it is
    in a state that mimics a finished product.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原型从概念验证中演变而来。一旦一个想法经过测试，我们就可以基于概念验证和真实数据构建一个小型、可用的产品。它不会完成，它可以存在于像某人的笔记本电脑这样的开发环境中，并且它不会具备完全功能软件的所有功能，但它处于一个模仿最终产品的状态。
- en: Once a prototype exists and has been presented to stakeholders, there might
    be a step where an MVP is created. An MVP is a pilot launch to get the product
    out into the hands of real users as soon as possible. It might be missing some
    features, but it’s in a production environment, and rigor has been applied to
    ensure it works correctly.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦原型存在并且已经向利益相关者展示，可能会有一步创建MVP。MVP是一种试点发布，以便尽可能快地将产品推向真实用户。它可能缺少一些功能，但它处于生产环境中，并且已经应用了严谨性以确保其正确运行。
- en: Whether we are talking about an app, a website, or a machine learning model,
    there will be a notion of putting it into production. Production means it is working
    and people are using it, whether they are internal users or external customers.
    Reaching the MVP stage counts as putting something into production.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无论我们是在谈论一个应用程序、一个网站还是机器学习模型，都会有一个将其投入生产的想法。生产意味着它在运行，并且人们在使用它，无论是内部用户还是外部客户。达到MVP阶段就相当于将其投入生产。
- en: Figure 10.1 shows an example of this process, including the fact that an idea
    can be abandoned at any of the stages from initial ideation to after a working
    prototype is built.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1展示了这个过程的示例，包括一个想法可以在从最初的想法到构建工作原型之后的任何阶段被放弃的事实。
- en: '![figure](../Images/10-1.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/10-1.png)'
- en: Figure 10.1 The path from an idea to production and the steps in between
  id: totrans-18
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.1 从想法到生产以及中间的步骤
- en: Let’s see a concrete example.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个具体的例子。
- en: 10.1.1 Rapid prototyping example
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.1.1 快速原型示例
- en: Suppose your stakeholders want to know which customers are likely to churn from
    their e-commerce platform. In other words, which customers are likely to stop
    using the service? They want to see a list of at-risk customers in some kind of
    tool or dashboard, like an “early warning system,” so they can take action and
    prevent those users from churning.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您的利益相关者想知道哪些客户可能从他们的电子商务平台流失。换句话说，哪些客户可能停止使用该服务？他们希望看到一些工具或仪表板中的风险客户列表，例如“早期预警系统”，以便他们可以采取行动并防止这些用户流失。
- en: As an analyst, you might build a model to predict users who are at risk of churning
    and then incorporate that into such an interactive tool. Table 10.1 shows the
    three stages of this product’s lifecycle.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名分析师，你可能会构建一个模型来预测处于流失风险的用户，并将其整合到这样的交互式工具中。表10.1显示了该产品生命周期的三个阶段。
- en: Table 10.1 An example walkthrough of the three stages
  id: totrans-23
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 表10.1 三阶段示例遍历
- en: '| Stage | Task | Success criteria | Possible reasons to abandon at this stage
    |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 阶段 | 任务 | 成功标准 | 在此阶段放弃的可能原因 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 1) Proof of concept  | Build a basic predictive model.  | • Basic model built
    to an acceptable level of accuracy. • Available data is sufficient to build a
    model.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '| 1) 概念验证 | 构建一个基本的预测模型。  | • 基本模型已构建到可接受的准确度水平。 • 可用数据足以构建模型。'
- en: '| • Available data is insufficient for even a basic churn model.  |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| • 可用数据甚至不足以构建一个基本的流失模型。  |'
- en: '| 2) Prototype  | Build a working interactive tool.  | • Users can use the
    tool to take preventative measures to keep at-risk customers. • Predictions can
    be made in a timely manner.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '| 2) 原型 | 构建一个可工作的交互式工具。  | • 用户可以使用该工具采取预防措施，以保持处于风险中的客户。 • 可以及时做出预测。'
- en: '| • Data required for predictions not available at prediction time. • No market
    for the product.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '| • 预测所需数据在预测时不可用。 • 产品没有市场。'
- en: '|'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| 3) Production  | Build the tool as fully functioning software with a working
    data pipeline.  | • Preventative measures have a tangible financial effect.  |
    • Insufficient return on investment. • Low usage of the tool.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '| 3) 生产 | 将工具构建为具有工作数据管道的完全功能软件。  | • 预防措施产生了可衡量的财务影响。  | • 投资回报率不足。 • 工具使用率低。'
- en: '|'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: 'Why is a proof of concept so important at the start? We want to understand
    the following as quickly as possible:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么在开始时进行概念验证如此重要？我们希望尽快理解以下内容：
- en: Do we have the data to answer the question, build the predictive model, and
    create our app?
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们是否有数据来回答问题、构建预测模型和创建我们的应用程序？
- en: Will we have the data when we need it once the product goes live? Plenty of
    machine learning projects have failed because, while historical data was available
    to train the model, new data wasn’t available for the model to make a prediction
    at a useful time.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品上线后，我们是否会在需要时拥有数据？许多机器学习项目都失败了，因为虽然历史数据可用于训练模型，但新数据在模型做出有用预测的时间点不可用。
- en: What are the challenges in building this product? These might be related to
    data availability, but they might be any number of other technical challenges.
    The key is that you don’t know all the challenges of building something until
    you actually try to build it.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立这个产品的挑战有哪些？这些可能和数据可用性有关，但也可能涉及其他无数的技术挑战。关键在于，直到你真正尝试去建立它，你才知道所有建立某物的挑战。
- en: 'What distinguishes the prototype phase from the proof of concept is that we
    have different questions now:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 原型阶段与概念验证的区别在于我们现在有不同的问题：
- en: '*Is anyone interested in this product?* The product doesn’t have to exist to
    answer this question—a prototype is sufficient. Even a dashboard or a machine
    learning model deployed internally within a company needs to have product market
    fit.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*有人对这个产品感兴趣吗？* 这个产品不必存在就能回答这个问题——一个原型就足够了。即使是一个在公司内部部署的仪表板或机器学习模型，也需要有产品市场匹配度。'
- en: '*How would real users use this?* With a prototype, you can test your assumptions
    about how a real user of the product would use it without having to build the
    whole product. It is still early enough in the process that it shouldn’t be too
    costly to scrap the project at this phase.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*真实用户会如何使用这个产品？* 通过一个原型，你可以在不构建整个产品的情况下测试你对产品真实用户如何使用它的假设。这个过程还处于早期阶段，因此在这个阶段取消项目不应该花费太多。'
- en: These concepts are familiar to software developers and product managers, but
    they also have merit for analysts. The ability to put together a proof of concept
    and a subsequent prototype helps analysts identify what is valuable to work on
    and iterate ideas faster, which in turn means a more results-oriented way of working.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这些概念对软件开发人员和产品经理来说是熟悉的，但它们对分析师也有价值。能够构建一个概念验证和随后的原型帮助分析师确定值得工作的内容，并更快地迭代想法，这反过来意味着更注重结果的工作方式。
- en: Let’s now put these ideas into practice. The project brief is only partly about
    analyzing data to answer a question. It is also about building something to evaluate
    whether the data could support a paying product.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将这些想法付诸实践。项目概述不仅仅是分析数据来回答问题，它还涉及到构建一些东西来评估数据是否能够支持一个付费产品。
- en: '10.2 Project 7: Build a proof of concept to investigate Welsh property prices'
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10.2 项目7：构建一个概念验证来调查威尔士房地产价格
- en: Let’s look at the project, in which we will not only analyze some data, but
    also build a proof-of-concept data product to show to stakeholders. We will start
    by looking at the problem statement, the data dictionary, the outputs we are aiming
    for, and what tools we need to tackle the problem. We will spend more time than
    usual thinking about the output since we’re going beyond analysis and into creating
    products. We can then formulate a results-oriented action plan and dive into the
    example solution.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看这个项目，我们将不仅分析一些数据，还要构建一个概念验证数据产品向利益相关者展示。我们将从查看问题陈述、数据字典、我们追求的输出以及我们需要解决这个问题的工具开始。我们将比平时花更多的时间思考输出，因为我们不仅超越了分析，还进入了创造产品的阶段。然后我们可以制定一个以结果为导向的行动计划，并深入到示例解决方案中。
- en: 10.2.1 Problem statement
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.2.1 问题陈述
- en: You’re working for CymruHomes Connect, a property company specializing in homes
    in Wales. They’re looking to expand their business with the help of data; they
    want to provide insights about the Welsh property market to customers in the form
    of a new app. This app would use historic property sales data to allow users to
    explore property prices in their area of interest.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你在为CymruHomes Connect工作，这是一家专注于威尔士房产的房地产公司。他们希望通过数据来扩大业务；他们希望以新应用程序的形式向客户提供关于威尔士房地产市场的见解。这个应用程序将使用历史房产销售数据，使用户能够探索他们感兴趣地区的房产价格。
- en: They have discovered that the UK government’s Land Registry has a dataset called
    “Price Paid,” which contains publicly available historical sales data. They have
    extracted and made available a few years’ worth of this data.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 他们发现英国政府的土地注册处有一个名为“成交价格”的数据集，其中包含公开的历史销售数据。他们提取并提供了几年的这些数据。
- en: NOTE  Original data come from [https://mng.bz/yWvB](https://mng.bz/yWvB). It
    contains HM Land Registry data © Crown copyright and database right 2021\. This
    data is licensed under the Open Government Licence v3.0\. Thank you both to the
    Land Registry and Royal Mail for permission to use the house price and address
    data, respectively.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：原始数据来自 [https://mng.bz/yWvB](https://mng.bz/yWvB)。它包含 HM 土地登记局数据 © 英国皇家版权和数据库权利
    2021。此数据根据开放政府许可 v3.0 许可。感谢土地登记局和英国皇家邮政分别允许使用房价和地址数据。
- en: 'They have asked you to look into whether this data is indeed suitable for powering
    their new app. This is quite vague, but they have some ideas they’d like to incorporate:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 他们要求你调查这些数据是否确实适合为他们的新应用程序提供动力。这相当模糊，但他们有一些想法希望融入：
- en: They are particularly interested in the analysis of property types, for example,
    whether a house is terraced or detached, because they believe it strongly influences
    their customers when choosing a property, so they’d like the analysis to include
    breakdowns by this dimension.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们特别关注房产类型的分析，例如，一栋房子是连排式还是独立式，因为他们坚信这强烈影响了他们的客户在选择房产时的决策，所以他们希望分析包括这一维度的细分。
- en: They also believe users will be interested in comparing properties at the lowest
    level of granularity, so the ability to see street-level data is important.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们还认为用户会对比较最细粒度的房产感兴趣，因此查看街级数据的能力很重要。
- en: They have only asked you to explore the data and see what questions can be answered
    with it, focusing on the angles they mentioned previously. However, we will go
    beyond their request and build a proof of concept to showcase what the final app
    might look like and do.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 他们只要求你探索数据并看看可以用它回答哪些问题，重点关注他们之前提到的角度。然而，我们将超越他们的要求，构建一个概念证明来展示最终应用程序可能的样子和功能。
- en: An important lesson I’ve learned from working in data science is that stakeholders
    often cannot articulate exactly what they want because they lack understanding
    of what is possible. Creating proofs of concept is a way to help bridge this gap
    and provide additional value as a data professional.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我从数据科学工作中学到的一个重要教训是，利益相关者往往无法明确表达他们想要什么，因为他们缺乏对可能性的了解。创建概念证明是帮助弥合这一差距并作为数据专业人士提供额外价值的一种方式。
- en: Before we discuss what our steps might be in the process, let’s review the available
    data, the desired outcomes, and the tools we will need.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们讨论在过程中可能采取的步骤之前，让我们回顾一下可用的数据、期望的结果以及我们将需要的工具。
- en: 10.2.2 Data dictionary
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.2.2 数据字典
- en: 'As always, a key initial step is to take a look at the available data. Table
    10.2 shows the data dictionary as provided by the Land Registry. Part of the data
    dictionary comes from Kaggle ([https://mng.bz/QDWG](https://mng.bz/QDWG)), and
    the address columns are detailed here: [https://mng.bz/XxWv](https://mng.bz/XxWv).
    The definitions from the original data dictionaries are provided as is.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，一个关键的第一步是查看可用的数据。表 10.2 显示了土地登记局提供的数据字典。数据字典的一部分来自 Kaggle ([https://mng.bz/QDWG](https://mng.bz/QDWG))，地址列在此处详细说明：[https://mng.bz/XxWv](https://mng.bz/XxWv)。原始数据字典的定义提供如下。
- en: Table 10.2 Data dictionary of the Price Paid data
  id: totrans-56
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 表 10.2 价格支付数据的数据字典
- en: '| Column | Definition |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 列 | 定义 |'
- en: '| --- | --- |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Transaction unique identifier  | A reference number generated automatically,
    recording each published sale. The number is unique and will change each time
    a sale is recorded.  |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 交易唯一标识符 | 自动生成的参考编号，记录每次发布的销售。该编号是唯一的，每次记录销售时都会更改。  |'
- en: '| Price  | Sale price stated on the transfer deed.  |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 价格 | 转让文件上声明的销售价格。  |'
- en: '| Date of transfer  | Date when the sale was completed, as stated on the transfer
    deed.  |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 转让日期 | 销售完成的日期，如转让文件上所述。  |'
- en: '| Postcode  | Postal code of the address.  |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 邮编 | 地址的邮政编码。  |'
- en: '| Property type  | D = Detached, S = Semi-detached, T = Terraced, F = Flats/Maisonettes,
    O = Other  |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 房产类型 | D = 独立式，S = 半独立式，T = 连排式，F = 公寓/联排别墅，O = 其他  |'
- en: '| Old/New  | Indicates the age of the property and applies to all Price Paid
    transactions, residential and nonresidential. Y = A newly built property, N =
    An established residential building'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '| 旧/新 | 表示房产的年龄，并适用于所有价格支付交易，住宅和非住宅。Y = 新建房产，N = 已建立的住宅建筑'
- en: '|'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Duration  | Relates to the tenure: F = Freehold, L= Leasehold  |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 持有时间 | 与产权相关：F = 自由持有，L = 租赁持有  |'
- en: '| Primary addressable object name (PAON)  | Typically house number/name (e.g.,
    42 or “Oak Cottage”).  |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 主要地址对象名称（PAON） | 通常为门牌号/名称（例如，42 或“橡树小屋”）。  |'
- en: '| Second addressable object name (SAON)  | If there is a sub-building, for
    example, the building is divided into flats, there will be a SAON.  |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| 第二个可寻址对象名称（SAON） | 如果有子建筑，例如，建筑物被分割成公寓，将会有一个SAON。  |'
- en: '| Street  | The street part of the address.  |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| 街道 | 地址中的街道部分。  |'
- en: '| Locality  | Additional detail about the location (e.g., a district in a city).  |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 地区 | 关于位置的额外详细信息（例如，城市中的区域）。  |'
- en: '| Town/City  | The town/city part of the address.  |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 城镇/城市 | 地址中的城镇/城市部分。  |'
- en: '| District  | The district part of the address.  |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 区域 | 地址中的区域部分。  |'
- en: '| County  | The county part of the address.  |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 县 | 地址中的县部分。  |'
- en: '| Category type  | Indicates the type of Price Paid transaction. A = Standard
    Price Paid entry; includes single residential property sold for full market value.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '| 类别类型 | 表示支付价格交易的类型。A = 标准支付价格条目；包括以全市场价值出售的单套住宅。'
- en: B = Additional Price Paid entry; includes transfers under a power of sale/repossessions,
    buy-to-lets (where they can be identified by a mortgage) and transfers to nonprivate
    individuals.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: B = 额外支付价格条目；包括在出售/收回权下的转让、出租购房（如果可以通过抵押贷款识别）以及转让给非私人个人。
- en: '|'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Record status  | Relevant to monthly files only. Indicates additions, changes,
    and deletions to the records. Yearly files contain latest versions of all records.  |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 记录状态 | 仅与月度文件相关。表示记录的增加、更改和删除。年度文件包含所有记录的最新版本。  |'
- en: Now that we have seen what’s available, let’s look at the outcomes of this project.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到了可用的内容，让我们看看这个项目的成果。
- en: 10.2.3 Desired outcomes
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.2.3 预期成果
- en: Our stakeholders initially want recommendations about what kind of analyses
    we could include in a potential app with the available data. Recommendations about
    additional data sources to incorporate would also be useful. Finally, we have
    decided to build a proof of concept, partly to show the stakeholders what their
    potential app might look like, but also to test whether the data is sufficient
    to build a useful product.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的利益相关者最初希望了解我们可以在潜在应用程序中包含哪些类型的分析。关于要纳入的额外数据源的建议也将很有用。最后，我们决定构建一个概念验证，部分是为了向利益相关者展示他们的潜在应用程序可能的样子，同时也是为了测试数据是否足以构建一个有用的产品。
- en: 10.2.4 Required tools
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.2.4 必需工具
- en: What constitutes a proof of concept will depend on your preferred tools. It
    might be a working web application, such as the one built with the Python library
    `streamlit` in the example solution. However, it could be a dashboard, such as
    one built with the R language’s package Shiny, or with a business intelligence
    tool such as Tableau or Power BI.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 证明概念的内容将取决于您首选的工具。它可能是一个工作网络应用程序，例如示例解决方案中用Python库`streamlit`构建的应用程序。然而，它也可能是一个仪表板，例如用R语言的包Shiny或使用商业智能工具如Tableau或Power
    BI构建的仪表板。
- en: In the example solution, I use Python and the `pandas` library for data exploration,
    and `matplotlib`, `seaborn`, and `ridgeplot` for visualization. I also introduce
    the `streamlit` library to build the interactive, web-based proof of concept.
    Your tools may differ, especially for the proof-of-concept stage. The checklist
    for this project is that your tool can
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例解决方案中，我使用Python和`pandas`库进行数据探索，以及`matplotlib`、`seaborn`和`ridgeplot`进行可视化。我还介绍了`streamlit`库来构建交互式、基于网络的证明概念。您的工具可能不同，尤其是在概念验证阶段。此项目的清单是您的工具可以
- en: Load and combine large datasets from CSV files containing millions of rows
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从包含数百万行数据的CSV文件中加载和组合大型数据集
- en: Perform basic data manipulation tasks, such as filtering, sorting, grouping,
    and reshaping data
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行基本的数据操作任务，例如过滤、排序、分组和重塑数据
- en: Create data visualizations
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建数据可视化
- en: Create an interactive application, whether a dashboard or a web application,
    where different artifacts, such as charts or other visualizations, are displayed
    based on user input
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个交互式应用程序，无论是仪表板还是网络应用程序，其中根据用户输入显示不同的工件，例如图表或其他可视化。
- en: 'Tip  You might find it easier to use two different tools for this project:
    one for the data analysis and another for building a proof of concept. If you
    use a programming language that contains libraries or packages for building applications,
    such as Shiny for R or `streamlit` for Python, you may want to use this project
    to try them out.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士  您可能发现使用两个不同的工具来完成此项目更容易：一个用于数据分析，另一个用于构建概念验证。如果您使用包含用于构建应用程序的库或包的编程语言，例如R语言的Shiny或Python的`streamlit`，您可能想使用此项目来尝试它们。
- en: 10.3 Applying the results-driven method to investigating Welsh property data
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10.3 将结果驱动方法应用于调查威尔士房产数据
- en: Let’s now address this problem with our results-driven framework and formulate
    our action plan.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在用我们的以结果为导向的框架来解决这个问题，并制定我们的行动计划。
- en: '![figure](../Images/10-unnumb-1.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-unnumb-1.png)'
- en: We have an idea of what our stakeholders want to see. Their interest is in whether
    the data is suitable to support the app idea they have. They have stated that
    they are particularly interested in property types and whether street-level data
    can be incorporated into their app. We also understand that building a proof of
    concept will allow us to identify possible problems with using this data, which
    is why we will spend the time doing so.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对利益相关者想要看到的内容有一个想法。他们的兴趣在于数据是否适合支持他们拥有的应用想法。他们表示，他们特别感兴趣的是房产类型以及是否可以将街级数据纳入他们的应用中。我们也理解，构建概念验证将使我们能够识别使用这些数据可能存在的问题，这就是为什么我们将花时间这样做。
- en: '![figure](../Images/10-unnumb-2.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-unnumb-2.png)'
- en: Starting at the end means thinking about the app first and foremost. We cannot
    know exactly what will go in the app until we analyze the data, but keeping an
    eye on the app during the analysis phase will help us focus on getting results
    sooner. Whenever we create charts during the analysis phase, we should consider
    whether they would be useful in the proof of concept. Therefore, our analysis
    won’t just consider our stakeholders’ requests, but also the possible preferences
    of future users of the app. Our minimum viable answer in this project will look
    more like a minimum viable product would if we were designing software, which
    we are to an extent.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 从最后开始意味着首先考虑应用。在我们分析数据之前，我们无法确切知道应用中会有什么，但在分析阶段关注应用将帮助我们更快地获得结果。在分析阶段创建图表时，我们应该考虑它们是否对概念验证有用。因此，我们的分析不仅会考虑利益相关者的要求，还会考虑未来应用用户的可能偏好。在这个项目中，我们的最小可行答案将更类似于如果我们设计软件时的最小可行产品，这在某种程度上是我们正在做的事情。
- en: '![figure](../Images/10-unnumb-3.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-unnumb-3.png)'
- en: In this instance, the data has been identified for us. However, while building
    our proof of concept, we may identify gaps in the data or aspects of the property
    market that it doesn’t cover. We should consider additional data sources that
    would improve the quality of the app and recommend them when communicating our
    results to the stakeholders.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，数据已经为我们识别出来。然而，在构建我们的概念验证时，我们可能会发现数据中的空白或该数据未涵盖的房地产市场方面。我们应该考虑额外的数据来源，以改善应用的质量，并在向利益相关者传达结果时推荐它们。
- en: '![figure](../Images/10-unnumb-4.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-unnumb-4.png)'
- en: The data has been downloaded for us in its raw form from the Land Registry.
    However, we will need to combine the different yearly files before we start exploring
    the data. We may also wish to spend some time looking at the source of the data,
    that is, the Land Registry website, to learn more about how it was collected and
    what its possible limitations may be.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经从土地登记处下载了原始数据。然而，在我们开始探索数据之前，我们需要将不同的年度文件合并。我们也可能希望花些时间查看数据的来源，即土地登记处的网站，以了解更多关于数据是如何收集的以及可能存在的局限性。
- en: '![figure](../Images/10-unnumb-5.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-unnumb-5.png)'
- en: We will work on the project in two phases. The first phase is analyzing the
    available data, so our high-level steps might be
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将分两个阶段进行项目工作。第一阶段是分析可用数据，因此我们的高级步骤可能是
- en: Investigate the completeness of the data, such as identifying missing data.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查数据的完整性，例如识别缺失数据。
- en: Understand the geographic breakdown of the data, such as the different address
    levels, like locality and district.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解数据的地理分布，例如不同的地址级别，如地区和区。
- en: Once we understand the geographic breakdown, we can extract Welsh properties
    to use in our app.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦我们了解了地理分布，我们就可以提取威尔士的房产数据用于我们的应用。
- en: 'We also want to investigate property types as per our stakeholders’ request.
    Questions we may be interested in are the following: How does the sale price vary
    by property type? Which property types are more popular? Do these price and popularity
    patterns vary geographically?'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还希望根据利益相关者的要求调查房产类型。我们可能感兴趣的问题如下：销售价格如何随房产类型而变化？哪些房产类型更受欢迎？这些价格和流行模式在地理上是否有所不同？
- en: Finally, we want to identify visualizations that can be recreated in our proof-of-concept
    app.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们希望识别出可以在我们的概念验证应用中重新创建的可视化。
- en: 'Once we have completed our initial analysis, we can look to building our proof
    of concept. Our considerations for this phase, and therefore requirements for
    our proof-of-concept app, are the following:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们完成了初步分析，我们就可以着手构建概念验证。这一阶段我们需要考虑的，以及因此对概念验证应用程序的要求如下：
- en: Any data and visualizations displayed in the app should change based on user
    input.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序中显示的任何数据和可视化应根据用户输入进行更改。
- en: The app should use all the real, available Welsh property data.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序应使用所有真实、可用的威尔士房地产数据。
- en: Options that users can change should come from the data (e.g., a list of counties
    they can select from).
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以更改的选项应来自数据（例如，他们可以从中选择的县列表）。
- en: The proof of concept does not need to be a web application; it just needs to
    contain interactive elements based on real data that you can show your stakeholders.
    A dashboard built in a BI tool would meet these criteria. If you’re a Python and
    Jupyter user, even having interactive widgets inside a Jupyter notebook would
    suffice.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 概念验证不需要是一个网络应用程序；它只需要包含基于真实数据的交互元素，这样你就可以向利益相关者展示。在BI工具中构建的仪表板将满足这些标准。如果你是Python和Jupyter用户，甚至在Jupyter笔记本中拥有交互式小部件也足够了。
- en: '![figure](../Images/10-unnumb-6.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-unnumb-6.png)'
- en: The presentation of the output would consist of communicating the results of
    the analysis phase, as well as allowing stakeholders to see and even try the interactive
    proof of concept. The two complement each other because any limitations of the
    proof of concept will be discovered in the analysis phase and can be communicated
    while demonstrating the proof of concept itself.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的展示将包括传达分析阶段的结果，以及让利益相关者看到甚至尝试交互式概念验证。这两者相辅相成，因为概念验证的任何局限性都将在分析阶段被发现，并在展示概念验证本身时进行传达。
- en: '![figure](../Images/10-unnumb-7.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-unnumb-7.png)'
- en: Iteration is key when rapidly prototyping ideas. Whatever tool we use to build
    our proof of concept should make it easy to quickly make wholesale changes to
    its functionality. At this stage, we are not bound by production considerations
    such as user authentication, permissions, or managing servers and databases. We
    should be able to make changes quickly based on feedback both at the proof-of-concept
    and prototype stages.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在快速原型设计时，迭代至关重要。我们用于构建概念验证的任何工具都应该使我们能够轻松快速地对功能进行大量更改。在这个阶段，我们不受生产考虑的限制，如用户身份验证、权限或管理服务器和数据库。我们应该能够根据概念验证和原型阶段的反馈快速做出更改。
- en: Now that we have an action plan outlined, it’s time to start working on the
    project. If you are reading this chapter from start to end, I suggest that this
    is the time to attempt the project yourself before reading the next section, which
    details an example solution.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经概述了行动计划，现在是时候开始着手项目了。如果你是从头到尾阅读这一章，我建议在阅读下一节之前，尝试自己完成这个项目，该节详细介绍了示例解决方案。
- en: '10.4 An example solution: Building a prototype to explore using house price
    data'
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 10.4 一个示例解决方案：构建原型以探索使用房价数据
- en: Now, let’s walk through an example solution. As ever, I strongly recommend attempting
    the project yourself first, as our solutions will differ, particularly for this
    project.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过一个示例解决方案来探讨。一如既往，我强烈建议你首先尝试自己完成这个项目，因为我们的解决方案会有所不同，尤其是对于这个项目。
- en: As for the action plan, we will combine the separate yearly files first. Then,
    we will explore the combined dataset, paying particular attention to property
    types and the geographical hierarchy of the data, as per our stakeholders’ request.
    We will decide which visualizations will go into our app before identifying an
    appropriate tool with which to build our proof of concept. Finally, we will build
    a proof of concept using the data, where the user can change the visualizations
    that are displayed based on their input.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 至于行动计划，我们首先将合并单独的年度文件。然后，我们将探索合并后的数据集，特别关注数据中的物业类型和地理层次结构，正如利益相关者所要求的。在确定构建概念验证的适当工具之前，我们将决定哪些可视化将包含在我们的应用程序中。最后，我们将使用数据构建一个概念验证，用户可以根据他们的输入更改显示的可视化。
- en: 10.4.1 Analyzing data before prototyping
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.4.1 在原型设计前分析数据
- en: The first step in our process is to merge the different yearly files that our
    stakeholders provided. They cover the period from 2021 to 2023 inclusive. Initially,
    we will assume they have the same format, but we are prepared for this not to
    be the case.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们流程的第一步是将利益相关者提供的不同年度文件合并。它们涵盖了从2021年到2023年inclusive的时期。最初，我们将假设它们具有相同的格式，但我们已准备好应对这种情况。
- en: Merging datasets without headings
  id: totrans-121
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 合并没有标题的数据集
- en: 'Let’s take a look at one of the files. The following code produces the output
    shown in figure 10.2:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看其中一个文件。以下代码生成了如图10.2所示的输出：
- en: '[PRE0]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![figure](../Images/10-2.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/10-2.png)'
- en: Figure 10.2 A snapshot of the raw 2021 data
  id: totrans-125
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.2 2021年原始数据的快照
- en: Upon inspection, the files contain no headers, so we need to provide column
    names based on the data dictionary. Apart from that, we will convert the date
    column to the correct type so we can verify that the data indeed covers the years
    it claims to. The following code reads in each of the yearly files in turn and
    combines them into a single `pandas` `DataFrame`. The output, a snapshot of the
    combined data, is shown in figure 10.3.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 检查后发现，文件中没有标题，因此我们需要根据数据字典提供列名。除此之外，我们还将日期列转换为正确的类型，以便我们可以验证数据确实覆盖了它所声称的年份。以下代码按顺序读取每年的每个文件并将它们合并成一个单一的`pandas`
    `DataFrame`。合并数据的快照输出如图10.3所示。
- en: '[PRE1]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![figure](../Images/10-3.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/10-3.png)'
- en: Figure 10.3 A snapshot of the combined Price Paid data
  id: totrans-129
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.3 合并后的价格数据快照
- en: 'Let’s verify that this combined dataset starts at the beginning of 2021 and
    ends in late 2023\. We will look at the smallest and largest dates to do this,
    as shown in the following code, the output of which presented in figure 10.4:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们验证这个合并后的数据集是否从2021年开始，并在2023年底结束。我们将查看最小和最大的日期来完成这项工作，如下面的代码所示，其输出结果如图10.4所示：
- en: '[PRE2]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![figure](../Images/10-4.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/10-4.png)'
- en: Figure 10.4 Verification that the data does indeed cover the years 2021–2023
  id: totrans-133
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.4 验证数据确实覆盖了2021-2023年
- en: 'Now that we have combined our data and verified the date range, we will export
    it for later use. This means our analysis and proof of concept code can reference
    the combined data directly:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经合并了数据并验证了日期范围，我们将导出它以供以后使用。这意味着我们的分析和概念验证代码可以直接引用合并后的数据：
- en: '[PRE3]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We are now ready to move on to the analysis phase.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以进入分析阶段了。
- en: Investigating data quality
  id: totrans-137
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 调查数据质量
- en: 'Let’s do some initial sanity checking of the combined data. We are interested
    in looking at missing data, outliers, especially in the sale price, and breakdowns
    of the various categories. We will start by reading the data again. If we continue
    from the previous code snippets, this is not strictly necessary, but because we
    decided it was good practice to split the merging and the analysis code, we will
    write the code that way. In the example code files, the merging and analysis phases
    happen in separate files, so we will be consistent here, too:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们对合并后的数据进行一些初步的合理性检查。我们感兴趣的是查看缺失数据、异常值，尤其是在销售价格方面，以及各种类别的分解。我们将首先再次读取数据。如果我们从之前的代码片段继续，这并不是严格必要的，但因为我们决定将合并和数据分析代码分开是一种良好的实践，我们将这样编写代码。在示例代码文件中，合并和分析阶段发生在不同的文件中，因此我们也将保持一致性：
- en: '[PRE4]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here, we also set something called the “float format.” This is a way to tell
    `pandas` how to display numbers. The reason we explicitly set it is that house
    prices will vary significantly, and it is likely that `pandas` will show the largest
    numbers using scientific notation. That is, one million would be shown as `1e6`
    or similar rather than displaying all the zeros. Setting the float format will
    avoid this problem, and as we will be working with prices that are monetary values,
    two decimal points makes sense.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们还设置了一个名为“浮点格式”的东西。这是告诉`pandas`如何显示数字的一种方式。我们明确设置它的原因是因为房价会有很大的变化，`pandas`可能会使用科学记数法显示最大的数字。也就是说，一百万可能会显示为`1e6`或类似，而不是显示所有的零。设置浮点格式将避免这个问题，并且由于我们将处理的是货币价值的价格，两位小数是有意义的。
- en: 'Let’s start by looking at missing data across our columns. The following code
    investigates this, and the output is shown in figure 10.5:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看我们列中的缺失数据。以下代码调查了这个问题，输出结果如图10.5所示：
- en: '[PRE5]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![figure](../Images/10-5.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/10-5.png)'
- en: Figure 10.5 Number of missing values by column
  id: totrans-144
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.5 每列缺失值的数量
- en: This output tells us that all missing data is related to addresses. We have
    some missing postcodes, street names, and a lot of missing data for locality and
    the “second addressable object name” (SAON). These latter columns will be specific
    to different areas and properties, so they are unlikely to be a problem. The data
    dictionary even suggested that not all properties have a SAON.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这个输出告诉我们，所有缺失数据都与地址有关。我们有一些缺失的邮政编码、街道名称，以及大量缺失的本地性和“第二个可寻址对象名称”（SAON）数据。这些后列将针对不同的地区和财产，因此它们不太可能成为问题。数据字典甚至建议并非所有财产都有SAON。
- en: 'We should examine instances where there is no street name for a property, as
    this may be a problem, especially considering our stakeholders asked about street-level
    data. The following code investigates some missing street names, and the output
    is shown in figure 10.6:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该检查那些没有街道名称的属性实例，因为这可能是一个问题，特别是考虑到我们的利益相关者询问了街道级数据。以下代码调查了一些缺失的街道名称，输出结果如图10.6所示：
- en: '[PRE6]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![figure](../Images/10-6.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-6.png)'
- en: Figure 10.6 A sample of properties with no street details
  id: totrans-149
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.6 没有街道详细信息的属性样本
- en: While this is only a small selection of the over 50,000 rows with missing street
    names, it does appear that a lot of these instances are properties that have names
    like “The Barn” or “The Old School.” This might explain why parts of the address
    are missing.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这只是超过50,000行缺失街道名称的小部分，但似乎很多这些实例都是像“The Barn”或“The Old School”这样的属性名称。这或许可以解释为什么地址的一部分缺失。
- en: 'We could leave these missing street names intact since, in many cases, they
    appear to be not applicable rather than missing. However, if we are to surface
    street names to users in our app, we need an option to filter on properties with
    no street name. We could handle this in the app itself or fill in the missing
    data with a placeholder value. Let’s opt to make the data as clean as possible
    and fill in the missing value. The following code achieves this:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以保留这些缺失的街道名称，因为在许多情况下，它们似乎是不适用而不是缺失。然而，如果我们要在我们的应用程序中向用户展示街道名称，我们需要一个选项来过滤没有街道名称的属性。我们可以在应用程序本身中处理这个问题，或者用占位符值填充缺失的数据。让我们选择使数据尽可能干净，并填充缺失值。以下代码实现了这一点：
- en: '[PRE7]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Let’s take stock of what we have done so far and start building up our diagram
    to document our steps. Figure 10.7 shows what we have done so far, including the
    decision about what to do about missing street names.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们总结一下到目前为止我们所做的工作，并开始构建我们的图来记录我们的步骤。图10.7显示了到目前为止我们所做的工作，包括关于如何处理缺失街道名称的决策。
- en: '![figure](../Images/10-7.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-7.png)'
- en: Figure 10.7 The first steps of our analysis
  id: totrans-155
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.7 我们分析的第一步
- en: Investigating missing geographic data
  id: totrans-156
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 调查缺失的地理数据
- en: 'More worrying than missing street names is the fact that we have thousands
    of missing postcodes. Again, let’s look at a selection of these. The following
    code finds some examples, and the output is shown in figure 10.8:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 比缺少街道名称更令人担忧的是，我们竟然有数千个缺失的邮政编码。再次，让我们看看这些缺失邮政编码的几个例子。以下代码找到了一些示例，输出结果如图10.8所示：
- en: '[PRE8]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![figure](../Images/10-8.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-8.png)'
- en: Figure 10.8 A selection of records with missing postcode data
  id: totrans-160
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.8 缺失邮政编码数据的记录选择
- en: Looking at the house names, these also seem like properties with explicit names,
    as well as some references to garages. However, in this case, that does not explain
    why there is no postcode information since UK addresses generally have a postcode.
    We have a decision to make about this missing data. On the one hand, the missing
    records are a small percentage of the overall dataset, but on the other hand,
    these records still contribute to the housing market and, therefore, all contain
    relevant information.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 观察房屋名称，这些名称似乎也是具有明确名称的属性，以及一些关于车库的引用。然而，在这种情况下，这并不能解释为什么没有邮政编码信息，因为英国地址通常都有邮政编码。我们关于这些缺失数据有一个决策要做出。一方面，缺失的记录只占整体数据集的一小部分，但另一方面，这些记录仍然对房地产市场有贡献，因此它们都包含相关信息。
- en: We will keep records that have no postcode information, but we will be mindful
    of their presence while continuing our analysis. As we have reached another decision
    point, let’s add this to our diagram in figure 10.9 to record the latest step
    in our analysis.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将记录没有邮政编码信息的记录，但在继续我们的分析时，我们会留意它们的存在。既然我们已经达到了另一个决策点，让我们将这一步添加到图10.9中的图中，以记录我们分析中的最新步骤。
- en: '![figure](../Images/10-9.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-9.png)'
- en: Figure 10.9 The latest diagram of our analytical steps
  id: totrans-164
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.9 我们分析步骤的最新图
- en: Investigating distribution and outliers in a price column
  id: totrans-165
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 调查价格列中的分布和异常值
- en: 'We are also interested in the distribution of the price column as it is the
    key variable on which our app will be based. The following code produces a high-level
    statistical summary of the data, which is shown in figure 10.10:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也对价格列的分布感兴趣，因为它是我们应用程序将基于的关键变量。以下代码生成了数据的概要统计摘要，如图10.10所示：
- en: '[PRE9]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![figure](../Images/10-10.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-10.png)'
- en: Figure 10.10 Statistical overview of the `sale_price` column
  id: totrans-169
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.10 `sale_price`列的统计概述
- en: 'There are values ranging from £1 to over £500 million, so there will be outliers
    to handle. The mean is also significantly higher than the median, which is shown
    as 50% in the diagram, suggesting that the data is right-skewed. That in itself
    is not worrisome because price data tends to be in that shape, but we will investigate
    the outliers. To start with, let’s look at properties that sold for less than
    £1,000\. The following code applies this filter, and the output is shown in figure
    10.11:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 存在的价值从£1到超过£500百万不等，因此将会有异常值需要处理。平均值也显著高于中位数，这在图表中显示为50%，表明数据是右偏斜的。这本身并不可怕，因为价格数据往往呈现这种形状，但我们将调查异常值。首先，让我们看看售价低于£1,000的房产。以下代码应用了这个过滤器，输出结果如图10.11所示：
- en: '[PRE10]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![figure](../Images/10-11.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-11.png)'
- en: Figure 10.11 A sample of 10 properties that sold for less than £1,000
  id: totrans-173
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.11 10个售价低于£1,000的房产样本
- en: 'Looking at the addresses of these transactions, there does not seem to be other
    data errors that could explain these low sale prices. However, all these transactions
    are in category B, according to the `category_type` column. Consulting the data
    dictionary in table 8.1, we can see that category B records are nonstandard transactions,
    including “transfers under a power of sale/repossessions.” It seems to be the
    case that properties categorized under B were sold for nominal amounts for reasons
    other than a standard property purchase. To verify this, let’s look at the proportion
    of category A versus B in the lower-valued properties. The following code does
    this and produces the output in figure 10.12:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 观察这些交易的地址，似乎没有其他数据错误可以解释这些低售价。然而，根据`category_type`列，所有这些交易都属于类别B。参考表8.1中的数据字典，我们可以看到类别B记录是非标准交易，包括“在出售权/收回下的转让”。似乎属于B类别的房产以象征性的金额出售，原因并非标准房产购买。为了验证这一点，让我们看看低价值房产中A类与B类的比例。以下代码执行此操作，并在图10.12中产生输出：
- en: '[PRE11]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![figure](../Images/10-12.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-12.png)'
- en: Figure 10.12 Distribution of `category_type` for low-valued properties
  id: totrans-177
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.12 低价值房产的`category_type`分布
- en: 'This offers an explanation for the lowest values in our data. There are also
    properties in the range of over £500M, as evidenced by the table in figure 10.10\.
    Let’s inspect those to find out more. The following code identifies those high-value
    properties, and the output is shown in figure 10.13:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这为我们数据中的最低值提供了一个解释。还有超过£500M范围的房产，如图10.10中的表格所示。让我们检查这些房产以了解更多信息。以下代码识别这些高价值房产，输出结果如图10.13所示：
- en: '[PRE12]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![figure](../Images/10-13.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-13.png)'
- en: Figure 10.13 Properties worth over £300M
  id: totrans-181
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.13 值超过£300M的房产
- en: Based on the names, one of these is an entire science park, and after doing
    some research, it appears the most expensive transaction might be something called
    Nine Elms Park, a large green space in a development in London, situated on Nine
    Elms Lane.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 根据名称，其中之一是一个完整的科学园区，经过一番研究，最昂贵的交易可能是一种被称为Nine Elms Park的东西，这是一个位于伦敦Nine Elms
    Lane开发中的大型绿地。
- en: 'To conclude our analysis of the price column, lower-valued transactions are
    due to being a special type, category B, and the highest-valued transactions are
    entire developments rather than individual properties. We don’t want to include
    those high-value transactions in our app, which is aimed at residential buyers,
    so we will drop the highest values. We could also consider dropping category B
    transactions, but perhaps users of the app might be interested if there were repossessions
    or other nonstandard transactions in the area they’re interested in, so we’ll
    leave that data intact. The following code keeps only the data under a high threshold,
    say £10M, which is a reasonable cutoff for most residential buyers. Anyone with
    a higher budget will be better served by more specialized real estate agencies:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 为了总结我们对价格列的分析，低价值交易是由于特殊类型，即类别B，而最高价值交易是整个开发项目而不是单个房产。我们不希望在我们的应用程序中包含这些高价值交易，该应用程序旨在面向住宅买家，因此我们将删除最高值。我们也可以考虑删除类别B交易，但也许应用程序的用户可能对感兴趣地区的收回或其他非标准交易感兴趣，所以我们将保留这些数据。以下代码仅保留低于高阈值的
    数据，例如£10M，这对于大多数住宅买家来说是一个合理的截止点。任何预算更高的买家将更适合由更专业的房地产机构服务：
- en: '[PRE13]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Since we had to make a decision about outliers, let’s add another step to our
    diagram documenting the process so far, as shown in figure 10.14.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们必须对异常值做出决定，让我们在记录到目前为止过程的图表中添加另一个步骤，如图10.14所示。
- en: '![figure](../Images/10-14.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-14.png)'
- en: Figure 10.14 Latest diagram of the process, including the investigation of price
    outliers
  id: totrans-187
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.14 包括价格异常调查的最新流程图
- en: Now, we are ready to look at other aspects of the data, namely, the various
    categorizations of our property transactions.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经准备好查看数据的其他方面，即我们房产交易的多种分类。
- en: Investigating categorizations in the data
  id: totrans-189
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 调查数据中的分类
- en: There are several different ways that properties are categorized in our data.
    Judging by the data dictionary in table 8.1, we may want to update the names of
    these categories to be more descriptive. Let’s look at them in turn.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的数据中，房产的分类有几种不同的方式。根据表8.1中的数据字典，我们可能想要更新这些类别的名称，使其更具描述性。让我们依次查看它们。
- en: 'Property type is of strong interest to our stakeholders. This data is labeled
    with individual letters (e.g., T for terraced houses). This is fine, but if we
    want to use the data in our app or even label charts correctly, the full names
    would be better. The following code remaps the property types to their full names
    and then creates the chart in figure 10.15, which shows the breakdown of property
    types in our data:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 房产类型对我们利益相关者来说非常重要。这些数据用单个字母标记（例如，T代表排屋）。这没问题，但如果我们想在我们的应用程序中使用这些数据或正确标记图表，完整的名称会更好。以下代码将房产类型重新映射到它们的完整名称，然后创建图10.15所示的图表，该图表显示了我们的数据中房产类型的细分：
- en: '[PRE14]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![figure](../Images/10-15.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-15.png)'
- en: Figure 10.15 Breakdown of property types in our data
  id: totrans-194
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.15 我们数据中房产类型的细分
- en: 'If you have seen what houses in the United Kingdom are generally like, it won’t
    be a surprise to see that most properties are either terraced or semi-detached.
    Now, let’s remap the other categorizing columns, starting with whether a property
    is a new build or not, that is, newly built at the time of purchase. The following
    code recategorizes the data and produces the output in figure 10.16 to investigate
    the breakdown of this column:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经看到过英国的房子通常是什么样的，那么看到大多数房产要么是排屋要么是半独立式，就不会感到惊讶。现在，让我们重新映射其他分类列，从房产是否为新建开始，即在购买时新建。以下代码重新分类了数据，并在图10.16中产生了输出，以调查这一列的细分：
- en: '[PRE15]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![figure](../Images/10-16.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-16.png)'
- en: Figure 10.16 The breakdown of existing vs. newly built properties
  id: totrans-198
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.16 现有房产与新建房产的细分
- en: 'The sanity check of this column should be that most properties were already
    built at the time of purchase, which is what we see in the data. Let’s now update
    the `duration` column, which differentiates freehold from leasehold properties.
    Leasehold means you don’t own the land your structure is on; you need to pay additional
    fees and renew your lease if it is expiring. The majority of properties in the
    United Kingdom should be freeholds. Let’s verify this while also recategorizing
    the data. The following code does this, and the output is shown in figure 10.17:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 这一列的合理性检查应该是大多数属性在购买时已经建成，这正是我们在数据中看到的情况。现在让我们更新`duration`列，这一列区分了自用房产和租赁房产。租赁意味着你并不拥有你结构所在的土地；如果租赁即将到期，你需要支付额外费用并续签租赁。英国的大多数房产应该是自用房产。让我们在重新分类数据的同时验证这一点。以下代码执行了这一操作，输出结果如图10.17所示：
- en: '[PRE16]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![figure](../Images/10-17.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-17.png)'
- en: Figure 10.17 Breakdown of freehold vs. leasehold properties
  id: totrans-202
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.17 自用房产与租赁房产的细分
- en: 'Now that we have investigated most of our property data, we should turn our
    attention to the aspect we haven’t touched yet: geography.'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经调查了大部分的房产数据，我们应该将注意力转向我们尚未触及的方面：地理。
- en: 10.4.2 Investigating geographic aspects of a dataset
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.4.2 调查数据集的地理方面
- en: Our stakeholders are interested only in the Welsh property market, so we need
    to extract only the transactions that occurred in Wales before we can build our
    proof of concept. This will require extracting that information somehow as we
    do not have an obvious country column. For more practice extracting information
    from addresses, see a related project in chapter 2.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的利益相关者只对威尔士的房产市场感兴趣，因此在我们构建我们的概念证明之前，我们需要提取仅在威尔士发生的交易。这需要以某种方式提取这些信息，因为我们没有明显的国家列。有关从地址中提取信息的更多实践，请参阅第2章中的相关项目。
- en: 'Whenever we work with addresses, we have several options to extract additional
    information:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我们处理地址时，我们都有几种选项来提取额外信息：
- en: Ideally, there is a column that stores the necessary information already. In
    this case, there isn’t.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理想情况下，有一个列已经存储了必要的信息。在这种情况下，并没有。
- en: If we have a combined address field, such as the project in chapter 2, we could
    extract the right address component. We also do not have that in this case.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们有一个组合的地址字段，例如第2章中的项目，我们可以提取正确的地址组件。在这个例子中我们也没有。
- en: We could use an existing column to cross-reference against official lists, similar
    to what we did in the example solution of chapter 2, where we cross-referenced
    address data with a definitive list of cities in the United Kingdom. In the case
    of this project, we could also cross-reference one of the address categorizations
    and find the ones corresponding to Wales.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以使用现有的列与官方列表进行交叉引用，类似于我们在第2章示例解决方案中所做的，在那里我们将地址数据与英国城市的确切列表进行交叉引用。在这个项目中，我们也可以交叉引用地址分类之一，找到对应于威尔士的地址。
- en: A more complex, but possibly more accurate, method would be to use a third-party
    geocoding service to get a structured version of our address data. For the data
    in this project, we could send the service the combination of all the address
    columns we have and get back the same address in a standardized format, which
    would include the country column.
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种更复杂但可能更准确的方法是使用第三方地理编码服务来获取我们地址数据的结构化版本。对于这个项目中的数据，我们可以将所有地址列的组合发送给该服务，并得到以标准化格式返回的相同地址，这将包括国家列。
- en: Out of these options, the third one seems to strike a balance between accuracy
    and effort. The last option is something to consider for a future iteration if
    we want to maximize accuracy, but only if we identify that the extra work is worth
    the effort. Let’s now investigate the different address categorizations in the
    data and see which one could be cross-referenced against a relevant, official
    list.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些选项中，第三个似乎在准确性和努力之间找到了平衡。最后一个选项是我们想要最大化准确性时可以考虑的，但只有当我们确定额外的工作是值得的。现在让我们调查数据中的不同地址分类，看看哪一个可以与相关的官方列表进行交叉引用。
- en: 'One option is to look at the `town_city` column and cross-reference it against
    a list of Welsh cities. Running the following command reveals that we have 1,150
    unique values for the town/city component. We will also uppercase the column just
    in case we have some inconsistent casing in the data:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 一个选项是查看`town_city`列，并将其与威尔士城市列表进行交叉引用。运行以下命令显示，城镇/城市组件有1,150个唯一值。我们还将该列转换为大写，以防数据中存在一些不一致的大小写：
- en: '[PRE17]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Having so many values increases the possibility of errors. There could be misspellings
    and other duplicate values, and there are town names that exist in both England
    and Wales, such as Newport. Let’s look at a higher level of geography instead:
    counties. The following code investigates the frequency of counties present in
    the data and also reveals the number of unique items, as shown in figure 10.18:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 有这么多值增加了出错的可能性。可能会有拼写错误和其他重复值，还有一些城镇名称在英格兰和威尔士都存在，例如纽波特。让我们看看更高一级的地理层次：县。下面的代码调查了数据中存在的县的频率，同时也揭示了唯一项目的数量，如图10.18所示：
- en: '[PRE18]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![figure](../Images/10-18.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-18.png)'
- en: Figure 10.18 A breakdown of the number of records by county
  id: totrans-217
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.18 按县记录数量的分解
- en: 'From this output, we can tell there are 115 unique county values in the data,
    Greater London being the most common. The most frequent records tell us that the
    number of records per county is in the region of the tens of thousands, which
    makes some of the least common values suspicious. Northamptonshire is not a small
    county, so we would expect more than 707 records. Perhaps there are misspellings
    or overlapping county values. We will investigate these by looking for just the
    word NORTH and see what is returned. The following code does this, and the output
    is shown in figure 10.19:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个输出中，我们可以看出数据中有115个独特的县值，大伦敦是最常见的。最频繁的记录告诉我们，每个县的记录数在数万左右，这使得一些最不常见的值显得可疑。北安普顿郡不是一个小县，所以我们预计会有超过707条记录。也许有一些拼写错误或重叠的县值。我们将通过仅查找单词NORTH来调查这些情况，看看会返回什么。下面的代码就是这样做的，输出显示在图10.19中：
- en: '[PRE19]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![figure](../Images/10-19.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-19.png)'
- en: Figure 10.19 All counties containing the word NORTH
  id: totrans-221
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.19 包含单词NORTH的所有县
- en: We find that there are also records for both North and West Northamptonshire.
    If we were interested in counties in England, we may consider combining these.
    It is possible this data doesn’t exactly match official lists, but it is easier
    to clean 115 county records than over 1,000 town names.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现北北安普顿郡和西北安普顿郡也有记录。如果我们对英格兰的县感兴趣，我们可能会考虑将它们合并。这份数据可能并不完全符合官方列表，但清理115个县记录比清理1000多个镇名要容易。
- en: Sanity checking our data from external sources
  id: totrans-223
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 从外部来源对我们的数据进行合理性检查
- en: 'For now, we want an official list of counties in Wales to cross-reference against
    our data. The Welsh government has this list published on their website: [https://law.gov.wales/local-government-bodies](https://law.gov.wales/local-government-bodies).'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们想要一个威尔士的官方县列表，以便与我们的数据进行交叉引用。威尔士政府已将此列表发布在其网站上：[https://law.gov.wales/local-government-bodies](https://law.gov.wales/local-government-bodies)。
- en: Note  If the website is inaccessible, a copy of its relevant content is included
    in the supplementary materials for this chapter. The file is called `wales-local-government-bodies.htm`.
    It can be found in the `data` folder and is viewable in any web browser.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 备注：如果网站无法访问，本章补充材料中包含其相关内容的副本。文件名为`wales-local-government-bodies.htm`。它位于`data`文件夹中，可以在任何网络浏览器中查看。
- en: The list is in bullet points about halfway down the page, as shown in figure
    10.20.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 列表在页面中间大约一半的位置以项目符号形式列出，如图10.20所示。
- en: '![figure](../Images/10-20.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-20.png)'
- en: Figure 10.20 Official list of counties in Wales
  id: totrans-228
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.20 威尔士官方县列表
- en: 'From this page, we can extract the unique names of counties. Our data is in
    English, not Welsh, so we only need the English part of this list. We also don’t
    need the “County Borough Council” part, as those phrases are not contained in
    the `county` column of our data. We will take this list of counties and assume
    any record that contains one of these counties is a Welsh property, and everything
    else is in England. The following code categorizes the records into England or
    Wales based on their county. We’ll then look at the distribution of this new `country`
    column, which is shown in figure 10.21:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个页面，我们可以提取县名的唯一名称。我们的数据是英文，不是威尔士文，所以我们只需要这个列表的英文部分。我们也不需要“县议会”部分，因为这些短语不包含在我们数据的`county`列中。我们将取这个县列表，并假设任何包含这些县之一的记录是威尔士的财产，其余的都在英格兰。以下代码根据县将记录分类为英格兰或威尔士。然后我们将查看这个新的`country`列的分布，如图10.21所示：
- en: '[PRE20]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![figure](../Images/10-21.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-21.png)'
- en: Figure 10.21 The breakdown of England vs. Wales in our data
  id: totrans-232
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.21 我们数据中英格兰与威尔士的细分
- en: 'As we said earlier, it is possible that some of the values in the `county`
    column don’t match the list of Welsh counties exactly. We should look at all the
    counties categorized as England with our method and check if any are misspellings
    of the Welsh counties. The following code retrieves these counties, as shown in
    figure 10.22:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前所说，`county`列中的一些值可能并不完全符合威尔士县的列表。我们应该使用我们的方法查看所有被分类为英格兰的县，并检查是否有任何是威尔士县的误拼。以下代码检索了这些县，如图10.22所示：
- en: '[PRE21]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![figure](../Images/10-22.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-22.png)'
- en: Figure 10.22 A list of counties we categorized as belonging to England
  id: totrans-236
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.22 我们将其归类为英格兰的县列表
- en: We could employ more sophisticated methods to find county names in this list
    that are almost like one of the Welsh counties, but since there aren’t that many
    counties in total, we can do this manually. See the example solution in chapter
    3 for ideas on how to do more sophisticated string matching.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以采用更复杂的方法来找到这个列表中几乎像威尔士县之一的县名，但由于总的县数量并不多，我们可以手动完成。参见第3章中的示例解决方案，了解如何进行更复杂的字符串匹配。
- en: 'At a glance, the only county that seems miscategorized is Rhondda Cynon Taf,
    which appears in the data with a double f at the end. Let’s manually recategorize
    those instances as Wales to make the data more accurate:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 乍一看，似乎只有Rhondda Cynon Taf这个县被错误分类了，它在数据中末尾有两个f。让我们手动将这些实例重新分类为威尔士，以使数据更准确：
- en: '[PRE22]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'As a final step in this part, we will extract only the Welsh properties into
    their own DataFrame so that all our analyses will be limited to Welsh properties:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分的最后一步，我们将仅将威尔士的属性提取到它们自己的DataFrame中，这样我们的所有分析都将仅限于威尔士的属性：
- en: '[PRE23]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The next step is to explore this subset of Welsh transactions to see what aspects
    of the data should be included in our proof-of-concept app. But before we move
    on, let’s review our progress so far in the form of a diagram, shown in figure
    10.23\. Then, we’ll be ready to explore the Welsh property data to identify visualizations
    we want to include in our proof-of-concept app.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是探索这个威尔士交易的子集，看看数据中哪些方面应该包含在我们的概念验证应用程序中。但在我们继续之前，让我们以图表的形式回顾到目前为止的进展，如图10.23所示。然后，我们将准备好探索威尔士物业数据，以确定我们想要包含在概念验证应用程序中的可视化。
- en: '![figure](../Images/10-23.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-23.png)'
- en: Figure 10.23 The process up until the point of identifying Welsh properties
  id: totrans-244
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.23 确定威尔士物业的过程
- en: 10.4.3 Identifying how to present data in the prototype
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.4.3 在原型中确定如何呈现数据
- en: Now that we have separated the data by country, let’s explore different aspects
    of the Welsh property market.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经按国家分离开了数据，让我们探索威尔士房地产市场不同的方面。
- en: Investigating variations in geography
  id: totrans-247
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 调查地理差异的变化
- en: First, let’s see the difference in sale price between counties. When a user
    wants to purchase a property, the app should help them identify what property
    prices look like in their desired area. The plot is shown in figure 10.24, and
    the code after the figure calculates and plots the median sale price by county
    for Welsh properties only.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看各县之间的销售价格差异。当用户想要购买物业时，应用程序应该帮助他们识别他们想要区域的物业价格。该图表显示在图10.24中，图后的代码计算并绘制了威尔士物业的按县的中位销售价格。
- en: '![figure](../Images/10-24.png)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-24.png)'
- en: Figure 10.24 Median property price by county in Wales
  id: totrans-250
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.24 威尔士按县的中位物业价格
- en: '[PRE24]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'There is clear geographic disparity across counties. This data covers multiple
    years, so we should also investigate its temporal aspects. How has the number
    of transactions changed over time? The following code creates the plot in figure
    10.25:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在各县之间存在明显的地理差异。这些数据覆盖了多年，因此我们还应该调查其时间方面。交易数量是如何随时间变化的？以下代码创建了图10.25中的图表：
- en: '[PRE25]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![figure](../Images/10-25.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-25.png)'
- en: Figure 10.25 Number of annual property transactions in Wales
  id: totrans-255
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.25 威尔士年度物业交易数量
- en: 'There is a definite overall downward trend in the number of transactions. Does
    this pattern also affect prices? We can calculate the median sale price by county
    and year to investigate this. The following code calculates this and visualizes
    it with the heatmap shown in figure 10.26:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 交易数量有一个明显的整体下降趋势。这种模式是否也影响了价格？我们可以按县和年份计算中位销售价格来调查这一点。以下代码计算了这一点，并用图10.26中所示的热图进行可视化。
- en: '[PRE26]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![figure](../Images/10-26.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-26.png)'
- en: Figure 10.26 Heatmap showing property prices by county and year
  id: totrans-259
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.26 展示按县和年份划分的房价热图
- en: In most counties, we observe an increase in the median sale price from 2021
    to 2022 and then a decrease again in 2023\. Although the number of transactions
    seems to be steadily dropping, it appears the prices have only been affected in
    the latest full year of data. We will want to include some aspects of this information
    in our final app.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数县，我们观察到从2021年到2022年中位销售价格的增加，然后在2023年再次下降。尽管交易数量似乎稳步下降，但价格似乎只受到最新完整年份数据的影响。我们希望在最终应用程序中包含这方面的某些信息。
- en: Another aspect of the difference across counties might be in property type,
    which is something our stakeholders are specifically interested in. The code following
    figure 10.27 calculates the median price by county and property type and plots
    the heatmap in the figure.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 县之间差异的另一个方面可能是物业类型，这是我们利益相关者特别感兴趣的。图10.27之后的代码计算了按县和物业类型的中位价格，并在图中绘制了热图。
- en: '![figure](../Images/10-27.png)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-27.png)'
- en: Figure 10.27 A heatmap showing property prices across county and property type
  id: totrans-263
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.27 展示了跨县和物业类型的房价热图
- en: '[PRE27]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '#1 Reduces the font size of the axis labels'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '#1 降低坐标轴标签的字体大小'
- en: 'This heatmap tells us that detached properties have the highest value in all
    counties, but there is high variability in the “Other” category. This matches
    what is typical for the UK property market: detached properties are more desirable
    than semi-detached ones, which are more desirable than terraced properties. This
    pattern seems to exist across counties.'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 这个热图告诉我们，在所有县中，独立式物业的价值最高，但在“其他”类别中存在很高的变异性。这与英国房地产市场典型情况相符：独立式物业比半独立式物业更受欢迎，而半独立式物业又比排屋更受欢迎。这种模式似乎在各县都存在。
- en: Using ridgeline plots to look at distribution across groups
  id: totrans-267
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用脊线图来查看组间的分布
- en: 'What these heatmaps don’t tell us is the distribution of prices. We could use
    histograms or box plots to show this by county or by year. However, we might want
    to get a bit more adventurous to make the app stand out more visually. One option
    is something called a *ridgeline plots*, which looks like a smoothed histogram
    by category, but the histograms are stacked behind each other. To illustrate this
    better, the following code creates a ridgeline plot of the distribution of prices
    by year, as shown in figure 10.28\. The data needs to be a list of prices, one
    list per year. Because the number of transactions is not constant for each year,
    we cannot use a tabular data structure, so we created three lists of prices that
    can be of different lengths:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 这些热图没有告诉我们价格分布。我们可以使用直方图或箱线图按县或按年显示这种分布。然而，我们可能想要尝试一些更冒险的方法，使应用程序在视觉上更加突出。一个选项是所谓的*脊线图*，它看起来像按类别平滑的直方图，但直方图是相互堆叠的。为了更好地说明这一点，以下代码创建了一个按年价格分布的脊线图，如图10.28所示。数据需要是一个价格列表，每年一个列表。因为每年的交易数量不固定，我们不能使用表格数据结构，所以我们创建了三个不同长度的价格列表：
- en: '[PRE28]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '#1 Creates a list of prices per year and collects this list in another list'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '#1 创建一个按年价格列表，并将此列表收集到另一个列表中'
- en: '#2 annual_sales will be a list of pandas Series objects.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '#2 annual_sales将是一个包含pandas Series对象的列表。'
- en: '#3 The ridgeplot module is specialized for this kind of plot.'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '#3 脊线图模块专门用于这种类型的图表。'
- en: '![figure](../Images/10-28.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-28.png)'
- en: Figure 10.28 A ridgeline plot showing property prices over time
  id: totrans-274
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.28显示随时间变化的房产价格脊线图
- en: 'This plot shows the distribution of prices changing over time and conserves
    space by having the plots overlap in a 3D effect. Let’s do something similar with
    prices by county to better show the spread of prices rather than simple averages.
    The following code collects the data for prices by county and creates the associated
    ridgeline plot, which is shown in figure 10.29\. This time, we will remove the
    temporal aspect and focus only on properties that were sold in 2023, so our plot
    is as up to date and relevant as possible:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图表显示了随着时间的推移价格分布的变化，并通过在3D效果中重叠图表来节省空间。让我们通过按县来处理价格，以更好地展示价格的分布而不是简单的平均值。以下代码收集了按县的价格数据，并创建了相关的脊线图，如图10.29所示。这次，我们将去除时间维度，只关注2023年出售的房产，因此我们的图表尽可能最新和相关性最强：
- en: '[PRE29]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![figure](../Images/10-29.png)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-29.png)'
- en: Figure 10.29 A ridgeline plot of prices by county
  id: totrans-278
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.29按县价格分布的脊线图
- en: This plot is more information dense than the one in figure 10.24, which shows
    only median prices. We’ll include this plot in the app as a reference, so users
    have an idea of property prices across the country. We will also include the number
    of transactions over time for the area a user is interested in, as well as a breakdown
    by property type, such as the chart in figure 10.15\. These visualizations, coupled
    with the interactivity that we plan to add, will form our minimum viable answer
    for this project.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图表比图10.24中的图表信息密度更高，图10.24只显示了中位数价格。我们将把这个图表包含在应用程序中作为参考，这样用户就可以对全国范围内的房产价格有一个概念。我们还将包括用户感兴趣的区域随时间变化的交易数量，以及按房产类型（如图10.15所示的图表）进行细分。这些可视化，加上我们计划添加的交互性，将形成我们这个项目的最小可行方案。
- en: Let’s revisit the entire process up until this point. Figure 10.30 shows what
    we have done so far, including the most recent step of deciding which visuals
    to include in the app.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下到目前为止的整个过程。图10.30显示了我们所做的一切，包括决定在应用程序中包含哪些可视化的最新步骤。
- en: '![figure](../Images/10-30.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/10-30.png)'
- en: Figure 10.30 The process until the decision of which visualizations to include
    in the proof of concept
  id: totrans-282
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.30展示了直到决定在概念验证中包含哪些可视化过程
- en: Beyond the visualizations we have chosen to include, we will want to add some
    interactivity to the app. We will do this in the form of filters so that the user
    can filter the data down to just the area they are interested in, which will update
    the charts accordingly. To do this, we need to understand what levels of granularity
    we will let users drill down to. Our stakeholders requested street-level information
    in the app if possible, so let’s investigate whether this is possible with the
    available data.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我们选择包含的视觉化之外，我们还想在应用中添加一些交互性。我们将通过过滤器来实现这一点，以便用户可以过滤数据，仅显示他们感兴趣的区域，这将相应地更新图表。为此，我们需要了解我们将允许用户钻取到哪些粒度级别。我们的利益相关者要求如果可能的话，在应用中提供街道级别的信息，因此让我们调查是否可以使用现有数据实现这一点。
- en: Investigating geographic hierarchy
  id: totrans-284
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 调查地理层级
- en: We have several columns in the data that refer to different address components.
    To devise our filters for the app, we need to understand their hierarchy. Based
    on knowledge of address hierarchies, we would assume that the hierarchy consists
    of counties, districts, towns, and streets. However, the words “county” and “district”
    may have different meanings in different datasets, so we will verify whether this
    hierarchy is correct. To do this, we will count the number of distinct records
    in each category. The smaller the number of distinct values, the higher the level
    that category is in the hierarchy. The following code calculates this and produces
    the result in figure 10.31.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 数据中有几个列与不同的地址组成部分相关。为了设计我们应用的过滤器，我们需要了解它们的层级。根据对地址层级的了解，我们假设这个层级包括县、区、镇和街道。然而，“县”和“区”在不同的数据集中可能有不同的含义，因此我们将验证这个层级是否正确。为此，我们将计算每个类别的不同记录数量。不同值的数量越少，该类别在层级中的级别就越高。以下代码计算了这一点，并在图10.31中产生了结果。
- en: '[PRE30]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![figure](../Images/10-31.png)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/10-31.png)'
- en: Figure 10.31 Number of distinct records for each address component
  id: totrans-288
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.31 每个地址组成部分的不同记录数量
- en: 'Interestingly, there seems to be a one-to-one mapping between counties and
    districts. To verify this, we should see whether any county has more than one
    district mapped to it in the data or vice versa. We achieve this with the following
    code. Our assumption is that if both these lines of code return 0 results, then
    we have a perfect one-to-one mapping between counties and districts:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，似乎县和区之间存在一对一的映射。为了验证这一点，我们应该查看是否有任何县在数据中映射了多个区，反之亦然。我们通过以下代码实现了这一点。我们的假设是，如果这两行代码都返回0个结果，那么县和区之间就存在完美的一对一映射：
- en: '[PRE31]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Both results return nothing, meaning there are no districts attached to more
    than one county, and no counties attached to more than one district. Perhaps the
    district column is relevant for England, but it is redundant for Wales. We can,
    therefore, conclude that our address hierarchy is counties, then towns and cities,
    and, finally, streets. These are, therefore, the three filters we will include
    in the app. Before we start building the app, let’s export our Welsh properties
    as a dataset of their own, which the app can read. The app should read our cleaned
    and filtered data, and it should not have to manipulate it in any way. The following
    code exports the data to the optimized Parquet format:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 两个结果都返回了空值，这意味着没有区与多个县相关联，也没有县与多个区相关联。也许区列对英格兰是相关的，但对威尔士来说是多余的。因此，我们可以得出结论，我们的地址层级是县，然后是城镇和城市，最后是街道。因此，这些是我们将在应用中包含的三个过滤器。在我们开始构建应用之前，让我们将我们的威尔士属性作为一个单独的数据集导出，应用可以读取它。应用应该读取我们清理和过滤后的数据，并且不应该需要以任何方式对其进行操作。以下代码将数据导出到优化的Parquet格式：
- en: '[PRE32]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: That concludes the first part of the project; we prepared our data and are ready
    to build the proof of concept. Let’s revisit what we have done so far before moving
    on to build the proof of concept in the next chapter.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 这标志着项目的第一部分结束；我们已经准备好了数据，并准备好构建概念验证。在继续下一章构建概念验证之前，让我们回顾一下到目前为止我们所做的工作。
- en: 10.4.4 Project progress so far
  id: totrans-294
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.4.4 项目进展情况
- en: So far in the project, we
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在项目中，我们
- en: Merged multiple years of property sales data
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并了多年的房产销售数据
- en: Investigated the quality of the data, including missing values and outliers
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查了数据质量，包括缺失值和异常值
- en: Identified geographic data of interest
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定感兴趣的地理数据
- en: Investigated the distribution and outliers of the sale price column
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查了销售价格列的分布和异常值
- en: Enhanced our geographic data with external government data to separate English
    property transactions from Welsh ones
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过外部政府数据增强了我们的地理数据，以区分英格兰和威尔士的房产交易
- en: Identified appropriate visualizations for our proof of concept, including a
    ridgeline plot
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为我们的概念验证确定了适当的可视化，包括脊线图
- en: Exported the relevant, cleaned Welsh property transactions, which our proof
    of concept will use
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出了相关的、清洗过的威尔士房产交易数据，这些数据我们的概念验证将使用
- en: Before we move on to the final part, figure 10.32 shows our progress so far.
    In the next chapter, we will move on to the final part of the project, which is
    to build the proof-of-concept tool itself.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续到最后部分之前，图10.32展示了我们到目前为止的进展。在下一章中，我们将继续进行项目的最后部分，即构建概念验证工具本身。
- en: '![figure](../Images/10-32.png)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![图](../Images/10-32.png)'
- en: Figure 10.32 Part 1 of the project before building the proof of concept
  id: totrans-305
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图10.32 项目构建概念验证前的第1部分
- en: Summary
  id: totrans-306
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: Building a working proof of concept can be the best way to identify problems
    in the data that would prevent it from being used for a particular purpose.
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个可工作的概念验证可能是识别数据中问题的最佳方式，这些问题可能会阻止数据用于特定目的。
- en: Exploring data with a view to building a proof of concept includes assessing
    whether the data is appropriate for the task.
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索数据以构建概念验证包括评估数据是否适合该任务。
- en: The output of the analysis should be a cleaned dataset that our proof of concept
    can use as is.
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析的输出应该是一个清洗后的数据集，我们的概念验证可以直接使用。
