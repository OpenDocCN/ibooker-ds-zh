["```py\nIn [1]: import matplotlib.pyplot as plt\n        plt.style.use('seaborn-whitegrid')\n```", "```py\nIn [2]: %matplotlib inline\n        import numpy as np\n```", "```py\nIn [3]: x = np.linspace(0, 10, 1000)\n        fig, ax = plt.subplots()\n        ax.plot(x, np.sin(x), '-b', label='Sine')\n        ax.plot(x, np.cos(x), '--r', label='Cosine')\n        ax.axis('equal')\n        leg = ax.legend()\n```", "```py\nIn [4]: ax.legend(loc='upper left', frameon=True)\n        fig\n```", "```py\nIn [5]: ax.legend(loc='lower center', ncol=2)\n        fig\n```", "```py\nIn [6]: ax.legend(frameon=True, fancybox=True, framealpha=1,\n                  shadow=True, borderpad=1)\n        fig\n```", "```py\nIn [7]: y = np.sin(x[:, np.newaxis] + np.pi * np.arange(0, 2, 0.5))\n        lines = plt.plot(x, y)\n\n        # lines is a list of plt.Line2D instances\n        plt.legend(lines[:2], ['first', 'second'], frameon=True);\n```", "```py\nIn [8]: plt.plot(x, y[:, 0], label='first')\n        plt.plot(x, y[:, 1], label='second')\n        plt.plot(x, y[:, 2:])\n        plt.legend(frameon=True);\n```", "```py\nIn [9]: # Uncomment to download the data\n        # url = ('https://raw.githubusercontent.com/jakevdp/\n        #        PythonDataScienceHandbook/''master/notebooks/data/\n        #        california_cities.csv')\n        # !cd data && curl -O {url}\n```", "```py\nIn [10]: import pandas as pd\n         cities = pd.read_csv('data/california_cities.csv')\n\n         # Extract the data we're interested in\n         lat, lon = cities['latd'], cities['longd']\n         population, area = cities['population_total'], cities['area_total_km2']\n\n         # Scatter the points, using size and color but no label\n         plt.scatter(lon, lat, label=None,\n                     c=np.log10(population), cmap='viridis',\n                     s=area, linewidth=0, alpha=0.5)\n         plt.axis('equal')\n         plt.xlabel('longitude')\n         plt.ylabel('latitude')\n         plt.colorbar(label='log$_{10}$(population)')\n         plt.clim(3, 7)\n\n         # Here we create a legend:\n         # we'll plot empty lists with the desired size and label\n         for area in [100, 300, 500]:\n             plt.scatter([], [], c='k', alpha=0.3, s=area,\n                         label=str(area) + ' km$^2$')\n         plt.legend(scatterpoints=1, frameon=False, labelspacing=1,\n                    title='City Area')\n\n         plt.title('California Cities: Area and Population');\n```", "```py\nIn [11]: fig, ax = plt.subplots()\n\n         lines = []\n         styles = ['-', '--', '-.', ':']\n         x = np.linspace(0, 10, 1000)\n\n         for i in range(4):\n             lines += ax.plot(x, np.sin(x - i * np.pi / 2),\n                              styles[i], color='black')\n         ax.axis('equal')\n\n         # Specify the lines and labels of the first legend\n         ax.legend(lines[:2], ['line A', 'line B'], loc='upper right')\n\n         # Create the second legend and add the artist manually\n         from matplotlib.legend import Legend\n         leg = Legend(ax, lines[2:], ['line C', 'line D'], loc='lower right')\n         ax.add_artist(leg);\n```"]