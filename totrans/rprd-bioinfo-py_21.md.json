["```py\n$ ../15_seqmagique/seqmagique.py tests/inputs/gos.fa\nname                   min_len    max_len    avg_len    num_seqs\ntests/inputs/gos.fa        216       1212    1051.48         100\n```", "```py\n$ wc -l tests/inputs/hits*.csv\n     500 tests/inputs/hits1.csv\n     255 tests/inputs/hits2.csv\n     755 total\n```", "```py\n$ python3 -m pip install csvkit\n```", "```py\n$ csvlook -H --max-rows 3 tests/inputs/hits1.csv\n```", "```py\n$ python3 -m pip install csvchk\n```", "```py\n$ csvchk -N tests/inputs/hits1.csv\n// ****** Record 1 ****** //\nField1  : CAM_READ_0234442157\nField2  : CP031125.1\nField3  : 92.941\nField4  : 340\nField5  : 21\nField6  : 3\nField7  : 3\nField8  : 340\nField9  : 801595\nField10 : 801257\nField11 : 6.81e-135\nField12 : 492\n```", "```py\n *** Formatting options\n -outfmt <String>\n   alignment view options:\n     0 = Pairwise,\n     1 = Query-anchored showing identities,\n     2 = Query-anchored no identities,\n     3 = Flat query-anchored showing identities,\n     4 = Flat query-anchored no identities,\n     5 = BLAST XML,\n     6 = Tabular,\n     7 = Tabular with comment lines,\n     8 = Seqalign (Text ASN.1),\n     9 = Seqalign (Binary ASN.1),\n    10 = Comma-separated values,\n    11 = BLAST archive (ASN.1),\n    12 = Seqalign (JSON),\n    13 = Multiple-file BLAST JSON,\n    14 = Multiple-file BLAST XML2,\n    15 = Single-file BLAST JSON,\n    16 = Single-file BLAST XML2,\n    17 = Sequence Alignment/Map (SAM),\n    18 = Organism Report\n```", "```py\n$ csvchk -f 'qseqid,sseqid,pident,length,mismatch,gapopen,qstart,qend,\\\n  sstart,send,evalue,bitscore' tests/inputs/hits1.csv\n// ****** Record 1 ****** //\nqseqid   : CAM_READ_0234442157\nsseqid   : CP031125.1\npident   : 92.941\nlength   : 340\nmismatch : 21\ngapopen  : 3\nqstart   : 3\nqend     : 340\nsstart   : 801595\nsend     : 801257\nevalue   : 6.81e-135\nbitscore : 492\n```", "```py\nalias blstchk='csvchk -f \"qseqid,sseqid,pident,length,mismatch,gapopen,\\\n    qstart,qend,sstart,send,evalue,bitscore\"'\n```", "```py\n$ blstchk tests/inputs/hits1.csv\n// ****** Record 1 ****** //\nqseqid   : CAM_READ_0234442157\nsseqid   : CP031125.1\npident   : 92.941\nlength   : 340\nmismatch : 21\ngapopen  : 3\nqstart   : 3\nqend     : 340\nsstart   : 801595\nsend     : 801257\nevalue   : 6.81e-135\nbitscore : 492\n```", "```py\n$ csvchk -g CAM_READ_0234442157 tests/inputs/meta.csv\n// ****** Record 1 ****** //\nseq_id     : CAM_READ_0234442157\nsample_acc : CAM_SMPL_GS112\ndate       : 8/8/05\ndepth      : 4573\nsalinity   : 32.5\ntemp       : 26.6\nlat_lon    : -8.50525,80.375583\n```", "```py\n$ cd tests/inputs/\n$ join -t , <(sort hits1.csv) <(sort meta.csv) | csvchk -s \",\" -N - ![1](assets/1.png)\n// ****** Record 1 ****** //\nField1  : CAM_READ_0234442157\nField2  : CP046232.1\nField3  : 83.810\nField4  : 105\nField5  : 12\nField6  : 5\nField7  : 239\nField8  : 340\nField9  : 212245\nField10 : 212143\nField11 : 2.24e-15\nField12 : 95.3\nField13 : CAM_SMPL_GS112\nField14 : 8/8/05\nField15 : 4573\nField16 : 32.5\nField17 : 26.6\nField18 : -8.50525,80.375583\n```", "```py\n$ cd 19_blastomatic/\n$ cp solution2_dict_writer.py blastomatic.py\n```", "```py\n$ ./blastomatic.py -h\nusage: blastomatic.py [-h] -b FILE -a FILE [-o FILE] [-d DELIM] [-p PCTID]\n\nAnnotate BLAST output\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -b FILE, --blasthits FILE\n                        BLAST -outfmt 6 (default: None) ![1](assets/1.png)\n  -a FILE, --annotations FILE\n                        Annotations file (default: None) ![2](assets/2.png)\n  -o FILE, --outfile FILE\n                        Output file (default: out.csv) ![3](assets/3.png)\n  -d DELIM, --delimiter DELIM\n                        Output field delimiter (default: ) ![4](assets/4.png)\n  -p PCTID, --pctid PCTID\n                        Minimum percent identity (default: 0.0) ![5](assets/5.png)\n```", "```py\n$ ./blastomatic.py -b tests/inputs/hits1.csv -a tests/inputs/meta.csv\nExported 500 to \"out.csv\".\n```", "```py\n$ csvlook --max-rows 2 out.csv\n| qseqid              | pident | depth | lat_lon            |\n| ------------------- | ------ | ----- | ------------------ |\n| CAM_READ_0234442157 | 92.941 | 4,573 | -8.50525,80.375583 |\n| CAM_READ_0234442157 | 85.000 | 4,573 | -8.50525,80.375583 |\n| ...                 |    ... |   ... | ...                |\n```", "```py\n$ csvchk --limit 2 out.csv\n// ****** Record 1 ****** //\nqseqid  : CAM_READ_0234442157\npident  : 92.941\ndepth   : 4573\nlat_lon : -8.50525,80.375583\n// ****** Record 2 ****** //\nqseqid  : CAM_READ_0234442157\npident  : 85.000\ndepth   : 4573\nlat_lon : -8.50525,80.375583\n```", "```py\n$ ./blastomatic.py -b tests/inputs/hits1.csv -a tests/inputs/meta.csv -p 90\nExported 190 to \"out.csv\".\n```", "```py\n$ csvlook --max-rows 4 out.csv\n| qseqid                  | pident | depth | lat_lon              |\n| ----------------------- | ------ | ----- | -------------------- |\n| CAM_READ_0234442157     | 92.941 | 4,573 | -8.50525,80.375583   |\n| JCVI_READ_1091145027519 | 97.368 |     2 | 44.137222,-63.644444 |\n| JCVI_READ_1091145742680 | 98.714 |    64 | 44.690277,-63.637222 |\n| JCVI_READ_1091145742680 | 91.869 |    64 | 44.690277,-63.637222 |\n| ...                     |    ... |   ... | ...                  |\n```", "```py\n$ new.py -fp 'Annotate BLAST output' blastomatic.py\nDone, see new script \"blastomatic.py\".\n```", "```py\nclass Args(NamedTuple):\n    \"\"\" Command-line arguments \"\"\"\n    hits: TextIO ![1](assets/1.png)\n    annotations: TextIO ![2](assets/2.png)\n    outfile: TextIO ![3](assets/3.png)\n    delimiter: str ![4](assets/4.png)\n    pctid: float ![5](assets/5.png)\n```", "```py\ndef get_args():\n    \"\"\" Get command-line arguments \"\"\"\n\n    parser = argparse.ArgumentParser(\n        description='Annotate BLAST output',\n        formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n\n    parser.add_argument('-b',\n                        '--blasthits',\n                        metavar='FILE',\n                        type=argparse.FileType('rt'), ![1](assets/1.png)\n                        help='BLAST -outfmt 6',\n                        required=True)\n\n    parser.add_argument('-a',\n                        '--annotations',\n                        help='Annotations file',\n                        metavar='FILE',\n                        type=argparse.FileType('rt'), ![2](assets/2.png)\n                        required=True)\n\n    parser.add_argument('-o',\n                        '--outfile',\n                        help='Output file',\n                        metavar='FILE',\n                        type=argparse.FileType('wt'), ![3](assets/3.png)\n                        default='out.csv')\n\n    parser.add_argument('-d',\n                        '--delimiter',\n                        help='Output field delimiter', ![4](assets/4.png)\n                        metavar='DELIM',\n                        type=str,\n                        default='')\n\n    parser.add_argument('-p',\n                        '--pctid',\n                        help='Minimum percent identity', ![5](assets/5.png)\n                        metavar='PCTID',\n                        type=float,\n                        default=0.)\n\n    args = parser.parse_args()\n\n    return Args(hits=args.blasthits, ![6](assets/6.png)\n                annotations=args.annotations,\n                outfile=args.outfile,\n                delimiter=args.delimiter or guess_delimiter(args.outfile.name), ![7](assets/7.png)\n                pctid=args.pctid)\n```", "```py\ndef test_guess_delimiter() -> None:\n    \"\"\" Test guess_delimiter \"\"\"\n\n    assert guess_delimiter('/foo/bar.csv') == ','\n    assert guess_delimiter('/foo/bar.txt') == '\\t'\n    assert guess_delimiter('/foo/bar.tsv') == '\\t'\n    assert guess_delimiter('/foo/bar.tab') == '\\t'\n    assert guess_delimiter('') == '\\t'\n```", "```py\ndef main() -> None:\n    args = get_args()\n    print('hits', args.hits.name)\n    print('meta', args.annotations.name)\n```", "```py\n$ ./blastomatic.py -a tests/inputs/meta.csv -b tests/inputs/hits1.csv\nhits tests/inputs/hits1.csv\nmeta tests/inputs/meta.csv\n```", "```py\n>>> fh = open('tests/inputs/meta.csv')\n>>> headers = fh.readline().rstrip().split(',')\n>>> headers\n['seq_id', 'sample_acc', 'date', 'depth', 'salinity', 'temp', 'lat_lon']\n```", "```py\n>>> line = fh.readline()\n>>> data = line.split(',')\n>>> data\n['JCVI_READ_1092301105055', 'JCVI_SMPL_1103283000037', '2/11/04', '1.6', '',\n '25.4', '\"-0.5938889', '-91.06944\"']\n```", "```py\n>>> len(headers), len(data)\n(7, 8)\n```", "```py\n>>> line[50:]\n'11/04,1.6,,25.4,\"-0.5938889,-91.06944\"\\n\\'\n```", "```py\n>>> import pyparsing as pp\n>>> data = pp.commaSeparatedList.parseString(line).asList()\n>>> data\n['JCVI_READ_1092301105055', 'JCVI_SMPL_1103283000037', '2/11/04', '1.6',\n '', '25.4', '\"-0.5938889,-91.06944\"']\n```", "```py\n>>> import re\n>>> data = list(map(lambda s: re.sub(r'^\"|\"$', '', s), data)) ![1](assets/1.png)\n>>> data\n['JCVI_READ_1092301105055', 'JCVI_SMPL_1103283000037', '2/11/04', '1.6', '',\n '25.4', '-0.5938889,-91.06944']\n```", "```py\n>>> from pprint import pprint\n>>> pprint(list(zip(headers, data)))\n[('seq_id', 'JCVI_READ_1092301105055'),\n ('sample_acc', 'JCVI_SMPL_1103283000037'),\n ('date', '2/11/04'),\n ('depth', '1.6'),\n ('salinity', ''),\n ('temp', '25.4'),\n ('lat_lon', '-0.5938889,-91.06944')]\n```", "```py\n>>> pprint(dict(zip(headers, data)))\n{'date': '2/11/04',\n 'depth': '1.6',\n 'lat_lon': '-0.5938889,-91.06944',\n 'salinity': '',\n 'sample_acc': 'JCVI_SMPL_1103283000037',\n 'seq_id': 'JCVI_READ_1092301105055',\n 'temp': '25.4'}\n```", "```py\n>>> import csv\n>>> reader = csv.DictReader(open('tests/inputs/meta.csv'))\n>>> for rec in reader:\n...     pprint(rec)\n...     break\n...\n{'date': '2/11/04',\n 'depth': '1.6',\n 'lat_lon': '-0.5938889,-91.06944',\n 'salinity': '',\n 'sample_acc': 'JCVI_SMPL_1103283000037',\n 'seq_id': 'JCVI_READ_1092301105055',\n 'temp': '25.4'}\n```", "```py\ndef main():\n    args = get_args()\n    annots_reader = csv.DictReader(args.annotations, delimiter=',') ![1](assets/1.png)\n    annots = {row['seq_id']: row for row in annots_reader} ![2](assets/2.png)\n    pprint(annots)\n```", "```py\n$ ./blastomatic.py -a tests/inputs/meta.csv -b tests/inputs/hits1.csv > out\n$ head out\n{'CAM_READ_0231669837': {'date': '8/4/05',\n                         'depth': '7',\n                         'lat_lon': '-12.092617,96.881733',\n                         'salinity': '32.4',\n                         'sample_acc': 'CAM_SMPL_GS108',\n                         'seq_id': 'CAM_READ_0231669837',\n                         'temp': '25.8'},\n 'CAM_READ_0231670003': {'date': '8/4/05',\n                         'depth': '7',\n                         'lat_lon': '-12.092617,96.881733',\n```", "```py\ndef main():\n    args = get_args()\n    annots_reader = csv.DictReader(args.annotations, delimiter=',')\n    annots = {row['seq_id']: row for row in annots_reader}\n\n    headers = ['qseqid', 'pident', 'depth', 'lat_lon'] ![1](assets/1.png)\n    args.outfile.write(args.delimiter.join(headers) + '\\n') ![2](assets/2.png)\n```", "```py\nprint(args.delimiter.join(headers), file=args.outfile)\n```", "```py\ndef main():\n    args = get_args()\n    annots_reader = csv.DictReader(args.annotations, delimiter=',')\n    annots = {row['seq_id']: row for row in annots_reader}\n\n    headers = ['qseqid', 'pident', 'depth', 'lat_lon']\n    args.outfile.write(args.delimiter.join(headers) + '\\n')\n\n    hits = csv.DictReader(args.hits, ![1](assets/1.png)\n                          delimiter=',',\n                          fieldnames=[\n                              'qseqid', 'sseqid', 'pident', 'length',\n                              'mismatch', 'gapopen', 'qstart', 'qend',\n                              'sstart', 'send', 'evalue', 'bitscore'\n                          ])\n\n    for hit in hits: ![2](assets/2.png)\n        if float(hit.get('pident', -1)) < args.pctid: ![3](assets/3.png)\n            continue\n        print(hit.get('qseqid')) ![4](assets/4.png)\n```", "```py\n$ ./blastomatic.py -a tests/inputs/meta.csv -b tests/inputs/hits1.csv -p 90 \\\n    | wc -l\n     190\n```", "```py\n>>> import pandas as pd\n>>> meta = pd.read_csv('tests/inputs/meta.csv')\n```", "```py\n>>> meta\n                     seq_id  ...                lat_lon\n0   JCVI_READ_1092301105055  ...   -0.5938889,-91.06944\n1   JCVI_READ_1092351051817  ...   -0.5938889,-91.06944\n2   JCVI_READ_1092301096881  ...   -0.5938889,-91.06944\n3   JCVI_READ_1093017101914  ...   -0.5938889,-91.06944\n4   JCVI_READ_1092342065252  ...     9.164444,-79.83611\n..                      ...  ...                    ...\n95  JCVI_READ_1091145742670  ...   44.690277,-63.637222\n96  JCVI_READ_1091145742680  ...   44.690277,-63.637222\n97  JCVI_READ_1091150268218  ...   44.690277,-63.637222\n98  JCVI_READ_1095964929867  ...  -1.9738889,-95.014725\n99  JCVI_READ_1095994150021  ...  -1.9738889,-95.014725\n\n[100 rows x 7 columns]\n```", "```py\n>>> meta.shape\n(100, 7)\n```", "```py\n>>> meta.columns\nIndex(['seq_id', 'sample_acc', 'date', 'depth', 'salinity', 'temp', 'lat_lon'],\ndtype='object')\n```", "```py\n>>> meta['salinity']\n0      NaN\n1      NaN\n2      NaN\n3      NaN\n4      0.1\n      ...\n95    30.2\n96    30.2\n97    30.2\n98     NaN\n99     NaN\nName: salinity, Length: 100, dtype: float64\n```", "```py\n>>> meta['salinity'] > 50\n0     False\n1     False\n2     False\n3     False\n4     False\n      ...\n95    False\n96    False\n97    False\n98    False\n99    False\nName: salinity, Length: 100, dtype: bool\n```", "```py\n>>> meta[meta['salinity'] > 50]\n                     seq_id  ...               lat_lon\n23  JCVI_READ_1092351234516  ...  -1.2283334,-90.42917\n24  JCVI_READ_1092402566200  ...  -1.2283334,-90.42917\n25  JCVI_READ_1092402515846  ...  -1.2283334,-90.42917\n\n[3 rows x 7 columns]\n```", "```py\n>>> meta[meta['salinity'] > 50]['salinity']\n23    63.4\n24    63.4\n25    63.4\nName: salinity, dtype: float64\n```", "```py\n>>> cols = ['qseqid', 'sseqid', 'pident', 'length', 'mismatch', 'gapopen',\n'qstart', 'qend', 'sstart', 'send', 'evalue', 'bitscore']\n>>> hits = pd.read_csv('tests/inputs/hits1.csv', names=cols)\n>>> hits\n                      qseqid      sseqid  ...         evalue  bitscore\n0        CAM_READ_0234442157  CP031125.1  ...  6.810000e-135     492.0\n1        CAM_READ_0234442157  LT840186.1  ...   7.260000e-90     342.0\n2        CAM_READ_0234442157  CP048747.1  ...   6.240000e-16      97.1\n3        CAM_READ_0234442157  CP046232.1  ...   2.240000e-15      95.3\n4    JCVI_READ_1095946186912  CP038852.1  ...   0.000000e+00    1158.0\n..                       ...         ...  ...            ...       ...\n495  JCVI_READ_1095403503430  EU805356.1  ...   0.000000e+00    1834.0\n496  JCVI_READ_1095403503430  EU804987.1  ...   0.000000e+00    1834.0\n497  JCVI_READ_1095403503430  EU804799.1  ...   0.000000e+00    1834.0\n498  JCVI_READ_1095403503430  EU804695.1  ...   0.000000e+00    1834.0\n499  JCVI_READ_1095403503430  EU804645.1  ...   0.000000e+00    1834.0\n\n[500 rows x 12 columns]\n```", "```py\n>>> wanted = hits[hits['pident'] >= 90]\n>>> wanted\n                      qseqid      sseqid  ...         evalue  bitscore\n0        CAM_READ_0234442157  CP031125.1  ...  6.810000e-135     492.0\n12   JCVI_READ_1091145027519  CP058306.1  ...   6.240000e-06      65.8\n13   JCVI_READ_1091145742680  CP000084.1  ...   0.000000e+00    1925.0\n14   JCVI_READ_1091145742680  CP038852.1  ...   0.000000e+00    1487.0\n111  JCVI_READ_1091145742680  CP022043.2  ...   1.320000e-07      71.3\n..                       ...         ...  ...            ...       ...\n495  JCVI_READ_1095403503430  EU805356.1  ...   0.000000e+00    1834.0\n496  JCVI_READ_1095403503430  EU804987.1  ...   0.000000e+00    1834.0\n497  JCVI_READ_1095403503430  EU804799.1  ...   0.000000e+00    1834.0\n498  JCVI_READ_1095403503430  EU804695.1  ...   0.000000e+00    1834.0\n499  JCVI_READ_1095403503430  EU804645.1  ...   0.000000e+00    1834.0\n\n[190 rows x 12 columns]\n```", "```py\n>>> for i, hit in wanted.iterrows():\n...     print(hit)\n...     break\n...\nqseqid      CAM_READ_0234442157\nsseqid               CP031125.1\npident                   92.941\nlength                      340\nmismatch                     21\ngapopen                       3\nqstart                        3\nqend                        340\nsstart                   801595\nsend                     801257\nevalue                    0.000\nbitscore                492.000\nName: 0, dtype: object\n```", "```py\n>>> for i, hit in wanted.iterrows():\n...     print(hit['qseqid'], hit.get('pident'), hit.get('nope'))\n...     break\n...\nCAM_READ_0234442157 92.941 None\n```", "```py\n>>> seqs = meta[meta['seq_id'] == 'CAM_READ_0234442157']\n>>> seqs\n                 seq_id      sample_acc  ...  temp             lat_lon\n91  CAM_READ_0234442157  CAM_SMPL_GS112  ...  26.6  -8.50525,80.375583\n\n[1 rows x 7 columns]\n```", "```py\n>>> seqs.iloc[0]\nseq_id        CAM_READ_0234442157\nsample_acc         CAM_SMPL_GS112\ndate                       8/8/05\ndepth                      4573.0\nsalinity                     32.5\ntemp                         26.6\nlat_lon        -8.50525,80.375583\nName: 91, dtype: object\n```", "```py\n>>> seqs = meta[meta['seq_id'] == 'X']\n>>> seqs\nEmpty DataFrame\nColumns: [seq_id, sample_acc, date, depth, salinity, temp, lat_lon]\nIndex: []\n```", "```py\n>>> seqs.empty\nTrue\n```", "```py\n>>> seqs.shape[0]\n0\n```", "```py\n>>> meta[meta['salinity'] > 50].to_csv('salty.csv', index=False)\n```", "```py\n$ csvchk salty.csv\n// ****** Record 1 ****** //\nseq_id     : JCVI_READ_1092351234516\nsample_acc : JCVI_SMPL_1103283000038\ndate       : 2/19/04\ndepth      : 0.2\nsalinity   : 63.4\ntemp       : 37.6\nlat_lon    : -1.2283334,-90.42917\n```", "```py\ndef guess_delimiter(filename: str) -> str:\n    \"\"\" Guess the field separator from the file extension \"\"\"\n\n    ext = os.path.splitext(filename)[1] ![1](assets/1.png)\n    return ',' if ext == '.csv' else '\\t' ![2](assets/2.png)\n```", "```py\ndef main():\n    args = get_args()\n    annots_reader = csv.DictReader(args.annotations, delimiter=',') ![1](assets/1.png)\n    annots = {row['seq_id']: row for row in annots_reader} ![2](assets/2.png)\n\n    headers = ['qseqid', 'pident', 'depth', 'lat_lon'] ![3](assets/3.png)\n    args.outfile.write(args.delimiter.join(headers) + '\\n') ![4](assets/4.png)\n\n    hits = csv.DictReader(args.hits, ![5](assets/5.png)\n                          delimiter=',',\n                          fieldnames=[\n                              'qseqid', 'sseqid', 'pident', 'length',\n                              'mismatch', 'gapopen', 'qstart', 'qend',\n                              'sstart', 'send', 'evalue', 'bitscore'\n                          ])\n\n    num_written = 0 ![6](assets/6.png)\n    for hit in hits: ![7](assets/7.png)\n        if float(hit.get('pident', -1)) < args.pctid: ![8](assets/8.png)\n            continue\n\n        if seq_id := hit.get('qseqid'): ![9](assets/9.png)\n            if seq := annots.get(seq_id): ![10](assets/10.png)\n                num_written += 1 ![11](assets/11.png)\n                args.outfile.write(\n                    args.delimiter.join( ![12](assets/12.png)\n                        map(lambda s: f'\"{s}\"', [\n                            seq_id,\n                            hit.get('pident'),\n                            seq.get('depth'),\n                            seq.get('lat_lon')\n                        ])) + '\\n')\n\n    args.outfile.close() ![13](assets/13.png)\n    print(f'Exported {num_written:,} to \"{args.outfile.name}\".') ![14](assets/14.png)\n```", "```py\ndef main():\n    args = get_args()\n    annots_reader = csv.DictReader(args.annotations, delimiter=',')\n    annots = {row['seq_id']: row for row in annots_reader}\n\n    writer = csv.DictWriter( ![1](assets/1.png)\n        args.outfile,\n        fieldnames=['qseqid', 'pident', 'depth', 'lat_lon'],\n        delimiter=args.delimiter)\n    writer.writeheader() ![2](assets/2.png)\n\n    hits = csv.DictReader(args.hits,\n                          delimiter=',',\n                          fieldnames=[\n                              'qseqid', 'sseqid', 'pident', 'length',\n                              'mismatch', 'gapopen', 'qstart', 'qend',\n                              'sstart', 'send', 'evalue', 'bitscore'\n                          ])\n\n    num_written = 0\n    for hit in hits:\n        if float(hit.get('pident', -1)) < args.pctid:\n            continue\n\n        if seq_id := hit.get('qseqid'):\n            if seq := annots.get(seq_id):\n                num_written += 1\n                writer.writerow({ ![3](assets/3.png)\n                    'qseqid': seq_id,\n                    'pident': hit.get('pident'),\n                    'depth': seq.get('depth'),\n                    'lat_lon': seq.get('lat_lon'),\n                })\n\n    print(f'Exported {num_written:,} to \"{args.outfile.name}\".') ![4](assets/4.png)\n```", "```py\ndef main():\n    args = get_args()\n    annots = pd.read_csv(args.annotations, sep=',') ![1](assets/1.png)\n    hits = pd.read_csv(args.hits, ![2](assets/2.png)\n                       sep=',',\n                       names=[\n                           'qseqid', 'sseqid', 'pident', 'length', 'mismatch',\n                           'gapopen', 'qstart', 'qend', 'sstart', 'send',\n                           'evalue', 'bitscore'\n                       ])\n\n    data = [] ![3](assets/3.png)\n    for _, hit in hits[hits['pident'] >= args.pctid].iterrows(): ![4](assets/4.png)\n        meta = annots[annots['seq_id'] == hit['qseqid']] ![5](assets/5.png)\n        if not meta.empty: ![6](assets/6.png)\n            for _, seq in meta.iterrows(): ![7](assets/7.png)\n                data.append({ ![8](assets/8.png)\n                    'qseqid': hit['qseqid'],\n                    'pident': hit['pident'],\n                    'depth': seq['depth'],\n                    'lat_lon': seq['lat_lon'],\n                })\n\n    df = pd.DataFrame.from_records(data=data) ![9](assets/9.png)\n    df.to_csv(args.outfile, index=False, sep=args.delimiter) ![10](assets/10.png)\n\n    print(f'Exported {len(data):,} to \"{args.outfile.name}\".') ![11](assets/11.png)\n```", "```py\ndef main():\n    args = get_args()\n    annots = pd.read_csv(args.annotations, sep=',', index_col='seq_id') ![1](assets/1.png)\n    hits = pd.read_csv(args.hits,\n                       sep=',',\n                       index_col='qseqid', ![2](assets/2.png)\n                       names=[\n                           'qseqid', 'sseqid', 'pident', 'length', 'mismatch',\n                           'gapopen', 'qstart', 'qend', 'sstart', 'send',\n                           'evalue', 'bitscore'\n                       ])\n\n    joined = hits[hits['pident'] >= args.pctid].join(annots, how='inner') ![3](assets/3.png)\n\n    joined.to_csv(args.outfile, ![4](assets/4.png)\n                  index=True,\n                  index_label='qseqid',\n                  columns=['pident', 'depth', 'lat_lon'],\n                  sep=args.delimiter)\n\n    print(f'Exported {joined.shape[0]:,} to \"{args.outfile.name}\".')\n```", "```py\n>>> import pandas as pd\n>>> annots = pd.read_csv('tests/inputs/meta.csv')\n>>> annots.index\nRangeIndex(start=0, stop=100, step=1)\n```", "```py\n>>> annots = pd.read_csv('tests/inputs/meta.csv', index_col='seq_id')\n```", "```py\n>>> annots = pd.read_csv('tests/inputs/meta.csv', index_col=0)\n```", "```py\n>>> annots.index[:10]\nIndex(['JCVI_READ_1092301105055', 'JCVI_READ_1092351051817',\n       'JCVI_READ_1092301096881', 'JCVI_READ_1093017101914',\n       'JCVI_READ_1092342065252', 'JCVI_READ_1092256406745',\n       'JCVI_READ_1092258001174', 'JCVI_READ_1092959499253',\n       'JCVI_READ_1092959656555', 'JCVI_READ_1092959499263'],\n      dtype='object', name='seq_id')\n```", "```py\n>>> cols = ['qseqid', 'sseqid', 'pident', 'length', 'mismatch', 'gapopen',\n 'qstart', 'qend', 'sstart', 'send', 'evalue', 'bitscore']\n>>> hits = pd.read_csv('tests/inputs/hits1.csv', names=cols, index_col='qseqid')\n>>> hits.index[:10]\nIndex(['CAM_READ_0234442157', 'CAM_READ_0234442157', 'CAM_READ_0234442157',\n       'CAM_READ_0234442157', 'JCVI_READ_1095946186912',\n       'JCVI_READ_1095946186912', 'JCVI_READ_1095946186912',\n       'JCVI_READ_1095946186912', 'JCVI_READ_1095946186912',\n       'JCVI_READ_1091145027519'],\n      dtype='object', name='qseqid')\n```", "```py\n>>> wanted = hits[hits['pident'] >= 90]\n>>> wanted.shape\n(190, 11)\n```", "```py\n>>> joined = wanted.join(annots, how='inner')\n>>> joined\n                             sseqid   pident  ...  temp              lat_lon\nCAM_READ_0234442157      CP031125.1   92.941  ...  26.6   -8.50525,80.375583\nJCVI_READ_1091120852400  CP012541.1  100.000  ...  25.0     24.488333,-83.07\nJCVI_READ_1091141680691  MN693562.1   90.852  ...  27.7  10.716389,-80.25445\nJCVI_READ_1091141680691  MN693445.1   90.645  ...  27.7  10.716389,-80.25445\nJCVI_READ_1091141680691  MN693445.1   91.935  ...  27.7  10.716389,-80.25445\n...                             ...      ...  ...   ...                  ...\nJCVI_READ_1095913058159  CP000437.1   94.737  ...   9.4  41.485832,-71.35111\nJCVI_READ_1095913058159  AM286280.1   92.683  ...   9.4  41.485832,-71.35111\nJCVI_READ_1095913058159  DQ682149.1   94.737  ...   9.4  41.485832,-71.35111\nJCVI_READ_1095913058159  AM233362.1   94.737  ...   9.4  41.485832,-71.35111\nJCVI_READ_1095913058159  AY871946.1   94.737  ...   9.4  41.485832,-71.35111\n\n[190 rows x 17 columns]\n```", "```py\n>>> joined = pd.merge(wanted, annots, left_index=True, right_index=True)\n```", "```py\n>>> out_fh = open('out.csv', 'wt')\n>>> joined.to_csv(out_fh, index=True, index_label='qseqid',\ncolumns=['pident', 'depth', 'lat_lon'], sep=',')\n```"]