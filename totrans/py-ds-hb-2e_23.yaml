- en: Chapter 20\. Aggregation and Grouping
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A fundamental piece of many data analysis tasks is efficient summarization:
    computing aggregations like `sum`, `mean`, `median`, `min`, and `max`, in which
    a single number summarizes aspects of a potentially large dataset. In this chapter,
    we’ll explore aggregations in Pandas, from simple operations akin to what we’ve
    seen on NumPy arrays to more sophisticated operations based on the concept of
    a `groupby`.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'For convenience, we’ll use the same `display` magic function that we used in
    the previous chapters:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Planets Data
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here we will use the Planets dataset, available via the [Seaborn package](http://seaborn.pydata.org)
    (see [Chapter 36](ch36.xhtml#section-0414-visualization-with-seaborn)). It gives
    information on planets that astronomers have discovered around other stars (known
    as *extrasolar planets*, or *exoplanets* for short). It can be downloaded with
    a simple Seaborn command:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This has some details on the more than one thousand extrasolar planets discovered
    up to 2014.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Simple Aggregation in Pandas
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In [Chapter 7](ch07.xhtml#section-0204-computation-on-arrays-aggregates), we
    explored some of the data aggregations available for NumPy arrays. As with a one-dimensional
    NumPy array, for a Pandas `Series` the aggregates return a single value:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'For a `DataFrame`, by default the aggregates return results within each column:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'By specifying the `axis` argument, you can instead aggregate within each row:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Pandas `Series` and `DataFrame` objects include all of the common aggregates
    mentioned in [Chapter 7](ch07.xhtml#section-0204-computation-on-arrays-aggregates);
    in addition, there is a convenience method, `describe`, that computes several
    common aggregates for each column and returns the result. Let’s use this on the
    Planets data, for now dropping rows with missing values:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This method helps us understand the overall properties of a dataset. For example,
    we see in the `year` column that although exoplanets were discovered as far back
    as 1989, half of all planets in the dataset were not discovered until 2010 or
    after. This is largely thanks to the *Kepler* mission, which aimed to find eclipsing
    planets around other stars using a specially designed space telescope.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '[Table 20-1](#table-20-1) summarizes some other built-in Pandas aggregations.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Table 20-1\. Listing of Pandas aggregation methods
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '| Aggregation | Returns |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
- en: '| `count` | Total number of items |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
- en: '| `first`, `last` | First and last item |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
- en: '| `mean`, `median` | Mean and median |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
- en: '| `min`, `max` | Minimum and maximum |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
- en: '| `std`, `var` | Standard deviation and variance |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
- en: '| `mad` | Mean absolute deviation |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
- en: '| `prod` | Product of all items |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
- en: '| `sum` | Sum of all items |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
- en: These are all methods of `DataFrame` and `Series` objects.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: To go deeper into the data, however, simple aggregates are often not enough.
    The next level of data summarization is the `groupby` operation, which allows
    you to quickly and efficiently compute aggregates on subsets of data.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: 'groupby: Split, Apply, Combine'
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: groupby：分割、应用、组合
- en: 'Simple aggregations can give you a flavor of your dataset, but often we would
    prefer to aggregate conditionally on some label or index: this is implemented
    in the so-called `groupby` operation. The name “group by” comes from a command
    in the SQL database language, but it is perhaps more illuminative to think of
    it in the terms first coined by Hadley Wickham of Rstats fame: *split, apply,
    combine*.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的聚合可以让你了解数据集的特征，但通常我们更希望在某些标签或索引上进行条件聚合：这在所谓的`groupby`操作中实现。这个名字“group by”来自
    SQL 数据库语言中的一个命令，但也许更具启发性的是，我们可以根据 Rstats 名人哈德利·维克姆首次提出的术语来思考它：*分割、应用、组合*。
- en: Split, Apply, Combine
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分割、应用、组合
- en: A canonical example of this split-apply-combine operation, where the “apply”
    is a summation aggregation, is illustrated [Figure 20-1](#fig_images_in_0308-split-apply-combine).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这个分割-应用-组合操作的典型示例，其中“应用”是一个求和聚合，如[图 20-1](#fig_images_in_0308-split-apply-combine)所示。
- en: '[Figure 20-1](#fig_images_in_0308-split-apply-combine) shows what the `groupby`
    operation accomplishes:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 20-1](#fig_images_in_0308-split-apply-combine)展示了`groupby`操作的完成情况：'
- en: The *split* step involves breaking up and grouping a `DataFrame` depending on
    the value of the specified key.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*分割*步骤涉及根据指定键的值拆分和分组`DataFrame`。'
- en: The *apply* step involves computing some function, usually an aggregate, transformation,
    or filtering, within the individual groups.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*应用*步骤涉及在各个组内计算某个函数，通常是一个聚合、转换或筛选。'
- en: The *combine* step merges the results of these operations into an output array.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*合并*步骤将这些操作的结果合并到输出数组中。'
- en: '![03.08 split apply combine](assets/03.08-split-apply-combine.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![03.08 split apply combine](assets/03.08-split-apply-combine.png)'
- en: Figure 20-1\. A visual representation of a groupby operation^([1](ch20.xhtml#idm45858775097184))
  id: totrans-45
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 20-1\. `groupby`操作的视觉表示^([1](ch20.xhtml#idm45858775097184))
- en: 'While this could certainly be done manually using some combination of the masking,
    aggregation, and merging commands covered earlier, an important realization is
    that *the intermediate splits do not need to be explicitly instantiated*. Rather,
    the `groupby` can (often) do this in a single pass over the data, updating the
    sum, mean, count, min, or other aggregate for each group along the way. The power
    of the `groupby` is that it abstracts away these steps: the user need not think
    about *how* the computation is done under the hood, but rather can think about
    the *operation as a whole*.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这当然可以通过一些组合使用先前介绍的掩码、聚合和合并命令来手动完成，但重要的认识是*中间的分割不需要显式实例化*。相反，`groupby`可以（通常）在数据的单次遍历中执行此操作，沿途更新每个组的总和、平均值、计数、最小值或其他聚合。`groupby`的威力在于它抽象出了这些步骤：用户不需要考虑计算在幕后是如何进行的，而是可以将*操作作为一个整体*来思考。
- en: 'As a concrete example, let’s take a look at using Pandas for the computation
    shown in the following table. We’ll start by creating the input `DataFrame`:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个具体的例子，让我们看看如何使用 Pandas 来计算下表中所示的计算。我们将从创建输入`DataFrame`开始：
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The most basic split-apply-combine operation can be computed with the `groupby`
    method of the `DataFrame`, passing the name of the desired key column:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 最基本的分割-应用-组合操作可以使用`DataFrame`的`groupby`方法来计算，传递所需键列的名称：
- en: '[PRE11]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Notice that what is returned is a `DataFrameGroupBy` object, not a set of `DataFrame`
    objects. This object is where the magic is: you can think of it as a special view
    of the `DataFrame`, which is poised to dig into the groups but does no actual
    computation until the aggregation is applied. This “lazy evaluation” approach
    means that common aggregates can be implemented efficiently in a way that is almost
    transparent to the user.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 注意返回的是一个`DataFrameGroupBy`对象，而不是一组`DataFrame`对象。这个对象是魔术所在：你可以将它看作是`DataFrame`的一个特殊视图，它准备好深入研究组，但在应用聚合之前不进行任何实际计算。这种“延迟评估”方法意味着常见的聚合可以以几乎对用户透明的方式高效实现。
- en: 'To produce a result, we can apply an aggregate to this `DataFrameGroupBy` object,
    which will perform the appropriate apply/combine steps to produce the desired
    result:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成结果，我们可以对这个`DataFrameGroupBy`对象应用聚合函数，它将执行适当的应用/合并步骤以生成所需的结果：
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The `sum` method is just one possibility here; you can apply most Pandas or
    NumPy aggregation functions, as well as most `DataFrame` operations, as you will
    see in the following discussion.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这里`sum`方法只是一种可能性；你可以应用大多数 Pandas 或 NumPy 聚合函数，以及大多数`DataFrame`操作，正如你将在以下讨论中看到的那样。
- en: The GroupBy Object
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GroupBy 对象
- en: 'The `GroupBy` object is a flexible abstraction: in many ways, it can be treated
    as simply a collection of `DataFrame`s, though it is doing more sophisticated
    things under the hood. Let’s see some examples using the Planets data.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`GroupBy`对象是一个灵活的抽象：在许多情况下，它可以简单地被视为`DataFrame`的集合，尽管在内部执行更复杂的操作。让我们看一些使用行星数据的示例。'
- en: Perhaps the most important operations made available by a `GroupBy` are *aggregate*,
    *filter*, *transform*, and *apply*. We’ll discuss each of these more fully in
    the next section, but before that let’s take a look at some of the other functionality
    that can be used with the basic `GroupBy` operation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`GroupBy`提供的可能是最重要的操作是*aggregate*、*filter*、*transform*和*apply*。我们将在下一节更详细地讨论每一个，但在此之前，让我们看一些可以与基本`GroupBy`操作一起使用的其他功能。'
- en: Column indexing
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列索引
- en: 'The `GroupBy` object supports column indexing in the same way as the `DataFrame`,
    and returns a modified `GroupBy` object. For example:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`GroupBy`对象支持与`DataFrame`相同的列索引，返回一个修改过的`GroupBy`对象。例如：'
- en: '[PRE13]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here we’ve selected a particular `Series` group from the original `DataFrame`
    group by reference to its column name. As with the `GroupBy` object, no computation
    is done until we call some aggregate on the object:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们通过引用其列名从原始的`DataFrame`组中选择了一个特定的`Series`组。与`GroupBy`对象一样，直到我们对对象调用某些聚合函数之前，都不会进行任何计算：
- en: '[PRE15]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This gives an idea of the general scale of orbital periods (in days) that each
    method is sensitive to.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这给出了每种方法对轨道周期（以天计）的一般尺度的概念。
- en: Iteration over groups
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对组进行迭代
- en: 'The `GroupBy` object supports direct iteration over the groups, returning each
    group as a `Series` or `DataFrame`:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`GroupBy`对象支持直接在组上进行迭代，返回每个组作为`Series`或`DataFrame`：'
- en: '[PRE16]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This can be useful for manual inspection of groups for the sake of debugging,
    but it is often much faster to use the built-in `apply` functionality, which we
    will discuss momentarily.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于手动检查组以进行调试非常有用，但通常使用内置的`apply`功能会更快，我们稍后将讨论此功能。
- en: Dispatch methods
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分派方法
- en: 'Through some Python class magic, any method not explicitly implemented by the
    `GroupBy` object will be passed through and called on the groups, whether they
    are `DataFrame` or `Series` objects. For example, using the `describe` method
    is equivalent to calling `describe` on the `DataFrame` representing each group:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一些 Python 类魔术，任何未明确由`GroupBy`对象实现的方法都将被传递并在组上调用，无论它们是`DataFrame`还是`Series`对象。例如，使用`describe`方法等效于在表示每个组的`DataFrame`上调用`describe`：
- en: '[PRE17]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Looking at this table helps us to better understand the data: for example,
    the vast majority of planets until 2014 were discovered by the Radial Velocity
    and Transit methods, though the latter method became common more recently. The
    newest methods seem to be Transit Timing Variation and Orbital Brightness Modulation,
    which were not used to discover a new planet until 2011.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 查看这张表有助于我们更好地理解数据：例如，直到2014年，绝大多数行星是通过径向速度和凌日法发现的，尽管后者方法近年来变得更为普遍。最新的方法似乎是凌时差变化和轨道亮度调制，直到2011年才用于发现新行星。
- en: Notice that these dispatch methods are applied *to each individual group*, and
    the results are then combined within `GroupBy` and returned. Again, any valid
    `DataFrame`/`Series` method can be called in a similar manner on the corresponding
    `GroupBy` object.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这些分派方法是应用在*每个单独的组*上的，并且结果然后在`GroupBy`内组合并返回。同样地，任何有效的`DataFrame`/`Series`方法都可以在对应的`GroupBy`对象上类似地调用。
- en: Aggregate, Filter, Transform, Apply
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 聚合（Aggregate）、筛选（Filter）、转换（Transform）、应用（Apply）
- en: The preceding discussion focused on aggregation for the combine operation, but
    there are more options available. In particular, `GroupBy` objects have `aggregate`,
    `filter`, `transform`, and `apply` methods that efficiently implement a variety
    of useful operations before combining the grouped data.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的讨论侧重于合并操作的聚合，但还有更多可用选项。特别是，`GroupBy`对象具有`aggregate`、`filter`、`transform`和`apply`方法，可以在组合并分组数据之前有效地实现多种有用的操作。
- en: 'For the purpose of the following subsections, we’ll use this `DataFrame`:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 出于以下各小节的目的，我们将使用这个`DataFrame`：
- en: '[PRE18]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Aggregation
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 聚合
- en: 'You’re now familiar with `GroupBy` aggregations with `sum`, `median`, and the
    like, but the `aggregate` method allows for even more flexibility. It can take
    a string, a function, or a list thereof, and compute all the aggregates at once.
    Here is a quick example combining all of these:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经熟悉了使用`sum`、`median`等方法的`GroupBy`聚合，但`aggregate`方法允许更加灵活。它可以接受字符串、函数或函数列表，并一次计算所有聚合。以下是一个快速示例，结合了所有这些内容：
- en: '[PRE19]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Another common pattern is to pass a dictionary mapping column names to operations
    to be applied on that column:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种常见的模式是传递一个将列名映射到要应用于该列的操作的字典：
- en: '[PRE20]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Filtering
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过滤
- en: 'A filtering operation allows you to drop data based on the group properties.
    For example, we might want to keep all groups in which the standard deviation
    is larger than some critical value:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤操作允许您根据组属性丢弃数据。例如，我们可能希望保留所有标准偏差大于某个临界值的组：
- en: '[PRE21]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The filter function should return a Boolean value specifying whether the group
    passes the filtering. Here, because group A does not have a standard deviation
    greater than 4, it is dropped from the result.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤函数应返回一个布尔值，指定组是否通过过滤。在这里，因为A组的标准偏差不大于4，所以它从结果中被删除。
- en: Transformation
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 变换
- en: 'While aggregation must return a reduced version of the data, transformation
    can return some transformed version of the full data to recombine. For such a
    transformation, the output is the same shape as the input. A common example is
    to center the data by subtracting the group-wise mean:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然聚合必须返回数据的减少版本，但变换可以返回一些经过转换的完整数据以重新组合。对于这种转换，输出与输入的形状相同。一个常见的例子是通过减去组内均值来使数据居中：
- en: '[PRE22]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The apply method
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用方法
- en: The `apply` method lets you apply an arbitrary function to the group results.
    The function should take a `DataFrame` and returns either a Pandas object (e.g.,
    `DataFrame`, `Series`) or a scalar; the behavior of the combine step will be tailored
    to the type of output returned.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`apply`方法允许您将任意函数应用于组结果。该函数应接受一个`DataFrame`，并返回一个Pandas对象（例如`DataFrame`、`Series`）或一个标量；合并步骤的行为将根据返回的输出类型进行调整。'
- en: 'For example, here is an `apply` operation that normalizes the first column
    by the sum of the second:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，这里是一个通过第一列的总和来归一化的`apply`操作：
- en: '[PRE23]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '`apply` within a `GroupBy` is flexible: the only criterion is that the function
    takes a `Data⁠Frame` and returns a Pandas object or scalar. What you do in between
    is up to you!'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GroupBy`中的`apply`非常灵活：唯一的标准是函数接受`DataFrame`并返回Pandas对象或标量。在中间您可以做任何事情！
- en: Specifying the Split Key
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指定分割密钥
- en: In the simple examples presented before, we split the `DataFrame` on a single
    column name. This is just one of many options by which the groups can be defined,
    and we’ll go through some other options for group specification here.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前展示的简单示例中，我们根据单个列名拆分了`DataFrame`。这只是定义组的许多选项之一，我们将在这里介绍一些其他的组规范选项。
- en: A list, array, series, or index providing the grouping keys
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提供分组键的列表、数组、系列或索引
- en: 'The key can be any series or list with a length matching that of the `DataFrame`.
    For example:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥可以是与`DataFrame`长度匹配的任何系列或列表。例如：
- en: '[PRE24]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Of course, this means there’s another, more verbose way of accomplishing the
    `df.groupby(''key'')` from before:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这意味着还有另一种更冗长的方法来实现`df.groupby('key')`：
- en: '[PRE25]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: A dictionary or series mapping index to group
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 映射索引到组的字典或系列
- en: 'Another method is to provide a dictionary that maps index values to the group
    keys:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是提供一个将索引值映射到组键的字典：
- en: '[PRE26]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Any Python function
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 任何Python函数
- en: 'Similar to mapping, you can pass any Python function that will input the index
    value and output the group:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于映射，您可以传递任何Python函数，该函数将输入索引值并输出组：
- en: '[PRE27]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: A list of valid keys
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有效密钥列表
- en: 'Further, any of the preceding key choices can be combined to group on a multi-index:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，可以将任何前述密钥选择组合以在多索引上进行分组：
- en: '[PRE28]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Grouping Example
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分组示例
- en: 'As an example of this, in a few lines of Python code we can put all these together
    and count discovered planets by method and by decade:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 举例来说，在几行Python代码中，我们可以将所有这些组合在一起，并按方法和十年计数发现的行星：
- en: '[PRE29]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'This shows the power of combining many of the operations we’ve discussed up
    to this point when looking at realistic datasets: we quickly gain a coarse understanding
    of when and how extrasolar planets were detected in the years after the first
    discovery.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了在查看现实数据集时结合许多我们到目前为止讨论过的操作的力量：我们很快就能粗略地了解在首次发现后的几年内如何检测到系外行星。
- en: I would suggest digging into these few lines of code and evaluating the individual
    steps to make sure you understand exactly what they are doing to the result. It’s
    certainly a somewhat complicated example, but understanding these pieces will
    give you the means to similarly explore your own data.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议深入研究这几行代码，并评估每个步骤，以确保您完全理解它们对结果的影响。这当然是一个有些复杂的例子，但理解这些部分将使您能够类似地探索自己的数据。
- en: ^([1](ch20.xhtml#idm45858775097184-marker)) Code to produce this figure can
    be found in the [online appendix](https://oreil.ly/zHqzu).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch20.xhtml#idm45858775097184-marker)) 生成此图的代码可以在[在线附录](https://oreil.ly/zHqzu)中找到。
