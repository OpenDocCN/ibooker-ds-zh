["```py\n[\n  {\n    \"category\": \"Physiology or Medicine\",\n    \"country\": \"Argentina\",\n    \"date_of_birth\": \"1927-10-08T00:00:00.000Z\",\n    \"date_of_death\": \"2002-03-24T00:00:00.000Z\",\n    \"gender\": \"male\",\n    \"link\": \"http:\\/\\/en.wikipedia.org\\/wiki\\/C%C3%A9sar_Milstein\",\n    \"name\": \"C\\u00e9sar Milstein\",\n    \"place_of_birth\": \"Bah\\u00eda Blanca ,  Argentina\",\n    \"place_of_death\": \"Cambridge , England\",\n    \"text\": \"C\\u00e9sar Milstein , Physiology or Medicine, 1984\",\n    \"year\": 1984,\n    \"award_age\": 57,\n    \"born_in\": \"\",\n    \"bio_image\": \"full/6bf65058d573e07b72231407842018afc98fd3ea.jpg\",\n    \"mini_bio\": \"<p><b>César Milstein</b>, <a href='http://en.w...\"\n  }\n  ['...']\n]\n```", "```py\n$ pip install Flask\n```", "```py\n# server.py\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route(\"/\") ![1](assets/1.png)\ndef hello():\n    return \"Hello World!\"\n\nif __name__ == \"__main__\":\n    app.run(port=8000, debug=True) ![2](assets/2.png)\n```", "```py\n$ python server.py\n * Serving Flask app 'server' (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: off\n * Running on http://127.0.0.1:8000/ (Press CTRL+C to quit)\n```", "```py\nviz\n├── data\n│   └── nobel_winners.json\n├── index.xhtml\n└── script.js\n```", "```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<style>\n  body{ font-family: sans-serif; }\n</style>\n\n<h2 id='data-title'></h2>\n<div id='data'>\n    <pre></pre>\n</div>\n\n<script src=\"lib/d3.v7.min.js\"></script>\n<script src=\"script.js\"></script>\n```", "```py\nd3.json(\"data/nobel_winners_cleaned.json\")\n  .then((data) => {\n  d3.select(\"h2#data-title\").text(\"All the Nobel-winners\");\n  d3.select(\"div#data pre\").html(JSON.stringify(data, null, 4)); ![1](assets/1.png)\n});\n```", "```py\nimport pandas as pd\n\ndf_winners = pd.read_json('data/nobel_winners.json')\n\nfor name, group in df_winners.groupby('country'): ![1](assets/1.png)\n    group.to_json('data/winners_by_country' + name + '.json',\\\n                  orient='records')\n```", "```py\n$ ls data/winners_by_country\nArgentina.json  Azerbaijan.json      Canada.json\nColombia.json   Czech Republic.json  Egypt.json  ...\n```", "```py\nlet loadCountryWinnersJSON = function (country) {\n    d3.json(\"data/winners_by_country/\" + country + \".json\")\n      .then(function (data) {\n        d3.select(\"h2#data-title\").text(\n          \"All the Nobel-winners from \" + country\n        );\n        d3.select(\"div#data pre\").html(JSON.stringify(data, null, 4));\n      })\n      .catch((error) => console.log(error));\n  };\n```", "```py\nloadCountryWinnersJSON('Australia');\n```", "```py\n# server_sql.py\nfrom flask import Flask, request, abort\nimport dataset\nimport json\nimport datetime\n\napp = Flask(__name__)\ndb = dataset.connect('sqlite:///data/nobel_winners.db')\n\n@app.route('/api/winners')\ndef get_country_data():\n    print 'Request args: ' + str(dict(request.args))\n    query_dict = {}\n    for key in ['country', 'category', 'year']: ![1](assets/1.png)\n        arg = request.args.get(key) ![2](assets/2.png)\n        if arg:\n            query_dict[key] = arg\n\n    winners = list(db['winners'].find(**query_dict)) ![3](assets/3.png)\n    if winners:\n        return dumps(winners)\n    abort(404) # resource not found\n\nclass JSONDateTimeEncoder(json.JSONEncoder): ![4](assets/4.png)\n    def default(self, obj):\n        if isinstance(obj, (datetime.date, datetime.datetime)):\n            return obj.isoformat()\n        else:\n            return json.JSONEncoder.default(self, obj)\n\ndef dumps(obj):\n    return json.dumps(obj, cls=JSONDateTimeEncoder)\n\nif __name__=='__main__':\n    app.run(port=8000, debug=True)\n```", "```py\n$ curl -d category=Physics -d country=Japan\n  --get http://localhost:8000/api/\n\n[{\"index\": 761, \"category\": \"Physics\", \"country\": \"Japan\",\n\"date_of_birth\": \"1907-01-23T00:00:00\", \"date_of_death\": \"1981-09-08T00:00:00\",\n\"gender\": \"male\", \"link\": \"http://en.wikipedia.org/wiki/Hideki_Yukawa\",\n\"name\": \"Hideki Yukawa\", \"place_of_birth\": \"Tokyo ,  Japan\",\n\"place_of_death\": \"Kyoto ,  Japan\", \"text\": \"Hideki Yukawa , Physics, 1949\",\n\"year\": 1949, \"award_age\": 42}, {\"index\": 762, \"category\": \"Physics\",\n\"country\": \"Japan\", \"date_of_birth\": \"1906-03-31T00:00:00\",\n\"date_of_death\": \"1979-07-08T00:00:00\", \"gender\": \"male\", ... }]\n```"]