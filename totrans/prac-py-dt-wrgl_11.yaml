- en: Chapter 11\. Beyond Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章。超越 Python
- en: Python is an exceptionally powerful and versatile tool for working with data,
    and if you’ve followed along with the exercises in this book, you are hopefully
    starting to feel confident about using it to move your own data wrangling projects
    forward. Thanks to the vibrant Python community and the constantly evolving suite
    of helpful libraries that its members create and maintain, the work you’ve put
    into learning the fundamentals in this book will still be valuable whether your
    next data wrangling project comes along tomorrow or next year. Also, while Python
    as a programming language is unique in many ways, the programming skills and vocabulary
    that you’ve acquired here will give you a head start with other programming languages,
    especially ones relatively object-oriented ones like JavaScript.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一款异常强大且多才多艺的工具，特别适用于处理数据。如果你已经跟着本书的练习走过来，希望你开始对使用它来推动自己的数据整理项目感到自信了。由于充满活力的
    Python 社区以及其成员创建和维护的不断发展的一系列有用库，你在本书中学习基础知识的工作将仍然是宝贵的，无论你的下一个数据整理项目是明天还是明年。此外，虽然
    Python 作为一种编程语言在许多方面独特，但你在这里获得的编程技能和词汇将让你在其他编程语言中获得一个起步，特别是像 JavaScript 这样相对面向对象的语言。
- en: Still, one thing I’ve tried to clarify throughout this book is that there are
    times when the “programmatic” solution to a problem is not *really* the most efficient
    one. Our work with Excel and XML files in [Chapter 4](ch04.html#chapter4), for
    example, highlighted that sometimes trying to do things programmatically just
    doesn’t make sense. For example, while in [Example 4-12](ch04.html#xml_parsing)
    we *could* have written a Python script to traverse our entire XML document in
    order to discover its structure, it was undoubtedly faster and easier to simply
    *look* at our data, identify the elements that interested us, and write our Python
    program to target them directly. Likewise, there are times when writing a Python
    program *at all* can be more effort than a particular data wrangling project really
    requires, especially if it is smaller or more exploratory. Though *pandas* is
    an incredibly useful library, you can still end up writing a fair amount of code
    just to get a basic sense of what a new dataset contains. In other words, while
    I fully believe that the power and versatility of Python makes it an indispensable
    data wrangling tool, I also want to highlight a few other free and/or open source
    tools that I think you’ll find useful^([1](ch11.html#idm45143393541072)) as a
    complement to Python in your data wrangling projects.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，本书中我试图澄清的一件事是，有时“程序化”解决问题并不是真正最有效的方式。例如，在[第4章](ch04.html#chapter4)中，我们在处理
    Excel 和 XML 文件时强调，有时试图以编程方式做事情是毫无意义的。例如，在[示例4-12](ch04.html#xml_parsing)中，我们本可以编写一个
    Python 脚本来遍历整个 XML 文档以发现其结构，但毫无疑问，直接查看我们的数据，识别我们感兴趣的元素，并编写我们的 Python 程序以直接定位它们，会更快、更容易。同样，有时编写
    Python 程序甚至会比一个特定的数据整理项目需要的工作量更大，特别是如果它更小或更具探索性质。尽管 *pandas* 是一个非常有用的库，但你仍然可能需要编写大量代码来基本了解新数据集包含的内容。换句话说，虽然我完全相信
    Python 的强大和多才多艺使其成为不可或缺的数据整理工具，但我还想强调一些其他免费和/或开源工具，我认为你在数据整理项目中会发现它们很有用^([1](ch11.html#idm45143393541072))，作为
    Python 的补充。
- en: Additional Tools for Data Review
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据审查的附加工具
- en: Python offers great speed and flexibility when it comes to actually accessing
    and wrangling data, but it’s not particularly well suited to letting you actually
    *look* at your data. So throughout this book we’ve relied on basic text editors
    (and occasionally web browsers) when we want to browse our dataset visually. While
    text editors are a great first step for this, you’ll also want to get comfortable
    with at least one of each of the following program types to help you get a quick
    initial overview of your data—especially if the files you’re working with are
    not too large.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当实际访问和整理数据时，Python 在速度和灵活性方面表现出色，但在让你实际查看数据方面并不特别适合。因此，在本书中，当我们希望以视觉方式浏览数据集时，我们依赖基本文本编辑器（偶尔也会使用网络浏览器）。虽然文本编辑器在这方面是一个很好的第一步，但你也会希望至少熟悉以下每种程序类型中的一种，以帮助你快速初步了解数据——特别是如果你处理的文件不是太大。
- en: Spreadsheet Programs
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电子表格程序
- en: It’s possible that before you began reading this book you were already familiar
    with spreadsheet programs—whether online versions like Google Sheets, paid local
    software options like Microsoft Excel, or contribution-supported, open source
    alternatives like Libre Office Calc. Spreadsheet programs typically come bundled
    with “office”-style software suites and offer basic calculation, analysis, and
    charting functionality. In general, there is not a huge variation in what these
    programs can do, though some are more flexible than others. I prefer [LibreOffice](https://libreoffice.org),
    for example, because it is free, open source, and works across platforms (including
    less common ones, like Linux). It even has a certified app for Chromebooks and
    Android devices called [Collabora](https://collaboraoffice.com/press-releases/collabora-office-ships-for-chromebooks).
    That said, if you already have or are familiar with a particular spreadsheet program,
    there is no important reason to switch to any other, as long as you are not going
    broke paying for it. Whatever you do, do *not* use pirated software; in a world
    where ransomware is running rampant—i.e., this one—it’s simply not worth the risk
    to your devices and data!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 可能在开始阅读本书之前，您已经熟悉了电子表格程序，无论是在线版本（如 Google Sheets）、付费的本地软件选项（如 Microsoft Excel），还是基于社区贡献支持的开源替代品（如
    LibreOffice Calc）。电子表格程序通常捆绑在“办公”风格的软件套件中，提供基本的计算、分析和制图功能。总体而言，这些程序的功能差异并不大，尽管有些比其他程序更灵活。例如，我更喜欢[LibreOffice](https://libreoffice.org)，因为它是免费的、开源的，并且跨平台运行（包括不常见的平台，如
    Linux）。它甚至有一个适用于 Chromebook 和 Android 设备的认证应用，名为[Collabora](https://collaboraoffice.com/press-releases/collabora-office-ships-for-chromebooks)。也就是说，如果您已经拥有或熟悉特定的电子表格程序，没有重要的理由要切换到其他程序，只要您不因为购买它而陷入财务困境。无论您选择什么，绝对*不要*使用盗版软件；在勒索软件肆虐的世界中，这简直不值得冒设备和数据的风险！
- en: 'While many spreadsheet programs have advanced functions that approximate what
    Python does (on a much smaller scale), I usually find myself turning to them for
    very specific data wrangling and assessment tasks. In particular, I will often
    use a spreadsheet program to quickly do the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然许多电子表格程序具有接近 Python 所做功能的高级函数（规模较小），但我通常会用它们来完成非常具体的数据整理和评估任务。特别是，我经常会使用电子表格程序快速执行以下操作：
- en: Change file formats
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 更改文件格式
- en: For example, if my data is provided as an multisheet XLSX file, I might open
    it in a spreadsheet program and save only the sheet I am interested in as a *.csv*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我的数据以多表格 XLSX 文件形式提供，我可能会在电子表格程序中打开它，并将我感兴趣的表格保存为 *.csv* 文件。
- en: Rename columns
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 重命名列
- en: If there are not many columns, I may change those with awkward or nondescript
    headers to be something more readable and/or intuitive for my purposes.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果列数不多，我可能会将那些具有尴尬或不明确标题的列更改为对我目的更可读和/或更直观的内容。
- en: Get a “feel” for data values
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对数据值有一个“感觉”
- en: Are the values provided in a “date” column actually dates? Or are they simply
    years? Are there a lot of obviously missing data values? If my dataset is relatively
    small, just visually scanning through the data in a spreadsheet program can sometimes
    be enough to determine whether I have the data I need—or if I need to move on.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的“日期”列中的值是否实际上是日期？还是仅仅是年份？是否有很多明显缺失的数据值？如果我的数据集相对较小，只是在电子表格程序中视觉扫描数据有时足以确定我是否拥有所需的数据，或者我是否需要继续进行。
- en: Generate basic summary statistics
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 生成基本摘要统计信息
- en: Of course I can do this in Python, and most of the time I do. But if I have
    only a few hundred rows of data, typing `=MEDIAN()` and then selecting the cells
    of interest is sometimes faster, especially if my original data file has metadata
    in it that would otherwise need to be stripped out (as we saw in [Chapter 4](ch04.html#chapter4)
    and again in Chapters [7](ch07.html#chapter7) and [8](ch08.html#chapter8)).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我可以用 Python 来做这些，而且大部分时间我确实这样做。但是如果我的数据只有几百行，输入`=MEDIAN()` 然后选择感兴趣的单元格有时会更快，特别是如果我的原始数据文件中有元数据需要去除的情况（正如我们在[第
    4 章](ch04.html#chapter4)，以及第 [7 章](ch07.html#chapter7) 和 [8 章](ch08.html#chapter8)
    中看到的）。
- en: Of course, every tool comes with its trade-offs, and previewing data in a spreadsheet
    program can create some unexpected results. As you might guess from our extended
    adventures in dealing with XLS-style “dates,” previewing a file that contains
    date-like values can cause them to display very differently according to particular
    spreadsheet program and its default handling and rendering of dates. As a result,
    you should *always* inspect date-like values using a text editor if the original
    data format is text based (e.g., *.csv*, *.tsv*, or *.txt*). Likewise, be sure
    to confirm the formatting (whether default or applied) on any number-containing
    cells, as truncating or rounding of values can obscure important variations in
    your data.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，每个工具都有其取舍，而在电子表格程序中预览数据可能会产生一些意想不到的结果。正如你可能从我们处理 XLS 样式“日期”的延长冒险中猜到的那样，预览包含类似日期值的文件可能会导致这些值根据特定电子表格程序及其默认处理和呈现日期的方式显示非常不同。因此，如果原始数据格式是基于文本的（例如
    *.csv*、*.tsv* 或 *.txt*），你应该*始终*使用文本编辑器检查类似日期值。同样，务必确认任何包含数字的单元格的格式（无论是默认还是应用的格式），因为值的截断或四舍五入可能会掩盖数据中重要的变化。
- en: OpenRefine
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OpenRefine
- en: One of the tools I turn to most for my initial exploration of larger, structured
    datasets is [OpenRefine](https://openrefine.org). In my experience, OpenRefine
    has proved to be a unique software tool that helps bridge the gap between traditional
    spreadsheet programs and full-on programming languages like Python. Like spreadsheet
    programs, OpenRefine operates through a graphical user interface (GUI), so most
    of your work with it will involve pointing and clicking with a mouse. *Unlike*
    spreadsheet programs, however, you don’t scroll through rows of data to get a
    sense of what they contain; instead, you can use menu options to create *facets*
    that provide summary information similar to that provided by the [pandas `value_counts()`
    method](https://pandas.pydata.org/docs/reference/api/pandas.Series.value_counts.html)—but
    without needing to write any code. OpenRefine also supports batch editing, implements
    several algorithms for string matching (including the fingerprinting method we
    used in [Example 6-11](ch06.html#ppp_lender_names)), and can import large files
    in segments (e.g., 100,000 rows at a time). In truth, OpenRefine is often my first
    stop when wrangling a new dataset, because it easily opens a variety of data formats
    and even offers a handy live preview of how the data will be parsed based on your
    selection of delimiters, for example. Once your dataset is loaded, OpenRefine
    can also provide almost one-click answers to questions like “What is the most
    common value in column *x*?” Finally, any time you make an actual change to a
    data file in OpenRefine (as opposed to just clustering or faceting it), it automatically
    records your actions in an exportable *.json* file that you can then apply to
    a *different* OpenRefine file in order to have those actions automatically repeated
    (usually in seconds). This is incredibly useful if you need to rename or rearrange
    data columns for a dataset that is regularly updated by the data provider. It’s
    even *more* useful, however, if you need *someone else* to be able to do it and
    they don’t have or cannot use Python.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我在初探更大、结构化数据集时经常使用的工具之一是 [OpenRefine](https://openrefine.org)。根据我的经验，OpenRefine
    是一款独特的软件工具，有助于弥合传统电子表格程序和像 Python 这样的全面编程语言之间的差距。与电子表格程序类似，OpenRefine 通过图形用户界面（GUI）操作，因此大部分工作都涉及使用鼠标进行指点和点击。*不同于*电子表格程序的是，你无需滚动数据行来了解其内容；相反，你可以使用菜单选项创建*分面*，提供类似于
    [pandas `value_counts()` 方法](https://pandas.pydata.org/docs/reference/api/pandas.Series.value_counts.html)
    的汇总信息，而无需编写任何代码。OpenRefine 还支持批量编辑，实现了几种字符串匹配算法（包括我们在 [Example 6-11](ch06.html#ppp_lender_names)
    中使用的指纹方法），并且可以分段导入大文件（例如，每次 100,000 行）。事实上，当我处理新数据集时，OpenRefine 通常是我首选的工具，因为它能轻松打开各种数据格式，甚至提供了方便的实时预览，根据你选择的分隔符解析数据。一旦加载数据集，OpenRefine
    还能几乎一键回答像“列 *x* 中最常见的值是什么？”这样的问题。最后，每当你在 OpenRefine 中对数据文件进行实际更改（而不仅仅是聚类或分面化），它都会自动记录你的操作在一个可导出的
    *.json* 文件中，然后你可以将这些操作应用到*不同的* OpenRefine 文件中，以便在几秒钟内自动重复这些操作。如果你需要为定期由数据提供者更新的数据集重命名或重新排列数据列，这将非常有用。然而，如果需要*其他人*能够执行此操作而他们没有或不能使用
    Python，则更为有用。
- en: 'For the most part, I use OpenRefine to easily do the following:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，我使用 OpenRefine 能够轻松完成以下操作：
- en: Preview small pieces of large datasets
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 预览大型数据集的小片段
- en: OpenRefine allows you to load (and skip) as many rows in your dataset as you
    like. This is especially handy for large datasets when I want to get a reasonable
    sense of what they contain, but I know truly nothing about them. I can start by
    loading 50,000 or 100,000 rows and use facets and other functions to get an overview
    of, say, what the data types are and how the overall dataset is organized.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: OpenRefine允许您加载（或跳过）数据集中的任意行数。这对于大型数据集特别有用，当我想要了解它们的内容，但我对它们的内容一无所知时。我可以开始加载50,000或100,000行数据，并使用细分和其他功能来了解数据类型及整体数据集的组织方式。
- en: Get quick top-line information about a dataset
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 快速获取数据集的顶层信息
- en: What’s [the most common type of film permit requested in New York City](https://data.cityofnewyork.us/City-Government/Film-Permits/tg4x-b46p)?
    And what is the most popular borough? As shown in [Figure 11-1](#openrefine_film_facets),
    OpenRefine can give you these counts in one or two clicks and allows you to create
    cross-tabulations just as quickly.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 纽约市最常请求的[电影许可证类型](https://data.cityofnewyork.us/City-Government/Film-Permits/tg4x-b46p)是什么？最受欢迎的行政区是哪一个？如图[11-1](#openrefine_film_facets)所示，OpenRefine可以让你在一两次点击中获取这些统计数据，并允许你快速创建交叉制表。
- en: Do basic transformations that spreadsheet programs don’t support
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 进行电子表格程序不支持的基本转换
- en: Some spreadsheet programs lack functionality, like the ability to split a string
    on a particular character, or may have limited regular expression support. One
    of my favorite features of OpenRefine is batch editing, which you can do quickly
    and easily through the lefthand facet window.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一些电子表格程序缺乏某些功能，比如按特定字符分割字符串的能力，或者可能有限的正则表达式支持。OpenRefine中我最喜欢的功能之一是批量编辑，你可以通过左侧的细分窗口快速轻松地进行操作。
- en: Autogenerate macros
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 自动生成宏
- en: Many spreadsheet programs will let you record *macros* that automate certain
    actions, but OpenRefine records these for you by default—making it a more powerful
    tool with a lower learning curve for this type of task.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 许多电子表格程序允许你记录*宏*来自动化某些操作，但OpenRefine默认会为你记录这些操作，使其成为一个学习曲线较低的更强大的工具。
- en: 'Of course, there are some aspects of working with OpenRefine that can take
    some getting used to. First, while installation is getting more user friendly,
    it relies on having another programming language, called Java, installed on your
    computer, so getting it up and running can be a multistep process. Launching the
    program once it’s installed is also a little unusual: You need to both click (or
    double-click) on the program icon to launch and, in some cases, open a browser
    window pointed to your “localhost” address (typically `http://127.0.0.1:3333/`
    or `http://localhost:3333`). Like Jupyter Notebook, OpenRefine actually runs through
    a tiny web server on your computer, and the interface is just a web page that
    behaves sort of like a supercharged spreadsheet program. Despite these quirks,
    OpenRefine is *incredibly* useful and often a great place to start when you want
    to do some initial exploration of a (potentially messy) dataset.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在使用OpenRefine时会有一些需要适应的方面。首先，尽管安装越来越用户友好，但它依赖于另一种名为Java的编程语言安装在你的计算机上，因此启动它可能是一个多步骤的过程。一旦安装完成，启动程序的方式也有些不同：你需要点击（或双击）程序图标启动，并且在某些情况下，需要打开一个指向你“本地主机”地址的浏览器窗口（通常是
    `http://127.0.0.1:3333/` 或 `http://localhost:3333`）。和Jupyter Notebook一样，OpenRefine实际上在你的计算机上通过一个微型Web服务器运行，其界面就像一个功能强大的电子表格程序的网页版。尽管存在这些怪癖，OpenRefine非常有用，通常是进行初始探索（可能是混乱的）数据集的绝佳选择。
- en: '![OpenRefine NYC Film Permit Facets.](assets/ppdw_1101.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![OpenRefine 纽约市电影许可证细分。](assets/ppdw_1101.png)'
- en: Figure 11-1\. OpenRefine NYC film permit facets
  id: totrans-30
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-1. OpenRefine 纽约市电影许可证细分
- en: Additional Tools for Sharing and Presenting Data
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 共享和展示数据的附加工具
- en: In [Chapter 10](ch10.html#chapter10), we focused on how to select and refine
    visualizations using Python and key libraries like `seaborn` and `matplotlib`.
    While the degree of customization that you can achieve using these tools is impressive,
    there are times when you may need to make a small tweak to a visualization and
    you may not want—or be able—to regenerate it from the original data source with
    Python.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第10章](ch10.html#chapter10)中，我们专注于如何使用Python和关键库如`seaborn`和`matplotlib`选择和改进可视化。虽然使用这些工具可以实现令人印象深刻的定制程度，但有时您可能只需要对可视化进行小调整，可能不希望或无法使用Python从原始数据源重新生成它。
- en: If you need to quickly add or change something minor on a visualization, having
    access to image editing software is valuable. And while you’re probably familiar
    with the very powerful—and very expensive—commercial software applications for
    editing images, you may not realize that there are similarly powerful tools that
    are free and open source.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要快速添加或更改可视化中的某些小细节，拥有图像编辑软件是非常有价值的。虽然你可能熟悉用于编辑图像的非常强大且非常昂贵的商业软件应用程序，但你可能没有意识到也有类似强大的免费且开源的工具。
- en: Image Editing for JPGs, PNGs, and GIFs
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JPG、PNG 和 GIF 的图像编辑
- en: For editing pixel-based images, the GNU Image Manipulation Program (GIMP) is
    an especially good option if you’re looking for something powerful but you can’t
    (or don’t want to) pay a lot for it. [GIMP](https://gimp.org) is free and open
    source, and it works across platforms. While the style of its user interface is
    decidedly outdated (the interface is being overhauled at the time of this writing),
    the reality is that the program itself can probably do whatever basic (and not-so-basic)
    high-quality image editing you may need, especially if you’re just looking to
    add (or remove) some text or annotations from an image, update the axis labels,
    etc.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于编辑像素图像，如果你想要强大但又不想（或者无法）支付太多费用，GNU 图像处理程序（GIMP）是一个特别不错的选择。[GIMP](https://gimp.org)
    是免费且开源的，它适用于各个平台。尽管其用户界面的风格明显过时（在撰写本文时正在进行界面改进），但事实上，该程序可能可以满足你所需的任何基本（以及非常基本的）高质量图像编辑，尤其是如果你只是想要添加（或删除）一些文本或图像注释，更新坐标轴标签等。
- en: It’s true that GIMP can have a somewhat steep learning curve. The keyboard shortcuts
    may not be what you expect, and the placement of some menus and the look of their
    icons do not match what you’ll see in commercial software. That said, unless you
    are an expert in another image editing program and you are willing to pay (and
    continue to pay) for access to it, whatever time you invest in learning GIMP will
    be well worth it. Especially if what you need is occasional access to image editing
    software, GIMP is a powerful and flexible choice.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 的确，GIMP 的学习曲线可能有点陡峭。键盘快捷键可能不是你所期望的，而且一些菜单的位置和它们的图标外观与商业软件中看到的不匹配。尽管如此，除非你是另一个图像编辑程序的专家并且愿意支付（并且继续支付）以获取它的访问权限，否则你在学习
    GIMP 上投入的任何时间都是值得的。特别是如果你只需要偶尔访问图像编辑软件，GIMP 是一个强大且灵活的选择。
- en: Software for Editing SVGs and Other Vector Formats
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑 SVG 和其他矢量格式的软件
- en: If you plan to use your visualizations for print or other high-resolution (or
    flexible-resolution) contexts, you may well choose to save it in a vector format.
    Although the file sizes are larger, vector graphics are much more flexible than
    their pixel-driven counterparts; they can be scaled up and down without losing
    quality by becoming pixelated or blurry. They can’t, however, be edited effectively
    with bitmap software like GIMP.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你计划将你的可视化内容用于印刷或其他高分辨率（或灵活分辨率）的环境中，你很可能会选择以矢量格式保存它。尽管文件大小会更大，但矢量图形比其像素驱动的对应物更加灵活；它们可以在不失真或模糊的情况下进行缩放。然而，它们不能有效地通过像
    GIMP 这样的位图软件进行编辑。
- en: 'Once again, if you have the budget for commercial software, you should go ahead
    and use it—but here, too, you have a free and open source option. Like GIMP, [Inkscape](https://inkscape.org)
    is free, open source, and cross platform. And, like GIMP, it has almost all the
    same features as expensive commercial vector editing software. Even better, if
    you take the time to get comfortable with vector editing software, it won’t just
    let you tweak your digital-to-print data graphics—vector editing software is also
    essential to T-shirt printing, laser cutting, and lots of other digital-to-physical
    work. If you’re just starting out, Inkscape is also definitely the right price:
    free!'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，如果你有商业软件的预算，你应该继续使用它——但是在这里，你也有一个免费且开源的选择。像 GIMP 一样，[Inkscape](https://inkscape.org)
    是免费的、开源的，并且跨平台。而且，像 GIMP 一样，它几乎拥有与昂贵的商业矢量编辑软件相同的所有功能。更重要的是，如果你花时间熟悉矢量编辑软件，它不仅会让你调整数字到印刷的数据图形，矢量编辑软件还是
    T 恤印刷、激光切割和许多其他数字到物理工作的基本工具。如果你刚开始学习，Inkscape 绝对是正确的选择：免费！
- en: Reflecting on Ethics
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对伦理的思考
- en: The main focus of this book has been on building data wrangling skills—in large
    part to support our interest in assessing and improving data quality. Along the
    way, we’ve touched on the broader implications of data quality, both abstractly
    and concretely. Poor data quality can lead to analyses that produce a misleading,
    distorted, or discriminatory view of the world; couple this with [the scale and
    ubiquity of data-driven systems](https://penguinrandomhouse.com/books/241363/weapons-of-math-destruction-by-cathy-oneil)
    today, and the resulting harms can be substantial and far-reaching. While you
    can use the methods in this book to test and improve the quality of your data,
    there is unfortunately still plenty of room for “good-quality” data to be obtained
    unethically. And just as with every other part of the data wrangling process,
    it’s up to you to decide what kind of data you’re comfortable working with and
    for what purposes.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的主要焦点是培养数据整理技能，这在很大程度上是为了支持我们对数据质量进行评估和改进的兴趣。在此过程中，我们已经涉及到了数据质量的更广泛影响，无论是抽象还是具体的。数据质量差可能导致分析产生误导性、扭曲性或歧视性的世界观；再加上今天[数据驱动系统的规模和普及性](https://penguinrandomhouse.com/books/241363/weapons-of-math-destruction-by-cathy-oneil)，可能带来的损害是巨大且深远的。虽然您可以使用本书中的方法来测试和改进数据的质量，但遗憾的是，获取“高质量”数据的方式仍有很大改进空间，有些方法可能并不道德。正如在数据整理过程的其他部分一样，您需要自行决定您愿意使用什么类型的数据以及其目的。
- en: 'One strategy for ensuring that your data wrangling work doesn’t unintentionally
    violate your own ethical standards is to develop a checklist. By developing a
    list of questions you ask yourself about your data sources and how the output
    of your analysis will be used, you can determine early on if a given data wrangling
    project is one you’re willing to pursue. The following checklist is adapted from
    one shared by data experts [DJ Patil, Hilary Mason, and Mike Loukides](https://oreilly.com/radar/of-oaths-and-checklists).
    Like the list of data characteristics in [Chapter 3](ch03.html#chapter3), the
    purpose here is not to reject a data project unless the answer to every question
    is “yes”; the goal is to think critically about *all* aspects of data quality—including
    those that may be outside our control. True, we may only be able to decline (rather
    than change) a project that doesn’t meet our ethical standards, but if you voice
    your concerns, you may help make room for others to do the same. At worse, the
    project is taken on by someone else and your conscience is (somewhat) clear. At
    best, you may inspire others to consider the ethical implications of their work
    before they take on their next project as well. Here are some questions that you
    might want to include:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您的数据整理工作不会无意中违反自己道德标准的一个策略是制定清单。通过列出关于数据来源以及分析结果将如何使用的问题，您可以在早期确定是否愿意进行特定的数据整理项目。以下清单改编自数据专家[DJ
    Patil、Hilary Mason和Mike Loukides](https://oreilly.com/radar/of-oaths-and-checklists)共享的清单。与第3章中数据特征列表一样，这里的目的并不是除非每个问题的答案都是“是”，否则拒绝一个数据项目；目标是批判性地思考*所有*数据质量方面，包括那些可能超出我们控制范围的方面。诚然，我们可能只能拒绝（而不是改变）不符合我们道德标准的项目，但如果您表达您的担忧，您可能会帮助为其他人也表达担忧留出空间。最糟糕的情况是项目由其他人接手，而您的良心会（在某种程度上）得到宽慰。最好的情况是，您可能会激励其他人在接手下一个项目之前考虑其工作的道德影响。以下是您可能希望包含的一些问题：
- en: Does the design of the data collection reflect the values of the community it
    is about?
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据收集的设计是否反映了其所涉及社区的价值观？
- en: Do the members of that community know that it was collected, and did they have
    a meaningful way to decline?
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 那个社区的成员知道数据是如何收集的吗？他们有拒绝的有意义方式吗？
- en: Has the data been evaluated for representativeness?
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据是否已经经过代表性评估？
- en: Is there a way to test the data for bias?
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有没有方法来测试数据的偏见？
- en: Are our data features accurate proxies for the phenomena we want to describe?
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的数据特征是否准确地代表了我们想描述的现象？
- en: Will our analysis be replaced if and when the data becomes out of date?
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果数据过时，我们的分析是否会被替换？
- en: Ultimately, you may decide that your own concerns about data have a different
    focus. Whatever you choose to include in your own checklist, however, you’ll find
    your data principles much easier to stick to if you lay them out in advance.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，您可能会发现您对数据的关注焦点有所不同。无论您决定在自己的清单中包含什么内容，只要您提前明确您的数据原则，您会发现遵守这些原则要容易得多。
- en: Conclusion
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Over the course of this book, we have covered everything from the basics of
    Python programming and data quality assessment to wrangling data from half-a-dozen
    file formats and APIs. We’ve applied our skills to some typically messy and problematic
    real-world data and refined our code to make future projects easier. We’ve even
    explored how to do basic data analysis and visually present our data in support
    of our insights.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的过程中，我们涵盖了从Python编程和数据质量评估的基础知识，到从六种文件格式和API中整理数据。我们将我们的技能应用于一些典型混乱和问题多多的真实世界数据，并优化我们的代码以便未来项目更加轻松。我们甚至探索了如何进行基本数据分析，并通过可视化呈现数据来支持我们的洞见。
- en: 'If you’ve made it this far, then I imagine by this point you’ve caught some
    sort of “bug”: for programming, for data, for analysis and visualization—or maybe
    all of the above. Whatever brought you to this book, I hope you’ve found at least
    some of what you were looking for, including, perhaps, the confidence to take
    the next step. Because whatever else may change about the world of data wrangling
    in the coming years, one thing is sure to be true: we need as many people as possible
    doing this work critically and thoughtfully. Why shouldn’t one of them be you?'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经走到这一步，那么我想到这时候你一定已经染上了某种“病毒”：对编程、对数据、对分析和可视化——或者可能是以上所有内容的热情。不管是什么原因把你带到这本书，我希望你找到了至少一部分你寻找的内容，也许还包括了足够的信心迈出下一步。因为无论未来数据整理领域会发生什么变化，有一件事是肯定的：我们需要尽可能多的人来批判性和深思熟虑地进行这项工作。为什么不能是你其中之一呢？
- en: ^([1](ch11.html#idm45143393541072-marker)) I certainly do!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch11.html#idm45143393541072-marker)) 当然可以！
