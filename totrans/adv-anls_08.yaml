- en: Chapter 6\. First Steps with R for Excel Users
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章。R 新手入门指南
- en: In [Chapter 1](ch01.html#foundations-of-eda) you learned how to conduct exploratory
    data analysis in Excel. You may recall from that chapter that John Tukey is credited
    with popularizing the practice of EDA. Tukey’s approach to data inspired the development
    of several statistical programming languages, including S at the legendary Bell
    Laboratories. In turn, S inspired R. Developed in the early 1990s by Ross Ihaka
    and Robert Gentleman, the name is a play both on its derivation from S and its
    cofounders’ first names. R is open source and maintained by the R Foundation for
    Statistical Computing. Because it was built primarily for statistical computation
    and graphics, it’s most popular among researchers, statisticians, and data scientists.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第1章](ch01.html#foundations-of-eda) 中，你学习了如何在 Excel 中进行探索性数据分析。也许你还记得那一章提到，约翰·图基被誉为推广
    EDA 实践的人物。图基的数据分析方法启发了几种统计编程语言的发展，包括在传奇贝尔实验室开发的 S 语言。S 语言后来又启发了 R 语言的诞生。由 Ross
    Ihaka 和 Robert Gentleman 在 1990 年代初开发，这个名称不仅仅是从 S 语言派生而来，也是两位共同创始人名字的谐音。R 是开源的，并由
    R 基金会维护。因其主要用于统计计算和图形绘制，因此在研究人员、统计学家和数据科学家中最为流行。
- en: Note
  id: totrans-2
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: R was developed specifically with statistical analysis in mind.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: R 的开发专门考虑了统计分析。
- en: Downloading R
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载 R
- en: To get started, navigate to the [R Project’s website](https://r-project.org).
    Click the link at the top of the page to download R. You will be asked to choose
    a mirror from the Comprehensive R Archive Network (CRAN). This is a network of
    servers that distributes R source code, packages, and documentation. Choose a
    mirror near you to download R for your operating system.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请访问 [R 项目的网站](https://r-project.org)。点击页面顶部的链接下载 R。您将被要求从 Comprehensive
    R Archive Network (CRAN) 中选择一个镜像。这是一个分发 R 源代码、包和文档的服务器网络。选择一个靠近您的镜像，以便为您的操作系统下载
    R。
- en: Getting Started with RStudio
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 RStudio
- en: You’ve now installed R, but we will make one more download to optimize our coding
    experience. In [Chapter 5](ch05.html#data-analytics-stack), you learned that when
    software is open source, anyone is free to build on, distribute, or contribute
    to it. For example, vendors are welcome to offer an *integrated development environment*
    (IDE) to interact with the code. The RStudio IDE combines tools for code editing,
    graphics, documentation, and more under a single interface. This has become the
    predominant IDE for R programming in its decade or so on the market, with users
    building everything from interactive dashboards (Shiny) to research reports (R
    Markdown) with its suite of products.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经安装了 R，但我们还会进行一次下载，以优化我们的编程体验。在 [第5章](ch05.html#data-analytics-stack) 中，你了解到开源软件意味着任何人都可以在其上构建、分发或贡献代码。例如，供应商可以提供一个
    *集成开发环境*（IDE）与代码交互。RStudio IDE 在单一界面下结合了代码编辑、图形、文档等工具。这在 R 编程市场上的十多年中已成为主流 IDE，用户使用它构建从交互式仪表板（Shiny）到研究报告（R
    Markdown）的各种产品。
- en: 'You may be wondering, *if RStudio is so great, why did we bother installing
    R?* These are in fact two distinct downloads: we downloaded R for the *code base*,
    and RStudio for an *IDE to work with the code*. This decoupling of applications
    may be unfamiliar to you as an Excel user, but it’s quite common in the open source
    software world.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，*如果 RStudio 如此出色，为什么我们还要安装 R？* 实际上，这两个下载是不同的：我们下载了 R 作为代码库，而下载 RStudio
    则是为了与代码一起工作的 IDE。这种应用分离可能对 Excel 用户来说很陌生，但在开源软件世界中非常常见。
- en: Warning
  id: totrans-9
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: RStudio is a platform to *work with* R code, not the code base itself. First,
    download R from CRAN; then download RStudio.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: RStudio 是一个与 R 代码一起工作的平台，而不是代码库本身。首先，从 CRAN 下载 R，然后下载 RStudio。
- en: To download RStudio, head to the [download page](https://oreil.ly/rfP1X) of
    its website. You will see that RStudio is offered on a tiered pricing system;
    select the free RStudio Desktop. (RStudio is an excellent example of how to build
    a solid business on top of open source software.) You’ll come to love RStudio,
    but it can be quite overwhelming at first with its many panes and features. To
    overcome this initial discomfort, we’ll take a guided tour.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载 RStudio，请访问其网站的 [下载页面](https://oreil.ly/rfP1X)。您会看到 RStudio 是基于分层定价系统提供的；选择免费的
    RStudio Desktop。（RStudio 是如何在开源软件的基础上建立稳固业务的一个很好的例子。）一开始可能会觉得 RStudio 非常压抑，因为它有很多面板和功能。为了克服这种初始的不适感，我们将进行一次导览。
- en: First, head to the home menu and select File → New File → R Script. You should
    now see something like [Figure 6-1](#blank-slate-r). There are lots of bells and
    whistles here; the idea of an IDE is to have all the tools needed for code development
    in one place. We’ll cover the features in each of the four panes that you should
    know to get started.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，转到主菜单并选择 文件 → 新建文件 → R 脚本。现在你应该看到类似于 [Figure 6-1](#blank-slate-r) 的界面。这里有很多花哨的功能；IDE
    的理念就是将所有编码开发所需的工具集中在一个地方。我们将介绍每个四块窗格的功能，这些是你入门所需了解的。
- en: Located in the lower left-hand corner of RStudio, the *console* is where commands
    are submitted to R to execute. Here you will see the `>` sign followed by a blinking
    cursor. You can type operations here and then press Enter to execute. Let’s start
    with something very basic, like finding 1 + 1, as in [Figure 6-2](#rstudio-1-plus-1).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 位于 RStudio 左下角的 *控制台* 是提交命令给 R 执行的地方。在这里，你会看到 `>` 符号后跟着一个闪烁的光标。你可以在这里键入操作，然后按
    Enter 执行。让我们从一些非常基础的操作开始，比如找到 1 + 1，就像 [Figure 6-2](#rstudio-1-plus-1) 中所示。
- en: '![Blank slate in R](assets/aina_0601.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![R 中的空白界面](assets/aina_0601.png)'
- en: Figure 6-1\. The RStudio IDE
  id: totrans-15
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 6-1\. RStudio IDE
- en: '![Entering 1+1 into the RStudio console](assets/aina_0602.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![在 RStudio 控制台中输入 1+1](assets/aina_0602.png)'
- en: Figure 6-2\. Coding in RStudio, starting with 1 + 1
  id: totrans-17
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 6-2\. 在 RStudio 中编码，从 1 + 1 开始
- en: 'You may have noticed that a `[1]` appears before your result of `2`. To understand
    what this means, type and execute `1:50` in the console. The `:` operator in R
    will produce all numbers in increments of 1 between a given range, akin to the
    fill handle in Excel. You should see something like this:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到在你的 `2` 结果之前出现了 `[1]`。要理解这意味着什么，可以在控制台中键入并执行 `1:50`。在 R 中，`:` 运算符会在给定范围内以增量为
    1 生成所有数字，类似于 Excel 中的填充手柄。你应该看到类似这样的输出：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: These bracketed labels indicate the numeric position of the first value for
    each line in the output.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这些带方括号的标签表示输出中每行第一个值的数值位置。
- en: While you can continue to work from here, it’s often a good idea to first write
    your commands in a *script*, and then send them to the console. This way you can
    save a long-term record of the code you ran. The script editor is found in the
    pane immediately above the console. Enter a couple of lines of simple arithmetic
    there, as in [Figure 6-3](#rstudio-script).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以继续从这里工作，但通常先在 *脚本* 中编写你的命令，然后将它们发送到控制台是个好主意。这样你可以保存你运行的代码的长期记录。脚本编辑器位于控制台正上方的窗格中。在那里输入几行简单的算术，如
    [Figure 6-3](#rstudio-script) 中所示。
- en: '![RStudio script editor](assets/aina_0603.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![RStudio 脚本编辑器](assets/aina_0603.png)'
- en: Figure 6-3\. Working with the script editor in RStudio
  id: totrans-23
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 6-3\. 在 RStudio 中使用脚本编辑器
- en: Place your cursor in line 1, then hover over the icons at the top of the script
    editor until you find one that says “Run the current line or selection.” Click
    that icon and two things will happen. First, the active line of code will be executed
    in the console. The cursor will also drop to the next line in the script editor.
    You can send multiple lines to the console at once by selecting them and clicking
    that icon. The keyboard shortcut for this operation is Ctrl + Enter for Windows,
    Cmd + Return for Mac. As an Excel user, you’re probably a keyboard shortcut enthusiast;
    RStudio has an abundance of them, which can be viewed by selecting Tools → Keyboard
    Shortcuts Help.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 将光标放在第 1 行，然后将其悬停在脚本编辑器顶部的图标上，直到找到一个标有“运行当前行或选定内容”的图标。点击该图标会发生两件事。首先，活动代码行将在控制台中执行。然后，光标将移到脚本编辑器中的下一行。你可以通过选择它们并点击该图标一次性将多行发送到控制台。此操作的键盘快捷键是
    Windows 下的 Ctrl + Enter，Mac 下的 Cmd + Return。作为 Excel 用户，你可能是键盘快捷键的爱好者；RStudio
    提供了大量的快捷键，可以通过选择 工具 → 键盘快捷键帮助 查看。
- en: Let’s save our script. From the menu head to File → Save. Name the file *ch-6*.
    The file extension for R scripts is *.r*. The process of opening, saving, and
    closing R scripts may remind you of working with documents in a word processor;
    after all, they are both written records.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存我们的脚本。从菜单中选择 文件 → 保存。将文件命名为 *ch-6*。R 脚本的文件扩展名是 *.r*。打开、保存和关闭 R 脚本的过程可能让你想起在文字处理器中操作文档；毕竟，它们都是书面记录。
- en: 'We’ll now head to the lower-right pane. You will see five tabs here: Files,
    Plots, Packages, Help, Viewer. R provides plenty of help documentation, which
    can be viewed in this pane. For example, we can learn more about an R function
    with the `?` operator. As an Excel user, you know all about functions such as
    `VLOOKUP()` or `SUMIF()`. Some R functions are quite similar to those of Excel;
    let’s learn, for example, about R’s square-root function, `sqrt()`. Enter the
    following code into a new line of your script and run it using either the menu
    icon or the keyboard shortcut:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将转向右下角的窗格。这里有五个选项卡：文件（Files）、绘图（Plots）、包（Packages）、帮助（Help）、查看器（Viewer）。R提供了大量的帮助文档，可以在这个窗格中查看。例如，我们可以使用`?`操作符了解更多关于R函数的信息。作为Excel用户，你对诸如`VLOOKUP()`或`SUMIF()`之类的函数了如指掌。一些R函数与Excel中的函数非常相似；例如，让我们学习一下R的平方根函数`sqrt()`。将以下代码输入到你脚本的新行中，并使用菜单图标或键盘快捷键运行它：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'A document titled “Miscellaneous Mathematical Functions” will appear in your
    Help window. This contains important information about the `sqrt()` function,
    the arguments it takes, and more. It also includes this example of the function
    in action:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在帮助窗口中将出现一个名为“Miscellaneous Mathematical Functions”的文档。这包含了关于`sqrt()`函数、它的参数以及更多重要信息。它还包括了这个函数的示例：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Don’t worry about making sense of this code right now; just copy and paste the
    selection into your script, highlighting the complete selection, and run it. A
    plot will now appear as in [Figure 6-4](#first-r-plot). I’ve resized my RStudio
    panes to make the plot larger. You will learn how to build R plots in [Chapter 8](ch08.html#r-data-manipulation-visualization).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在不用担心理解这段代码；只需将选定的部分复制粘贴到你的脚本中，突出显示整个选择，并运行它。绘图将如同[图 6-4](#first-r-plot)中所示出现。我已调整我的RStudio窗格大小以使绘图更大。你将学会如何在[第 8 章](ch08.html#r-data-manipulation-visualization)中构建R绘图。
- en: '![Your first R plot](assets/aina_0604.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![你的第一个R绘图](assets/aina_0604.png)'
- en: Figure 6-4\. Your first R plot
  id: totrans-32
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-4\. 你的第一个R绘图
- en: 'Now, look to your upper-right pane: Environment, History, Connections. The
    Environment tab lists something called `xx` next to what looks to be some set
    of integers. What is this? As it turns out, *you* created this with the code I
    told you to run blindly from the `sqrt()` documentation. In fact, much of what
    we do in R will focus around what is shown here: an *object*.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，看向右上角的窗格：环境（Environment）、历史（History）、连接（Connections）。环境选项卡列出了称为`xx`的东西，旁边似乎是一些整数集合。这是什么？事实证明，*你*是用我让你盲目运行的`sqrt()`文档中的代码创建的。实际上，在R中我们大部分工作都围绕这里显示的内容展开：一个*对象*。
- en: 'As you likely noticed, there are several panes, icons, and menu options we
    overlooked in this tour of RStudio. It’s such a feature-rich IDE: don’t be afraid
    to explore, experiment, and search-engine your way to learning more. But for now,
    you know enough about getting around in RStudio to begin learning R programming
    proper. You’ve already seen that R can be used as a fancy calculator. [Table 6-1](#r-arithmetic)
    lists some common arithmetic operators in R.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能注意到的那样，在这次RStudio之旅中我们忽略了几个窗格、图标和菜单选项。它是一个功能丰富的集成开发环境：不要害怕去探索、实验和搜索引擎以获取更多学习资料。但现在，你已经了解如何在RStudio中四处走动，开始正式学习R编程。你已经看到R可以用作一个高级计算器。[表格 6-1](#r-arithmetic)列出了R中一些常见的算术运算符。
- en: Table 6-1\. Common arithmetic operators in R
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 表格 6-1\. R中常见的算术运算符
- en: '| Operator | Description |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 操作符 | 描述 |'
- en: '| --- | --- |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `+` | Addition |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `+` | 加法 |'
- en: '| `-` | Subtraction |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `-` | 减法 |'
- en: '| `*` | Multiplication |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `*` | 乘法 |'
- en: '| `/` | Division |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `/` | 除法 |'
- en: '| `^` | Exponent |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `^` | 指数 |'
- en: '| `%%` | Modulo |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `%%` | 取模 |'
- en: '| `%/%` | Floor division |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `%/%` | 地板除法 |'
- en: 'You may be less familiar with the last two operators in [Table 6-1](#r-arithmetic):
    the *modulo* returns the remainder of a division, and *floor division* rounds
    the division’s result down to the nearest integer.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 或许你对[表格 6-1](#r-arithmetic)中的最后两个操作符不太熟悉：*modulo*返回除法的余数，*floor division*将除法结果向下取整到最接近的整数。
- en: Like Excel, R follows the order of operations in arithmetic.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 像Excel一样，R遵循算术运算的操作顺序。
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'What’s the deal with the lines containing the hash (`#`) and text? Those are
    *cell comments* used to provide verbal instructions and reminders about the code.
    Comments help other users—and ourselves at a later date—understand and remember
    what the code is used for. R does not execute cell comments: this part of the
    script is for the programmer, not the computer. Though comments can be placed
    to the right of code, it’s preferred to place them above:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 哪些带有井号（`#`）和文本的行是怎么回事？ 这些是*单元格注释*，用于提供关于代码的口头说明和提醒。 注释帮助其他用户——以及日后的自己——理解和记住代码的用途。
    R 不执行单元格注释：脚本的这部分是给程序员看的，而不是给计算机看的。 虽然可以将注释放在代码右侧，但最好放在上方：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You don’t need to use comments to explain *everything* about what your code
    is doing, but do explain your reasoning and assumptions. Think of it as, well,
    a commentary. I will continue to use comments in this book’s examples where relevant
    and helpful.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 您不需要使用注释来解释关于代码正在做什么的*所有*内容，但请解释您的推理和假设。 将其视为，嗯，评论。 我将在本书的示例中继续使用相关且有帮助的注释。
- en: Tip
  id: totrans-51
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: Get into the habit of including comments to document your objectives, assumptions,
    and reasoning for writing the code.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 养成习惯，包括注释以记录您编写代码的目标、假设和推理。
- en: 'As previously mentioned, functions are a large part of working in R, just as
    in Excel, and often look quite similar. For example, we can take the absolute
    value of –100:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 正如先前提到的，函数在 R 中的工作中占据了很大的比重，就像在 Excel 中一样，并且通常看起来非常相似。 例如，我们可以取–100的绝对值：
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: However, there are some quite important differences for working with functions
    in R, as these errors indicate.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，在使用 R 中处理函数时有一些非常重要的区别，正如这些错误所示。
- en: '[PRE6]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In Excel, you can enter the `ABS()` function as lowercase `abs()` or proper
    case `Abs()` without a problem. In R, however, the `abs()` function *must* be
    lowercase. This is because R is *case-sensitive*. This is a major difference between
    Excel and R, and one that is sure to trip you up sooner or later.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Excel 中，您可以输入小写`abs()`或 Proper Case `Abs()`而不会有问题。 然而，在 R 中，`abs()`函数*必须*小写。
    这是因为 R 是*区分大小写*的。 这是 Excel 和 R 之间的一个主要区别，迟早会让你碰壁。
- en: Warning
  id: totrans-58
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: 'R is a case-sensitive language: the `SQRT()` function is not the same as `sqrt()`.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: R 是一种区分大小写的语言：`SQRT()`函数与`sqrt()`不同。
- en: 'Like in Excel, some R functions, like `sqrt()`, are meant to work with numbers;
    others, like `toupper()`, work with characters:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在 Excel 中一样，一些 R 函数，例如 `sqrt()`，用于处理数字；其他函数，如 `toupper()`，用于处理字符：
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let’s look at another case where R behaves similarly to Excel, with one exception
    that will have huge implications: comparison operators. This is when we compare
    some relationship between two values, such as whether one is greater than the
    other.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看另一个情况，R 表现类似于 Excel，只有一个例外将有巨大的影响：比较运算符。 当我们比较两个值之间的某种关系时，例如一个是否大于另一个。
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: R will return a `TRUE` or `FALSE` as a result of any comparison operator, just
    as would Excel. [Table 6-2](#comparison-operators-in-r) lists R’s comparison operators.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: R 将返回`TRUE`或`FALSE`作为任何比较运算符的结果，就像 Excel 一样。 [表 6-2](#comparison-operators-in-r)
    列出了 R 的比较运算符。
- en: Table 6-2\. Comparison operators in R
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6-2\. R 中的比较运算符
- en: '| Operator | Meaning |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 运算符 | 意义 |'
- en: '| --- | --- |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `>` | Greater than |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `>` | 大于 |'
- en: '| `<` | Less than |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `<` | 小于 |'
- en: '| `>=` | Greater than or equal to |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `>=` | 大于或等于 |'
- en: '| `<=` | Less than or equal to |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `<=` | 小于或等于 |'
- en: '| `!=` | Not equal to |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `!=` | 不等于 |'
- en: '| `==` | Equal to |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `==` | 等于 |'
- en: Most of these probably look familiar to you, except…did you catch that last
    one? That’s correct, you do not check whether two values are equal to one another
    in R with one equal sign, but with *two*. This is because a single equal sign
    in R is used to *assign objects*.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分这些可能对您来说很熟悉，除了…你注意到最后一个了吗？ 是的，你在 R 中不是用一个等号检查两个值是否相等，而是用*两个*等号。 这是因为在 R 中，单个等号用于*赋值对象*。
- en: If you’re not quite sure what the big deal is yet, bear with me for another
    example. Let’s assign the absolute value of –100 to an object; we’ll call it `my_first_object`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还不太清楚问题的重要性，稍等片刻，我们来看另一个例子。 让我们将–100的绝对值分配给一个对象；我们称之为`my_first_object`。
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You can think of an object as a shoebox that we are putting a piece of information
    into. By using the `=` operator, we’ve stored the result of `abs(-100)` in a shoebox
    called `my_first_object`. We can open this shoebox by *printing* it. In R, you
    can simply do this by running the object’s name:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将对象看作我们放入信息的鞋盒。通过使用`=`操作符，我们将`abs(-100)`的结果存储在名为`my_first_object`的鞋盒中。我们可以通过*打印*它来打开这个鞋盒。在R中，您可以通过运行对象的名称来简单地做到这一点：
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Another way to assign objects in R is with the `<-` operator. In fact, this
    is usually preferred to `=` in part to avoid the confusion between it and `==`.
    Try assigning another object using this operator, then printing it. The keyboard
    shortcut is Alt+- (Alt+minus) on Windows, and Option-- (Option-minus) on Mac.
    You can get creative with your functions and operations, like I did:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中另一种分配对象的方法是使用`<-`操作符。事实上，这通常比使用`=`更可取，部分原因是为了避免它与`==`之间的混淆。尝试使用此操作符分配另一个对象，然后打印它。在Windows上的键盘快捷键是Alt+-，在Mac上是Option--。您可以在您的函数和操作中大胆创新，就像我做的一样：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Object names in R must start with a letter or dot and should contain only letters,
    numbers, underscores, and periods. There are also a few off-limit keywords. That
    leaves a lot of margin for “creative” object naming. But good object names are
    indicative of the data they store, similar to how the label on a shoebox signals
    what kind of shoe is inside.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在R中，对象名称必须以字母或点开头，并且只能包含字母、数字、下划线和句点。还有一些禁用的关键字。这给“创造性”对象命名留下了很大的余地。但是好的对象名称能够准确地指示它们所存储的数据，就像鞋盒上的标签指示了里面装的鞋的类型一样。
- en: Objects can contain different types or *modes* of data, just as you might have
    different categories of shoeboxes. [Table 6-3](#data-types-r) lists some common
    data types.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 对象可以包含不同类型或*模式*的数据，就像您可能有不同类型的鞋盒一样。[表6-3](#data-types-r)列出了一些常见的数据类型。
- en: Table 6-3\. Common data types in R
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 表6-3\. R中常见的数据类型
- en: '| Data type | Example |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 数据类型 | 示例 |'
- en: '| --- | --- |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Character | `''R''`, `''Mount''`, `''Hello, world''` |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 字符 | `''R''`, `''Mount''`, `''Hello, world''` |'
- en: '| Numeric | `6.2`, `4.13`, `3` |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 数值 | `6.2`, `4.13`, `3` |'
- en: '| Integer | `3L`, `-1L`, `12L` |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 整数 | `3L`, `-1L`, `12L` |'
- en: '| Logical | `TRUE`, `FALSE`, `T`, `F` |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 逻辑 | `TRUE`, `FALSE`, `T`, `F` |'
- en: Let’s create some objects of different modes. First, character data is often
    enclosed in single quotations for legibility, but double quotes also work and
    can be particularly helpful if you want to include a single quote as part of the
    input.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一些不同模式的对象。首先，字符数据通常用单引号括起来以增加可读性，但双引号也可以工作，并且如果要包含单引号作为输入的一部分，则双引号尤其有用。
- en: '[PRE12]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Numbers can be represented as decimals or whole numbers:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 数字可以表示为小数或整数：
- en: '[PRE13]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'However, whole numbers can also be stored as a distinct integer data type.
    The `L` included in the input stands for *literal*; this term comes from computer
    science and is used to refer to notations for fixed values:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，整数也可以作为独立的整数数据类型存储。输入中包含的`L`代表*字面值*；这个术语来自计算机科学，用于表示固定值的记法：
- en: '[PRE14]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '`T` and `F` will by default evaluate as logical data to `TRUE` and `FALSE`,
    respectively:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`T` 和 `F` 默认会评估为逻辑数据 `TRUE` 和 `FALSE`：'
- en: '[PRE15]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We can use the `str()` function to learn about the *structure* of an object,
    such as its type and the information contained inside:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`str()`函数来了解对象的*结构*，例如其类型和包含的信息：
- en: '[PRE16]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Once assigned, we are free to use these objects in additional operations:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦分配完成，我们就可以在其他操作中自由使用这些对象：
- en: '[PRE17]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We can even use objects as input in assigning other objects, or reassign them:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以使用对象作为输入来分配其他对象，或重新分配它们：
- en: '[PRE18]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: “So what?” you may be asking. “I work with a lot of data, so how is assigning
    each number to its own object going to help me?” Fortunately, you’ll see in [Chapter 7](ch07.html#data-structures-in-r)
    that it’s possible to combine multiple values into one object, much as you might
    do with ranges and worksheets in Excel. But before that, let’s change gears for
    a moment to learn about packages.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: “那又怎样？”你可能会问。“我处理大量数据，所以将每个数字分配给自己的对象如何帮助我？”幸运的是，在[第7章](ch07.html#data-structures-in-r)中，您将看到将多个值组合成一个对象是可能的，就像在Excel中处理范围和工作表一样。但在此之前，让我们稍微转换一下方向，了解一下包的相关内容。
- en: Packages in R
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R中的包
- en: 'Imagine if you weren’t able to download applications on your smartphone. You
    could make phone calls, browse the internet, and jot notes to yourself—still pretty
    handy. But the real power of a smartphone comes from its applications, or apps.
    R ships much like a “factory-default” smartphone: it’s still quite useful, and
    you could accomplish nearly anything necessary with it if you were forced to.
    But it’s often more efficient to do the R equivalent of installing an app: *installing
    a package*.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果您无法在智能手机上下载应用程序。您可以打电话、浏览互联网并记录笔记——这仍然非常方便。但智能手机真正的力量来自于其应用程序，即应用程序或应用程序。R
    发货就像一个“出厂默认设置”智能手机：仍然非常有用，如果必要，您几乎可以完成任何事情。但通常更有效的是进行 R 版本的应用安装：*安装包*。
- en: The factory-default version of R is called “base R.” Packages, the “apps” of
    R, are shareable units of code that include functions, datasets, documentation,
    and more. These packages are built on top of base R to improve functionality and
    add new features.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: R 的出厂默认版本称为“基础 R”。包，即 R 的“应用程序”，是可共享的代码单元，包括函数、数据集、文档等等。这些包建立在基础 R 之上，以提高功能和添加新特性。
- en: Earlier, you downloaded base R from CRAN. This network also hosts over 10,000
    packages that have been contributed by R’s vast user base and vetted by CRAN volunteers.
    This is your “app store” for R, and to repurpose the famous slogan, “There’s a
    package for that.” While it’s possible to download packages elsewhere, it’s best
    as a beginner to stick with what’s hosted on CRAN. To install a package from CRAN,
    you can run `install.packages()`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，您从 CRAN 下载了基础 R。该网络还托管了超过 10,000 个包，这些包由 R 广泛的用户基础贡献，并由 CRAN 志愿者审核。这就是您的
    R “应用商店”，借用著名口号改编，“R 天下无不包”。虽然可以从其他地方下载包，但对于初学者来说，最好还是坚持使用 CRAN 上托管的内容。要从 CRAN
    安装包，可以运行`install.packages()`。
- en: 'We’ll be using packages in this book to help us with tasks like data manipulation
    and visualization. In particular, we’ll be using the `tidyverse`, which is actually
    a *collection* of packages designed to be used together. To install this collection,
    run the following in the console:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将使用包来帮助我们进行数据处理和可视化任务。特别地，我们将使用`tidyverse`，这实际上是一个*集合*的包，设计用于一起使用。要安装这个集合，请在控制台中运行以下命令：
- en: '[PRE19]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'You’ve just installed a number of helpful packages; one of which, `dplyr` (usually
    pronounced *d-plier*), includes a function `arrange()`. Try opening the documentation
    for this function and you’ll receive an error:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 您刚刚安装了一些有用的包；其中一个是`dplyr`（通常发音为*d-plier*），其中包含一个`arrange()`函数。尝试打开此函数的文档，您会收到一个错误：
- en: '[PRE20]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To understand why R can’t find this `tidyverse` function, go back to the smartphone
    analogy: even though you’ve installed an app, you still need to open it to use
    it. Same with R: we’ve installed the package with `install.packages()`, but now
    we need to call it into our session with `library()`:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解为什么 R 找不到这个`tidyverse`函数，请回到智能手机类比：即使您已安装了应用程序，您仍然需要打开它才能使用它。与 R 相同：我们已经用`install.packages()`安装了包，但现在我们需要用`library()`将其调用到我们的会话中：
- en: '[PRE21]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The packages of `tidyverse` are now available for the rest of your R session;
    you can now run the example without error.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`tidyverse`的包现在可用于您的其余 R 会话；您现在可以运行示例而不出错。'
- en: Note
  id: totrans-116
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Packages are *installed* once, but *called* for each session.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 包是*安装*一次，但每次会话都需要*调用*。
- en: Upgrading R, RStudio, and R Packages
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 升级 R、RStudio 和 R 包
- en: RStudio, R packages, and R itself are constantly improving, so it’s a good idea
    to occasionally check for updates. To update RStudio, navigate to the menu and
    select Help → Check for Updates. If you’re due for an update, RStudio will guide
    you through the steps.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: RStudio、R 包和 R 本身不断改进，因此偶尔检查更新是个好主意。要更新 RStudio，请导航到菜单并选择帮助 → 检查更新。如果需要更新，RStudio
    将引导您完成步骤。
- en: 'To update all packages from CRAN, you can run this function and follow the
    prompted steps:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 CRAN 更新所有包，您可以运行此函数并按提示步骤操作：
- en: '[PRE22]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: You can also update packages from the RStudio menu by going to Tools → Check
    for Package Updates. An Update Packages menu will appear; select all of the packages
    that you wish to update. You can also install packages via the Tools menu.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过 RStudio 菜单中的工具 → 检查包更新来更新包。将会出现一个更新包菜单；选择您希望更新的所有包。您还可以通过工具菜单安装包。
- en: 'Upgrading R itself is unfortunately more involved. If you are on a Windows
    computer, you can use the `updateR()` function from the package `installr` and
    follow its instructions:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 升级 R 本身的操作更为复杂。如果您使用的是 Windows 计算机，您可以使用来自`installr`包的`updateR()`函数并按照其说明操作：
- en: '[PRE23]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: For Mac, return to the [CRAN website](https://cran.r-project.org) to install
    the latest version of R.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Mac 用户，请返回到 [CRAN 网站](https://cran.r-project.org) 安装最新版本的 R。
- en: Conclusion
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'In this chapter, you learned how to work with objects and packages in R and
    got the hang of working with RStudio. You’ve learned a lot; I think it’s time
    for a break. Go ahead and save your R script and close out of RStudio by selecting
    File → Quit Session. When you do so, you’ll be asked: “Save workspace image to
    ~/.RData?” As a rule, *don’t save your workspace image*. If you do, a copy of
    all saved objects will be saved so that they’ll be available for your next session.
    While this *sounds* like a good idea, it can get cumbersome to store these objects
    and keep track of *why* you stored them in the first place.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了如何在 R 中处理对象和包，并且熟悉了使用 RStudio。您学到了很多；我认为现在是休息的时候了。保存您的 R 脚本并通过选择文件
    → 退出会话关闭 RStudio。这时会询问您：“将工作空间图像保存到 ~/.RData？”作为一种规则，*不要保存您的工作空间图像*。如果保存了，所有保存的对象的副本将被保存，以便在下一个会话中使用。尽管这听起来*像*一个好主意，但是存储这些对象并*为什么*存储它们可能会变得繁琐。
- en: 'Instead, rely on the R script itself to regenerate these objects in your next
    session. After all, the advantage of a programming language is that it’s reproducible:
    no need to drag objects around with us if we can create them on demand.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，依靠 R 脚本本身在下一个会话中重新生成这些对象。毕竟，编程语言的优势在于它是可重复的：如果我们可以按需创建它们，就不需要将对象带在身边。
- en: Tip
  id: totrans-129
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: Err on the side of *not* saving your workspace image; you should be able to
    re-create any objects from a previous session using your script.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在*不*保存工作空间图像的一侧出错；您应该能够使用脚本重新创建以前会话中的任何对象。
- en: To prevent RStudio from preserving your workspace between sessions, head to
    the home menu and go to Tools → Global Options. Under the General menu, change
    the two settings under Workspace as shown in [Figure 6-5](#rstudio-workspace-options).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止 RStudio 在会话之间保留您的工作空间，请转到主菜单，然后转到工具 → 全局选项。在常规菜单下，如图 [Figure 6-5](https://cran.r-project.org)
    中所示，更改工作空间下的两个设置。
- en: '![RStudio workspace settings](assets/aina_0605.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![RStudio 工作空间设置](assets/aina_0605.png)'
- en: Figure 6-5\. Customized workspace options in RStudio
  id: totrans-133
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-5\. RStudio 中的自定义工作空间选项
- en: Exercises
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: 'The following exercises provide additional practice and insight on working
    with objects, packages, and RStudio:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 以下练习提供了关于处理对象、包和 RStudio 的额外实践和见解：
- en: In addition to being a workhorse of a tool, RStudio provides endless appearance
    customizations. From the menu, select Tools → Global Options → Appearance and
    customize your editor’s font and theme. For example, you may decide to use a “dark
    mode” theme.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了作为一个工具的工作马之外，RStudio 还提供了无限的外观定制选项。从菜单中选择工具 → 全局选项 → 外观，并自定义编辑器的字体和主题。例如，您可以决定使用“深色模式”主题。
- en: 'Using a script in RStudio, do the following:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 RStudio 中使用脚本，执行以下操作：
- en: Assign the sum of 1 and 4 as `a`.
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 1 和 4 的和赋值为 `a`。
- en: Assign the square root of `a` as `b`.
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `a` 的平方根赋值为 `b`。
- en: Assign `b` minus 1 as `d`.
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `b` 减 1 赋值给 `d`。
- en: What type of data is stored in `d`?
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`d` 中存储的是什么类型的数据？'
- en: Is `d` greater than 2?
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`d` 是否大于 2？'
- en: Install the `psych` package from CRAN, and load it into your session. Use comments
    to explain the differences between installing and loading a package.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 CRAN 安装`psych`包，并将其加载到会话中。使用注释解释安装和加载包之间的区别。
- en: Along with these exercises, I encourage you to begin using R immediately in
    your day-to-day work. For now, this may just involve using the application as
    a fancy calculator. But even this will help you get comfortable with using R and
    RStudio.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些练习外，我鼓励您立即在日常工作中开始使用 R。目前，这可能只涉及将应用程序用作一个高级计算器。但即使这样，也能帮助您熟悉使用 R 和 RStudio。
