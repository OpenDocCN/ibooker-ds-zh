["```py\n$ cd app01_makefiles/pie/\n$ ./combine.sh\nusage: combine.sh FILE ingredients\n```", "```py\n$ ./combine.sh crust.txt flour butter water\n```", "```py\n$ cat crust.txt\nWill combine flour butter water\n```", "```py\nall: crust.txt filling.txt meringue.txt ![1](assets/1.png)\n\t./combine.sh pie.txt crust.txt filling.txt meringue.txt ![2](assets/2.png)\n\t./cook.sh pie.txt 375 45\n\nfilling.txt:                            ![3](assets/3.png)\n\t./combine.sh filling.txt lemon butter sugar\n\nmeringue.txt:                           ![4](assets/4.png)\n\t./combine.sh meringue.txt eggwhites sugar\n\ncrust.txt:                              ![5](assets/5.png)\n\t./combine.sh crust.txt flour butter water\n\nclean:                                  ![6](assets/6.png)\n\trm -f crust.txt meringue.txt filling.txt pie.txt\n```", "```py\n$ make filling.txt\n./combine.sh filling.txt lemon butter sugar\n```", "```py\n$ cat filling.txt\nWill combine lemon butter sugar\n```", "```py\n$ make filling.txt\nmake: 'filling.txt' is up to date.\n```", "```py\n$ make clean\nrm -f crust.txt meringue.txt filling.txt pie.txt\n```", "```py\n$ make                                                  ![1](assets/1.png)\n./combine.sh crust.txt flour butter water               ![2](assets/2.png)\n./combine.sh filling.txt lemon butter sugar             ![3](assets/3.png)\n./combine.sh meringue.txt eggwhites sugar               ![4](assets/4.png)\n./combine.sh pie.txt crust.txt filling.txt meringue.txt ![5](assets/5.png)\n./cook.sh pie.txt 375 45                                ![6](assets/6.png)\nWill cook \"pie.txt\" at 375 degrees for 45 minutes.\n```", "```py\n$ make\n./combine.sh pie.txt crust.txt filling.txt meringue.txt\n./cook.sh pie.txt 375 45\nWill cook \"pie.txt\" at 375 degrees for 45 minutes.\n```", "```py\n$ make clean && make\nrm -f crust.txt meringue.txt filling.txt pie.txt\n./combine.sh crust.txt flour butter water\n./combine.sh filling.txt lemon butter sugar\n./combine.sh meringue.txt eggwhites sugar\n./combine.sh pie.txt crust.txt filling.txt meringue.txt\n./cook.sh pie.txt 375 45\nWill cook \"pie.txt\" at 375 degrees for 45 minutes.\n```", "```py\n#include <stdio.h>            ![1](assets/1.png)\nint main() {                  ![2](assets/2.png)\n   printf(\"Hello, World!\\n\"); ![3](assets/3.png)\n   return 0;                  ![4](assets/4.png)\n}                             ![5](assets/5.png)\n```", "```py\n$ gcc hello.c\n```", "```py\n$ file a.out\na.out: Mach-O 64-bit executable arm64\n```", "```py\n$ ./a.out\nHello, World!\n```", "```py\n$ gcc -o hello hello.c\n```", "```py\nhello:\n\tgcc -o hello hello.c\n```", "```py\n$ make\ngcc -o hello hello.c\n```", "```py\n$ make\nmake: 'hello' is up to date.\n```", "```py\n$ make\nmake: 'hello' is up to date.\n```", "```py\n$ make -B\ngcc -o hello hello.c\n```", "```py\n$ ./hello\nHola, World!\n```", "```py\nclean:\n\trm -f hello\n```", "```py\nhello: clean\n\tgcc -o hello hello.c\n```", "```py\n$ cat Makefile\n.PHONY: clean\n\nhello: clean\n\tgcc -o hello hello.c\n\nclean:\n\trm -f hello\n```", "```py\n$ make\nrm -f hello\ngcc -o hello hello.c\n```", "```py\n$ ./hello\nHello, World!\n```", "```py\n$ make\nmake: *** No rule to make target 'foo', needed by 'hello'.  Stop.\n```", "```py\n$ cat Makefile\n.PHONY: hello            ![1](assets/1.png)\n\nhello:                   ![2](assets/2.png)\n\techo \"Hello, World!\" ![3](assets/3.png)\n```", "```py\n$ make\necho \"Hello, World!\"\nHello, World!\n```", "```py\nINDEX_DIR = /data/centrifuge-indexes         ![1](assets/1.png)\n\nclean_paired:\n    rm -rf $(HOME)/work/data/centrifuge/paired-out\n\npaired: clean_paired                         ![2](assets/2.png)\n    ./run_centrifuge.py \\                    ![3](assets/3.png)\n    -q $(HOME)/work/data/centrifuge/paired \\ ![4](assets/4.png)\n    -I $(INDEX_DIR) \\                        ![5](assets/5.png)\n    -i 'p_compressed+h+v' \\\n    -x \"9606, 32630\" \\\n    -o $(HOME)/work/data/centrifuge/paired-out \\\n    -T \"C/Fe Cycling\"\n```", "```py\n.PHONY: all fasta features test clean\n\nFEATURES = http://downloads.yeastgenome.org/curation/$\\\n    chromosomal_feature/\n    SGD_features.tab\n\nall: fasta genome chr-count chr-size features gene-count verified-genes \\\n     uncharacterized-genes gene-types terminated-genes test\n\nclean:\n\tfind . \\( -name \\*gene\\* -o -name chr-\\* \\) -exec rm {} \\;\n\trm -rf fasta SGD_features.tab\n\nfasta:\n\t./download.sh\n\ngenome: fasta\n\t(cd fasta && cat *.fsa > genome.fa)\n\nchr-count: genome\n\tgrep -e '^>' \"fasta/genome.fa\" | grep 'chromosome' | wc -l > chr-count\n\nchr-size: genome\n\tgrep -ve '^>' \"fasta/genome.fa\" | wc -c > chr-size\n\nfeatures:\n\twget -nc $(FEATURES)\n\ngene-count: features\n\tcut -f 2 SGD_features.tab | grep ORF | wc -l > gene-count\n\nverified-genes: features\n\tawk -F\"\\t\" '$$3 == \"Verified\" {print}' SGD_features.tab | \\\n\t\twc -l > verified-genes\n\nuncharacterized-genes: features\n\tawk -F\"\\t\" '$$2 == \"ORF\" && $$3 == \"Uncharacterized\" {print $$2}' \\\n\t\tSGD_features.tab | wc -l > uncharacterized-genes\n\ngene-types: features\n\tawk -F\"\\t\" '{print $$3}' SGD_features.tab | sort | uniq -c > gene-types\n\nterminated-genes:\n\tgrep -o '/G=[^ ]*' palinsreg.txt | cut -d = -f 2 | \\\n\t\tsort -u > terminated-genes\n\ntest:\n\tpytest -xv ./test.py\n```"]