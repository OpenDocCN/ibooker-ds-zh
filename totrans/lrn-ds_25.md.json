["```py\n`trees` `=` `pd``.``read_csv``(``'``data/black_spruce.csv``'``)`\n`trees`\n\n```", "```py\n659 rows × 3 columns\n```", "```py\n`trees``.``describe``(``)``[``3``:``]`\n\n```", "```py\n`trees``[``'``status``'``]``.``value_counts``(``)` `/` `len``(``trees``)`\n\n```", "```py\nstatus\nstanding    0.65\nfallen      0.35\nName: count, dtype: float64\n\n```", "```py\n`trees``[``'``status_0_1``'``]` `=` `(``trees``[``'``status``'``]` `==` `'``fallen``'``)``.``astype``(``int``)`\n`trees`\n\n```", "```py\n659 rows × 4 columns\n```", "```py\n`pr_fallen` `=` `np``.``mean``(``trees``[``'``status_0_1``'``]``)`\n`print``(``f``\"``Proportion of fallen black spruce:` `{``pr_fallen``:``0.2f``}``\"``)`\n\n```", "```py\nProportion of fallen black spruce: 0.35\n\n```", "```py\n`splits` `=` `[``4``,` `5``,` `6``,` `7``,` `8``,` `9``,` `10``,` `12``,` `14``,` `17``,` `20``,` `25``,` `32``]`\n`tree_bins` `=` `(`\n    `trees``[``\"``status_0_1``\"``]`\n    `.``groupby``(``pd``.``cut``(``trees``[``\"``diameter``\"``]``,` `splits``)``)`\n    `.``agg``(``[``\"``mean``\"``,` `\"``count``\"``]``)`\n    `.``rename``(``columns``=``{``\"``mean``\"``:` `\"``proportion``\"``}``)`\n    `.``assign``(``diameter``=``lambda` `df``:` `[``i``.``right` `for` `i` `in` `df``.``index``]``)`\n`)`\n\n```", "```py\n`from` `sklearn``.``linear_model` `import` `LinearRegression`\n`X` `=` `trees``[``[``'``diameter``'``]``]`\n`y` `=` `trees``[``'``status_0_1``'``]`\n\n`lin_reg` `=` `LinearRegression``(``)``.``fit``(``X``,` `y``)`\n\n```", "```py\n`def` `logistic``(``t``)``:`\n    `return` `1.` `/` `(``1.` `+` `np``.``exp``(``-``t``)``)`\n\n```", "```py\nσ(-7.4 + 3.0x)\n\n```", "```py\n`from` `sklearn``.``linear_model` `import` `LogisticRegression`\n\n```", "```py\n`trees``[``'``log_diam``'``]` `=` `np``.``log``(``trees``[``'``diameter``'``]``)` \n`X` `=` `trees``[``[``'``log_diam``'``]``]`\n`y` `=` `trees``[``'``status_0_1``'``]`\n\n```", "```py\n`lr_model` `=` `LogisticRegression``(``)`\n`lr_model``.``fit``(``X``,` `y``)`\n\n`[``intercept``]` `=` `lr_model``.``intercept_`\n`[``[``coef``]``]` `=` `lr_model``.``coef_`\n`print``(``f``'``Intercept:` `{``intercept``:``.1f``}``'``)`\n`print``(``f``'``Diameter coefficient:` `{``coef``:``.1f``}``'``)`\n\n```", "```py\nIntercept:           -7.4\nDiameter coefficient: 3.0\n\n```", "```py\n`diameter6` `=` `pd``.``DataFrame``(``{``'``log_diam``'``:` `[``np``.``log``(``6``)``]``}``)`\n`[``pred_prof``]` `=` `lr_model``.``predict_proba``(``diameter6``)`\n`print``(``f``'``Predicted probabilities:` `{``pred_prof``}``'``)`\n\n```", "```py\nPredicted probabilities: [0.87 0.13]\n\n```", "```py\n`def` `threshold_predict``(``model``,` `X``,` `threshold``)``:`\n    `return` `np``.``where``(``model``.``predict_proba``(``X``)``[``:``,` `1``]` `>` `threshold``,` `1.0``,` `0.0``)`\n\n`def` `accuracy``(``threshold``,` `X``,` `y``)``:`\n    `return` `np``.``mean``(``threshold_predict``(``lr_model``,` `X``,` `threshold``)` `==` `y``)`\n\n`thresholds` `=` `np``.``linspace``(``0``,` `1``,` `200``)`\n`accs` `=` `[``accuracy``(``t``,` `X``,` `y``)` `for` `t` `in` `thresholds``]`\n\n```", "```py\n`from` `sklearn``.``metrics` `import` `confusion_matrix`\n`mat` `=` `confusion_matrix``(``y``,` `lr_model``.``predict``(``X``)``)`\n`mat`\n\n```", "```py\narray([[377,  49],\n       [104, 129]])\n\n```", "```py\n`from` `sklearn` `import` `metrics`\n`precision``,` `recall``,` `threshold` `=` `(`\n    `metrics``.``precision_recall_curve``(``y``,` `lr_model``.``predict_proba``(``X``)``[``:``,` `1``]``)``)`\n\n`tpr_df` `=` `pd``.``DataFrame``(``{``\"``threshold``\"``:``threshold``,` \n                       `\"``precision``\"``:``precision``[``:``-``1``]``,` `\"``recall``\"``:` `recall``[``:``-``1``]``,` `}``)`\n\n```", "```py\n`fig` `=` `px``.``line``(``tpr_df``,` `x``=``\"``recall``\"``,` `y``=``\"``precision``\"``,`\n              `labels``=``{``\"``recall``\"``:``\"``Recall``\"``,``\"``precision``\"``:``\"``Precision``\"``}``)`\n`fig``.``update_layout``(``width``=``450``,` `height``=``250``,` `yaxis_range``=``[``0``,` `1``]``)`\n`fig`\n\n```", "```py\n`fall75_ind` `=` `np``.``argmin``(``recall` `>``=` `0.75``)` `-` `1`\n\n`fall75_threshold` `=` `threshold``[``fall75_ind``]`\n`fall75_precision` `=` `precision``[``fall75_ind``]`\n`fall75_recall` `=` `recall``[``fall75_ind``]`\n\n```", "```py\nThreshold: 0.33\nPrecision: 0.59\nRecall:    0.81\n\n```", "```py\n`print``(``\"``Proportion of samples below threshold:``\"``,` \n      `f``\"``{``np``.``mean``(``lr_model``.``predict_proba``(``X``)``[``:``,``1``]` `<` `fall75_threshold``)``:``0.2f``}``\"``)`\n\n```", "```py\nProportion of samples below threshold: 0.52\n\n```", "```py\n`act_neg` `=` `(``y` `==` `0``)`\n`true_neg` `=` `(``lr_model``.``predict_proba``(``X``)``[``:``,``1``]` `<` `fall75_threshold``)` `&` `act_neg`\n\n```", "```py\nSpecificity: 0.70\n\n```"]