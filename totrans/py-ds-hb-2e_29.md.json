["```py\nIn [1]: import matplotlib as mpl\n        import matplotlib.pyplot as plt\n```", "```py\nIn [2]: plt.style.use('classic')\n```", "```py\n# file: myplot.py\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.linspace(0, 10, 100)\n\nplt.plot(x, np.sin(x))\nplt.plot(x, np.cos(x))\n\nplt.show()\n```", "```py\n$ python myplot.py\n\n```", "```py\nIn [1]: %matplotlib\nUsing matplotlib backend: TkAgg\n\nIn [2]: import matplotlib.pyplot as plt\n```", "```py\nIn [3]: %matplotlib inline\n```", "```py\nIn [4]: import numpy as np\n        x = np.linspace(0, 10, 100)\n\n        fig = plt.figure()\n        plt.plot(x, np.sin(x), '-')\n        plt.plot(x, np.cos(x), '--');\n```", "```py\nIn [5]: fig.savefig('my_figure.png')\n```", "```py\nIn [6]: !ls -lh my_figure.png\nOut[6]: -rw-r--r--  1 jakevdp  staff    26K Feb  1 06:15 my_figure.png\n```", "```py\nIn [7]: from IPython.display import Image\n        Image('my_figure.png')\n```", "```py\nIn [8]: fig.canvas.get_supported_filetypes()\nOut[8]: {'eps': 'Encapsulated Postscript',\n         'jpg': 'Joint Photographic Experts Group',\n         'jpeg': 'Joint Photographic Experts Group',\n         'pdf': 'Portable Document Format',\n         'pgf': 'PGF code for LaTeX',\n         'png': 'Portable Network Graphics',\n         'ps': 'Postscript',\n         'raw': 'Raw RGBA bitmap',\n         'rgba': 'Raw RGBA bitmap',\n         'svg': 'Scalable Vector Graphics',\n         'svgz': 'Scalable Vector Graphics',\n         'tif': 'Tagged Image File Format',\n         'tiff': 'Tagged Image File Format'}\n```", "```py\nIn [9]: plt.figure()  # create a plot figure\n\n        # create the first of two panels and set current axis\n        plt.subplot(2, 1, 1) # (rows, columns, panel number)\n        plt.plot(x, np.sin(x))\n\n        # create the second panel and set current axis\n        plt.subplot(2, 1, 2)\n        plt.plot(x, np.cos(x));\n```", "```py\nIn [10]: # First create a grid of plots\n         # ax will be an array of two Axes objects\n         fig, ax = plt.subplots(2)\n\n         # Call plot() method on the appropriate object\n         ax[0].plot(x, np.sin(x))\n         ax[1].plot(x, np.cos(x));\n```"]