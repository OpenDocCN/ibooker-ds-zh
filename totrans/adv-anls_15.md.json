["```py\nIn [1]:  import pandas as pd\n         import seaborn as sns\n         import matplotlib.pyplot as plt\n\n         star = pd.read_excel('datasets/star/star.xlsx')\n         star.head()\nOut[1]:\n   tmathssk  treadssk             classk  totexpk   sex freelunk   race  \\\n0       473       447        small.class        7 girl       no  white\n1       536       450        small.class       21 girl       no  black\n2       463       439  regular.with.aide        0   boy      yes  black\n3       559       448            regular       16   boy       no  white\n4       489       447        small.class        5 boy      yes  white\n\n   schidkn\n0       63\n1       20\n2       19\n3       69\n4       79\n```", "```py\nIn [2]:  math_scores = star['tmathssk']\n         type(math_scores)\n\nOut[2]: pandas.core.series.Series\n```", "```py\nIn [3]: math_scores = star[['tmathssk']]\n        type(math_scores)\n\nOut[3]: pandas.core.frame.DataFrame\n```", "```py\nIn [4]:  star = star[['tmathssk','treadssk','classk','totexpk','schidkn']]\n         star.columns\n\nOut[4]: Index(['tmathssk', 'treadssk', 'classk',\n             'totexpk', 'schidkn'], dtype='object')\n```", "```py\nIn [5]: star = star.drop('schidkn', axis=1)\n        star.columns\n\nOut[5]: Index(['tmathssk', 'treadssk',\n            'classk', 'totexpk'], dtype='object')\n```", "```py\nIn [6]: star['new_column'] = star['tmathssk'] + star['treadssk']\n        star.head()\n\nOut[6]:\n   tmathssk  treadssk             classk  totexpk  new_column\n0       473       447        small.class        7         920\n1       536       450        small.class       21         986\n2       463       439  regular.with.aide        0         902\n3       559       448            regular       16        1007\n4       489       447        small.class        5         936\n```", "```py\nIn [7]: star = star.rename(columns = {'new_column':'ttl_score'})\n        star.columns\n\nOut[7]: Index(['tmathssk', 'treadssk', 'classk', 'totexpk', 'ttl_score'],\n           dtype='object')\n```", "```py\nIn [8]: star.sort_values(by=['classk', 'tmathssk']).head()\n\nOut[8]:\n     tmathssk  treadssk   classk  totexpk  ttl_score\n309        320       360  regular        6        680\n1470       320       315  regular        3        635\n2326       339       388  regular        6        727\n2820       354       398  regular        6        752\n4925       354       391  regular        8        745\n```", "```py\nIn [9]: # Sort by class size ascending and math score descending\n        star.sort_values(by=['classk', 'tmathssk'],\n         ascending=[True, False]).head()\n\nOut[9]:\n      tmathssk  treadssk   classk  totexpk  ttl_score\n724        626       474  regular       15       1100\n1466       626       554  regular       11       1180\n1634       626       580  regular       15       1206\n2476       626       538  regular       20       1164\n2495       626       522  regular        7       1148\n```", "```py\nIn [10]: small_class = star['classk'] == 'small.class'\n         small_class.head()\n\nOut[10]:\n        0     True\n        1     True\n        2    False\n        3    False\n        4     True\n        Name: classk, dtype: bool\n```", "```py\nIn [11]: star_filtered = star[small_class]\n         star_filtered.shape\n\nOut[11]: (1733, 5)\n```", "```py\nIn [12]: star.shape\n\nOut[12]: (5748, 5)\n```", "```py\nIn [13]: star_filtered = star[star['treadssk'] >= 500]\n         star_filtered.shape\n\nOut[13]: (233, 5)\n```", "```py\nIn [14]: # Find all records with reading score at least 500 and in small class\n         star_filtered = star[(star['treadssk'] >= 500) &\n                   (star['classk'] == 'small.class')]\n         star_filtered.shape\n\nOut[14]: (84, 5)\n```", "```py\nIn [15]: star_grouped = star.groupby('classk')\n         star_grouped\n\nOut[15]: <pandas.core.groupby.generic.DataFrameGroupBy\n            object at 0x000001EFD8DFF388>\n```", "```py\nIn [16]: star_grouped[['tmathssk']].mean()\n\nOut[16]:\n                        tmathssk\n    classk\n    regular            483.261000\n    regular.with.aide  483.009926\n    small.class        491.470283\n```", "```py\nIn [17]: star.groupby('totexpk')[['ttl_score']].max().head()\n\nOut[17]:\n                ttl_score\n        totexpk\n        0             1171\n        1             1133\n        2             1091\n        3             1203\n        4             1229\n```", "```py\nIn [18]: star = pd.read_excel('datasets/star/star.xlsx')\n         districts = pd.read_csv('datasets/star/districts.csv')\n         star.merge(districts, how='left').head()\n\nOut[18]:\n   tmathssk  treadssk             classk  totexpk   sex freelunk   race  \\\n0       473       447        small.class        7 girl       no  white\n1       536       450        small.class       21 girl       no  black\n2       463       439  regular.with.aide        0   boy      yes  black\n3       559       448            regular       16   boy       no  white\n4       489       447        small.class        5 boy      yes  white\n\n   schidkn    school_name          county\n0       63     Ridgeville     New Liberty\n1       20  South Heights         Selmont\n2       19      Bunnlevel         Sattley\n3       69          Hokah      Gallipolis\n4       79   Lake Mathews  Sugar Mountain\n```", "```py\nIn [19]: star_pivot = pd.melt(frame=star, id_vars = 'schidkn',\n            value_vars=['tmathssk', 'treadssk'], value_name='score',\n            var_name='test_type')\n         star_pivot.head()\n\nOut[19]:\n            schidkn test_type  score\n         0       63  tmathssk    473\n         1       20  tmathssk    536\n         2       19  tmathssk    463\n         3       69  tmathssk    559\n         4       79  tmathssk    489\n```", "```py\nIn [20]: # Rename records in `test_type`\n         mapping = {'tmathssk':'math','treadssk':'reading'}\n         star_pivot['test_type'] = star_pivot['test_type'].map(mapping)\n\n         # Find unique values in test_type\n         star_pivot['test_type'].unique()\n\nOut[20]: array(['math', 'reading'], dtype=object)\n```", "```py\nIn [21]: star_pivot.pivot_table(index='schidkn',\n          columns='test_type', values='score').reset_index()\n\nOut[21]:\n         test_type  schidkn        math     reading\n         0                1  492.272727  443.848485\n         1                2  450.576923  407.153846\n         2                3  491.452632  441.000000\n         3                4  467.689655  421.620690\n         4                5  460.084746  427.593220\n         ..             ...         ...         ...\n         74              75  504.329268  440.036585\n         75              76  490.260417  431.666667\n         76              78  468.457627  417.983051\n         77              79  490.500000  434.451613\n         78              80  490.037037  442.537037\n\n         [79 rows x 3 columns]\n```", "```py\nIn [22]: sns.countplot(x='classk', data=star)\n```", "```py\nIn [23]: sns.displot(x='treadssk', data=star)\n```", "```py\nIn [24]: sns.displot(x='treadssk', data=star, bins=25, color='pink')\n```", "```py\nIn [25]: sns.boxplot(x='treadssk', data=star)\n```", "```py\nIn [26]: sns.boxplot(y='treadssk', data=star)\n```", "```py\nIn [27]: sns.boxplot(x='classk', y='treadssk', data=star)\n```", "```py\nIn [28]: sns.scatterplot(x='tmathssk', y='treadssk', data=star)\n```", "```py\nIn [29]: sns.scatterplot(x='tmathssk', y='treadssk', data=star)\n         plt.xlabel('Math score')\n         plt.ylabel('Reading score')\n         plt.title('Math score versus reading score')\n```"]