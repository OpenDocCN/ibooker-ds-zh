- en: Chapter 12\. User-Defined Functions (UDFs)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 第 12 章\. 用户定义函数（UDFs）
- en: 'The previous three chapters showed you how to automate Excel with a Python
    script and how to run such a script from Excel at the click of a button. This
    chapter introduces user-defined functions (UDFs) as another option to call Python
    code from Excel with xlwings. UDFs are Python functions that you use in Excel
    cells in the same way as you use built-in functions like `SUM` or `AVERAGE`. As
    in the previous chapter, we will start with the `quickstart` command that allows
    us to try out a first UDF in no time. We then move on to a case study about fetching
    and processing data from Google Trends as an excuse to work with more complex
    UDFs: we’ll learn how to work with pandas DataFrames and plots as well as how
    to debug UDFs. To conclude this chapter, we’ll dig into a few advanced topics
    with a focus on performance. Unfortunately, xlwings doesn’t support UDFs on macOS,
    which makes this chapter the only chapter requiring you to run the samples on
    Windows.[1](#filepos1810019)'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 过去的三章向你展示了如何使用 Python 脚本自动化 Excel，以及如何在 Excel 中点击按钮运行这样的脚本。本章介绍了另一种选项，即使用 xlwings
    从 Excel 中调用 Python 代码的用户定义函数（UDFs）。UDFs 是你在 Excel 单元格中使用的 Python 函数，与像`SUM`或`AVERAGE`等内置函数的使用方式相同。与上一章类似，我们将从`quickstart`命令开始，这样可以很快尝试第一个
    UDF。接下来，我们将进行一个关于从 Google Trends 获取和处理数据的案例研究，作为使用更复杂的 UDFs 的借口：我们将学习如何处理 pandas
    的数据框架和绘图，以及如何调试 UDFs。最后，我们将深入探讨一些重点放在性能上的高级主题。不幸的是，xlwings 不支持在 macOS 上使用 UDFs，这使得本章是唯一需要在
    Windows 上运行示例的章节。[1](#filepos1810019)
- en: A NOTE FOR MACOS AND LINUX USERS
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 针对 macOS 和 Linux 用户的注意事项
- en: Even if you are not on Windows, you may still want to have a look at the Google
    Trends case study as you could easily adapt it to work with a `RunPython` call
    on macOS. You could also produce a report by using one of the writer libraries
    from [Chapter 8](index_split_020.html#filepos959867), which even works on Linux.
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 即使你不在 Windows 平台上，你仍然可能希望看一看 Google Trends 案例研究，因为你可以轻松地将其调整为在 macOS 上使用`RunPython`调用。你还可以使用来自[第
    8 章](index_split_020.html#filepos959867)的写入库之一生成报告，该库甚至在 Linux 上也适用。
- en: Getting Started with UDFs
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 开始使用 UDFs
- en: 'This section starts with the prerequisites for writing UDFs before we can use
    the `quickstart` command to run our first UDF. To follow along with the examples
    in this chapter, you’ll need the xlwings add-in installed and have the Excel option
    “Trust access to the VBA project object mode” enabled:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们可以使用`quickstart`命令运行我们的第一个 UDF 之前，本节将从编写 UDFs 的前提条件开始。为了能够跟随本章的示例，你需要安装 xlwings
    插件，并在 Excel 选项中启用“允许访问 VBA 项目对象模型”：
- en: Add-in
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 插件
- en: 'I assume you have the xlwings add-in installed as explained in [Chapter 10](index_split_026.html#filepos1439732).
    This is not a hard requirement, though: while it makes development easy, especially
    to click the Import Functions button, it is not required for deployment and can
    be replaced by setting the workbook up in the standalone mode—for the details,
    see [Chapter 10](index_split_026.html#filepos1439732).'
  id: totrans-7
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我假设你已经按照[第 10 章](index_split_026.html#filepos1439732)中所述安装了 xlwings 插件。虽然这不是硬性要求，但它使得开发变得更加容易，特别是点击“插入函数”按钮。不过，这不是部署所必需的，你可以通过在独立模式下设置工作簿来替代它——详情请参见[第
    10 章](index_split_026.html#filepos1439732)。
- en: Trust access to the VBA project object model
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 允许访问 VBA 项目对象模型
- en: 'To be able to write your first UDFs, you will need to change a setting in Excel:
    go to File > Options > Trust Center > Trust Center Settings > Macro Settings and
    activate the checkbox to “Trust access to the VBA project object model,” as in
    [Figure 12-1](#filepos1656979). This enables xlwings to automatically insert a
    VBA module into your workbook when you click the Import Functions button in the
    add-in, as we’ll see shortly. Since you only rely on this setting during the import
    process, you should look at it as a developer setting that end users don’t need
    to be concerned about.'
  id: totrans-9
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要编写你的第一个 UDF，你需要更改 Excel 中的一个设置：转到“文件” > “选项” > “信任中心” > “信任中心设置” > “宏设置”，并勾选“允许访问
    VBA 项目对象模型”的复选框，就像[图 12-1](#filepos1656979)中一样。这样 xlwings 在你点击插入函数按钮时可以自动将一个 VBA
    模块插入到你的工作簿中，我们很快就会看到。由于你只在导入过程中依赖此设置，所以你应该将其视为开发者设置，终端用户无需关心。
- en: '![](images/00048.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00048.jpg)'
- en: Figure 12-1\. Trust access to the VBA project object model
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-1\. 允许访问 VBA 项目对象模型
- en: With these two prerequisites in place, you’re ready to run your first UDF!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当这两个前提条件准备就绪时，你就可以运行你的第一个 UDF 了！
- en: UDF Quickstart
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: UDF 快速入门
- en: 'As usual, the easiest way to get off the ground is to use the `quickstart`
    command. Before you run the following on an Anaconda Prompt, make sure to change
    into the directory of your choice via the `cd` command. For example, if you are
    in your home directory and want to change to the desktop, run `cd Desktop` first:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，最快上手的方法是使用 `quickstart` 命令。在 Anaconda Prompt 上运行以下命令之前，请确保通过 `cd` 命令切换到所选目录。例如，如果您在主目录中并且想切换到桌面，请先运行
    `cd Desktop`：
- en: '`(base)>` `xlwings quickstart first_udf`'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(base)>` `xlwings quickstart first_udf`'
- en: 'Navigate to the first_udf folder in the File Explorer and open first_udf.xlsm
    in Excel and first_udf.py in VS Code. Then, in the xlwings ribbon add-in, click
    the Import Functions button. By default, this is a silent action, i.e., you will
    only see something in case of an error. However, if you activate the checkbox
    Show Console in the Excel add-in and click the Import Functions button again,
    a Command Prompt opens and prints the following:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件资源管理器中导航至 `first_udf` 文件夹，用 Excel 打开 `first_udf.xlsm`，用 VS Code 打开 `first_udf.py`。然后，在
    xlwings 的功能增强插件中，点击“导入函数”按钮。默认情况下，这是一个静默操作，即仅在出现错误时才会显示内容。但是，如果在 Excel 插件中激活“显示控制台”复选框，然后再次点击“导入函数”按钮，会打开一个命令提示符并打印以下内容：
- en: '`xlwings server running [...] Imported functions from the following modules:
    first_udf`'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`xlwings server running [...] Imported functions from the following modules:
    first_udf`'
- en: The first line prints a few more details that we can ignore, though—the important
    part is that once this line is printed, Python is up and running. The second line
    confirms that it imported the functions from the `first_udf` module correctly.
    Now type `=hello("xlwings")` into cell A1 of the active sheet in first_udf.xlsm
    and after hitting Enter, you will see the formula evaluated as shown in [Figure 12-2](#filepos1659317).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行打印了一些我们可以忽略的细节，重要的部分是一旦打印了这一行，Python 就已经启动了。第二行确认它已正确导入了来自 `first_udf` 模块的函数。现在在
    `first_udf.xlsm` 的活动工作表的单元格 A1 中键入`=hello("xlwings")`，按 Enter 键后，您将看到公式的计算结果如
    [图 12-2](#filepos1659317) 所示。
- en: '![](images/00055.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00055.jpg)'
- en: Figure 12-2\. first_udf.xlsm
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-2\. `first_udf.xlsm`
- en: 'Let’s break this down to see how everything works: start by looking at the
    `hello` function in first_udf.py ([Example 12-1](#filepos1659850)), which is the
    part of the `quickstart` code that we’ve ignored so far.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细分析一下每个部分的工作原理：首先看一下 `first_udf.py` 中的 `hello` 函数（[示例 12-1](#filepos1659850)），这是我们迄今为止忽略的
    `quickstart` 代码的一部分。
- en: Example 12-1\. first_udf.py (excerpt)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 12-1\. `first_udf.py`（摘录）
- en: '`import``xlwings``as``xw``@xw.func``def``hello``(``name``):``return``f``"Hello
    {name}!"`'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`import``xlwings``as``xw``@xw.func``def``hello``(``name``):``return``f``"Hello
    {name}!"`'
- en: Every function that you mark with `@xw.func` will get imported into Excel when
    you click on Import Functions in the xlwings add-in. Importing a function makes
    it available in Excel so you can use it in your cell formulas—we’ll get to the
    technical details in a moment. `@xw.func` is a decorator, which means that you
    have to place it directly on top of the function definition. If you want to know
    a bit more about how decorators work, have a look at the sidebar.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 每个标有 `@xw.func` 的函数都会在您点击 xlwings 增强插件中的“导入函数”时导入到 Excel 中。导入函数会使其在 Excel 中可用，以便您可以在单元格公式中使用它们。稍后我们会详细介绍技术细节。`@xw.func`
    是一个装饰器，这意味着您必须直接放在函数定义的顶部。如果您想了解更多有关装饰器如何工作的信息，请查看侧边栏。
- en: FUNCTION DECORATORS
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 函数装饰器
- en: 'A decorator is a function name that you put on top of a function definition,
    starting with the `@` sign. It’s a simple way to change the behavior of a function
    and is used by xlwings to recognize which functions you want to make available
    in Excel. To help you understand how a decorator works, the following example
    shows the definition of a decorator called `verbose` that will print some text
    before and after the function `print_hello` is run. Technically, the decorator
    takes the function (`print_hello`) and provides it as argument `func` to the `verbose`
    function. The inner function called `wrapper` can then do whatever needs to be
    done; in this case, it prints a value before and after calling the `print_hello`
    function. The name of the inner function doesn’t matter:'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 装饰器是放在函数定义顶部的函数名，以 `@` 符号开头。这是一种简单的方式来改变函数的行为，xlwings 使用它来识别您想在 Excel 中提供的函数。为了帮助您理解装饰器的工作原理，以下示例显示了一个名为
    `verbose` 的装饰器的定义，它会在运行函数 `print_hello` 前后打印一些文本。从技术上讲，装饰器接受函数（`print_hello`）并将其作为参数
    `func` 提供给 `verbose` 函数。内部函数称为 `wrapper`，可以执行需要执行的操作；在本例中，它在调用 `print_hello` 函数之前和之后打印一个值。内部函数的名称无关紧要：
- en: '`In``[``1``]:``# This is the definition of the function decorator``def``verbose``(``func``):``def``wrapper``():``print``(``"Before
    calling the function."``)``func``()``print``(``"After calling the function."``)``return``wrapper`'
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``1``]:``# 这是函数装饰器的定义``def``verbose``(``func``):``def``wrapper``():``print``(``"调用函数前。"``)``func``()``print``(``"调用函数后。"``)``return``wrapper`'
- en: '`In``[``2``]:``# Using a function decorator``@verbose``def``print_hello``():``print``(``"hello!"``)`'
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``2``]:``# 使用函数装饰器``@verbose``def``print_hello``():``print``(``"hello!"``)`'
- en: '`In``[``3``]:``# Effect of calling the decorated function``print_hello``()`'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``3``]:``# 调用装饰函数的效果``print_hello``()`'
- en: '`Before calling the function. hello! After calling the function.`'
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`调用函数前。hello! 调用函数后。`'
- en: At the end of this chapter, you’ll find [Table 12-1](#filepos1801916) with a
    summary of all decorators that xlwings offers.
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在本章末尾，你会找到 [表 12-1](#filepos1801916)，其中总结了 xlwings 提供的所有装饰器。
- en: 'By default, if the function arguments are cell ranges, xlwings delivers you
    the values of these cell ranges instead of the xlwings `range` object. In the
    vast majority of cases, this is very convenient and allows you to call the `hello`
    function with a cell as argument. For example, you could write “xlwings” into
    cell A2, then change the formula in A1 into the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，如果函数参数是单元格范围，xlwings 将传递这些单元格范围的值，而不是 xlwings 的 `range` 对象。在绝大多数情况下，这非常方便，并允许你使用单元格调用
    `hello` 函数。例如，你可以在单元格 A2 中写入“xlwings”，然后将 A1 中的公式更改为以下内容：
- en: '`=``hello``(``A2``)`'
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`=``hello``(``A2``)`'
- en: 'The result will be the same as in [Figure 12-2](#filepos1659317). I will show
    you in the last section of this chapter how to change this behavior and make the
    arguments arrive as xlwings `range` objects instead—as we will see then, there
    are occasions where you will need this. In VBA, the equivalent `hello` function
    would look like this:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 结果与 [图 12-2](#filepos1659317) 中的相同。我将在本章的最后一节中向你展示如何更改此行为，并使参数作为 xlwings `range`
    对象传递——正如我们之后将看到的，有时你会需要这样做。在 VBA 中，等效的 `hello` 函数如下所示：
- en: '`Function``hello``(``name``As``String``)``As``String``hello``=``"Hello "``&``name``&``"!"``End``Function`'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Function``hello``(``name``As``String``)``As``String``hello``=``"Hello "``&``name``&``"!"``End``Function`'
- en: 'When you click the Import Functions button in the add-in, xlwings inserts a
    VBA module called `xlwings_udfs` into your Excel workbook. It contains a VBA function
    for each Python function you import: these wrapper VBA functions take care of
    running the respective function in Python. While nobody stops you from looking
    at the `xlwings_udfs` VBA module by opening the VBA editor with Alt+F11, you can
    ignore it as the code is autogenerated and any changes would get lost when you
    click the Import Functions button again. Let’s now play around with our `hello`
    function in first_udf.py and replace `Hello` in the return value with `Bye`:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击附加组件中的导入函数按钮时，xlwings 会将名为 `xlwings_udfs` 的 VBA 模块插入到你的 Excel 工作簿中。它包含每个你导入的
    Python 函数的一个 VBA 函数：这些包装 VBA 函数负责在 Python 中运行相应的函数。虽然你可以通过 Alt+F11 打开 VBA 编辑器查看
    `xlwings_udfs` VBA 模块，但你可以忽略它，因为代码是自动生成的，当你再次点击导入函数按钮时，任何更改都将丢失。现在让我们在 first_udf.py
    中玩弄我们的 `hello` 函数，并将返回值中的 `Hello` 替换为 `Bye`：
- en: '`@xw.func``def``hello``(``name``):``return``f``"Bye {name}!"`'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`@xw.func``def``hello``(``name``):``return``f``"Bye {name}!"`'
- en: 'To recalculate the function in Excel, either double-click the cell A1 to edit
    the formula (or select the cell and press F2 to activate the edit mode), then
    hit Enter. Alternatively, type the keyboard shortcut Ctrl+Alt+F9: this will force
    the recalculation of all worksheets in all open workbooks including the `hello`
    formula. Note that F9 (recalculate all worksheets in all open workbooks) or Shift+F9
    (recalculate the active worksheet) will not recalculate the UDF as Excel only
    triggers a recalculation of UDFs if a dependent cell changed. To change this behavior,
    you could make the function volatile by adding the respective argument to the
    `func` decorator:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Excel 中重新计算函数，要么双击单元格 A1 以编辑公式（或者选择单元格并按 F2 激活编辑模式），然后按 Enter。或者，键入键盘快捷键
    Ctrl+Alt+F9：这将强制重新计算所有打开工作簿中所有工作表的公式，包括 `hello` 公式。请注意，F9（重新计算所有打开工作簿中的所有工作表）或
    Shift+F9（重新计算活动工作表）不会重新计算 UDF，因为 Excel 仅在依赖单元格更改时触发 UDF 的重新计算。要更改此行为，你可以通过向 `func`
    装饰器添加相应的参数来使函数成为 volatile：
- en: '`@xw.func``(``volatile``=``True``)``def``hello``(``name``):``return``f``"Bye
    {name}!"`'
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`@xw.func``(``volatile``=``True``)``def``hello``(``name``):``return``f``"Bye
    {name}!"`'
- en: 'Volatile functions are evaluated every time Excel performs a recalculation—whether
    or not the function’s dependencies have changed. A few of Excel’s built-in functions
    are volatile like `=RAND()` or `=NOW()` and using lots of them will make your
    workbook slower, so don’t overdo it. When you change a function’s name or arguments
    or the `func` decorator as we just did, you will need to reimport your function
    by clicking the Import Functions button again: this will restart the Python interpreter
    before importing the updated function. When you now change the function back from
    `Bye` to `Hello`, it is enough to use the keyboard shortcuts Shift+F9 or F9 to
    cause the formula to recalculate as the function is now volatile.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Volatile 函数在 Excel 执行重新计算时每次都会被评估 —— 无论函数的依赖是否已更改。像 `=RAND()` 或 `=NOW()` 这样的几个内置函数是不稳定的，过多使用它们会使你的工作簿变慢，因此不要过度使用。当你修改函数的名称或参数或者像我们刚刚做的那样修改
    `func` 装饰器时，你需要再次点击导入函数按钮重新导入函数：这将在导入更新的函数之前重新启动 Python 解释器。现在如果你将函数从 `Bye` 改回
    `Hello`，只需使用键盘快捷键 Shift+F9 或 F9 即可导致公式重新计算，因为此函数现在是不稳定的。
- en: SAVE THE PYTHON FILE AFTER CHANGING IT
  id: totrans-41
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 修改 Python 文件后保存
- en: A common gotcha is forgetting to save the Python source file after making changes.
    Therefore, always double-check that the Python file is saved before hitting the
    Import Functions button or recalculating the UDFs in Excel.
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个常见的坑是在修改 Python 源文件后忘记保存。因此，在点击导入函数按钮或在 Excel 中重新计算 UDF 之前，务必双检 Python 文件已保存。
- en: 'By default, xlwings imports functions from a Python file in the same directory
    with the same name as the Excel file. Renaming and moving your Python source file
    requires similar changes as in [Chapter 10](index_split_026.html#filepos1439732),
    when we were doing the same with `RunPython` calls: go ahead and rename the file
    from first_udf.py to hello.py. To let xlwings know about that change, add the
    name of the module, i.e., `hello` (without the .py extension!) to UDF Modules
    in the xlwings add-in, as shown in [Figure 12-3](#filepos1675723).'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，xlwings 从与 Excel 文件同名且在同一目录中的 Python 文件中导入函数。重命名和移动你的 Python 源文件需要类似于
    [第 10 章](index_split_026.html#filepos1439732) 中我们对 `RunPython` 调用所做的更改：请将文件从 first_udf.py
    改名为 hello.py。为了让 xlwings 知道这个变化，将模块的名称，即 `hello`（不带 .py 扩展名！），添加到 xlwings 插件中的
    UDF 模块中，如 [图 12-3](#filepos1675723) 所示。
- en: '![](images/00065.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00065.jpg)'
- en: Figure 12-3\. The UDF Modules setting
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-3\. UDF 模块设置
- en: Click the Import Functions button to reimport the function. Then recalculate
    the formula in Excel to be sure everything still works.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 点击导入函数按钮重新导入函数。然后在 Excel 中重新计算公式以确保一切仍然正常工作。
- en: IMPORT FUNCTIONS FROM MULTIPLE PYTHON MODULES
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从多个 Python 模块导入函数
- en: If you want to import functions from multiple modules, use a semicolon between
    their names in the UDF Modules setting, e.g., `hello;another_module`.
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你想从多个模块导入函数，在 UDF 模块设置中它们的名称之间需要用分号分隔，例如，`hello;another_module`。
- en: 'Now go ahead and move hello.py to your desktop: this requires you to add the
    path of your desktop to the `PYTHONPATH` in the xlwings add-in. As seen in [Chapter 10](index_split_026.html#filepos1439732),
    you could use environment variables to achieve this, i.e., you could set the `PYTHONPATH`
    setting in the add-in to %USERPROFILE%\Desktop. If you still have the path to
    the pyscripts folder in there from [Chapter 10](index_split_026.html#filepos1439732),
    either overwrite it or leave it in there, separating the paths with a semicolon.
    After these changes, click the Import Functions button again, then recalculate
    the function in Excel to verify that everything still works.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，请继续将 hello.py 移动到你的桌面上：这需要你在 xlwings 插件中将你的桌面路径添加到 `PYTHONPATH` 中。正如在 [第
    10 章](index_split_026.html#filepos1439732) 中所见，你可以使用环境变量来实现这一点，即你可以在插件中设置 `PYTHONPATH`
    设置为 %USERPROFILE%\Desktop。如果你仍然将 pyscripts 文件夹的路径保留在那里从 [第 10 章](index_split_026.html#filepos1439732)
    中，则要么覆盖它，要么保留它在那里，并用分号分隔这些路径。完成这些更改后，再次点击导入函数按钮，然后在 Excel 中重新计算函数以验证一切仍然正常运行。
- en: CONFIGURATION AND DEPLOYMENT
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 配置与部署
- en: In this chapter, I am always referring to changing a setting in the add-in;
    however, everything from [Chapter 10](index_split_026.html#filepos1439732) with
    regard to configuration and deployment can be applied to this chapter too. This
    means that a setting could also be changed in the xlwings.conf sheet or a config
    file sitting in the same directory as the Excel file. And instead of using the
    xlwings add-in, you could use a workbook that has been set up in the standalone
    mode. With UDFs, it also makes sense to build your own custom add-in—this allows
    you to share your UDFs among all workbooks without having to import them into
    each workbook. For more information about building your own custom add-in, see
    the [xlwings docs](https://oreil.ly/uNo0g).
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在本章中，我总是提到在附加组件中更改设置；然而，关于配置和部署的所有内容都可以适用于本章。这意味着设置也可以在xlwings.conf表或与Excel文件相同目录中的配置文件中进行更改。而且，您可以使用独立模式中设置的工作簿，而不是使用xlwings附加组件。对于UDF来说，构建您自己的自定义附加组件也是有意义的——这使您可以在所有工作簿之间共享您的UDF，而无需将它们导入到每个工作簿中。有关构建您自己的自定义附加组件的更多信息，请参阅[xlwings文档](https://oreil.ly/uNo0g)。
- en: If you change the Python code of your UDF, xlwings automatically picks up the
    changes whenever you save the Python file. As mentioned, you only need to reimport
    your UDFs if you change something in the function’s name, arguments, or decorators.
    If, however, your source file imports code from other modules, and you change
    something in these modules, the easiest way to let Excel pick up all changes is
    to click on Restart UDF Server.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果更改UDF的Python代码，xlwings会在每次保存Python文件时自动获取更改。如前所述，如果更改函数名称、参数或装饰器中的任何内容，则只需要重新导入您的UDF。然而，如果您的源文件从其他模块导入代码，并且您在这些模块中进行了更改，让Excel获取所有更改的最简单方法是单击“重新启动UDF服务器”。
- en: At this point, you know how to write a simple UDF in Python and how to use it
    in Excel. The case study in the next section will introduce you to more realistic
    UDFs that make use of pandas DataFrames.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经知道如何在Python中编写简单的UDF，并在Excel中使用它。接下来的案例研究将为您介绍更实际的UDF，这些UDF利用了pandas数据框架。
- en: 'Case Study: Google Trends'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 案例研究：Google Trends
- en: In this case study, we’ll use data from Google Trends to learn how to work with
    pandas DataFrames and dynamic arrays, one of the most exciting new features in
    Excel that Microsoft officially launched in 2020\. We then create a UDF that connects
    directly to Google Trends as well as one that uses a DataFrame’s `plot` method.
    To wrap this section up, we’ll have a look at how debugging works with UDFs. Let’s
    get started with a short introduction to Google Trends!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例研究中，我们将使用来自Google Trends的数据，学习如何处理pandas数据框架和动态数组，这是微软在2020年正式推出的Excel中最令人兴奋的新功能之一。然后，我们创建一个直接连接到Google
    Trends的UDF，以及一个使用数据框架的`plot`方法的UDF。为了结束本节，我们将看看UDF的调试工作原理。让我们从Google Trends的简短介绍开始吧！
- en: Introduction to Google Trends
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Google Trends介绍
- en: '[Google Trends](https://oreil.ly/G6TpC) is a Google service that allows you
    to analyze the popularity of Google search queries over time and across regions.
    [Figure 12-4](#filepos1681064) shows Google Trends after adding a few popular
    programming languages, selecting Worldwide as the region and 1/1/16 - 12/26/20
    as the time range. Each search term has been selected with the Programming language
    context that appears in a drop-down after typing in the search term. This makes
    sure that we ignore Python, the snake, and Java, the island. Google indexes the
    data within the selected timeframe and location with 100 representing the maximum
    search interest. In our sample, it means that within the given timeframe and location,
    the highest search interest was in Java in February 2016\. For more details about
    Google Trends, have a look at their official [blog post](https://oreil.ly/_aw8f).'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[Google Trends](https://oreil.ly/G6TpC) 是Google的一项服务，允许您分析Google搜索查询随时间和地区的流行度。
    [Figure 12-4](#filepos1681064) 显示了在添加了几种流行的编程语言后的Google Trends，选择了全球作为地区和1/1/16
    - 12/26/20作为时间范围。每个搜索词都以编程语言上下文进行了选择，这在键入搜索词后的下拉菜单中显示。这确保我们忽略了Python这条蛇和Java这个岛。
    Google在所选时间范围和位置内索引数据，100表示最大的搜索兴趣。在我们的样本中，这意味着在给定的时间范围和位置内，最高的搜索兴趣是在2016年2月的Java。有关Google
    Trends的更多详细信息，请参阅他们官方的[博客文章](https://oreil.ly/_aw8f)。'
- en: '![](images/00070.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00070.jpg)'
- en: Figure 12-4\. Interest over time; data source [Google Trends](https://oreil.ly/SR8zD)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图12-4。随时间变化的兴趣；数据源[Google Trends](https://oreil.ly/SR8zD)
- en: RANDOM SAMPLES
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 随机样本
- en: Google Trends numbers are based on random samples, which means that you may
    see a picture that is slightly different from [Figure 12-4](#filepos1681064) even
    if you use the same location, timeframe, and search terms as on the screenshot.
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Google Trends 的数据基于随机样本，这意味着即使您在相同位置、时间段和搜索词上查看 [Figure 12-4](#filepos1681064)，您可能看到的图片也可能略有不同。
- en: I hit the download button that you see in [Figure 12-4](#filepos1681064) to
    get a CSV file from where I copied the data into the Excel workbook of a `quickstart`
    project. In the next section, I’ll show you where to find this workbook—we will
    use it to analyze the data with a UDF right from within Excel!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我点击 [Figure 12-4](#filepos1681064) 中看到的下载按钮，从中获取了一个 CSV 文件，然后将数据复制到了一个 `quickstart`
    项目的 Excel 工作簿中。在接下来的部分，我将向您展示在哪里找到此工作簿——我们将使用它在 Excel 中直接分析数据！
- en: Working with DataFrames and Dynamic Arrays
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 DataFrames 和动态数组
- en: Having it made this far in the book, you shouldn’t be surprised that pandas
    DataFrames are also a UDF’s best friend. To see how DataFrames and UDFs work together
    and to learn about dynamic arrays, navigate to the describe folder in the udfs
    directory of the companion repository and open describe.xlsm in Excel and describe.py
    in VS Code. The Excel file contains the data from Google Trends and in the Python
    file, you’ll find a simple function to start with, as shown in [Example 12-2](#filepos1683070).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '读至此书中，您不应感到惊讶，pandas DataFrames 也是 UDF 的好伴侣。要了解 DataFrames 和 UDF 如何配合，并了解动态数组，请转到
    companion 代码库中 udfs 目录下的 describe 文件夹，并在 Excel 中打开 describe.xlsm 和在 VS Code 中打开
    describe.py。Excel 文件包含来自 Google Trends 的数据，在 Python 文件中，您会找到一个简单的起步函数，如 [Example 12-2](#filepos1683070)
    所示。  '
- en: Example 12-2\. describe.py
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Example 12-2\. describe.py
- en: '`import``xlwings``as``xw``import``pandas``as``pd``@xw.func``@xw.arg``(``"df"``,``pd``.``DataFrame``,``index``=``True``,``header``=``True``)``def``describe``(``df``):``return``df``.``describe``()`'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`import``xlwings``as``xw``import``pandas``as``pd``@xw.func``@xw.arg``(``"df"``,``pd``.``DataFrame``,``index``=``True``,``header``=``True``)``def``describe``(``df``):``return``df``.``describe``()`  '
- en: 'Compared to the `hello` function from the `quickstart` project, you’ll notice
    a second decorator:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `quickstart` 项目中的 `hello` 函数相比，您会注意到第二个装饰器的存在：
- en: '`@xw.arg``(``"df"``,``pd``.``DataFrame``,``index``=``True``,``header``=``True``)`'
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`@xw.arg``(``"df"``,``pd``.``DataFrame``,``index``=``True``,``header``=``True``)`'
- en: '`arg` is short for argument and allows you to apply the same converters and
    options as I was using in [Chapter 9](index_split_024.html#filepos1235764) when
    I was introducing the xlwings syntax. In other words, the decorator offers the
    same functionality for UDFs as the `options` method for xlwings `range` objects.
    Formally, this is the syntax of the `arg` decorator:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`arg` 是 argument 的缩写，允许您在介绍 xlwings 语法时使用相同的转换器和选项，这与 [Chapter 9](index_split_024.html#filepos1235764)
    中 xlwings `range` 对象的 `options` 方法提供了相同的功能。严格来说，这是 `arg` 装饰器的语法：  '
- en: '`@xw.arg``(``"argument_name"``,``convert``=``None``,``option1``=``value1``,``option2``=``value2``,``...``)`'
  id: totrans-70
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`@xw.arg``(``"argument_name"``,``convert``=``None``,``option1``=``value1``,``option2``=``value2``,``...``)`'
- en: 'To help you make the connection back to [Chapter 9](index_split_024.html#filepos1235764),
    the equivalent of the `describe` function in the form of a script looks like this
    (this assumes that describe.xlsm is open in Excel and that the function is applied
    to the range A3:F263):'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '要帮助您回到 [Chapter 9](index_split_024.html#filepos1235764)，脚本形式中 `describe` 函数的等效方式如下（假设
    describe.xlsm 已在 Excel 中打开，并且该函数应用于范围 A3:F263）：  '
- en: '`import``xlwings``as``xw``import``pandas``as``pd``data_range``=``xw``.``Book``(``"describe.xlsm"``)``.``sheets``[``0``][``"A3:F263"``]``df``=``data_range``.``options``(``pd``.``DataFrame``,``index``=``True``,``header``=``True``)``.``value``df``.``describe``()`'
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`import``xlwings``as``xw``import``pandas``as``pd``data_range``=``xw``.``Book``(``"describe.xlsm"``)``.``sheets``[``0``][``"A3:F263"``]``df``=``data_range``.``options``(``pd``.``DataFrame``,``index``=``True``,``header``=``True``)``.``value``df``.``describe``()`'
- en: The options `index` and `header` wouldn’t be required as they are using the
    default arguments, but I included them to show you how they are applied with UDFs.
    With describe.xlsm as your active workbook, click the Import Functions button,
    then type `=describe(A3:F263)` in a free cell, in H3, for example. What happens
    when you hit Enter depends on your version of Excel—more specifically if your
    version of Excel is recent enough to support dynamic arrays. If it does, you will
    see the situation as shown in [Figure 12-5](#filepos1694433), i.e., the output
    of the `describe` function in cells H3:M11 is surrounded by a thin blue border.
    You will only be able to see the blue border if your cursor is within the array,
    and it is so subtle that you may have issues seeing it clearly if you look at
    the screenshot in a printed version of the book. We’ll see how dynamic arrays
    behave in a moment and you can also learn more about them in the sidebar [“Dynamic
    Arrays”](#filepos1711844).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 选项`index`和`header`不需要，因为它们使用了默认参数，但我包含它们是为了向你展示它们在UDFs中的应用方式。在describe.xlsm作为你的活动工作簿时，点击“导入函数”按钮，然后在一个空白单元格中，例如H3中，输入`=describe(A3:F263)`。当你按下Enter键时，根据你的Excel版本不同，会发生什么也会有所不同——具体取决于你的Excel版本是否足够新来支持动态数组。如果支持，你将看到如[图 12-5](#filepos1694433)所示的情况，即H3:M11单元格中`describe`函数的输出周围有一条细蓝色边框。只有在数组内部，你才能看到这个蓝色边框，并且它非常微妙，如果在书的印刷版本中查看截屏可能会有困难。我们稍后会看到动态数组的行为，你也可以在侧边栏“动态数组”中了解更多。
- en: '![](images/00078.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00078.jpg)'
- en: Figure 12-5\. The `describe` function with dynamic arrays
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图12-5。带动态数组的`describe`函数
- en: 'If, however, you are using a version of Excel that doesn’t support dynamic
    arrays, it will look as if nothing is happening: by default, the formula will
    only return the top-left cell in H3, which is empty. To fix this, use what Microsoft
    nowadays calls legacy CSE arrays. CSE Arrays need to be confirmed by typing the
    Ctrl+Shift+Enter key combination instead of hitting just Enter—hence their name.
    Let’s see how they work in detail:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你使用的是不支持动态数组的Excel版本，看起来就好像什么也没有发生：默认情况下，公式只会返回H3单元格的左上角，即空白。要解决这个问题，使用微软现在称之为传统CSE数组。CSE数组需要通过键入Ctrl+Shift+Enter来确认，而不是仅仅按Enter键——因此得名。让我们详细看看它们的工作原理：
- en: Make sure that H3 is an empty cell by selecting it and hitting the Delete key.
  id: totrans-77
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 确保H3是一个空单元格，通过选择它并按Delete键。
- en: Select the output range by starting in cell H3, and then select all cells on
    the way to M11.
  id: totrans-78
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通过从单元格H3开始选择输出范围，然后选择所有通向M11的单元格。
- en: With the range H3:M11 selected, type in the formula `=describe(A3:F263)`, and
    then confirm by hitting Ctrl+Shift+Enter.
  id: totrans-79
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 选中范围H3:M11，输入公式`=describe(A3:F263)`，然后按Ctrl+Shift+Enter确认。
- en: 'You should now see almost the same picture as in [Figure 12-5](#filepos1694433)
    with these differences:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该看到与[图 12-5](#filepos1694433)几乎相同的图片，但有以下几点不同：
- en: There is no blue border around the range H3:M11.
  id: totrans-81
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在范围H3:M11周围没有蓝色边框。
- en: 'The formula shows curly braces around it to mark it as a CSE array: `{=describe(A3:F263)}`.'
  id: totrans-82
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 该公式显示大括号以标记为CSE数组：`{=describe(A3:F263)}`。
- en: While you delete dynamic arrays by going to the top-left cell and hitting the
    Delete key, with CSE arrays, you always have to select the whole array first to
    be able to delete it.
  id: totrans-83
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要删除动态数组，只需转到左上角单元格，然后按Delete键即可，而对于CSE数组，则始终需要先选择整个数组才能删除它。
- en: 'Let’s now make our function slightly more useful by introducing an optional
    parameter called `selection` that will allow us to specify which columns we want
    to include in our output. If you have a lot of columns and only want to include
    a subset in the `describe` function, this can become a useful feature. Change
    the function as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们通过引入一个名为`selection`的可选参数来稍微改进我们的函数，这将允许我们指定在输出中包含哪些列。如果你有很多列，但只想在`describe`函数中包含一个子集，这将成为一个有用的功能。按以下方式更改函数：
- en: '`@xw.func``@xw.arg``(``"df"``,``pd``.``DataFrame``)`![](images/00031.jpg)`def``describe``(``df``,``selection``=``None``):`![](images/00039.jpg)`if``selection``is``not``None``:``return``df``.``loc``[:,``selection``]``.``describe``()`![](images/00050.jpg)`else``:``return``df``.``describe``()`'
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`@xw.func``@xw.arg``(``"df"``,``pd``.``DataFrame``)`![](images/00031.jpg)`def``describe``(``df``,``selection``=``None``):`![](images/00039.jpg)`如果``selection``不为``None``：``return``df``.``loc``[:,``selection``]``.``describe``()`![](images/00050.jpg)`否则``：``return``df``.``describe``()`'
- en: '![](images/00031.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00031.jpg)'
- en: I left off the `index` and `header` arguments, as they are using the defaults,
    but feel free to leave them in.
  id: totrans-87
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我省略了`index`和`header`参数，因为它们使用默认值，但随时可以保留它们。
- en: '![](images/00039.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00039.jpg)'
- en: Add the parameter `selection` and make it optional by assigning `None` as its
    default value.
  id: totrans-89
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 添加参数 `selection` 并将其默认值设置为 `None` 以使其可选。
- en: '![](images/00050.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00050.jpg)'
- en: If `selection` is provided, filter the DataFrame’s columns based on it.
  id: totrans-91
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果提供了 `selection`，则根据它过滤 DataFrame 的列。
- en: 'Once you have changed the function, make sure to save it, and then hit the
    Import Functions button in the xlwings add-in—this is required since we have added
    a new parameter. Write `Selection` into cell A2 and `TRUE` into cells B2:F2\.
    Finally, adjust your formula in cell H3 depending on whether you have dynamic
    arrays or not:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您更改了函数，请确保保存，并在 xlwings 加载项中点击导入函数按钮 —— 这是必需的，因为我们添加了一个新参数。将 `Selection` 写入单元格
    A2，并将 `TRUE` 写入单元格 B2:F2。最后，根据是否使用动态数组，调整单元格 H3 中的公式：
- en: With dynamic arrays
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 对于动态数组
- en: Select H3, then change the formula to `=describe(A3:F263, B2:F2)` and hit Enter.
  id: totrans-94
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 选择 H3，然后将公式更改为 `=describe(A3:F263, B2:F2)` 并按 Enter 键。
- en: Without dynamic arrays
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 对于非动态数组
- en: Starting at cell H3, select H3:M11, and then hit F2 to activate the edit mode
    of cell H3 and change the formula to `=describe(A3:F263, B2:F2)`. To finalize,
    hit Ctrl+Shift+Enter.
  id: totrans-96
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从单元格 H3 开始，选择 H3:M11，然后按 F2 以激活单元格 H3 的编辑模式，并将公式更改为 `=describe(A3:F263, B2:F2)`。最后，按
    Ctrl+Shift+Enter 完成。
- en: 'To try out the enhanced function, let’s change Java’s `TRUE` in cell E2 to
    `FALSE` and see what happens: with dynamic arrays, you will see the table magically
    shrink by one column. With legacy CSE arrays, however, you will end up with an
    ugly column full of `#N/A` values, as shown in [Figure 12-6](#filepos1708195).'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 要尝试增强函数，请将单元格 E2 中的 Java 的 `TRUE` 更改为 `FALSE`，并查看结果：使用动态数组时，您将看到表格神奇地减少了一列。然而，对于传统的
    CSE 数组，您将得到一个充满 `#N/A` 值的丑陋列，如 [图 12-6](#filepos1708195) 所示。
- en: 'To work around this issue, xlwings can resize legacy CSE arrays by making use
    of the return decorator. Add it by changing your function like this:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，xlwings 可以通过使用返回装饰器来调整传统的 CSE 数组。通过修改函数如下添加它：
- en: '`@xw.func``@xw.arg``(``"df"``,``pd``.``DataFrame``)``@xw.ret``(``expand``=``"table"``)`![](images/00031.jpg)`def``describe``(``df``,``selection``=``None``):``if``selection``is``not``None``:``return``df``.``loc``[:,``selection``]``.``describe``()``else``:``return``df``.``describe``()`'
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`@xw.func``@xw.arg``(``"df"``,``pd``.``DataFrame``)``@xw.ret``(``expand``=``"table"``)`![](images/00031.jpg)`def``describe``(``df``,``selection``=``None``):``if``selection``is``not``None``:``return``df``.``loc``[:,``selection``]``.``describe``()``else``:``return``df``.``describe``()`'
- en: '![](images/00031.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00031.jpg)'
- en: By adding the return decorator with the option `expand="table"`, xlwings will
    resize the CSE array to match the dimensions of the returned DataFrame.
  id: totrans-101
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通过添加返回装饰器并设置 `expand="table"` 选项，xlwings 将调整 CSE 数组的大小以匹配返回的 DataFrame 的维度。
- en: '![](images/00003.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00003.jpg)'
- en: Figure 12-6\. Dynamic arrays (top) vs. CSE arrays (bottom) after excluding a
    column
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-6\. 动态数组（顶部）与 CSE 数组（底部）在排除列后的比较
- en: 'After adding the return decorator, save the Python source file, switch over
    to Excel, and hit Ctrl+Alt+F9 to recalculate: this will resize the CSE array and
    remove the `#N/A` column. Since this is a workaround, I highly recommend you do
    whatever is in your power to get your hands on a version of Excel that supports
    dynamic arrays.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 添加返回装饰器后，在保存 Python 源文件后，切换到 Excel，并按下 Ctrl+Alt+F9 进行重新计算：这将调整 CSE 数组的大小并移除
    `#N/A` 列。由于这是一种变通方法，强烈建议您尽一切可能获取支持动态数组的 Excel 版本。
- en: ORDER OF FUNCTION DECORATORS
  id: totrans-105
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 函数装饰器的顺序
- en: Make sure to place the `xw.func` decorator on top of the `xw.arg` and `xw.ret`
    decorators; note that the order of `xw.arg` and `xw.ret` doesn’t matter.
  id: totrans-106
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 确保将 `xw.func` 装饰器放在 `xw.arg` 和 `xw.ret` 装饰器之上；注意 `xw.arg` 和 `xw.ret` 的顺序无关紧要。
- en: 'The return decorator works conceptually the same way as the argument decorator,
    with the only difference that you don’t have to specify the name of an argument.
    Formally, its syntax looks like this:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 返回装饰器在概念上与参数装饰器相同，唯一的区别在于您无需指定参数的名称。其形式上的语法如下：
- en: '`@xw.ret``(``convert``=``None``,``option1``=``value1``,``option2``=``value2``,``...``)`'
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`@xw.ret``(``convert``=``None``,``option1``=``value1``,``option2``=``value2``,``...``)`'
- en: You usually don’t have to provide an explicit `convert` argument as xlwings
    recognizes the type of the return value automatically—that’s the same behavior
    we saw in [Chapter 9](index_split_024.html#filepos1235764) with the `options`
    method when writing values to Excel.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，不需要提供显式的 `convert` 参数，因为 xlwings 会自动识别返回值的类型，这与我们在 [第 9 章](index_split_024.html#filepos1235764)
    中在写入 Excel 值时使用 `options` 方法时看到的行为相同。
- en: 'As an example, if you want to suppress the index of the DataFrame you return,
    use this decorator:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您想要抑制返回的DataFrame的索引，请使用此装饰器：
- en: '`@xw.ret``(``index``=``False``)`'
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`@xw.ret``(``index``=``False``)`'
- en: DYNAMIC ARRAYS
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 动态数组
- en: 'Having seen how dynamic arrays work in the context of the `describe` function,
    I am pretty sure you’d agree that they are one of the most fundamental and exciting
    additions to Excel that Microsoft has come up with in a long time. They were officially
    introduced in 2020 to Microsoft 365 subscribers who are using the most recent
    version of Excel. To see if your version is recent enough, check for the existence
    of the new `UNIQUE` function: start typing `=UNIQUE` in a cell and if Excel suggests
    the function name, dynamic arrays are supported. If you use Excel with a permanent
    license rather than as part of the Microsoft 365 subscription, you are likely
    to get it with the version that was announced for release in 2021 and that will
    presumably be called Office 2021\. Here are a few technical notes about the behavior
    of dynamic arrays:'
  id: totrans-113
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在了解了`describe`函数中动态数组的工作原理之后，我确信您会同意它们是Microsoft Excel中微软最近引入的最基础和最令人兴奋的功能之一。它们在2020年正式向使用最新版本Excel的Microsoft
    365订阅用户介绍。要查看您的版本是否足够新，请检查是否存在新的`UNIQUE`函数：在单元格中开始键入`=UNIQUE`，如果Excel建议函数名称，则支持动态数组。如果您使用的是永久许可证的Excel而不是Microsoft
    365订阅的一部分，则很可能在2021年发布的版本中获得支持，并且该版本可能称为Office 2021\. 这里有关动态数组行为的一些技术注释：
- en: If dynamic arrays overwrite a cell with a value, you will get a `#SPILL!` error.
    After making room for the dynamic array by deleting or moving the cell that is
    in the way, the array will be written out. Note that the xlwings return decorator
    with `expand="table"` is less smart and will overwrite existing cell values without
    warning!
  id: totrans-114
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果动态数组用值覆盖单元格，则会出现`#SPILL!`错误。通过删除或移动挡住动态数组的单元格来为动态数组腾出空间后，数组将被写出。请注意，带有`expand="table"`的xlwings返回装饰器较不智能，并且会在没有警告的情况下覆盖现有单元格值！
- en: You can refer to the range of a dynamic array by using the top-left cell followed
    by a `#` sign. For example, if your dynamic array is in the range A1:B2 and you
    wanted to sum up all cells, write `=SUM(A1#)`.
  id: totrans-115
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 您可以通过使用左上角单元格后跟`#`号来引用动态数组的范围。例如，如果您的动态数组位于A1:B2范围内，并且您希望对所有单元格求和，写入`=SUM(A1#)`。
- en: If you ever want your arrays to behave like the legacy CSE arrays again, start
    your formula with an `@` sign, e.g., to have a matrix multiplication return a
    legacy CSE array, use `=@MMULT()`.
  id: totrans-116
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果您希望您的数组再次像传统的CSE数组一样工作，请在公式前面加上`@`符号，例如，要使矩阵乘法返回传统的CSE数组，请使用`=@MMULT()`。
- en: Downloading a CSV file and copy/pasting the values into an Excel file worked
    fine for this introductory DataFrame example, but copy/paste is such an error-prone
    process that you’ll want to get rid of it whenever you can. With Google Trends,
    you can indeed, and the next section shows you how!
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 下载CSV文件并将值复制/粘贴到Excel文件中对于这个介绍性的DataFrame示例效果很好，但是复制/粘贴是一个容易出错的过程，你会想尽可能地摆脱它。使用Google趋势，您确实可以这样做，接下来的部分将向您展示如何！
- en: Fetching Data from Google Trends
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 从谷歌趋势获取数据
- en: 'The previous examples were all very simple, pretty much just wrapping a single
    pandas function. To get our hands on a more real-world case, let’s create a UDF
    that downloads the data directly from Google Trends so you don’t have to go online
    and download a CSV file manually anymore. Google Trends doesn’t have an official
    API (application programming interface), but there is a Python package called
    [pytrends](https://oreil.ly/SvnLl) that fills the gap. Not being an official API
    means that Google can change it anytime they want, so there is a risk that the
    examples in this section will stop working at some point. However, given that
    pytrends has been around for more than five years at the time of this writing,
    there’s also a real chance that it will be updated to reflect the changes and
    make it work again. In any case, it serves as a good example to show you that
    there’s a Python package for just about anything—a claim I made in [Chapter 1](index_split_007.html#filepos32075).
    If you were restricted to using Power Query, you’d probably need to invest a lot
    more time to get something working—I, at least, wasn’t able to find a plug-and-play
    solution that is available for free. Since pytrends isn’t part of Anaconda and
    also doesn’t have an official Conda package, let’s install it with pip, if you
    haven’t done this yet:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的例子都非常简单，基本上只是包装了一个 pandas 函数。为了获取更真实的案例，让我们创建一个 UDF，直接从 Google Trends 下载数据，这样您就不必在线手动下载
    CSV 文件了。Google Trends 没有官方的 API（应用程序编程接口），但有一个名为 [pytrends](https://oreil.ly/SvnLl)
    的 Python 包填补了这个空白。并非官方 API 意味着 Google 随时可能更改它，所以这一部分的示例有停止工作的风险。然而，考虑到 pytrends
    在撰写本文时已经存在了五年多，也有可能会更新以反映这些变化并使其再次可用。无论如何，它都是一个很好的例子，向您展示几乎任何事情都有 Python 包——这是我在
    [第 1 章](index_split_007.html#filepos32075) 中提到的。如果您被限制使用 Power Query，您可能需要投入更多时间才能使其正常工作——至少我找不到一个免费提供的即插即用解决方案。由于
    pytrends 不是 Anaconda 的一部分，也没有官方的 Conda 包，所以让我们用 pip 安装它，如果您还没有这样做的话：
- en: '`(base)>` `pip install pytrends`'
  id: totrans-120
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(base)>` `pip install pytrends`'
- en: 'To replicate the exact case from the online version of Google Trends as shown
    in [Figure 12-4](#filepos1681064), we’ll need to find the correct identifiers
    for the search terms with the “Programming language” context. To do this, pytrends
    can print the different search contexts or types that Google Trends suggests in
    the dropdown. In the following code sample, `mid` stands for Machine ID, which
    is the ID we are looking for:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 要复制在线版谷歌趋势中显示的确切情况，如 [图 12-4](#filepos1681064) 所示，我们需要找到带有“编程语言”上下文的正确标识符。为此，pytrends
    可以打印出谷歌趋势在下拉菜单中建议的不同搜索上下文或类型。在以下代码示例中，`mid` 代表机器 ID，这就是我们要找的 ID：
- en: '`In``[``4``]:``from``pytrends.request``import``TrendReq`'
  id: totrans-122
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``4``]:``从``pytrends.request``导入``TrendReq`'
- en: '`In``[``5``]:``# First, let''s instantiate a TrendRequest object``trend``=``TrendReq``()`'
  id: totrans-123
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``5``]:``# 首先，让我们实例化一个 TrendRequest 对象``trend``=``TrendReq``()`'
- en: '`In``[``6``]:``# Now we can print the suggestions as they would appear``# online
    in the dropdown of Google Trends after typing in "Python"``trend``.``suggestions``(``"Python"``)`'
  id: totrans-124
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``6``]:``# 现在我们可以打印出谷歌趋势搜索框中键入“Python”后出现的建议`'
- en: '`Out[6]: [{''mid'': ''/m/05z1_'', ''title'': ''Python'', ''type'': ''Programming
    language''},          {''mid'': ''/m/05tb5'', ''title'': ''Python family'', ''type'':
    ''Snake''},          {''mid'': ''/m/0cv6_m'', ''title'': ''Pythons'', ''type'':
    ''Snake''},          {''mid'': ''/m/06bxxb'', ''title'': ''CPython'', ''type'':
    ''Topic''},          {''mid'': ''/g/1q6j3gsvm'', ''title'': ''python'', ''type'':
    ''Topic''}]`'
  id: totrans-125
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[6]: [{''mid'': ''/m/05z1_'', ''title'': ''Python'', ''type'': ''Programming
    language''},          {''mid'': ''/m/05tb5'', ''title'': ''Python family'', ''type'':
    ''Snake''},          {''mid'': ''/m/0cv6_m'', ''title'': ''Pythons'', ''type'':
    ''Snake''},          {''mid'': ''/m/06bxxb'', ''title'': ''CPython'', ''type'':
    ''Topic''},          {''mid'': ''/g/1q6j3gsvm'', ''title'': ''python'', ''type'':
    ''Topic''}]`'
- en: Repeating this for the other programming languages allows us to retrieve the
    correct `mid` for all of them, and we can write the UDF as shown in [Example 12-3](#filepos1720656).
    You’ll find the source code in the google_trends directory within the udfs folder
    of the companion repository.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 对其他编程语言重复此操作允许我们检索出所有正确的 `mid`，并且我们可以按照 [Example 12-3](#filepos1720656) 中显示的方式编写
    UDF。您可以在同伴存储库的 google_trends 文件夹中的 udfs 文件夹中找到源代码。
- en: Example 12-3\. The `get_interest_over_time` function in google_trends.py (excerpt
    with the relevant import statements)
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Example 12-3\. 在 google_trends.py 中的 `get_interest_over_time` 函数（包含相关的导入语句片段）
- en: '`import``pandas``as``pd``from``pytrends.request``import``TrendReq``import``xlwings``as``xw``@xw.func``(``call_in_wizard``=``False``)`![](images/00031.jpg)`@xw.arg``(``"mids"``,``doc``=``"Machine
    IDs: A range of max 5 cells"``)`![](images/00039.jpg)`@xw.arg``(``"start_date"``,``doc``=``"A
    date-formatted cell"``)``@xw.arg``(``"end_date"``,``doc``=``"A date-formatted
    cell"``)``def``get_interest_over_time``(``mids``,``start_date``,``end_date``):``"""Query
    Google Trends - replaces the Machine ID (mid) of     common programming languages
    with their human-readable     equivalent in the return value, e.g., instead of
    "/m/05z1_"     it returns "Python".     """`![](images/00050.jpg)`# Check and
    transform parameters``assert``len``(``mids``)``<=``5``,``"Too many mids (max:
    5)"`![](images/00067.jpg)`start_date``=``start_date``.``date``()``.``isoformat``()`![](images/00058.jpg)`end_date``=``end_date``.``date``()``.``isoformat``()``#
    Make the Google Trends request and return the DataFrame``trend``=``TrendReq``(``timeout``=``10``)`![](images/00082.jpg)`trend``.``build_payload``(``kw_list``=``mids``,``timeframe``=``f``"{start_date}
    {end_date}"``)`![](images/00076.jpg)`df``=``trend``.``interest_over_time``()`![](images/00007.jpg)`#
    Replace Google''s "mid" with a human-readable word``mids``=``{``"/m/05z1_"``:``"Python"``,``"/m/02p97"``:``"JavaScript"``,``"/m/0jgqg"``:``"C++"``,``"/m/07sbkfb"``:``"Java"``,``"/m/060kv"``:``"PHP"``}``df``=``df``.``rename``(``columns``=``mids``)`![](images/00015.jpg)`#
    Drop the isPartial column``return``df``.``drop``(``columns``=``"isPartial"``)`![](images/00020.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`import``pandas``as``pd``from``pytrends.request``import``TrendReq``import``xlwings``as``xw``@xw.func``(``call_in_wizard``=``False``)`![](images/00031.jpg)`@xw.arg``(``"mids"``,``doc``=``"机器ID：最多5个单元格的范围"``)`![](images/00039.jpg)`@xw.arg``(``"start_date"``,``doc``=``"日期格式的单元格"``)``@xw.arg``(``"end_date"``,``doc``=``"日期格式的单元格"``)``def``get_interest_over_time``(``mids``,``start_date``,``end_date``):``"""查询Google
    Trends - 替换返回值中的常见编程语言的机器ID（mid）为其人类可读等效形式，例如，代替"/m/05z1_"，返回"Python"。"""`![](images/00050.jpg)`#
    检查和转换参数``assert``len``(``mids``)``<=``5``,``"mids过多（最多：5个）"``![](images/00067.jpg)`start_date``=``start_date``.``date``()``.``isoformat``()``![](images/00058.jpg)`end_date``=``end_date``.``date``()``.``isoformat``()``#
    进行Google Trends请求并返回DataFrame``trend``=``TrendReq``(``timeout``=``10``)`![](images/00082.jpg)`trend``.``build_payload``(``kw_list``=``mids``,``timeframe``=``f``"{start_date}
    {end_date}"``)`![](images/00076.jpg)`df``=``trend``.``interest_over_time``()`![](images/00007.jpg)`#
    用人类可读词替换Google的"mid"``mids``=``{``"/m/05z1_"``:``"Python"``,``"/m/02p97"``:``"JavaScript"``,``"/m/0jgqg"``:``"C++"``,``"/m/07sbkfb"``:``"Java"``,``"/m/060kv"``:``"PHP"``}``df``=``df``.``rename``(``columns``=``mids``)`![](images/00015.jpg)`#
    删除isPartial列``return``df``.``drop``(``columns``=``"isPartial"``)`![](images/00020.jpg)'
- en: '![](images/00031.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00031.jpg)'
- en: By default, Excel calls the function when you open it in the Function Wizard.
    As this can make it slow, especially with API requests involved, we’re switching
    this off.
  id: totrans-130
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 默认情况下，当您在函数向导中打开Excel时，它会调用该函数。由于这可能会使其变慢，特别是涉及API请求时，我们将其关闭。
- en: '![](images/00039.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00039.jpg)'
- en: Optionally, add a docstring for the function argument, which will be shown in
    the Function Wizard when you edit the respective argument, as in [Figure 12-8](#filepos1740246).
  id: totrans-132
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 可选地，为函数参数添加文档字符串，在您编辑相应参数时将显示在函数向导中，如[图 12-8](#filepos1740246)。
- en: '![](images/00050.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00050.jpg)'
- en: The function’s docstring is displayed in the Function Wizard, as in [Figure 12-8](#filepos1740246).
  id: totrans-134
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 函数的文档字符串显示在函数向导中，如[图 12-8](#filepos1740246)。
- en: '![](images/00067.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00067.jpg)'
- en: The `assert` statement is an easy way to raise an error in case the user provides
    too many `mids`. Google Trends allows a maximum of five `mids` per query.
  id: totrans-136
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`assert`语句是在用户提供了太多`mids`时引发错误的简便方式。Google Trends每次查询最多允许五个`mids`。'
- en: '![](images/00058.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00058.jpg)'
- en: pytrends expects the start and end dates as a single string in the form `YYYY-MM-DD
    YYYY-MM-DD`. As we are providing the start and end dates as date-formatted cells,
    they will arrive as `datetime` objects. Calling the `date` and `isoformat` methods
    on them will format them properly.
  id: totrans-138
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: pytrends期望的开始和结束日期是一个形如`YYYY-MM-DD YYYY-MM-DD`的字符串。因为我们提供的是日期格式的单元格作为开始和结束日期，它们将作为`datetime`对象到达。在它们上调用`date`和`isoformat`方法将正确地格式化它们。
- en: '![](images/00082.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00082.jpg)'
- en: We’re instantiating a pytrends `request` object. By setting the `timeout` to
    ten seconds, we reduce the risk of seeing a `requests.exceptions.ReadTimeout`
    error, which occasionally happens if Google Trends takes a bit longer to respond.
    If you still see this error, simply run the function again or increase the timeout.
  id: totrans-140
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们正在实例化一个pytrends的`request`对象。通过将`timeout`设置为十秒，我们减少了看到`requests.exceptions.ReadTimeout`错误的风险，这种错误偶尔会发生，如果Google
    Trends需要更长时间来响应的话。如果仍然看到此错误，只需再次运行函数或增加超时时间。
- en: '![](images/00076.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00076.jpg)'
- en: We provide the `kw_list` and `timeframe` arguments to the request object.
  id: totrans-142
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们为请求对象提供`kw_list`和`timeframe`参数。
- en: '![](images/00007.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00007.jpg)'
- en: We make the actual request by calling `interest_over_time`, which will return
    a pandas DataFrame.
  id: totrans-144
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通过调用`interest_over_time`来发出实际请求，它将返回一个pandas DataFrame。
- en: '![](images/00015.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00015.jpg)'
- en: We rename the `mids` with their human-readable equivalent.
  id: totrans-146
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们使用其可读的人类等价物重新命名`mids`。
- en: '![](images/00020.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00020.jpg)'
- en: The last column is called `isPartial`. `True` indicates that the current interval,
    e.g., a week, is still ongoing and therefore doesn’t have all data yet. To keep
    things simple and to be in line with the online version, we’re dropping this column
    when returning the DataFrame.
  id: totrans-148
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 最后一列称为`isPartial`。`True`表示当前间隔（例如一周）仍在进行中，因此尚未完全具备所有数据。为了保持简单并与在线版本保持一致，我们在返回DataFrame时删除此列。
- en: Now open google_trends.xlsm from the companion repository, click on Import Functions
    in the xlwings add-in, and then call the `get_interest_over_time` function from
    cell A4, as shown in [Figure 12-7](#filepos1738974).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在从伴随存储库中打开`google_trends.xlsm`，在`xlwings`加载项中单击“导入函数”，然后从单元格 A4 中调用`get_interest_over_time`函数，如[图 12-7](#filepos1738974)所示。
- en: '![](images/00009.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00009.jpg)'
- en: Figure 12-7\. google_trends.xlsm
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-7\. `google_trends.xlsm`
- en: 'To get help with regard to the function arguments, click the Insert Function
    button to the left of the formula bar while cell A4 is selected: this will open
    the Function Wizard where you will find your UDFs under the `xlwings` category.
    After selecting `get_interest_over_time`, you’ll see the name of the function
    arguments as well as the docstring as function description (restricted to the
    first 256 characters): see [Figure 12-8](#filepos1740246). Alternatively, start
    typing `=get_interest_over_time(` into cell A4 (including the opening parenthesis)
    before hitting the Insert Function button—this will take you directly to the view
    shown in [Figure 12-8](#filepos1740246). Note that UDFs return the dates unformatted.
    To fix this, right-click on the column with the dates, select Format Cells, and
    then select the format of your choice under the Date category.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 若要获取有关函数参数的帮助，请在选择单元格 A4 时，单击公式栏左侧的“插入函数”按钮：这将打开函数向导，在其中您将在`xlwings`类别下找到您的UDFs。选择`get_interest_over_time`后，您将看到函数参数的名称以及作为函数描述的文档字符串（限制为前256个字符）：参见[图 12-8](#filepos1740246)。或者，在单元格
    A4 中开始输入`=get_interest_over_time(`（包括开放括号），然后再单击“插入函数”按钮，这将直接带您进入[图 12-8](#filepos1740246)所示的视图。请注意，UDFs返回未格式化的日期。要修复此问题，请右键单击日期列，选择“格式单元格”，然后在“日期”类别下选择您喜欢的格式。
- en: '![](images/00017.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00017.jpg)'
- en: Figure 12-8\. The Function Wizard
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-8\. 函数向导
- en: 'If you look closely at [Figure 12-7](#filepos1738974), you can tell by the
    blue border around the result array that I am using dynamic arrays again. As the
    screenshot is cropped at the bottom and the array starts at the very left, you
    only see the top and right borders starting at cell A4, and even they might be
    hard to recognize on the screenshot. If your version of Excel doesn’t support
    dynamic arrays, use the workaround by adding the following return decorator to
    the `get_interest_over_time` function (below the existing decorators):'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您仔细观察[图 12-7](#filepos1738974)，您可以通过结果数组周围的蓝色边框判断我再次使用了动态数组。由于截图在底部被裁剪，数组从左侧开始，因此您仅能看到从单元格
    A4 开始的顶部和右侧边界，即使它们可能在截图上也很难识别。如果您的Excel版本不支持动态数组，请通过在`get_interest_over_time`函数中添加以下返回装饰器来使用以下解决方法（在现有装饰器下方）：
- en: '`@xw.ret``(``expand``=``"table"``)`'
  id: totrans-156
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`@xw.ret``(``expand``=``"table"``)`'
- en: Now that you know how to work with more complicated UDFs, let’s see how we can
    use plots with UDFs!
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解如何处理更复杂的UDFs，让我们看看如何在UDFs中使用图表！
- en: Plotting with UDFs
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 使用用户定义函数绘图
- en: 'As you might remember from [Chapter 5](index_split_015.html#filepos482650),
    calling a DataFrame’s `plot` method returns a Matplotlib plot by default. In Chapters
    [9](index_split_024.html#filepos1235764) and [11](index_split_027.html#filepos1487255),
    we’ve already seen how you add such a plot as a picture to Excel. When working
    with UDFs, there’s an easy way to produce plots: have a look at the second function
    in google_trends.py, shown in [Example 12-4](#filepos1742426).'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能还记得来自[第5章](index_split_015.html#filepos482650)，调用DataFrame的`plot`方法默认返回一个Matplotlib图。在第[9章](index_split_024.html#filepos1235764)和第[11章](index_split_027.html#filepos1487255)中，我们已经看到如何将这样的图作为图片添加到Excel中。当使用UDFs时，生成图表有一种简便的方法：看一下`google_trends.py`中的第二个函数，如[示例 12-4](#filepos1742426)所示。
- en: Example 12-4\. The `plot` function in google_trends.py (excerpt with the relevant
    import statements)
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 示例12-4\. google_trends.py中的`plot`函数（节选与相关导入语句）
- en: '`import``xlwings``as``xw``import``pandas``as``pd``import``matplotlib.pyplot``as``plt``@xw.func``@xw.arg``(``"df"``,``pd``.``DataFrame``)``def``plot``(``df``,``name``,``caller``):`![](images/00031.jpg)`plt``.``style``.``use``(``"seaborn"``)`![](images/00039.jpg)`if``not``df``.``empty``:`![](images/00050.jpg)`caller``.``sheet``.``pictures``.``add``(``df``.``plot``()``.``get_figure``(),`![](images/00067.jpg)`top``=``caller``.``offset``(``row_offset``=``1``)``.``top``,`![](images/00058.jpg)`left``=``caller``.``left``,``name``=``name``,``update``=``True``)`![](images/00082.jpg)`return``f``"<Plot:
    {name}>"`![](images/00076.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`import``xlwings``as``xw``import``pandas``as``pd``import``matplotlib.pyplot``as``plt``@xw.func``@xw.arg``(``"df"``,``pd``.``DataFrame``)``def``plot``(``df``,``name``,``caller``):`![](images/00031.jpg)`plt``.``style``.``use``(``"seaborn"``)`![](images/00039.jpg)`if``not``df``.``empty``:`![](images/00050.jpg)`caller``.``sheet``.``pictures``.``add``(``df``.``plot``()``.``get_figure``(),`![](images/00067.jpg)`top``=``caller``.``offset``(``row_offset``=``1``)``.``top``,`![](images/00058.jpg)`left``=``caller``.``left``,``name``=``name``,``update``=``True``)`![](images/00082.jpg)`return``f``"<Plot:
    {name}>"`![](images/00076.jpg)'
- en: '![](images/00031.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00031.jpg)'
- en: 'The `caller` argument is a special argument that is reserved by xlwings: this
    argument will not be exposed when you call the function from an Excel cell. Instead,
    `caller` will be provided by xlwings behind the scenes and corresponds to the
    cell from which you are calling the function (in the form of an xlwings `range`
    object). Having the `range` object of the calling cell makes it easy to place
    the plot by using the `top` and `left` arguments of `pictures.add`. The `name`
    argument will define the name of the picture in Excel.'
  id: totrans-163
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`caller`参数是xlwings专用的参数：在从Excel单元格调用函数时，此参数不会暴露给用户。相反，xlwings会在后台提供`caller`，对应于调用函数的单元格（以xlwings
    `range`对象的形式）。通过使用`pictures.add`的`top`和`left`参数，可以轻松地放置图形。`name`参数将定义Excel中图片的名称。'
- en: '![](images/00039.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00039.jpg)'
- en: We set the `seaborn` style to make the plot visually more attractive.
  id: totrans-165
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们设置了`seaborn`风格，使绘图在视觉上更具吸引力。
- en: '![](images/00050.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00050.jpg)'
- en: Only call the `plot` method if the DataFrame isn’t empty. Calling the `plot`
    method on an empty DataFrame would raise an error.
  id: totrans-167
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 只有在DataFrame不为空时才调用`plot`方法。在空DataFrame上调用`plot`方法会引发错误。
- en: '![](images/00067.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00067.jpg)'
- en: '`get_figure()` returns the Matplotlib figure object from a DataFrame plot,
    which is what `pictures.add` expects.'
  id: totrans-169
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`get_figure()`从DataFrame绘图返回Matplotlib图形对象，这是`pictures.add`所期望的。'
- en: '![](images/00058.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00058.jpg)'
- en: The arguments `top` and `left` are only used when you insert the plot for the
    first time. The provided arguments will place the plot in a convenient place—one
    cell below the one from where you call this function.
  id: totrans-171
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数`top`和`left`仅在首次插入图时使用。提供的参数将在方便的位置放置图——即从调用此函数的单元格下一行。
- en: '![](images/00082.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00082.jpg)'
- en: The argument `update=True` makes sure that repeated function calls will update
    the existing picture with the provided name in Excel, without changing its position
    or size. Without this argument, xlwings would complain that there is already a
    picture with that name in Excel.
  id: totrans-173
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数`update=True`确保重复调用函数时，将更新Excel中具有提供名称的现有图片，而不会更改其位置或大小。没有这个参数，xlwings会抱怨Excel中已经有同名图片。
- en: '![](images/00076.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00076.jpg)'
- en: 'While you don’t strictly need to return anything, it makes your life much easier
    if you return a string: this allows you to recognize where in your sheet your
    plotting function sits.'
  id: totrans-175
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 虽然您不一定需要返回任何内容，但如果返回一个字符串，将大大简化您的生活：这样可以让您识别出表格中绘图函数的位置。
- en: 'In google_trends.xlsm, in cell H3, call the `plot` function like so:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在google_trends.xlsm中，如在单元格H3中调用`plot`函数：
- en: '`=``plot``(``A4``:``F263``,``"History"``)`'
  id: totrans-177
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`=``plot``(``A4``:``F263``,``"History"``)`'
- en: If your version of Excel supports dynamic arrays, use `A4#` instead of `A4:F263`
    to make the source dynamic as shown in [Figure 12-9](#filepos1754503).
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的Excel版本支持动态数组，请使用`A4#`而不是`A4:F263`，使源动态化，如图[12-9](#filepos1754503)所示。
- en: '![](images/00022.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00022.jpg)'
- en: Figure 12-9\. The `plot` function in action
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图12-9\. `plot`函数的示例
- en: Let’s assume that you are slightly confused by how the `get_interest_over_time`
    function works. One option to get a better understanding is to debug the code—the
    next section shows you how this works with UDFs!
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你对`get_interest_over_time`函数的工作方式有些困惑。要更好地理解它的一种选择是调试代码——下一节将展示如何使用UDFs！
- en: Debugging UDFs
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 调试UDFs
- en: 'A simple way to debug a UDF is to use the `print` function. If you have the
    Show Console setting enabled in the xlwings add-in, you will be able to print
    the value of a variable in the Command Prompt that shows up when you call your
    UDF. A slightly more comfortable option is to use the debugger of VS Code, which
    will allow you to pause at breakpoints and step through the code line by line.
    To use the VS Code debugger (or the debugger of any other IDE), you’ll need to
    do two things:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 调试 UDF 的简单方法是使用 `print` 函数。如果您在 xlwings 插件中启用了 Show Console 设置，则在调用 UDF 时，可以在显示的命令提示符中打印变量的值。稍微更舒适的选项是使用
    VS Code 的调试器，它允许您在断点处暂停并逐行执行代码。要使用 VS Code 调试器（或任何其他 IDE 的调试器），您需要完成两件事：
- en: In the Excel add-in, activate the checkbox Debug UDFs. This prevents Excel from
    automatically starting Python, which means you have to do it manually as explained
    under the next point.
  id: totrans-184
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在 Excel 插件中，激活复选框 Debug UDFs。这样可以防止 Excel 自动启动 Python，这意味着您需要按照下一个步骤手动进行操作。
- en: 'The easiest way to run the Python UDF server manually is by adding the following
    lines at the very bottom of the file you’re trying to debug. I have already added
    these lines at the bottom of the google_trends.py file in the companion repository:'
  id: totrans-185
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 手动运行 Python UDF 服务器的最简单方法是在您要调试的文件的最底部添加以下几行。我已经在配套仓库的 google_trends.py 文件的底部添加了这些行：
- en: '`if` `__name__` `==``"__main__"``:``xw``.``serve``()`'
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`if` `__name__` `==``"__main__"``:``xw``.``serve``()`'
- en: As you may remember from [Chapter 11](index_split_027.html#filepos1487255),
    this `if` statement makes sure that the code only runs when you run the file as
    a script—it doesn’t run when you import the code as a module. With the `serve`
    command added, run google_trends.py in VS Code in debug mode by pressing F5 and
    selecting “Python File”—make sure you don’t run the file by clicking the Run File
    button as this would ignore breakpoints.
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 您可能还记得来自 [第 11 章](index_split_027.html#filepos1487255) 的这个 `if` 语句，它确保代码仅在作为脚本运行文件时运行—当您将代码作为模块导入时不会运行。添加了
    `serve` 命令后，通过按 F5 并选择“Python File”在 VS Code 中以调试模式运行 google_trends.py—请确保不要通过单击“Run
    File”按钮来运行文件，因为这将忽略断点。
- en: Let’s set a breakpoint on line 29 by clicking to the left of the line number.
    If you are not familiar with using the debugger of VS Code, please have a look
    at [Appendix B](index_split_030.html#filepos1820886) where I introduce it in more
    detail. When you now recalculate cell A4, your function call will stop at the
    breakpoint and you can inspect the variables. What’s always helpful during debugging
    is to run `df.info()`. Activate the Debug Console tab, write `df.info()` in the
    prompt at the bottom, and confirm by hitting Enter, as shown in [Figure 12-10](#filepos1759601).
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在行号左侧单击设置断点到第 29 行。如果您不熟悉使用 VS Code 的调试器，请参阅 [附录 B](index_split_030.html#filepos1820886)，我在那里详细介绍了它。现在重新计算单元格
    A4，您的函数调用将在断点处停止，您可以检查变量。在调试过程中始终有帮助的是运行 `df.info()`。激活 Debug Console 标签，将 `df.info()`
    写入底部提示符中，并通过按 Enter 键确认，如 [Figure 12-10](#filepos1759601) 所示。
- en: DEBUGGING WITH VS CODE AND ANACONDA
  id: totrans-189
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用 VS Code 和 ANACONDA 进行调试
- en: 'This is the same warning as in [Chapter 11](index_split_027.html#filepos1487255):
    on Windows, when you run the VS Code debugger for the first time with code that
    uses pandas, you might be greeted by an error: “Exception has occurred: ImportError,
    Unable to import required dependencies: numpy.” This happens because the debugger
    is up and running before the Conda environment has been activated properly. As
    a workaround, stop the debugger by clicking the stop icon and hit F5 again—it
    will work the second time.'
  id: totrans-190
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '这与 [第 11 章](index_split_027.html#filepos1487255) 中的相同警告相同：在 Windows 上，当您首次使用使用
    pandas 的代码运行 VS Code 调试器时，您可能会遇到错误：“Exception has occurred: ImportError, Unable
    to import required dependencies: numpy。”这是因为调试器在 Conda 环境正确激活之前已经运行。作为解决方法，请单击停止图标停止调试器，然后再次按
    F5—第二次将起作用。'
- en: '![](images/00030.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00030.jpg)'
- en: Figure 12-10\. Using the Debug Console while the code is paused at a breakpoint
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-10\. 在代码暂停在断点时使用 Debug Console
- en: If you keep your program paused for more than ninety seconds on a breakpoint,
    Excel will show you a pop-up saying that “Microsoft Excel is waiting for another
    application to complete an OLE action.” This shouldn’t have an impact on your
    debugging experience other than having to confirm the pop-up to make it disappear
    once you’re done with debugging. To finish this debugging session, click on the
    Stop button in VS Code (see [Figure 12-10](#filepos1759601)) and make sure to
    uncheck the Debug UDFs setting again in the xlwings ribbon add-in. If you forget
    to uncheck the Debug UDFs setting, your functions will return an error the next
    time you recalculate them.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在断点上暂停程序超过90秒，Excel将显示一个弹出窗口，提示“Microsoft Excel正在等待另一个应用完成OLE操作”。这不会对您的调试体验产生影响，除非您完成调试后需要确认弹出窗口才能使其消失。要结束此调试会话，请单击VS
    Code中的停止按钮（参见[图 12-10](#filepos1759601)），并确保再次取消选中xlwings功能区插件中的Debug UDFs设置。如果忘记取消选中Debug
    UDFs设置，则在下次重新计算时，您的函数将返回错误。
- en: This section showed you the most commonly used UDF functionality by working
    through the Google Trends case study. The next section will touch on a few advanced
    topics including UDF performance and the `xw.sub` decorator.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 本节通过进行Google趋势案例研究，向您展示了最常用的UDF功能。接下来的部分将涉及一些高级主题，包括UDF性能和`xw.sub`装饰器。
- en: Advanced UDF Topics
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 高级UDF主题
- en: If you use many UDFs in your workbook, performance can become an issue. This
    section starts by showing you the same basic performance optimizations as we’ve
    seen in [Chapter 9](index_split_024.html#filepos1235764), but applied to UDFs.
    The second part deals with caching, an additional performance optimization technique
    that we can use with UDFs. Along the way, we’ll also learn how to have function
    arguments arrive as xlwings `range` objects rather than as values. At the end
    of this section, I will introduce you to the `xw.sub` decorator that you can use
    as an alternative to the `RunPython` call if you are exclusively working on Windows.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的工作簿中使用了许多UDF，性能可能成为一个问题。本节将从基本性能优化入手，如同我们在[第9章](index_split_024.html#filepos1235764)中所见，但这次应用于UDF。第二部分涉及缓存，这是我们可以在UDF中使用的额外性能优化技术。在学习的过程中，我们还将了解如何将函数参数作为xlwings
    `range`对象而不是值传递。在本节的最后，我将向您介绍`xw.sub`装饰器，您可以在仅在Windows上工作时，作为`RunPython`调用的替代方案使用。
- en: Basic Performance Optimization
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 基本性能优化
- en: 'This part looks at two performance optimization techniques: how to minimize
    cross-application calls and how to use the raw values converter.'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分将讨论两种性能优化技术：如何最小化跨应用程序调用以及如何使用原始值转换器。
- en: Minimize cross-application calls
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 减少跨应用程序调用
- en: As you probably recall from [Chapter 9](index_split_024.html#filepos1235764),
    cross-application calls, i.e., calls between Excel and Python, are relatively
    slow, so the fewer UDFs you have, the better. You should therefore work with arrays
    whenever you can—having a version of Excel that supports dynamic arrays definitely
    makes this part easier. When you are working with pandas DataFrames, there isn’t
    much that can go wrong, but there are certain formulas where you might not think
    of using arrays automatically. Consider the example of [Figure 12-11](#filepos1762988)
    that calculates total revenues as the sum of a given Base Fee plus a variable
    fee determined by Users times Price.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能从[第9章](index_split_024.html#filepos1235764)中回忆起的那样，跨应用程序调用即在Excel和Python之间进行的调用通常较慢，因此您拥有的UDF越少，效果越好。因此，您应尽可能使用数组工作——拥有支持动态数组的Excel版本肯定会使此部分更加容易。当您使用pandas
    DataFrames时，几乎不会出现问题，但在某些公式中，您可能没有自动考虑使用数组。请考虑[图 12-11](#filepos1762988)的示例，该示例将总收入计算为给定基础费用加上由用户乘以价格确定的变量费用。
- en: '![](images/00038.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00038.jpg)'
- en: Figure 12-11\. Single-cell formulas (left) vs. array-based formulas (right)
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12-11\. 单元格公式（左）与基于数组的公式（右）
- en: Single-cell formulas
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 单元格公式
- en: The left table in [Figure 12-11](#filepos1762988) uses the formula `=revenue($B$5,
    $A9, B$8)` in cell B9\. This formula is then applied to the whole range B9:E13\.
    This means that you have 20 single-cell formulas that call the `revenue` function.
  id: totrans-204
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 图 12-11中的左侧表格使用公式`=revenue($B$5, $A9, B$8)`在单元格B9中。然后将此公式应用于整个范围B9:E13。这意味着您有20个单元格公式调用`revenue`函数。
- en: Array-based formulas
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 基于数组的公式
- en: The right table in [Figure 12-11](#filepos1762988) uses the formula `=revenue2(H5,
    G9:G13, H8:K8)`. If you don’t have dynamic arrays in your version of Excel, you
    would need to add the decorator `xw.ret(expand="table")` to the `revenue2` function
    or turn the array into a legacy CSE array by selecting H9:K13, pressing F2 to
    edit the formula, and confirming with Ctrl+Shift+Enter. Unlike the single-cell
    formula, this version only calls the `revenue2` function once.
  id: totrans-206
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[图 12-11](#filepos1762988)中的右表使用公式`=revenue2(H5, G9:G13, H8:K8)`。如果您的Excel版本没有动态数组，您需要向`revenue2`函数添加装饰器`xw.ret(expand="table")`或者通过选择H9:K13，按F2编辑公式，并使用Ctrl+Shift+Enter确认将数组转换为传统的CSE数组。与单元格公式不同，此版本仅调用一次`revenue2`函数。'
- en: You can see the Python code for the two UDFs in [Example 12-5](#filepos1764694),
    and you’ll find the source file in the revenues folder within the udfs directory
    of the companion repository.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[示例 12-5](#filepos1764694)中查看两个UDF的Python代码，并且您将在伴随存储库的udfs目录中的revenues文件夹中找到源文件。
- en: Example 12-5\. revenues.py
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 12-5\. revenues.py
- en: '`import``numpy``as``np``import``xlwings``as``xw``@xw.func``def``revenue``(``base_fee``,``users``,``price``):``return``base_fee``+``users``*``price``@xw.func``@xw.arg``(``"users"``,``np``.``array``,``ndim``=``2``)``@xw.arg``(``"price"``,``np``.``array``)``def``revenue2``(``base_fee``,``users``,``price``):``return``base_fee``+``users``*``price`'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '`import``numpy``as``np``import``xlwings``as``xw``@xw.func``def``revenue``(``base_fee``,``users``,``price``):``return``base_fee``+``users``*``price``@xw.func``@xw.arg``(``"users"``,``np``.``array``,``ndim``=``2``)``@xw.arg``(``"price"``,``np``.``array``)``def``revenue2``(``base_fee``,``users``,``price``):``return``base_fee``+``users``*``price`'
- en: 'When you change the base fee in cell B5 or H5 respectively, you will see that
    the right example will be much faster than the left one. The difference in the
    Python functions are minimal and only differ in the argument decorators: the array-based
    version reads in `users` and `prices` as NumPy array—the only caveat here is to
    read in `users` as a two-dimensional column vector by setting `ndim=2` in the
    argument decorator. You probably remember that NumPy arrays are similar to DataFrames
    but without index or header and with only one data type, but if you want a more
    detailed refresher, have another look at [Chapter 4](index_split_014.html#filepos433313).'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在单元格B5或H5中更改基本费用时，您将看到右侧示例比左侧示例快得多。Python函数中的差异很小，只在参数装饰器中有所不同：基于数组的版本将`users`和`prices`作为NumPy数组读取进来——这里唯一的注意事项是通过在参数装饰器中设置`ndim=2`将`users`读入为二维列向量。您可能还记得，NumPy数组类似于DataFrames，但没有索引或标题，并且只有一种数据类型，但如果您需要更详细的复习，请再看一下[第 4章](index_split_014.html#filepos433313)。
- en: Using raw values
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 使用原始值
- en: 'Using raw values means that you are leaving out the data preparation and cleaning
    steps that xlwings does on top of pywin32, xlwings’ dependency on Windows. This,
    for example, means that you can’t work with DataFrames directly anymore as pywin32
    doesn’t understand them, but that may not be an issue if you work with lists or
    NumPy arrays. To use UDFs with raw values, use the string `raw` as the `convert`
    argument in the argument or return decorator. This is the equivalent of using
    the `raw` converter via the `options` method of an xlwings `range` object as we
    did in [Chapter 9](index_split_024.html#filepos1235764). In line with what we
    saw back then, you’ll get the biggest speed up during write operations. For example,
    calling the following function without the return decorator would be about three
    times slower on my laptop:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 使用原始值意味着您略去了xlwings在pywin32之上执行的数据准备和清理步骤，xlwings对Windows的依赖。例如，这意味着您不能再直接使用DataFrames，因为pywin32不理解它们，但如果您使用列表或NumPy数组，则可能不是问题。要使用带有原始值的UDFs，请在参数或返回装饰器中使用字符串`raw`作为`convert`参数。这相当于通过xlwings
    `range`对象的`options`方法使用`raw`转换器，正如我们在[第 9章](index_split_024.html#filepos1235764)中所做的那样。与我们当时看到的情况一致，您将在写入操作期间获得最大的速度提升。例如，如果不使用返回装饰器调用以下函数，它在我的笔记本电脑上会慢大约三倍：
- en: '`import``numpy``as``np``import``xlwings``as``xw``@xw.func``@xw.ret``(``"raw"``)``def``randn``(``i``=``1000``,``j``=``1000``):``"""Returns
    an array with dimensions (i, j) with normally distributed``    pseudorandom numbers
    provided by NumPy''s random.randn``    """``return``np``.``random``.``randn``(``i``,``j``)`'
  id: totrans-213
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`import``numpy``as``np``import``xlwings``as``xw``@xw.func``@xw.ret``(``"raw"``)``def``randn``(``i``=``1000``,``j``=``1000``):``"""返回一个维度为（i，j）的数组，其中包含由NumPy的random.randn提供的正态分布伪随机数"""``return``np``.``random``.``randn``(``i``,``j``)`'
- en: 'You’ll find the respective sample in the companion repository in the raw_values
    folder within the udfs directory. When working with UDFs, you have another easy
    option to improve performance: prevent repeated calculations of slow functions
    by caching their results.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在伴随的存储库中的`udfs`目录下的`raw_values`文件夹中找到相应的示例。在使用UDF时，你有另一个简单的选项来提高性能：通过缓存其结果来防止重复计算缓慢函数。
- en: Caching
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 缓存
- en: 'When you call a deterministic function, i.e., a function that given the same
    inputs, always returns the same output, you can store the result in a cache: repeated
    calls of the function don’t have to wait for the slow calculation anymore but
    can take the result from the cache where it’s already precalculated. This is best
    explained with a short example. A very basic caching mechanism can be programmed
    with a dictionary:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 当你调用一个确定性函数时，即给定相同输入时总是返回相同输出的函数，你可以将结果存储在缓存中：函数的重复调用不再需要等待缓慢的计算，而是可以从缓存中获取已经预先计算好的结果。这最好通过一个简短的例子来解释。一个非常基本的缓存机制可以用字典编程：
- en: '`In``[``7``]:``import``time`'
  id: totrans-217
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In [7]: import time`'
- en: '`In``[``8``]:``cache``=``{}``def``slow_sum``(``a``,``b``):``key``=``(``a``,``b``)``if``key``in``cache``:``return``cache``[``key``]``else``:``time``.``sleep``(``2``)``#
    sleep for 2 seconds``result``=``a``+``b``cache``[``key``]``=``result``return``result`'
  id: totrans-218
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In [8]: cache = {} def slow_sum(a, b): key = (a, b) if key in cache: return
    cache[key] else: time.sleep(2) # sleep for 2 seconds result = a + b cache[key]
    = result return result`'
- en: 'When you call this function for the first time, the `cache` is empty. The code
    will therefore execute the `else` clause with the artificial two seconds pause
    that mimics a slow calculation. After performing the calculation, it will add
    the result to the `cache` dictionary before returning the result. When you now
    call this function a second time with the same arguments and during the same Python
    session, it will find it in the `cache` and return it right away, without having
    to perform the slow calculation again. Caching a result based on its arguments
    is also called memoization. Accordingly, you will see the time difference when
    you call the function for the first and second time:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 当你第一次调用这个函数时，`cache`是空的。因此代码将执行模拟缓慢计算的人工两秒暂停的`else`子句。执行计算后，它将结果添加到`cache`字典中，然后返回结果。当你在同一个
    Python 会话中第二次调用具有相同参数的这个函数时，它将在`cache`中找到并立即返回它，而不需要再次执行缓慢的计算。根据其参数缓存结果也称为记忆化。因此，当你第一次和第二次调用函数时，你将看到时间差异：
- en: '`In``[``9``]:``%%``time``slow_sum``(``1``,``2``)`'
  id: totrans-220
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In [9]: %%time slow_sum(1, 2)`'
- en: '`Wall time: 2.01 s`'
  id: totrans-221
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Wall time: 2.01 s`'
- en: '`Out[9]: 3`'
  id: totrans-222
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[9]: 3`'
- en: '`In``[``10``]:``%%``time``slow_sum``(``1``,``2``)`'
  id: totrans-223
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In [10]: %%time slow_sum(1, 2)`'
- en: '`Wall time: 0 ns`'
  id: totrans-224
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Wall time: 0 ns`'
- en: '`Out[10]: 3`'
  id: totrans-225
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[10]: 3`'
- en: Python has a built-in decorator called `lru_cache` that can make your life really
    easy and that you import from the `functools` module that is part of the standard
    library. `lru` stands for least recently used cache and means that it holds a
    maximum number of results (by default 128) before it gets rid of the oldest ones.
    We can use this with our Google Trends example from the last section. As long
    as we’re only querying historical values, we can safely cache the result. This
    will not only make multiple calls faster, but it will also decrease the amounts
    of requests that we send to Google, lowering the chance that Google blocks us—something
    that could happen if you send too many requests in a short time.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Python 中有一个内置的装饰器称为`lru_cache`，可以极大地简化你的生活，并且你可以从标准库的`functools`模块中导入它。`lru`代表最近最少使用缓存，意味着它在丢弃最旧的条目之前可以保存最大数量的结果（默认为128）。我们可以在上一节的
    Google 趋势示例中使用它。只要我们只查询历史值，我们就可以安全地缓存结果。这不仅会加快多次调用的速度，还会减少发送给 Google 的请求量，从而降低在短时间内发送过多请求而被
    Google 封锁的风险。
- en: 'Here are the first few lines of the `get_interest_over_time` function with
    the required changes to apply caching:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是`get_interest_over_time`函数的前几行，应用缓存所需的更改：
- en: '`from``functools``import``lru_cache`![](images/00031.jpg)`import``pandas``as``pd``from``pytrends.request``import``TrendReq``import``matplotlib.pyplot``as``plt``import``xlwings``as``xw``@lru_cache`![](images/00039.jpg)`@xw.func``(``call_in_wizard``=``False``)``@xw.arg``(``"mids"``,``xw``.``Range``,``doc``=``"Machine
    IDs: A range of max 5 cells"``)`![](images/00050.jpg)`@xw.arg``(``"start_date"``,``doc``=``"A
    date-formatted cell"``)``@xw.arg``(``"end_date"``,``doc``=``"A date-formatted
    cell"``)``def``get_interest_over_time``(``mids``,``start_date``,``end_date``):``"""Query
    Google Trends - replaces the Machine ID (mid) of     common programming languages
    with their human-readable     equivalent in the return value, e.g., instead of
    "/m/05z1_"     it returns "Python".     """``mids``=``mids``.``value`![](images/00067.jpg)'
  id: totrans-228
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`from``functools``import``lru_cache`![](images/00031.jpg)`import``pandas``as``pd``from``pytrends.request``import``TrendReq``import``matplotlib.pyplot``as``plt``import``xlwings``as``xw``@lru_cache`![](images/00039.jpg)`@xw.func``(``call_in_wizard``=``False``)``@xw.arg``(``"mids"``,``xw``.``Range``,``doc``=``"Machine
    IDs: A range of max 5 cells"``)`![](images/00050.jpg)`@xw.arg``(``"start_date"``,``doc``=``"A
    date-formatted cell"``)``@xw.arg``(``"end_date"``,``doc``=``"A date-formatted
    cell"``)``def``get_interest_over_time``(``mids``,``start_date``,``end_date``):``"""Query
    Google Trends - replaces the Machine ID (mid) of     common programming languages
    with their human-readable     equivalent in the return value, e.g., instead of
    "/m/05z1_"     it returns "Python".     """``mids``=``mids``.``value`![](images/00067.jpg)'
- en: '![](images/00031.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00031.jpg)'
- en: Import the `lru_cache` decorator.
  id: totrans-230
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导入`lru_cache`装饰器。
- en: '![](images/00039.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00039.jpg)'
- en: Use the decorator. The decorator has to be on top of the `xw.func` decorator.
  id: totrans-232
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用装饰器。装饰器必须位于`xw.func`装饰器的顶部。
- en: '![](images/00050.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00050.jpg)'
- en: By default, `mids` is a list. This creates a problem in this case as functions
    with lists as arguments can’t be cached. The underlying issue is that lists are
    mutable objects that can’t be used as keys in dictionaries; see [Appendix C](index_split_031.html#filepos1832059)
    for more information about mutable vs. immutable objects. Using the `xw.Range`
    converter allows us to retrieve `mids` as xlwings `range` object rather than as
    list, which solves our problem.
  id: totrans-234
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 默认情况下，`mids`是一个列表。在这种情况下会出现问题，因为将列表作为参数的函数无法被缓存。根本问题在于列表是可变对象，不能作为字典中的键使用；有关可变与不可变对象的更多信息，请参见[附录
    C](index_split_031.html#filepos1832059)。使用`xw.Range`转换器允许我们将`mids`作为xlwings的`range`对象检索，而不是作为列表，从而解决了我们的问题。
- en: '![](images/00067.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00067.jpg)'
- en: To make the rest of the code work again, we now need to get the values via the
    `value` property of the xlwings `range` object.
  id: totrans-236
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 为了使其余代码再次正常工作，现在我们需要通过xlwings的`range`对象的`value`属性获取值。
- en: CACHING WITH DIFFERENT VERSIONS OF PYTHON
  id: totrans-237
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用不同版本的Python进行缓存
- en: 'If you are using a Python version below 3.8, you’ll have to use the decorator
    with parentheses like so: `@lru_cache()`. If you are using Python 3.9 or later,
    replace `@lru_cache` with `@cache`, which is the same as `@lru_cache(maxsize=None)`,
    i.e., the cache never gets rid of older values. You also need to import the `cache`
    decorator from `functools`.'
  id: totrans-238
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果您使用的是低于3.8版本的Python，则必须像这样使用带括号的装饰器：`@lru_cache()`。如果您使用的是Python 3.9或更高版本，请用`@cache`替换`@lru_cache`，这等同于`@lru_cache(maxsize=None)`，即缓存永不删除旧值。您还需要从`functools`导入`cache`装饰器。
- en: The `xw.Range` converter can also be useful in other circumstances, for example,
    if you need to access the cell formulas instead of the values in your UDF. In
    the previous example, you could write `mids.formula` to access the formulas of
    the cells. You’ll find the complete example in the google_trends_cache folder
    within the udfs directory of the companion repository.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`xw.Range`转换器在其他情况下也可能很有用，例如，如果您需要访问单元格公式而不是UDF中的值。在前面的示例中，您可以编写`mids.formula`来访问单元格的公式。您可以在同伴存储库的udfs目录中的google_trends_cache文件夹中找到完整的示例。'
- en: Now that you know how to tweak the performance of UDFs, let’s wrap this section
    up by introducing the `xw.sub` decorator.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解如何调整UDF的性能，让我们通过介绍`xw.sub`装饰器来结束本节。
- en: The Sub Decorator
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 子装饰器
- en: 'In [Chapter 10](index_split_026.html#filepos1439732), I showed you how to speed
    up the `RunPython` call by activating the Use UDF Server setting. If you are living
    in a Windows-only world, there is an alternative to the `RunPython`/`Use UDF Server`
    combination in the form of the `xw.sub` decorator. This will allow you to import
    your Python functions as Sub procedures into Excel, without having to manually
    write any `RunPython` calls. In Excel, you will need a Sub procedure to be able
    to attach it to a button—an Excel function, as you get it when using the `xw.func`
    decorator, won’t work. To try this out, create a new `quickstart` project called
    `importsub`. As usual, make sure to `cd` first into the directory where you want
    the project to be created:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 10 章](index_split_026.html#filepos1439732) 中，我向您展示了如何通过激活“使用 UDF 服务器”设置来加速
    `RunPython` 调用。如果您生活在仅限 Windows 的世界中，`RunPython`/`使用 UDF 服务器` 组合的替代方案是 `xw.sub`
    装饰器。这将允许您将 Python 函数作为 Sub 程序导入到 Excel 中，而无需手动编写任何 `RunPython` 调用。在 Excel 中，您需要一个
    Sub 程序才能将其附加到按钮上 —— 使用 `xw.func` 装饰器时获得的 Excel 函数将不起作用。要尝试这个功能，请创建一个名为 `importsub`
    的新的 `quickstart` 项目。像往常一样，请确保首先 `cd` 到要创建项目的目录中：
- en: '`(base)>` `xlwings quickstart importsub`'
  id: totrans-243
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(base)>` `xlwings quickstart importsub`'
- en: In the File Explorer, navigate to the created importsub folder and open importsub.xlsm
    in Excel and importsub.py in VS Code, then decorate the `main` function with `@xw.sub`
    as shown in [Example 12-6](#filepos1796739).
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件资源管理器中，导航到创建的 importsub 文件夹，并在 Excel 中打开 importsub.xlsm，在 VS Code 中打开 importsub.py，然后按照
    [示例 12-6](#filepos1796739) 中所示，用 `@xw.sub` 装饰 `main` 函数。
- en: Example 12-6\. importsub.py (excerpt)
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 12-6\. importsub.py（摘录）
- en: '`import``xlwings``as``xw``@xw.sub``def``main``():``wb``=``xw``.``Book``.``caller``()``sheet``=``wb``.``sheets``[``0``]``if``sheet``[``"A1"``]``.``value``==``"Hello
    xlwings!"``:``sheet``[``"A1"``]``.``value``=``"Bye xlwings!"``else``:``sheet``[``"A1"``]``.``value``=``"Hello
    xlwings!"`'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`import``xlwings``as``xw``@xw.sub``def``main``():``wb``=``xw``.``Book``.``caller``()``sheet``=``wb``.``sheets``[``0``]``if``sheet``[``"A1"``]``.``value``==``"Hello
    xlwings!"``:``sheet``[``"A1"``]``.``value``=``"Bye xlwings!"``else``:``sheet``[``"A1"``]``.``value``=``"Hello
    xlwings!"`'
- en: 'In the xlwings add-in, click on Import Functions before hitting Alt+F8 to see
    the available macros: in addition to the `SampleCall` that uses `RunPython`, you’ll
    now also see a macro called `main`. Select it and click the Run button—you’ll
    see the familiar greeting in cell A1\. You could now go ahead and assign the `main`
    macro to a button as we did in [Chapter 10](index_split_026.html#filepos1439732).
    While the `xw.sub` decorator can make your life easier on Windows, bear in mind
    that by using it, you lose cross-platform compatibility. With `xw.sub`, we have
    met all xlwings decorators—I have summarized them again in [Table 12-1](#filepos1801916).'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在 xlwings 加载项中，单击导入函数，然后按 Alt+F8 查看可用的宏：除了使用 `RunPython` 的 `SampleCall` 外，现在还会看到一个名为
    `main` 的宏。选择它，然后单击“运行”按钮 —— 您将在单元格 A1 中看到熟悉的问候语。现在，您可以继续将 `main` 宏分配给按钮，就像我们在
    [第 10 章](index_split_026.html#filepos1439732) 中所做的那样。虽然 `xw.sub` 装饰器可以在 Windows
    上简化您的生活，但请记住，使用它会丧失跨平台兼容性。通过 `xw.sub`，我们已经介绍了所有 xlwings 装饰器 —— 我再次在 [表 12-1](#filepos1801916)
    中对它们进行了总结。
- en: Table 12-1\. xlwings decorators
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 表 12-1\. xlwings 装饰器
- en: '|  Decorator  |  Description  |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '|  装饰器  |  描述  |'
- en: '|   `xw.func` |  Put this decorator on top of all functions that you want to
    import into Excel as an Excel function.  |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '|   `xw.func` |  将此装饰器放在您希望作为 Excel 函数导入的所有函数的顶部。  |'
- en: '|   `xw.sub` |  Put this decorator on top of all functions that you want to
    import into Excel as an Excel Sub procedure.  |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '|   `xw.sub` |  将此装饰器放在您希望作为 Excel Sub 程序导入的所有函数的顶部。  |'
- en: '|   `xw.arg` |  Apply converters and options to arguments, e.g., add a docstring
    via the  `doc` argument or you can have a range arrive as DataFrame by providing
    `pd.DataFrame` as the first argument (this assumes that you have imported pandas
    as pd). |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '|   `xw.arg` |  应用转换器和选项到参数，例如，通过 `doc` 参数添加文档字符串，或者通过将 `pd.DataFrame` 作为第一个参数来将范围作为
    DataFrame 传入（这假设您已将 pandas 导入为 pd）。 |'
- en: '|   `xw.ret` |  Apply converters and options to return values, e.g., suppress
    a DataFrame’s index by providing  `index=False`. |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '|   `xw.ret` |  应用转换器和选项以返回值，例如，通过提供 `index=False` 来抑制 DataFrame 的索引。 |'
- en: For more details on these decorators, have a look at the [xlwings documentation](https://oreil.ly/h-sT_).
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多有关这些装饰器的详细信息，请参阅 [xlwings 文档](https://oreil.ly/h-sT_)。
- en: Conclusion
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 结论
- en: This chapter was about writing Python functions and importing them into Excel
    as UDFs, allowing you to call them via cell formulas. By working through the Google
    Trends case study, you learned how to influence the behavior of the function arguments
    and return values by using the `arg` and `ret` decorators, respectively. The last
    part showed you a few performance tricks and introduced the `xw.sub` decorator,
    which you can use as a `RunPython` replacement if you are exclusively working
    with Windows. The nice thing about writing UDFs in Python is that this allows
    you to replace long and complex cell formulas with Python code that will be easier
    to understand and maintain. My preferred way to work with UDFs is definitely to
    use pandas DataFrames with Excel’s new dynamic arrays, a combination that makes
    it easy to work with the sort of data we get from Google Trends, i.e., DataFrames
    with a dynamic number of rows.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是关于编写Python函数并将其导入Excel作为UDFs，使您能够通过单元格公式调用它们。通过通过Google Trends案例研究来影响函数参数和返回值的行为，您学会了如何使用`arg`和`ret`装饰器分别来影响函数参数和返回值的行为。最后一部分向您展示了一些性能技巧，并介绍了`xw.sub`装饰器，如果您仅在Windows上工作，您可以将其用作`RunPython`的替代方案。使用Python编写UDFs的好处之一是，这使您可以将长而复杂的单元格公式替换为更容易理解和维护的Python代码。我的首选UDFs工作方式肯定是使用pandas
    DataFrames与Excel的新动态数组，这种组合使得处理来自Google Trends的数据（即具有动态行数的DataFrames）变得容易。
- en: 'And that’s it—we have reached the end of the book! Thanks so much for your
    interest in my interpretation of a modern automation and data analysis environment
    for Excel! My idea was to introduce you to the world of Python and its powerful
    open source packages, allowing you to write Python code for your next project
    instead of having to deal with Excel’s own solutions like VBA or Power Query,
    thereby keeping a door open to easily move away from Excel if you need to. I hope
    I could give you a few hands-on examples to make the start easier. After reading
    this book, you now know how to:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样了——我们已经到达了书的结尾！非常感谢您对我对于现代化的Excel自动化和数据分析环境的诠释感兴趣！我的想法是向您介绍Python世界及其强大的开源包，使您能够为下一个项目编写Python代码，而不必处理Excel的自身解决方案，如VBA或Power
    Query，从而保持一扇通向轻松摆脱Excel的大门。我希望我能为您提供一些实用例子，以使您的起步更加容易。阅读完本书后，您现在知道如何：
- en: Replace an Excel workbook with a Jupyter notebook and pandas code
  id: totrans-258
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 将Excel工作簿替换为Jupyter笔记本和pandas代码
- en: Batch process Excel workbooks by reading them with OpenPyXL, xlrd, pyxlsb, or
    xlwings and then consolidate them with pandas
  id: totrans-259
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用OpenPyXL、xlrd、pyxlsb或xlwings读取Excel工作簿，然后通过pandas合并它们，批处理Excel工作簿
- en: Produce Excel reports with either OpenPyXL, XlsxWriter, xlwt, or xlwings
  id: totrans-260
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用OpenPyXL、XlsxWriter、xlwt或xlwings生成Excel报告
- en: Use Excel as a frontend and connect it to pretty much anything you want via
    xlwings, either by clicking a button or by writing a UDF
  id: totrans-261
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用Excel作为前端，并通过xlwings将其连接到几乎任何您想要的内容，无论是通过点击按钮还是编写UDF
- en: 'Soon enough, however, you’ll want to move beyond the scope of this book. I
    invite you to check the [book’s home page](https://xlwings.org/book) from time
    to time for updates and additional material. In this spirit, here are a few ideas
    that you could explore on your own:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 不久之后，你将会想要超越本书的范围。我邀请你不时查看[书籍主页](https://xlwings.org/book)以获取更新和额外材料。本着这种精神，这里有一些你可以自行探索的想法：
- en: Schedule the periodic run of a Python script using either the Task Scheduler
    on Windows or a cron job on macOS or Linux. You could, for example, create an
    Excel report every Friday based on data you consume from a REST API or a database.
  id: totrans-263
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用Windows任务计划程序或macOS或Linux上的cron作业定期运行Python脚本。例如，您可以每个星期五基于从REST API或数据库获取的数据创建一个Excel报告。
- en: Write a Python script that sends email alerts whenever the values in your Excel
    files satisfy a certain condition. Maybe that is when your account balance, consolidated
    from multiple workbooks, falls below a certain value, or when it shows a different
    value from what you expect based on your internal database.
  id: totrans-264
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 编写一个Python脚本，当您Excel文件中的值满足某个条件时发送电子邮件提醒。也许是当您从多个工作簿合并的账户余额低于某个值时，或者当它显示与您内部数据库预期值不符的值时。
- en: 'Write code that finds errors in Excel workbooks: check for cell errors like
    `#REF!` or `#VALUE!` or logical errors like making sure that a formula is including
    all the cells it should. If you start tracking your mission-critical workbooks
    with a professional version control system like Git, you can even run these tests
    automatically whenever you commit a new version.'
  id: totrans-265
  prefs:
  - PREF_UL
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 编写可以找出 Excel 工作簿中错误的代码：检查诸如 `#REF!` 或 `#VALUE!` 的单元格错误，或逻辑错误，例如确保公式包括了所有应包括的单元格。如果你开始用专业的版本控制系统如
    Git 跟踪你的关键工作簿，甚至可以在每次提交新版本时自动运行这些测试。
- en: If this book inspires you to automate your daily or weekly routine of downloading
    data and copy/pasting it into Excel, I couldn’t be any happier. Automation doesn’t
    just give you back time, it also reduces the chance of committing errors dramatically.
    If you have any feedback, please let me know about it! You can contact me via
    O’Reilly, by opening an issue on the [companion repository](https://oreil.ly/vVHmR)
    or on Twitter at [@felixzumstein](https://twitter.com/felixzumstein).
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这本书激励你自动化每日或每周下载数据并粘贴到 Excel 中的例行工作，我会感到非常高兴。自动化不仅可以节省你的时间，还能大大减少出错的几率。如果你有任何反馈，请告诉我！你可以通过
    O’Reilly、在 [伴侣仓库](https://oreil.ly/vVHmR) 上开一个问题，或在 Twitter 上联系我 [@felixzumstein](https://twitter.com/felixzumstein)。
- en: '[1  ](#filepos1654281) The Windows implementation uses a COM server (I’ve introduced
    the COM technology briefly in [Chapter 9](index_split_024.html#filepos1235764)).
    Since COM doesn’t exist on macOS, UDFs would have to be reimplemented from scratch,
    which is a lot of work and simply hasn’t been done yet.'
  id: totrans-267
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[1  ](#filepos1654281) Windows 实现使用了一个 COM 服务器（我在 [第9章](index_split_024.html#filepos1235764)
    中简要介绍了 COM 技术）。由于 macOS 上没有 COM，UDF 需要从头重新实现，这是一项繁重的工作，目前还没有完成。'
- en: Appendix A. Conda Environments
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 附录 A. Conda 环境
- en: 'In [Chapter 2](index_split_008.html#filepos96824), I introduced Conda environments
    by explaining that `(base)` at the beginning of an Anaconda Prompt stands for
    the currently active Conda environment with the name `base`. Anaconda requires
    you to always work in an activated environment, but the activation is done automatically
    for the `base` environment when you start the Anaconda Prompt on Windows or the
    Terminal on macOS. Working with Conda environments allows you to properly separate
    the dependencies of your projects: if you want to try out a newer version of a
    package like pandas without changing your `base` environment, you can do so in
    a separate Conda environment. In the first part of this appendix, I will walk
    you through the process of creating a Conda environment called `xl38` where we
    will install all packages in the version I used them to write this book. This
    will allow you to run the samples in this book as-is, even if some packages have
    released new versions with breaking changes in the meantime. In the second part,
    I will show you how to disable the auto activation of the `base` environment if
    you don’t like the default behavior.'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第2章](index_split_008.html#filepos96824) 中，我通过解释 Anaconda Prompt 中以 `(base)`
    开头表示当前活动的 Conda 环境名称为 `base` 来介绍了 Conda 环境。Anaconda 要求你始终在激活的环境中工作，但当你在 Windows
    上启动 Anaconda Prompt 或 macOS 上的 Terminal 时，`base` 环境会自动激活。使用 Conda 环境可以很好地分离项目的依赖关系：如果你想尝试一个新版本的包，比如
    pandas，而不改变 `base` 环境，你可以在一个单独的 Conda 环境中这样做。在附录的第一部分中，我将向你展示如何创建一个名为 `xl38` 的
    Conda 环境，我们将在其中安装我写这本书时使用的所有包的版本。这将使你能够按原样运行本书中的示例，即使其中某些包已发布了具有破坏性更改的新版本。在第二部分中，我将向你展示如何禁用
    `base` 环境的自动激活，如果你不喜欢默认行为的话。
- en: Create a New Conda Environment
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的 Conda 环境
- en: 'Run the following command on your Anaconda Prompt to create a new environment
    with the name `xl38` that uses Python 3.8:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Anaconda Prompt 上运行以下命令来创建一个名为 `xl38` 的新环境，使用 Python 3.8：
- en: '`(base)>` `conda create --name xl38 python=3.8`'
  id: totrans-272
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(base)>` `conda create --name xl38 python=3.8`'
- en: 'When hitting Enter, Conda will print what it is going to install into the new
    environment and asks you to confirm:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 按下 Enter 键时，Conda 将打印将要安装到新环境中的内容，并要求你确认：
- en: '`Proceed ([y]/n)?`'
  id: totrans-274
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`继续 ([y]/n)?`'
- en: 'Hit Enter to confirm or type `n` if you want to cancel. Once the installation
    is done, activate your new environment like this:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 按下 Enter 键确认，或输入 `n` 取消。安装完成后，像这样激活你的新环境：
- en: '`(base)>` `conda activate xl38` `(xl38)>`'
  id: totrans-276
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(base)>` `conda activate xl38` `(xl38)>`'
- en: 'The environment name changed from `base` to `xl38` and you can now use Conda
    or pip to install packages into this new environment without impacting any of
    the other environments (as a reminder: only use pip if the package isn’t available
    via Conda). Let’s go ahead and install all packages from this book in the version
    I was using them. First, double-check that you are in the `xl38` environment,
    i.e., the Anaconda Prompt is showing `(xl38)`, then install the Conda packages
    like so (the following command should be typed in as a single command; the line
    breaks are only for display purposes):'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 环境名称已从`base`更改为`xl38`，现在您可以使用Conda或pip将软件包安装到这个新环境中，而不会影响任何其他环境（作为提醒：仅在Conda中找不到软件包时使用pip）。让我们继续安装本书中使用的所有软件包版本。首先，请确保您处于`xl38`环境中，即Anaconda
    Prompt显示`(xl38)`，然后像这样安装Conda软件包（以下命令应作为单个命令输入；换行仅用于显示目的）：
- en: '`(xl38)>` `conda install lxml=4.6.1 matplotlib=3.3.2 notebook=6.1.4 openpyxl=3.0.5
                          pandas=1.1.3 pillow=8.0.1 plotly=4.14.1 flake8=3.8.4                      
    python-dateutil=2.8.1 requests=2.24.0 sqlalchemy=1.3.20                      
    xlrd=1.2.0 xlsxwriter=1.3.7 xlutils=2.0.0 xlwings=0.20.8                      
    xlwt=1.3.0`'
  id: totrans-278
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(xl38)>` `conda install lxml=4.6.1 matplotlib=3.3.2 notebook=6.1.4 openpyxl=3.0.5
                          pandas=1.1.3 pillow=8.0.1 plotly=4.14.1 flake8=3.8.4                      
    python-dateutil=2.8.1 requests=2.24.0 sqlalchemy=1.3.20                      
    xlrd=1.2.0 xlsxwriter=1.3.7 xlutils=2.0.0 xlwings=0.20.8                      
    xlwt=1.3.0`'
- en: 'Confirm the installation plan and finalize the environment by installing the
    two remaining dependencies with pip:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 确认安装计划并通过pip安装剩余的两个依赖项来完成环境：
- en: '`(xl38)>` `pip install pyxlsb==1.0.7 pytrends==4.7.3` `(xl38)>`'
  id: totrans-280
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(xl38)>` `pip install pyxlsb==1.0.7 pytrends==4.7.3` `(xl38)>`'
- en: HOW TO USE THE XL38 ENVIRONMENT
  id: totrans-281
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如何使用XL38环境
- en: 'If you would like to use the `xl38` environment rather than the `base` environment
    to work through the examples in this book, make sure to always have your `xl38`
    environment activated by running:'
  id: totrans-282
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果您想要在本书中使用`xl38`环境而不是`base`环境来处理示例，请确保始终通过运行以下命令激活您的`xl38`环境：
- en: '`(base)>` `conda activate xl38`'
  id: totrans-283
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(base)>` `conda activate xl38`'
- en: That is, wherever I show the Anaconda Prompt as `(base)>`, you will want it
    to show `(xl38)>` instead.
  id: totrans-284
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 换句话说，无论我在Anaconda提示符中显示`(base)>`，您都需要显示`(xl38)>`。
- en: 'To deactivate the environment again and get back to the `base` environment,
    type:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 要再次取消激活环境并返回`base`环境，请输入：
- en: '`(xl38)>` `conda deactivate` `(base)>`'
  id: totrans-286
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(xl38)>` `conda deactivate` `(base)>`'
- en: 'If you want to delete the environment completely, run the following command:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想完全删除环境，请运行以下命令：
- en: '`(base)>` `conda env remove --name xl38`'
  id: totrans-288
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(base)>` `conda env remove --name xl38`'
- en: 'Instead of going through the steps manually to create the `xl38` environment,
    you can also take advantage of the environment file xl38.yml that I included in
    the conda folder of the companion repository. Running the following commands takes
    care of everything:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以利用配套存储库的conda文件夹中包含的环境文件xl38.yml，而不是手动执行创建`xl38`环境的步骤。运行以下命令将处理所有事务：
- en: '`(base)>` `cd C:\Users\``username``\python-for-excel\conda` `(base)>` `conda
    env create -f xl38.yml` `(base)>` `conda activate xl38` `(xl38)>`'
  id: totrans-290
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(base)>` `cd C:\Users\``username``\python-for-excel\conda` `(base)>` `conda
    env create -f xl38.yml` `(base)>` `conda activate xl38` `(xl38)>`'
- en: By default, Anaconda always activates the `base` environment when you open a
    Terminal on macOS or the Anaconda Prompt on Windows. If you don’t like this, you
    could disable auto activation as I’ll show you next.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，每当您在macOS上打开终端或在Windows上打开Anaconda提示符时，Anaconda总是激活`base`环境。如果您不喜欢这样做，您可以按照我将向您展示的步骤禁用自动激活。
- en: Disable Auto Activation
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用自动激活
- en: 'If you don’t want the `base` environment to be activated automatically whenever
    you fire up an Anaconda Prompt, you can disable it: this will require you to type
    `conda activate base` manually on a Command Prompt (Windows) or Terminal (macOS)
    before you are able to use Python.'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不希望每次启动Anaconda提示符时自动激活`base`环境，您可以禁用它：这将要求您在使用Python之前在命令提示符（Windows）或终端（macOS）上手动输入`conda
    activate base`。
- en: Windows
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: Windows
- en: 'On Windows, you will need to use the regular Command Prompt instead of the
    Anaconda Prompt. The following steps will enable the `conda` command in a normal
    Command Prompt. Make sure to replace the path in the first line with the path
    where Anaconda is installed on your system:'
  id: totrans-295
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在Windows上，您需要在普通命令提示符中使用，而不是Anaconda提示符。以下步骤将在正常的命令提示符中启用`conda`命令。确保在第一行中替换Anaconda在您系统上安装的路径：
- en: '`>` `cd C:\Users\``username``\Anaconda3\condabin` `>` `conda init cmd.exe`'
  id: totrans-296
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`>` `cd C:\Users\``username``\Anaconda3\condabin` `>` `conda init cmd.exe`'
- en: 'Your regular Command Prompt is now set up with Conda, so going forward you
    can activate the `base` environment like this:'
  id: totrans-297
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在您的常规命令提示符已经设置为 Conda，因此以后您可以像这样激活 `base` 环境：
- en: '`>` `conda activate base` `(base)>`'
  id: totrans-298
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`>` `conda activate base` `(base)>`'
- en: macOS
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: macOS
- en: 'On macOS, simply run the following command in your Terminal to disable auto
    activation:'
  id: totrans-300
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在 macOS 上，只需在终端中运行以下命令即可禁用自动激活：
- en: '`(base)>` `conda config --set auto_activate_base false`'
  id: totrans-301
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`(base)>` `conda config --set auto_activate_base false`'
- en: 'If you ever want to revert, run the same command again with `true` instead
    of `false`. Changes will come into effect after restarting the Terminal. Going
    forward, you will need to activate the `base` environment like this before you
    can use the `python` command again:'
  id: totrans-302
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果您希望恢复，再次运行相同命令并使用 `true` 替换 `false`。更改将在重新启动终端后生效。未来，您需要在使用 `python` 命令之前激活
    `base` 环境：
- en: '`>` `conda activate base` `(base)>`'
  id: totrans-303
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`>` `conda activate base` `(base)>`'
- en: Appendix B. Advanced VS Code Functionality
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 附录 B. 高级 VS Code 功能
- en: This appendix shows you how the debugger works in VS Code and how you can run
    Jupyter notebooks directly from within VS Code. The topics are independent of
    each other, so you may read them in any order.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录向您展示了在 VS Code 中调试器的工作原理以及如何直接从 VS Code 中运行 Jupyter 笔记本。这些主题是彼此独立的，因此您可以按任意顺序阅读它们。
- en: Debugger
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 调试器
- en: 'If you’ve ever used the VBA debugger in Excel, I have good news for you: debugging
    with VS Code is a very similar experience. Let’s start by opening the file debugging.py
    from the companion repository in VS Code. Click into the margin to the left of
    line number 4 so that a red dot appears—this is your breakpoint where code execution
    will be paused. Now hit F5 to start debugging: the Command Panel will appear with
    a selection of debug configurations. Choose “Python File” to debug the active
    file and run the code until it hits the breakpoint. The line will be highlighted
    and code execution pauses, see [Figure B-1](#filepos1822749). While you debug,
    the status bar turns orange.'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您曾经在 Excel 中使用 VBA 调试器，我有个好消息：使用 VS Code 进行调试非常类似。让我们从在 VS Code 中打开伴随仓库中的
    debugging.py 文件开始。点击第 4 行行号左侧的边距，以便出现一个红点—这是代码执行将暂停的断点。现在按 F5 开始调试：命令面板将显示一组调试配置选项。选择“Python
    文件”以调试活动文件并运行代码直到达到断点。该行将被突出显示，并且代码执行暂停，请参见 [图 B-1](#filepos1822749)。在调试过程中，状态栏将变为橙色。
- en: 'If the Variables section doesn’t show up automatically on the left, make sure
    to click on the Run menu to see the values of the variables. Alternatively, you
    can also hover over a variable in the source code and get a tooltip with its value.
    At the top, you will see the Debug Toolbar that gives you access to the following
    buttons from left to right): Continue, Step Over, Step Into, Step Out, Restart,
    and Stop. When you hover over them, you will also see the keyboard shortcuts.'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 如果“变量”部分未自动显示在左侧，请确保单击“运行”菜单以查看变量的值。或者，您还可以将鼠标悬停在源代码中的变量上，并获取带有其值的工具提示。在顶部，您将看到调试工具栏，依次提供以下按钮：继续、跳过、步入、步出、重启和停止。当您将鼠标悬停在它们上方时，还将看到键盘快捷键。
- en: '![](images/00049.jpg)'
  id: totrans-309
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00049.jpg)'
- en: Figure B-1\. VS Code with the debugger stopped at the breakpoint
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 图 B-1\. VS Code 调试器在断点处停止
- en: 'Let’s see what each of these buttons does:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看每个按钮的功能：
- en: Continue
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 继续
- en: This continues to run the program until it either hits the next breakpoint or
    the end of the program. If it reaches the end of the program, the debugging process
    will stop.
  id: totrans-313
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这将继续运行程序，直到它达到下一个断点或程序结束。如果它到达程序的末尾，调试过程将停止。
- en: Step Over
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 跳过
- en: The debugger will advance one line. Step Over means that the debugger will not
    visually step through lines of code that are not part of your current scope. For
    example, it will not step into the code of a function that you call line by line—but
    the function will still be called!
  id: totrans-315
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 调试器将前进一行。"跳过" 意味着调试器不会在当前范围内的代码行上逐行步进。例如，它不会逐行步进调用的函数的代码—但函数仍将被调用！
- en: Step Into
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 步入
- en: If you have code that calls a function or class, etc., Step Into will cause
    the debugger to step into that function or class. If the function or class is
    in a different file, the debugger will open this file for you.
  id: totrans-317
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果您的代码调用了函数或类等，"步入" 将导致调试器进入该函数或类。如果函数或类位于不同文件中，则调试器将为您打开此文件。
- en: Step Out
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 步出
- en: If you stepped into a function with Step Into, Step Out causes the debugger
    to return to the next higher level until eventually, you will be back on the highest
    level from where you called Step Into initially.
  id: totrans-319
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果使用“步进入”进入了函数，则“步进出”会导致调试器返回到下一个更高级别，直到最终返回到最初调用“步进入”的最高级别。
- en: Restart
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动
- en: This will stop the current debug process and start a new one from the beginning.
  id: totrans-321
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这将停止当前的调试过程并从头开始新的调试。
- en: Stop
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 停止
- en: This will stop the current debug process.
  id: totrans-323
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这将停止当前的调试过程。
- en: Now that you know what each button does, click on Step Over to advance one line
    and see how variable `c` appears in the Variables section, then finish this debugging
    exercise by clicking on Continue.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道每个按钮的作用，请点击“步进”以推进一行并查看变量 `c` 如何出现在“变量”部分中，然后通过点击“继续”来完成此调试练习。
- en: 'If you save the debugging configuration, the Command Panel will not show up
    and ask you about the configuration every time you hit F5: click on the Run icon
    in the Activity Bar, then click on “create a launch.json file.” This will cause
    the Command Panel to show up again and when you select “Python File,” it creates
    the launch.json file under a directory called .vscode. When you now hit F5, the
    debugger will start right away. If you need to change the configuration or want
    to get the Command Panel pop-up again, edit or delete the launch.json file in
    the .vscode directory.'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您保存了调试配置，命令面板将不会弹出并在每次按 F5 时询问您配置：点击活动栏中的运行图标，然后点击“创建一个 launch.json 文件”。这将导致命令面板再次显示，并且当您选择“Python
    文件”时，它会在名为 .vscode 的目录下创建 launch.json 文件。现在再次按 F5，调试器将立即启动。如果您需要更改配置或想再次弹出命令面板，请编辑或删除
    .vscode 目录中的 launch.json 文件。
- en: Jupyter Notebooks in VS Code
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: VS Code 中的 Jupyter 笔记本
- en: Instead of running your Jupyter notebooks in a web browser, you can also run
    them with VS Code directly. On top of that, VS Code offers a convenient Variable
    explorer as well as options to transform the notebook into standard Python files
    without losing the cell functionality. This makes it easier to use the debugger
    or to copy/paste cells between different notebooks. Let’s get started by running
    a notebook in VS Code!
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以直接在 VS Code 中运行 Jupyter 笔记本，而不是在 Web 浏览器中运行它们。除此之外，VS Code 还提供了便捷的变量资源管理器，并提供将笔记本转换为标准
    Python 文件的选项，而不会丢失单元格功能。这使得使用调试器或在不同笔记本之间复制/粘贴单元格变得更加容易。让我们通过在 VS Code 中运行笔记本来开始吧！
- en: Run Jupyter Notebooks
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 Jupyter 笔记本
- en: 'Click the Explorer icon on the Activity Bar and open ch05.ipynb from the companion
    repository. To continue, you will need to make the notebook a trusted one by clicking
    on Trust in the notification that pops up. The layout of the notebook looks a
    bit different from the one in the browser to match the rest of VS Code, but otherwise,
    it’s the same experience including all the keyboard shortcuts. Let’s run the first
    three cells via Shift+Enter. This will start the Jupyter notebook server if it
    isn’t running yet (you will see the status at the top right of the notebook).
    After running the cells, click on the calculator button in the menu at the top
    of the notebook: this will open the Variable explorer, in which you can see the
    values of all variables that currently exist, as in [Figure B-2](#filepos1828071).
    That is, you will only find variables from cells that have been run.'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 点击活动栏上的资源管理器图标，从伴随存储库中打开 ch05.ipynb。要继续，请点击弹出的通知中的“信任”。笔记本的布局看起来与浏览器中的略有不同，以匹配
    VS Code 的其余部分，但除此之外，体验完全相同，包括所有键盘快捷键。让我们通过 Shift+Enter 运行前三个单元格。这将启动 Jupyter 笔记本服务器（如果尚未运行，您将在笔记本的右上方看到状态）。运行单元格后，点击笔记本顶部菜单中的计算器按钮：这将打开变量资源管理器，在其中您可以查看当前存在的所有变量的值，如
    [图 B-2](#filepos1828071)。也就是说，您只会找到已运行单元格中的变量。
- en: SAVING JUPYTER NOTEBOOKS IN VS CODE
  id: totrans-330
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在 VS Code 中保存 Jupyter 笔记本
- en: To save notebooks in VS Code, you need to use the Save button at the top of
    the notebook or hit Ctrl+S on Windows or Command-S on macOS. File > Save won’t
    work.
  id: totrans-331
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要在 VS Code 中保存笔记本，您需要使用笔记本顶部的“保存”按钮，或在 Windows 上按 Ctrl+S，macOS 上按 Command-S。File
    > Save 不起作用。
- en: '![](images/00056.jpg)'
  id: totrans-332
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00056.jpg)'
- en: Figure B-2\. Jupyter notebook Variable explorer
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 图 B-2\. Jupyter 笔记本变量资源管理器
- en: 'If you use data structures like nested lists, NumPy arrays, or DataFrames,
    you can double-click the variable: this will open the Data Viewer and give you
    a familiar spreadsheet-like view. [Figure B-3](#filepos1828717) shows the Data
    Viewer after double-clicking the `df` variable.'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用像嵌套列表、NumPy 数组或数据框等数据结构，您可以双击变量：这将打开数据查看器，并为您提供熟悉的类似电子表格的视图。双击 `df` 变量后，[图 B-3](#filepos1828717)
    显示了数据查看器的内容。
- en: '![](images/00066.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00066.jpg)'
- en: Figure B-3\. Jupyter notebook Data Viewer
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 图 B-3\. Jupyter 笔记本数据查看器
- en: While VS Code allows you to run standard Jupyter notebook files, it also allows
    you to transform the notebooks into normal Python files—without losing your cells.
    Let’s see how it works!
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 VS Code 允许您运行标准的 Jupyter 笔记本文件，但它也允许您将笔记本转换为普通的 Python 文件——而不会丢失您的单元格。让我们看看它是如何工作的！
- en: Python Scripts with Code Cells
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 使用带有代码单元格的 Python 脚本
- en: 'To use Jupyter notebook cells in standard Python files, VS Code uses a special
    comment to denote cells: `# %%`. To convert an existing Jupyter notebook, open
    it and hit the Export As button in the menu at the top of the notebook; see [Figure B-2](#filepos1828071).
    This will allow you to select “Python File” from the command palette. However,
    instead of converting an existing file, let’s create a new file that we call cells.py
    with the following content:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 要在标准 Python 文件中使用 Jupyter 笔记本单元格，VS Code 使用特殊注释来标记单元格：`# %%`。要转换现有的 Jupyter
    笔记本，请打开它并点击笔记本顶部菜单中的“导出”按钮；参见 [图 B-2](#filepos1828071)。这将允许您从命令面板中选择“Python 文件”。但是，与其转换现有文件，不如创建一个名为
    `cells.py` 的新文件，并包含以下内容：
- en: '`# %%``3``+``4``# %% [markdown]``# # This is a Title``#``# Some markdown content`'
  id: totrans-340
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`# %%``3``+``4``# %% [markdown]``# # 这是一个标题``#``# 一些 markdown 内容`'
- en: Markdown cells need to start with `# %% [markdown]` and require the whole cell
    to be marked as comment. If you want to run such a file as notebook, click on
    the “Run Below” link that appears when you hover over the first cell. This will
    open up the Python Interactive Window to the right, as shown in [Figure B-4](#filepos1831240).
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: Markdown 单元格需要以 `# %% [markdown]` 开头，并要求整个单元格被标记为注释。如果您想将这样的文件作为笔记本运行，请在悬停在第一个单元格上时点击“下面运行”链接。这将打开右侧的
    Python 交互窗口，如 [图 B-4](#filepos1831240) 所示。
- en: '![](images/00074.jpg)'
  id: totrans-342
  prefs: []
  type: TYPE_IMG
  zh: '![](images/00074.jpg)'
- en: Figure B-4\. Python Interactive Window
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 图 B-4\. Python 交互窗口
- en: The Python Interactive Window is again shown as notebook. To export your file
    in the ipynb format, click the Save icon (Export as Jupyter notebook) at the top
    of the Python Interactive Window. The Python Interactive Window also offers you
    a cell at the bottom from where you can execute code interactively. Using regular
    Python files as opposed to Jupyter notebooks allows you to use the VS Code debugger
    and makes working with version control easier as output cells, which typically
    add a lot of noise between versions, are ignored.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: Python 交互窗口再次显示为笔记本。要以 ipynb 格式导出您的文件，请点击 Python 交互窗口顶部的保存图标（导出为 Jupyter 笔记本）。Python
    交互窗口还为您提供了一个底部单元格，您可以在其中交互执行代码。与 Jupyter 笔记本相比，使用常规 Python 文件允许您使用 VS Code 调试器，并使得与版本控制的工作更加轻松，因为输出单元格（通常在版本之间添加大量噪音）将被忽略。
- en: Appendix C. Advanced Python Concepts
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 附录 C. 高级 Python 概念
- en: 'In this appendix, we’re taking a closer look at the following three topics:
    classes and objects, time-zone-aware datetime objects, and mutable vs. immutable
    objects. The topics are independent of each other, so you may read them in any
    order.'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个附录中，我们将更详细地探讨以下三个主题：类和对象、时区感知日期时间对象以及可变 vs. 不可变对象。这些主题是相互独立的，因此您可以按任意顺序阅读它们。
- en: Classes and Objects
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 类和对象
- en: 'In this section, we will write our own class to get a better understanding
    of how classes and objects are related. Classes define new types of objects: a
    class behaves like a springform you use to bake a cake. Depending on the ingredients
    you use, you get a different cake, for example, a chocolate cake or a cheesecake.
    The process of getting a cake (the object) out of the springform (the class) is
    called instantiation, which is why objects are also called class instances. Whether
    chocolate or cheesecake, they are both a type of cake: classes allow you to define
    new data types that keep related data (attributes) and functions (methods) together
    and therefore help you to structure and organize your code. Let me now return
    to the car racing game example from [Chapter 3](index_split_010.html#filepos178328)
    to define our own class:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将编写自己的类以更好地理解类和对象之间的关系。类定义新的对象类型：类就像您用来烤蛋糕的烤盘。根据您使用的成分，您会得到不同的蛋糕，例如巧克力蛋糕或奶酪蛋糕。从烤模（类）中获取蛋糕（对象）的过程称为实例化，这也是为什么对象也称为类实例。无论是巧克力还是奶酪蛋糕，它们都是蛋糕的一种类型：类允许您定义保持相关数据（属性）和函数（方法）的新数据类型，并因此帮助您结构化和组织您的代码。现在让我回到来自[第三章](index_split_010.html#filepos178328)的汽车赛车游戏示例，以定义我们自己的类：
- en: '`In``[``1``]:``class``Car``:``def` `__init__``(``self``,``color``,``speed``=``0``):``self``.``color``=``color``self``.``speed``=``speed``def``accelerate``(``self``,``mph``):``self``.``speed``+=``mph`'
  id: totrans-349
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``1``]:``class``Car``:``def` `__init__``(``self``,``color``,``speed``=``0``):``self``.``color``=``color``self``.``speed``=``speed``def``accelerate``(``self``,``mph``):``self``.``speed``+=``mph`'
- en: 'This is a simple car class with two methods. Methods are functions that are
    part of a class definition. This class has one regular method called `accelerate`.
    This method will change the data (`speed`) of an instance of this class. It also
    has a special method that starts and ends with double underscores called `__init__`.
    It will be called automatically by Python when an object is initialized to attach
    some initial data to the object. The first argument of every method represents
    the instance of the class and is called `self` by convention. This will get clearer
    when you see how you use the `Car` class. First, let’s instantiate two cars. You
    are doing this in the same way as you are calling a function: call the class by
    adding parentheses and by providing the arguments of the `__init__` method. You
    never provide anything for `self`, as Python will take care of that. In this sample,
    `self` will be `car1` or `car2`, respectively:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的汽车类，有两个方法。方法是类定义的一部分的函数。这个类有一个普通方法叫做 `accelerate`。这个方法会改变一个类实例的数据（`speed`）。它还有一个以双下划线开始和结束的特殊方法叫做
    `__init__`。当对象初始化时，Python 会自动调用它来附加一些初始数据到对象上。每个方法的第一个参数代表类的实例，按照约定称为 `self`。当你看到如何使用
    `Car` 类时，这将更清楚。首先，让我们实例化两辆汽车。你可以像调用函数一样调用类：通过添加括号并提供 `__init__` 方法的参数。你从不为 `self`
    提供任何内容，因为 Python 会处理。在本示例中，`self` 将分别是 `car1` 或 `car2`：
- en: '`In``[``2``]:``# Let''s instantiate two car objects``car1``=``Car``(``"red"``)``car2``=``Car``(``color``=``"blue"``)`'
  id: totrans-351
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``2``]:``# 让我们实例化两个汽车对象``car1``=``Car``(``"red"``)``car2``=``Car``(``color``=``"blue"``)`'
- en: 'When you call a class, you are really calling the `__init__` function, which
    is why everything with regard to function arguments applies here as well: for
    `car1`, we provide the argument as positional argument, while for `car2`, we are
    using keyword arguments. After instantiating the two car objects from the `Car`
    class, we’ll have a look at their attributes and call their methods. As we will
    see, after accelerating `car1`, the speed of `car1` is changed, but it is unchanged
    for `car2` as the two objects are independent of each other:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 当你调用一个类时，实际上是在调用 `__init__` 函数，这就是为什么函数参数的一切都适用于此处：对于 `car1`，我们将参数作为位置参数提供，而对于
    `car2`，我们使用关键字参数。在从 `Car` 类实例化两个汽车对象之后，我们将查看它们的属性并调用它们的方法。正如我们将看到的那样，在加速 `car1`
    后，`car1` 的速度改变了，但对于 `car2` 则保持不变，因为这两个对象是彼此独立的：
- en: '`In``[``3``]:``# By default, an object prints its memory location``car1`'
  id: totrans-353
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``3``]:``# 默认情况下，对象打印其内存位置``car1`'
- en: '`Out[3]: <__main__.Car at 0x7fea812e3890>`'
  id: totrans-354
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[3]: <__main__.Car at 0x7fea812e3890>`'
- en: '`In``[``4``]:``# Attributes give you access to the data of an object``car1``.``color`'
  id: totrans-355
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``4``]:``# 属性允许您访问对象的数据``car1``.``color`'
- en: '`Out[4]: ''red''`'
  id: totrans-356
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[4]: ''red''`'
- en: '`In``[``5``]:``car1``.``speed`'
  id: totrans-357
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``5``]:``car1``.``speed`'
- en: '`Out[5]: 0`'
  id: totrans-358
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[5]: 0`'
- en: '`In``[``6``]:``# Calling the accelerate method on car1``car1``.``accelerate``(``20``)`'
  id: totrans-359
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``6``]:``# 调用 car1 上的加速方法``car1``.``accelerate``(``20``)`'
- en: '`In``[``7``]:``# The speed attribute of car1 changed``car1``.``speed`'
  id: totrans-360
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``7``]:``# car1的速度属性发生了变化``car1``.``speed``'
- en: '`Out[7]: 20`'
  id: totrans-361
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[7]: 20`'
- en: '`In``[``8``]:``# The speed attribute of car2 remained the same``car2``.``speed`'
  id: totrans-362
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``8``]:``# car2的速度属性保持不变``car2``.``speed``'
- en: '`Out[8]: 0`'
  id: totrans-363
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[8]: 0`'
- en: 'Python also allows you to change attributes directly without having to use
    methods:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: Python还允许您直接更改属性，而无需使用方法：
- en: '`In``[``9``]:``car1``.``color``=``"green"`'
  id: totrans-365
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``9``]:``car1``.``color``=``"green"``'
- en: '`In``[``10``]:``car1``.``color`'
  id: totrans-366
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``10``]:``car1``.``color``'
- en: '`Out[10]: ''green''`'
  id: totrans-367
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[10]: ''green''`'
- en: '`In``[``11``]:``car2``.``color``# unchanged`'
  id: totrans-368
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``11``]:``car2``.``color``# 未更改`'
- en: '`Out[11]: ''blue''`'
  id: totrans-369
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[11]: ''blue''`'
- en: 'To summarize: classes define the attributes and methods of objects. Classes
    allow you to group related functions (“methods”) and data (“attributes”) together
    so that they can conveniently be accessed via dot notation: `myobject.attribute`
    or `myobject.method()`.'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '总结一下: 类定义了对象的属性和方法。类允许您将相关的函数（“方法”）和数据（“属性”）组合在一起，以便可以通过点表示法方便地访问它们: `myobject.attribute`或
    `myobject.method()`。'
- en: Working with Time-Zone-Aware datetime Objects
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 使用时区感知的datetime对象
- en: 'In [Chapter 3](index_split_010.html#filepos178328), we briefly looked at time-zone-naive
    `datetime` objects. If time zone is of importance, you usually work in the UTC
    time zone and only transform to local time zones for display purposes. UTC stands
    for Coordinated Universal Time and is the successor of Greenwich Mean Time (GMT).
    When you work with Excel and Python, you may want to turn naive timestamps, as
    delivered by Excel, into time-zone-aware `datetime` objects. For time-zone support
    in Python, you can use the dateutil package, which isn’t part of the standard
    library but comes preinstalled with Anaconda. The following samples show a few
    common operations when working with `datetime` objects and time zones:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第3章](index_split_010.html#filepos178328)中，我们简要介绍了无时区感知的datetime对象。如果时区很重要，通常在UTC时区中工作，仅在显示目的时转换为本地时区。UTC代表协调世界时，是格林威治平均时间（GMT）的后继者。在使用Excel和Python时，您可能希望将Excel提供的无时区时间戳转换为时区感知的datetime对象。在Python中支持时区时，可以使用dateutil包，它不是标准库的一部分，但已预装在Anaconda中。以下示例展示了在处理datetime对象和时区时的几种常见操作：
- en: '`In``[``12``]:``import``datetime``as``dt``from``dateutil``import``tz`'
  id: totrans-373
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``12``]:``import``datetime``as``dt``from``dateutil``import``tz``'
- en: '`In``[``13``]:``# Time-zone-naive datetime object``timestamp``=``dt``.``datetime``(``2020``,``1``,``31``,``14``,``30``)``timestamp``.``isoformat``()`'
  id: totrans-374
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``13``]:``# 无时区的datetime对象``timestamp``=``dt``.``datetime``(``2020``,``1``,``31``,``14``,``30``)``timestamp``.``isoformat``()``'
- en: '`Out[13]: ''2020-01-31T14:30:00''`'
  id: totrans-375
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[13]: ''2020-01-31T14:30:00''`'
- en: '`In``[``14``]:``# Time-zone-aware datetime object``timestamp_eastern``=``dt``.``datetime``(``2020``,``1``,``31``,``14``,``30``,``tzinfo``=``tz``.``gettz``(``"US/Eastern"``))``#
    Printing in isoformat makes it easy to``# see the offset from UTC``timestamp_eastern``.``isoformat``()`'
  id: totrans-376
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``14``]:``# 时区感知的datetime对象``timestamp_eastern``=``dt``.``datetime``(``2020``,``1``,``31``,``14``,``30``,``tzinfo``=``tz``.``gettz``(``"US/Eastern"``))``#
    使用isoformat打印使其易于``# 看出与UTC的偏移``timestamp_eastern``.``isoformat``()``'
- en: '`Out[14]: ''2020-01-31T14:30:00-05:00''`'
  id: totrans-377
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[14]: ''2020-01-31T14:30:00-05:00''`'
- en: '`In``[``15``]:``# Assign a time zone to a naive datetime object``timestamp_eastern``=``timestamp``.``replace``(``tzinfo``=``tz``.``gettz``(``"US/Eastern"``))``timestamp_eastern``.``isoformat``()`'
  id: totrans-378
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``15``]:``# 将时区分配给无时区的datetime对象``timestamp_eastern``=``timestamp``.``replace``(``tzinfo``=``tz``.``gettz``(``"US/Eastern"``))``timestamp_eastern``.``isoformat``()`'
- en: '`Out[15]: ''2020-01-31T14:30:00-05:00''`'
  id: totrans-379
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[15]: ''2020-01-31T14:30:00-05:00''`'
- en: '`In``[``16``]:``# Convert from one time zone to another.``# Since the UTC time
    zone is so common,``# there is a shortcut: tz.UTC``timestamp_utc``=``timestamp_eastern``.``astimezone``(``tz``.``UTC``)``timestamp_utc``.``isoformat``()`'
  id: totrans-380
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``16``]:``# 从一个时区转换到另一个时区。``# 由于UTC时区非常常见，``# 这里有一个快捷方式: tz.UTC``timestamp_utc``=``timestamp_eastern``.``astimezone``(``tz``.``UTC``)``timestamp_utc``.``isoformat``()`'
- en: '`Out[16]: ''2020-01-31T19:30:00+00:00''`'
  id: totrans-381
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[16]: ''2020-01-31T19:30:00+00:00''`'
- en: '`In``[``17``]:``# From time-zone-aware to naive``timestamp_eastern``.``replace``(``tzinfo``=``None``)`'
  id: totrans-382
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``17``]:``# 从时区感知到无时区``timestamp_eastern``.``replace``(``tzinfo``=``None``)`'
- en: '`Out[17]: datetime.datetime(2020, 1, 31, 14, 30)`'
  id: totrans-383
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[17]: datetime.datetime(2020, 1, 31, 14, 30)`'
- en: '`In``[``18``]:``# Current time without time zone``dt``.``datetime``.``now``()`'
  id: totrans-384
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``18``]:``# 当前没有时区的时间``dt``.``datetime``.``now``()``'
- en: '`Out[18]: datetime.datetime(2021, 1, 3, 11, 18, 37, 172170)`'
  id: totrans-385
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[18]: datetime.datetime(2021, 1, 3, 11, 18, 37, 172170)``'
- en: '`In``[``19``]:``# Current time in UTC time zone``dt``.``datetime``.``now``(``tz``.``UTC``)`'
  id: totrans-386
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``19``]:``# 当前UTC时区时间``dt``.``datetime``.``now``(``tz``.``UTC``)`'
- en: '`Out[19]: datetime.datetime(2021, 1, 3, 10, 18, 37, 176299, tzinfo=tzutc())`'
  id: totrans-387
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[19]: datetime.datetime(2021, 1, 3, 10, 18, 37, 176299, tzinfo=tzutc())`'
- en: TIME ZONES WITH PYTHON 3.9
  id: totrans-388
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用Python 3.9处理时区
- en: 'Python 3.9 added proper time zone support to the standard library in the form
    of the `timezone` module. Use it to replace the `tz.gettz` calls from `dateutil`:'
  id: totrans-389
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Python 3.9在标准库中以`timezone`模块的形式添加了适当的时区支持。使用它替换来自`dateutil`的`tz.gettz`调用：
- en: '`from``zoneinfo``import``ZoneInfo``timestamp_eastern``=``dt``.``datetime``(``2020``,``1``,``31``,``14``,``30``,``tzinfo``=``ZoneInfo``(``"US/Eastern"``))`'
  id: totrans-390
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`from``zoneinfo``import``ZoneInfo``timestamp_eastern``=``dt``.``datetime``(``2020``,``1``,``31``,``14``,``30``,``tzinfo``=``ZoneInfo``(``"US/Eastern"``))`'
- en: Mutable vs. Immutable Python Objects
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: Python中的可变与不可变对象
- en: In Python, objects that can change their values are called mutable and those
    that can’t are called immutable. [Table C-1](#filepos1865771) shows how the different
    data types qualify.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中，可以更改其值的对象称为可变对象，而不能更改的称为不可变对象。[表C-1](#filepos1865771)展示了不同数据类型的分类方式。
- en: Table C-1\. Mutable and immutable data types
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 表C-1\. 可变和不可变数据类型
- en: '|  Mutability  |  Data Types  |'
  id: totrans-394
  prefs: []
  type: TYPE_TB
  zh: '|  可变性  |  数据类型  |'
- en: '|  mutable  |  lists, dictionaries, sets  |'
  id: totrans-395
  prefs: []
  type: TYPE_TB
  zh: '|  可变  |  列表、字典、集合  |'
- en: '|  immutable  |  integers, floats, booleans, strings, datetime, tuples  |'
  id: totrans-396
  prefs: []
  type: TYPE_TB
  zh: '|  不可变  |  整数、浮点数、布尔值、字符串、日期时间、元组  |'
- en: 'Knowing about the difference is important as mutable objects may behave differently
    from what you are used to from other languages, including VBA. Have a look at
    the following VBA snippet:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 了解这种差异很重要，因为可变对象的行为可能与您从其他语言（包括VBA）中习惯的行为不同。看一下以下的VBA片段：
- en: '`Dim``a``As``Variant``,``b``As``Variant``a``=``Array``(``1``,``2``,``3``)``b``=``a``a``(``1``)``=``22``Debug``.``Print``a``(``0``)``&``",
    "``&``a``(``1``)``&``", "``&``a``(``2``)``Debug``.``Print``b``(``0``)``&``", "``&``b``(``1``)``&``",
    "``&``b``(``2``)`'
  id: totrans-398
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Dim``a``As``Variant``,``b``As``Variant``a``=``Array``(``1``,``2``,``3``)``b``=``a``a``(``1``)``=``22``Debug``.``Print``a``(``0``)``&``",
    "``&``a``(``1``)``&``", "``&``a``(``2``)``Debug``.``Print``b``(``0``)``&``", "``&``b``(``1``)``&``",
    "``&``b``(``2``)`'
- en: 'This prints the following:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印以下内容：
- en: '`1, 22, 3 1, 2, 3`'
  id: totrans-400
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`1, 22, 3 1, 2, 3`'
- en: 'Now let’s do the same example in Python with a list:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们用一个列表在Python中做同样的例子：
- en: '`In``[``20``]:``a``=``[``1``,``2``,``3``]``b``=``a``a``[``1``]``=``22``print``(``a``)``print``(``b``)`'
  id: totrans-402
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``20``]:``a``=``[``1``,``2``,``3``]``b``=``a``a``[``1``]``=``22``print``(``a``)``print``(``b``)``'
- en: '`[1, 22, 3] [1, 22, 3]`'
  id: totrans-403
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`[1, 22, 3] [1, 22, 3]`'
- en: 'What happened here? In Python, variables are names that you “attach” to an
    object. By doing `b = a`, you attach both names to the same object, the list `[1,
    2, 3]`. All variables attached to that object will, therefore, show the changes
    to the list. This only happens with mutable objects, though: if you would replace
    the list with an immutable object like a tuple, changing `a` would not change
    `b`. If you want a mutable object like `b` to be independent of changes in `a`,
    you have to explicitly copy the list:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里发生了什么？在Python中，变量是“附加”到对象的名称。通过`b = a`，您将两个名称都附加到同一个对象上，即列表`[1, 2, 3]`。因此，附加到该对象的所有变量将显示列表的更改。但这仅适用于可变对象：如果用不可变对象（如元组）替换列表，修改`a`不会影响`b`。如果希望像`b`这样的可变对象独立于`a`的更改，则必须显式地复制列表：
- en: '`In``[``21``]:``a``=``[``1``,``2``,``3``]``b``=``a``.``copy``()`'
  id: totrans-405
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``21``]:``a``=``[``1``,``2``,``3``]``b``=``a``.``copy``()``'
- en: '`In``[``22``]:``a`'
  id: totrans-406
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``22``]:``a``'
- en: '`Out[22]: [1, 2, 3]`'
  id: totrans-407
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[22]: [1, 2, 3]`'
- en: '`In``[``23``]:``b`'
  id: totrans-408
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``23``]:``b``'
- en: '`Out[23]: [1, 2, 3]`'
  id: totrans-409
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[23]: [1, 2, 3]`'
- en: '`In``[``24``]:``a``[``1``]``=``22``# Changing "a"...`'
  id: totrans-410
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``24``]:``a``[``1``]``=``22``# 修改 "a"...'
- en: '`In``[``25``]:``a`'
  id: totrans-411
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``25``]:``a``'
- en: '`Out[25]: [1, 22, 3]`'
  id: totrans-412
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[25]: [1, 22, 3]`'
- en: '`In``[``26``]:``b``# ...doesn''t affect "b"`'
  id: totrans-413
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``26``]:``b``# ...不会影响 "b"``'
- en: '`Out[26]: [1, 2, 3]`'
  id: totrans-414
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[26]: [1, 2, 3]`'
- en: 'By using a list’s `copy` method, you are creating a shallow copy: you will
    get a copy of the list, but if the list contains mutable elements, these will
    still be shared. If you want to copy all elements recursively, you need to make
    a deep copy by using the `copy` module from the standard library:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用列表的`copy`方法，您创建的是浅拷贝：您会得到列表的一个副本，但如果列表包含可变元素，则这些元素仍然是共享的。如果您想递归地复制所有元素，则需要使用标准库中的`copy`模块进行深拷贝：
- en: '`In``[``27``]:``import``copy``b``=``copy``.``deepcopy``(``a``)`'
  id: totrans-416
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``27``]:``import``copy``b``=``copy``.``deepcopy``(``a``)``'
- en: Let’s now look at what happens when you use mutable objects as function arguments.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看当您将可变对象用作函数参数时会发生什么。
- en: Calling Functions with Mutable Objects as Arguments
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 调用带有可变对象作为参数的函数
- en: 'If you come from VBA, you are probably used to marking function arguments as
    pass-by-reference (`ByRef`) or pass-by-value (`ByVal`): when you pass a variable
    to a function as argument, the function will have the ability to change it (`ByRef`)
    or will work on a copy of the values (`ByVal`), thus leaving the original variable
    untouched. `ByRef` is the default in VBA. Consider the following function in VBA:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您来自VBA，您可能习惯于将函数参数标记为传递引用(`ByRef`)或传递值(`ByVal`)：当您将变量作为参数传递给函数时，函数将具有更改它(`ByRef`)或将在值的副本上工作(`ByVal`)的能力，从而保留原始变量不变。`ByRef`是VBA中的默认值。考虑以下VBA中的函数：
- en: '`Function``increment``(``ByRef``x``As``Integer``)``As``Integer``x``=``x``+``1``increment``=``x``End``Function`'
  id: totrans-420
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Function``increment``(``ByRef``x``As``Integer``)``As``Integer``x``=``x``+``1``increment``=``x``End``Function`'
- en: 'Then, call the function like this:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，像这样调用函数：
- en: '`Sub``call_increment``()``Dim``a``As``Integer``a``=``1``Debug``.``Print``increment``(``a``)``Debug``.``Print``a``End``Sub`'
  id: totrans-422
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Sub``call_increment``()``Dim``a``As``Integer``a``=``1``Debug``.``Print``increment``(``a``)``Debug``.``Print``a``End``Sub`'
- en: 'This will print the following:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印如下内容：
- en: '`2 2`'
  id: totrans-424
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`2 2`'
- en: 'However, if you change `ByRef` in the `increment` function to `ByVal`, it will
    print:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果您将`increment`函数中的`ByRef`更改为`ByVal`，它将打印：
- en: '`2 1`'
  id: totrans-426
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`2 1`'
- en: 'How does this work in Python? When you pass around variables, you pass around
    names that point to objects. This means that the behavior depends on whether the
    object is mutable or not. Let’s first use an immutable object:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 这在Python中是如何工作的？当您传递变量时，您传递指向对象的名称。这意味着行为取决于对象是否可变。让我们首先使用不可变对象：
- en: '`In``[``28``]:``def``increment``(``x``):``x``=``x``+``1``return``x`'
  id: totrans-428
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``28``]:``def``increment``(``x``):``x``=``x``+``1``return``x`'
- en: '`In``[``29``]:``a``=``1``print``(``increment``(``a``))``print``(``a``)`'
  id: totrans-429
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``29``]:``a``=``1``print``(``increment``(``a``))``print``(``a``)`'
- en: '`2 1`'
  id: totrans-430
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`2 1`'
- en: 'Now let’s repeat the sample with a mutable object:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用可变对象重复示例：
- en: '`In``[``30``]:``def``increment``(``x``):``x``[``0``]``=``x``[``0``]``+``1``return``x`'
  id: totrans-432
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``30``]:``def``increment``(``x``):``x``[``0``]``=``x``[``0``]``+``1``return``x`'
- en: '`In``[``31``]:``a``=``[``1``]``print``(``increment``(``a``))``print``(``a``)`'
  id: totrans-433
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``31``]:``a``=``[``1``]``print``(``increment``(``a``))``print``(``a``)`'
- en: '`[2] [2]`'
  id: totrans-434
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`[2] [2]`'
- en: 'If the object is mutable and you would like to leave the original object unchanged,
    you will need to pass in a copy of the object:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对象是可变的，并且您希望保留原始对象不变，则需要传入对象的副本：
- en: '`In``[``32``]:``a``=``[``1``]``print``(``increment``(``a``.``copy``()))``print``(``a``)`'
  id: totrans-436
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``32``]:``a``=``[``1``]``print``(``increment``(``a``.``copy``()))``print``(``a``)`'
- en: '`[2] [1]`'
  id: totrans-437
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`[2] [1]`'
- en: Another case to watch out for is the use of mutable objects as default arguments
    in function definitions—let’s see why!
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个要注意的情况是在函数定义中使用可变对象作为默认参数的情况——让我们看看为什么！
- en: Functions with Mutable Objects as Default Arguments
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 函数中的可变对象作为默认参数
- en: 'When you write functions, you normally shouldn’t use mutable objects as default
    arguments. The reason is that the value of default arguments is evaluated only
    once as part of the function definition, not every time when the function is called.
    Therefore, using mutable objects as default arguments can lead to unexpected behavior:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 编写函数时，通常不应将可变对象用作默认参数。原因是默认参数的值仅在函数定义时评估一次，而不是在每次调用函数时。因此，将可变对象用作默认参数可能会导致意外行为：
- en: '`In``[``33``]:``# Don''t do this:``def``add_one``(``x``=``[]):``x``.``append``(``1``)``return``x`'
  id: totrans-441
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``33``]:``# 不要这样做：``def``add_one``(``x``=``[]):``x``.``append``(``1``)``return``x`'
- en: '`In``[``34``]:``add_one``()`'
  id: totrans-442
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``34``]:``add_one``()`'
- en: '`Out[34]: [1]`'
  id: totrans-443
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[34]: [1]`'
- en: '`In``[``35``]:``add_one``()`'
  id: totrans-444
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``35``]:``add_one``()`'
- en: '`Out[35]: [1, 1]`'
  id: totrans-445
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[35]: [1, 1]`'
- en: 'If you want to use an empty list as a default argument, do this instead:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用空列表作为默认参数，请改用以下方法代替：
- en: '`In``[``36``]:``def``add_one``(``x``=``None``):``if``x``is``None``:``x``=``[]``x``.``append``(``1``)``return``x`'
  id: totrans-447
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``36``]:``def``add_one``(``x``=``None``):``if``x``is``None``:``x``=``[]``x``.``append``(``1``)``return``x`'
- en: '`In``[``37``]:``add_one``()`'
  id: totrans-448
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``37``]:``add_one``()`'
- en: '`Out[37]: [1]`'
  id: totrans-449
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[37]: [1]`'
- en: '`In``[``38``]:``add_one``()`'
  id: totrans-450
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`In``[``38``]:``add_one``()`'
- en: '`Out[38]: [1]`'
  id: totrans-451
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`Out[38]: [1]`'
- en: Index
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 索引
- en: Symbols
  id: totrans-453
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 符号
- en: '%%time cell magic, [Reading sheets in parallel](index_split_022.html#filepos1147874)'
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '%%time单元格魔法，[并行读取工作表](index_split_022.html#filepos1147874)'
- en: '%%timeit cell magic, [Reading sheets in parallel](index_split_022.html#filepos1148960)'
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '%%timeit单元格魔法，[并行读取工作表](index_split_022.html#filepos1148960)'
- en: A
  id: totrans-456
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: A
- en: absolute paths, [Anaconda Prompt](index_split_008.html#filepos112263), [Backend](index_split_027.html#filepos1638593)
  id: totrans-457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绝对路径，[Anaconda Prompt](index_split_008.html#filepos112263)，[Backend](index_split_027.html#filepos1638593)
- en: activating Conda environments, [Create a New Conda Environment](index_split_029.html#filepos1815162)
  id: totrans-458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 激活Conda环境，[创建新的Conda环境](index_split_029.html#filepos1815162)
- en: ActiveX controls, [Cross-Platform Compatibility](index_split_007.html#filepos92381),
    [RunPython Function](index_split_026.html#filepos1464639)
  id: totrans-459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ActiveX 控件，[跨平台兼容性](index_split_007.html#filepos92381)，[RunPython 函数](index_split_026.html#filepos1464639)
- en: Activity Bar (VS Code), [Installation and Configuration](index_split_009.html#filepos161361)
  id: totrans-460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 活动栏（VS Code），[安装和配置](index_split_009.html#filepos161361)
- en: add-ins (Excel)
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插件（Excel）
- en: 'custom, [Standalone Workbooks: Getting Rid of the xlwings Add-in](index_split_026.html#filepos1477721),
    [UDF Quickstart](index_split_028.html#filepos1678327)'
  id: totrans-462
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义，[独立工作簿：摆脱 xlwings Add-in](index_split_026.html#filepos1477721)，[UDF 快速入门](index_split_028.html#filepos1678327)
- en: installing xlwings, [Excel Add-in](index_split_026.html#filepos1442113)-[Excel
    Add-in](index_split_026.html#filepos1447961)
  id: totrans-463
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 xlwings，[Excel Add-in](index_split_026.html#filepos1442113)-[Excel Add-in](index_split_026.html#filepos1447961)
- en: adding
  id: totrans-464
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加
- en: columns to DataFrame, [Setting data by adding a new column](index_split_015.html#filepos592331)
  id: totrans-465
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列到 DataFrame，[通过添加新列设置数据](index_split_015.html#filepos592331)
- en: elements to lists, [Lists](index_split_011.html#filepos256618)
  id: totrans-466
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元素到列表，[列表](index_split_011.html#filepos256618)
- en: packages to Python Package Tracker, [What We Will Build](index_split_027.html#filepos1489144)-[What
    We Will Build](index_split_027.html#filepos1492009)
  id: totrans-467
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 包追踪器中的包，[我们将构建的内容](index_split_027.html#filepos1489144)-[我们将构建的内容](index_split_027.html#filepos1492009)
- en: add_package function (Python Package Tracker) example, [Backend](index_split_027.html#filepos1621394)-[Backend](index_split_027.html#filepos1633823)
  id: totrans-468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: add_package 函数（Python 包追踪器）示例，[后端](index_split_027.html#filepos1621394)-[后端](index_split_027.html#filepos1633823)
- en: agg method (pandas), [Grouping](index_split_016.html#filepos698880)
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: agg 方法（pandas），[分组](index_split_016.html#filepos698880)
- en: aggfunc function (pandas), [Pivoting and Melting](index_split_016.html#filepos708364)
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: aggfunc 函数（pandas），[数据透视和溶解](index_split_016.html#filepos708364)
- en: aliases for modules, [Modules and the import Statement](index_split_012.html#filepos388542)
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块的别名，[模块和 import 语句](index_split_012.html#filepos388542)
- en: Altair, [Plotly](index_split_016.html#filepos739626)
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Altair，[Plotly](index_split_016.html#filepos739626)
- en: Anaconda
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda
- en: components of, [Development Environment](index_split_008.html#filepos98339)
  id: totrans-474
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组成部分，[开发环境](index_split_008.html#filepos98339)
- en: Conda (see Conda)
  id: totrans-475
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Conda（参见 Conda）
- en: installing, [Installation](index_split_008.html#filepos99940)-[Installation](index_split_008.html#filepos101307)
  id: totrans-476
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装，[安装](index_split_008.html#filepos99940)-[安装](index_split_008.html#filepos101307)
- en: purpose of, [Development Environment](index_split_008.html#filepos97439)
  id: totrans-477
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[开发环境](index_split_008.html#filepos97439)
- en: Anaconda Prompt
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda Prompt
- en: commands, list of, [Anaconda Prompt](index_split_008.html#filepos106145)
  id: totrans-479
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令列表，[Anaconda Prompt](index_split_008.html#filepos106145)
- en: interactive Python session
  id: totrans-480
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交互式 Python 会话
- en: 'ending, [Python REPL: An Interactive Python Session](index_split_008.html#filepos118780)'
  id: totrans-481
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结束，[Python REPL：交互式 Python 会话](index_split_008.html#filepos118780)
- en: 'starting, [Python REPL: An Interactive Python Session](index_split_008.html#filepos115018)-[Python
    REPL: An Interactive Python Session](index_split_008.html#filepos118983)'
  id: totrans-482
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始，[Python REPL：交互式 Python 会话](index_split_008.html#filepos115018)-[Python REPL：交互式
    Python 会话](index_split_008.html#filepos118983)
- en: long file paths, [Running a Python Script](index_split_009.html#filepos170243)
  id: totrans-483
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 长文件路径，[运行 Python 脚本](index_split_009.html#filepos170243)
- en: 'notation, [Python REPL: An Interactive Python Session](index_split_008.html#filepos116148)'
  id: totrans-484
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注释，[Python REPL：交互式 Python 会话](index_split_008.html#filepos116148)
- en: operational overview, [Anaconda Prompt](index_split_008.html#filepos101486)-[Anaconda
    Prompt](index_split_008.html#filepos114837)
  id: totrans-485
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作概述，[Anaconda Prompt](index_split_008.html#filepos101486)-[Anaconda Prompt](index_split_008.html#filepos114837)
- en: purpose of, [Development Environment](index_split_008.html#filepos97588)
  id: totrans-486
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[开发环境](index_split_008.html#filepos97588)
- en: Python scripts, running, [Running a Python Script](index_split_009.html#filepos168744)
  id: totrans-487
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 脚本，运行，[运行 Python 脚本](index_split_009.html#filepos168744)
- en: running
  id: totrans-488
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行
- en: in macOS, [Anaconda Prompt](index_split_008.html#filepos104346)
  id: totrans-489
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 macOS 中，[Anaconda Prompt](index_split_008.html#filepos104346)
- en: in Windows, [Anaconda Prompt](index_split_008.html#filepos103402)
  id: totrans-490
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 中，[Anaconda Prompt](index_split_008.html#filepos103402)
- en: VS Code, running, [Running a Python Script](index_split_009.html#filepos165226)
  id: totrans-491
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VS Code，运行，[运行 Python 脚本](index_split_009.html#filepos165226)
- en: xlwings CLI
  id: totrans-492
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings CLI
- en: addin install command, [Excel Add-in](index_split_026.html#filepos1442590)
  id: totrans-493
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: addin install 命令，[Excel Add-in](index_split_026.html#filepos1442590)
- en: purpose of, [Excel Add-in](index_split_026.html#filepos1444887)
  id: totrans-494
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[Excel Add-in](index_split_026.html#filepos1444887)
- en: quickstart command, [Quickstart Command](index_split_026.html#filepos1448302)
  id: totrans-495
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速启动命令，[快速启动命令](index_split_026.html#filepos1448302)
- en: antivirus software, xlwings installation and, [Excel Add-in](index_split_026.html#filepos1444759)
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 杀毒软件，xlwings 安装与，[Excel Add-in](index_split_026.html#filepos1444759)
- en: APIs (application programming interfaces), [Web APIs](index_split_027.html#filepos1492910)
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序编程接口（API），[Web API](index_split_027.html#filepos1492910)
- en: app object (xlwings), [The Excel Object Model](index_split_024.html#filepos1252360),
    [The Excel Object Model](index_split_024.html#filepos1296280), [App properties](index_split_025.html#filepos1428002)
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用对象（xlwings），[Excel 对象模型](index_split_024.html#filepos1252360)，[Excel 对象模型](index_split_024.html#filepos1296280)，[应用属性](index_split_025.html#filepos1428002)
- en: append method (OpenPyXL), [Writing with OpenPyXL](index_split_022.html#filepos1126427)
  id: totrans-499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 追加方法（OpenPyXL），[使用 OpenPyXL 进行写入](index_split_022.html#filepos1126427)
- en: AppleScript, [xlwings Foundations](index_split_025.html#filepos1411927)
  id: totrans-500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AppleScript，[xlwings 基础](index_split_025.html#filepos1411927)
- en: application programming interfaces (APIs), [Web APIs](index_split_027.html#filepos1492910)
  id: totrans-501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序编程接口（API），[Web API](index_split_027.html#filepos1492910)
- en: application structure (Python Package Tracker), [Application Structure](index_split_027.html#filepos1601418)
  id: totrans-502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用结构（Python 包追踪器），[应用结构](index_split_027.html#filepos1601418)
- en: backend, [Backend](index_split_027.html#filepos1620020)-[Backend](index_split_027.html#filepos1644241)
  id: totrans-503
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端，[后端](index_split_027.html#filepos1620020)-[后端](index_split_027.html#filepos1644241)
- en: debugging, [Debugging](index_split_027.html#filepos1644656)-[Debugging](index_split_027.html#filepos1651460)
  id: totrans-504
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试，[调试](index_split_027.html#filepos1644656)-[调试](index_split_027.html#filepos1651460)
- en: frontend, [Frontend](index_split_027.html#filepos1606230)-[Frontend](index_split_027.html#filepos1619827)
  id: totrans-505
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前端，[前端](index_split_027.html#filepos1606230)-[前端](index_split_027.html#filepos1619827)
- en: applications, layers of, [Separation of concerns](index_split_007.html#filepos41940)-[Separation
    of concerns](index_split_007.html#filepos45911)
  id: totrans-506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序，层次结构，[关注点分离](index_split_007.html#filepos41940)-[关注点分离](index_split_007.html#filepos45911)
- en: applymap method (pandas), [Applying a Function](index_split_015.html#filepos641087)-[Applying
    a Function](index_split_015.html#filepos649303)
  id: totrans-507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: applymap 方法（pandas），[应用函数](index_split_015.html#filepos641087)-[应用函数](index_split_015.html#filepos649303)
- en: arange function (NumPy), [Useful Array Constructors](index_split_014.html#filepos471142)
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: arange 函数（NumPy），[有用的数组构造函数](index_split_014.html#filepos471142)
- en: argument decorators (xlwings), [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1687455),
    [The Sub Decorator](index_split_028.html#filepos1801826)
  id: totrans-509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数装饰器（xlwings），[处理数据框和动态数组](index_split_028.html#filepos1687455)，[子装饰器](index_split_028.html#filepos1801826)
- en: arguments, mutable objects as, [Calling Functions with Mutable Objects as Arguments](index_split_031.html#filepos1882799)-[Functions
    with Mutable Objects as Default Arguments](index_split_031.html#filepos1900058)
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参数，作为可变对象，[将可变对象作为参数调用函数](index_split_031.html#filepos1882799)-[将可变对象作为默认参数的函数](index_split_031.html#filepos1900058)
- en: arithmetic operations
  id: totrans-511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 算术运算
- en: on DataFrames, [Arithmetic Operations](index_split_015.html#filepos617369)-[Arithmetic
    Operations](index_split_015.html#filepos633672)
  id: totrans-512
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在数据框上，[算术运算](index_split_015.html#filepos617369)-[算术运算](index_split_015.html#filepos633672)
- en: on NumPy arrays, [Vectorization and Broadcasting](index_split_014.html#filepos448254)-[Vectorization
    and Broadcasting](index_split_014.html#filepos453983)
  id: totrans-513
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 NumPy 数组上，[向量化和广播](index_split_014.html#filepos448254)-[向量化和广播](index_split_014.html#filepos453983)
- en: arithmetic operators (pandas), corresponding methods for, [Arithmetic Operations](index_split_015.html#filepos625775)
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 算术运算符（pandas），对应方法，[算术运算](index_split_015.html#filepos625775)
- en: array ranges, [Useful Array Constructors](index_split_014.html#filepos471142)
  id: totrans-515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数组范围，[有用的数组构造函数](index_split_014.html#filepos471142)
- en: array-based formulas (xlwings), [Minimize cross-application calls](index_split_028.html#filepos1764379)
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于数组的公式（xlwings），[最小化跨应用程序调用](index_split_028.html#filepos1764379)
- en: arrays (NumPy)
  id: totrans-517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数组（NumPy）
- en: broadcasting, [Vectorization and Broadcasting](index_split_014.html#filepos451025)-[Vectorization
    and Broadcasting](index_split_014.html#filepos453983)
  id: totrans-518
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广播，[向量化和广播](index_split_014.html#filepos451025)-[向量化和广播](index_split_014.html#filepos453983)
- en: constructors, [Useful Array Constructors](index_split_014.html#filepos470880)
  id: totrans-519
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构造函数，[有用的数组构造函数](index_split_014.html#filepos470880)
- en: data analysis issues in, [Conclusion](index_split_014.html#filepos481110)
  id: totrans-520
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据分析问题，[结论](index_split_014.html#filepos481110)
- en: data types, [NumPy Array](index_split_014.html#filepos445451)-[NumPy Array](index_split_014.html#filepos447897)
  id: totrans-521
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据类型，[NumPy 数组](index_split_014.html#filepos445451)-[NumPy 数组](index_split_014.html#filepos447897)
- en: getting and setting elements, [Getting and Setting Array Elements](index_split_014.html#filepos463404)-[Getting
    and Setting Array Elements](index_split_014.html#filepos470575)
  id: totrans-522
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取和设置元素，[获取和设置数组元素](index_split_014.html#filepos463404)-[获取和设置数组元素](index_split_014.html#filepos470575)
- en: operational overview, [NumPy Array](index_split_014.html#filepos434881)-[NumPy
    Array](index_split_014.html#filepos448083)
  id: totrans-523
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行概览，[NumPy 数组](index_split_014.html#filepos434881)-[NumPy 数组](index_split_014.html#filepos448083)
- en: universal functions (ufuncs), [Universal Functions (ufunc)](index_split_014.html#filepos454337)-[Universal
    Functions (ufunc)](index_split_014.html#filepos462582)
  id: totrans-524
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通用函数 (ufuncs)，[通用函数 (ufunc)](index_split_014.html#filepos454337)-[通用函数 (ufunc)](index_split_014.html#filepos462582)
- en: vectorization, [Vectorization and Broadcasting](index_split_014.html#filepos448254)-[Vectorization
    and Broadcasting](index_split_014.html#filepos453983)
  id: totrans-525
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向量化，[向量化和广播](index_split_014.html#filepos448254)-[向量化和广播](index_split_014.html#filepos453983)
- en: views versus copies, [View vs. Copy](index_split_014.html#filepos475259)-[View
    vs. Copy](index_split_014.html#filepos480562)
  id: totrans-526
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视图与副本的区别，[视图 vs. 副本](index_split_014.html#filepos475259)-[视图 vs. 副本](index_split_014.html#filepos480562)
- en: asfreq method (pandas), [Resampling](index_split_017.html#filepos850558)
  id: totrans-527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: asfreq 方法 (pandas)，[重采样](index_split_017.html#filepos850558)
- en: attributes
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性
- en: help documentation, [Strings](index_split_011.html#filepos225822)
  id: totrans-529
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助文档，[字符串](index_split_011.html#filepos225822)
- en: purpose of, [Attributes and methods](index_split_011.html#filepos187275), [Classes
    and Objects](index_split_031.html#filepos1833311)-[Classes and Objects](index_split_031.html#filepos1847675)
  id: totrans-530
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[属性和方法](index_split_011.html#filepos187275), [类和对象](index_split_031.html#filepos1833311)-[类和对象](index_split_031.html#filepos1847675)
- en: augmented assignment notation, [The for and while Loops](index_split_012.html#filepos346050)
  id: totrans-531
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增强赋值符号，[for 和 while 循环](index_split_012.html#filepos346050)
- en: auto activation of Conda environments, disabling, [Disable Auto Activation](index_split_029.html#filepos1818091)
  id: totrans-532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用 Conda 环境的自动激活，[禁用自动激活](index_split_029.html#filepos1818091)
- en: autocomplete, [Visual Studio Code](index_split_009.html#filepos155542)
  id: totrans-533
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动完成，[Visual Studio Code](index_split_009.html#filepos155542)
- en: 'autofit method (xlwings), [Case Study (Re-Revisited): Excel Reporting](index_split_025.html#filepos1409291)'
  id: totrans-534
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自适应调整方法 (xlwings)，[案例研究 (再次审视)：Excel 报告](index_split_025.html#filepos1409291)
- en: automation in Excel (see xlwings)
  id: totrans-535
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 中的自动化 (参见 xlwings)
- en: B
  id: totrans-536
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: B
- en: backends
  id: totrans-537
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端
- en: purpose of, [Frontend](index_split_027.html#filepos1606388)
  id: totrans-538
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[前端](index_split_027.html#filepos1606388)
- en: in Python Package Tracker, [Backend](index_split_027.html#filepos1620020)-[Backend](index_split_027.html#filepos1644241)
  id: totrans-539
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python Package Tracker 中，[后端](index_split_027.html#filepos1620020)-[后端](index_split_027.html#filepos1644241)
- en: best practices for programming
  id: totrans-540
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程最佳实践
- en: DRY principle, [DRY principle](index_split_007.html#filepos46294)
  id: totrans-541
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DRY 原则，[DRY 原则](index_split_007.html#filepos46294)
- en: separation of concerns, [Separation of concerns](index_split_007.html#filepos41610)-[Separation
    of concerns](index_split_007.html#filepos45911)
  id: totrans-542
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关注点分离，[关注点分离](index_split_007.html#filepos41610)-[关注点分离](index_split_007.html#filepos45911)
- en: testing, [Testing](index_split_007.html#filepos48860)
  id: totrans-543
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试，[测试](index_split_007.html#filepos48860)
- en: version control, [Version control](index_split_007.html#filepos51713)-[Version
    control](index_split_007.html#filepos57576)
  id: totrans-544
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制，[版本控制](index_split_007.html#filepos51713)-[版本控制](index_split_007.html#filepos57576)
- en: big data, [Preface](index_split_003.html#filepos8884), [Limitations with pandas](index_split_017.html#filepos860803),
    [Working with Big Excel Files](index_split_022.html#filepos1125159)-[Reading sheets
    in parallel](index_split_022.html#filepos1157423)
  id: totrans-545
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大数据，[前言](index_split_003.html#filepos8884), [pandas 的限制](index_split_017.html#filepos860803),
    [处理大型 Excel 文件](index_split_022.html#filepos1125159)-[并行读取工作表](index_split_022.html#filepos1157423)
- en: Binder, [Shutting Down Jupyter Notebooks](index_split_009.html#filepos152085)
  id: totrans-546
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Binder, [关闭 Jupyter 笔记本](index_split_009.html#filepos152085)
- en: Bokeh, [Plotly](index_split_016.html#filepos739170)
  id: totrans-547
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bokeh，[Plotly](index_split_016.html#filepos739170)
- en: Book class (xlwings), [The Excel Object Model](index_split_024.html#filepos1256174)
  id: totrans-548
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Book 类 (xlwings)，[Excel 对象模型](index_split_024.html#filepos1256174)
- en: book object (xlwings), [The Excel Object Model](index_split_024.html#filepos1256174)
  id: totrans-549
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: book object (xlwings), [Excel 对象模型](index_split_024.html#filepos1256174)
- en: books collection (xlwings), [The Excel Object Model](index_split_024.html#filepos1310200)
  id: totrans-550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: books collection (xlwings), [Excel 对象模型](index_split_024.html#filepos1310200)
- en: bool constructor, [Booleans](index_split_011.html#filepos213851)
  id: totrans-551
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔构造器，[布尔值](index_split_011.html#filepos213851)
- en: boolean data type, [Booleans](index_split_011.html#filepos205063)-[Booleans](index_split_011.html#filepos217752),
    [The read_excel Function and ExcelFile Class](index_split_019.html#filepos891785)
  id: totrans-552
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔数据类型，[布尔值](index_split_011.html#filepos205063)-[布尔值](index_split_011.html#filepos217752),
    [read_excel 函数和 ExcelFile 类](index_split_019.html#filepos891785)
- en: boolean indexing (pandas)
  id: totrans-553
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔索引 (pandas)
- en: selecting data by, [Selecting by boolean indexing](index_split_015.html#filepos549780)-[Selecting
    by boolean indexing](index_split_015.html#filepos567453)
  id: totrans-554
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择数据的方式，[通过布尔索引选择](index_split_015.html#filepos549780)-[通过布尔索引选择](index_split_015.html#filepos567453)
- en: setting data by, [Setting data by boolean indexing](index_split_015.html#filepos582259)-[Setting
    data by boolean indexing](index_split_015.html#filepos589159)
  id: totrans-555
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过布尔索引设置数据，[通过布尔索引设置数据](index_split_015.html#filepos582259)-[通过布尔索引设置数据](index_split_015.html#filepos589159)
- en: boolean operators, [Booleans](index_split_011.html#filepos205160), [Selecting
    by boolean indexing](index_split_015.html#filepos554159)
  id: totrans-556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔运算符，[布尔值](index_split_011.html#filepos205160)，[通过布尔索引选择](index_split_015.html#filepos554159)
- en: break statement, [The for and while Loops](index_split_012.html#filepos335412)
  id: totrans-557
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: break 语句，[for 和 while 循环](index_split_012.html#filepos335412)
- en: breakpoints (VS Code), setting, [Debugging UDFs](index_split_028.html#filepos1758108)
  id: totrans-558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 断点（VS Code），设置，[调试 UDFs](index_split_028.html#filepos1758108)
- en: broadcasting, [Vectorization and Broadcasting](index_split_014.html#filepos451025)-[Vectorization
    and Broadcasting](index_split_014.html#filepos453983), [Arithmetic Operations](index_split_015.html#filepos628153)
  id: totrans-559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广播，[向量化和广播](index_split_014.html#filepos451025)-[向量化和广播](index_split_014.html#filepos453983)，[算术运算](index_split_015.html#filepos628153)
- en: built-in converters (xlwings), [Converters and Options](index_split_025.html#filepos1340690)
  id: totrans-560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置转换器（xlwings），[转换器和选项](index_split_025.html#filepos1340690)
- en: built-in options for range object (xlwings), [Converters and Options](index_split_025.html#filepos1345217)
  id: totrans-561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: range 对象的内置选项（xlwings），[转换器和选项](index_split_025.html#filepos1345217)
- en: business intelligence (see Power BI)
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商业智能（参见 Power BI）
- en: business layer, [Separation of concerns](index_split_007.html#filepos44149)
  id: totrans-563
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 业务层，[关注点分离](index_split_007.html#filepos44149)
- en: ByRef function arguments (VBA), [Calling Functions with Mutable Objects as Arguments](index_split_031.html#filepos1882872)-[Calling
    Functions with Mutable Objects as Arguments](index_split_031.html#filepos1887586)
  id: totrans-564
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ByRef 函数参数（VBA），[以可变对象作为参数调用函数](index_split_031.html#filepos1882872)-[以可变对象作为参数调用函数](index_split_031.html#filepos1887586)
- en: ByVal function arguments (VBA), [Calling Functions with Mutable Objects as Arguments](index_split_031.html#filepos1882872)-[Calling
    Functions with Mutable Objects as Arguments](index_split_031.html#filepos1887586)
  id: totrans-565
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ByVal 函数参数（VBA），[以可变对象作为参数调用函数](index_split_031.html#filepos1882872)-[以可变对象作为参数调用函数](index_split_031.html#filepos1887586)
- en: C
  id: totrans-566
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: C
- en: cache decorator, [Caching](index_split_028.html#filepos1793985)
  id: totrans-567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存装饰器，[缓存](index_split_028.html#filepos1793985)
- en: caching, [Caching](index_split_028.html#filepos1775539)-[Caching](index_split_028.html#filepos1794980)
  id: totrans-568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存，[缓存](index_split_028.html#filepos1775539)-[缓存](index_split_028.html#filepos1794980)
- en: calculations, separate layer for, [Separation of concerns](index_split_007.html#filepos45452)
  id: totrans-569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算，单独为其设置层级，[关注点分离](index_split_007.html#filepos45452)
- en: calling functions, [Functions](index_split_011.html#filepos185990), [Calling
    functions](index_split_012.html#filepos370297), [Calling Functions with Mutable
    Objects as Arguments](index_split_031.html#filepos1882799)-[Functions with Mutable
    Objects as Default Arguments](index_split_031.html#filepos1900058)
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用函数，[函数](index_split_011.html#filepos185990)，[调用函数](index_split_012.html#filepos370297)，[以可变对象作为参数调用函数](index_split_031.html#filepos1882799)-[以可变对象作为默认参数的函数](index_split_031.html#filepos1900058)
- en: capitalize method (pandas), [Working with Text Columns](index_split_015.html#filepos634661)
  id: totrans-571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: capitalize 方法（pandas），[处理文本列](index_split_015.html#filepos634661)
- en: Cascading Style Sheets (CSS), [Formatting a DataFrame’s data part](index_split_022.html#filepos1222109)
  id: totrans-572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 层叠样式表（CSS），[格式化数据框的数据部分](index_split_022.html#filepos1222109)
- en: Case statement (VBA), [Dictionaries](index_split_011.html#filepos282660)
  id: totrans-573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Case 语句（VBA），[字典](index_split_011.html#filepos282660)
- en: case studies
  id: totrans-574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 案例研究
- en: 'Excel reporting, [Case Study: Excel Reporting](index_split_019.html#filepos864531)-[Case
    Study: Excel Reporting](index_split_019.html#filepos885516), [Case Study (Revisited):
    Excel Reporting](index_split_022.html#filepos1232433), [Case Study (Re-Revisited):
    Excel Reporting](index_split_025.html#filepos1400987)-[Case Study (Re-Revisited):
    Excel Reporting](index_split_025.html#filepos1409826)'
  id: totrans-575
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 报表，[案例研究：Excel 报表](index_split_019.html#filepos864531)-[案例研究：Excel 报表](index_split_019.html#filepos885516)，[案例研究（重访）：Excel
    报表](index_split_022.html#filepos1232433)，[案例研究（再次重访）：Excel 报表](index_split_025.html#filepos1400987)-[案例研究（再次重访）：Excel
    报表](index_split_025.html#filepos1409826)
- en: Google Trends case study
  id: totrans-576
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Trends 案例研究
- en: DataFrames and dynamic arrays, [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1682486)-[Working
    with DataFrames and Dynamic Arrays](index_split_028.html#filepos1714516)
  id: totrans-577
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据框架和动态数组, [处理数据框架和动态数组](index_split_028.html#filepos1682486)-[处理数据框架和动态数组](index_split_028.html#filepos1714516)
- en: debugging UDFs, [Debugging UDFs](index_split_028.html#filepos1755260)-[Debugging
    UDFs](index_split_028.html#filepos1760605)
  id: totrans-578
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试 UDFs, [调试 UDFs](index_split_028.html#filepos1755260)-[调试 UDFs](index_split_028.html#filepos1760605)
- en: explanation of Google Trends, [Introduction to Google Trends](index_split_028.html#filepos1680082)-[Introduction
    to Google Trends](index_split_028.html#filepos1682295)
  id: totrans-579
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Trends 解释, [介绍 Google Trends](index_split_028.html#filepos1680082)-[介绍
    Google Trends](index_split_028.html#filepos1682295)
- en: fetching data, [Fetching Data from Google Trends](index_split_028.html#filepos1714798)-[Fetching
    Data from Google Trends](index_split_028.html#filepos1741590)
  id: totrans-580
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取数据, [从 Google Trends 获取数据](index_split_028.html#filepos1714798)-[从 Google
    Trends 获取数据](index_split_028.html#filepos1741590)
- en: plotting data, [Plotting with UDFs](index_split_028.html#filepos1741829)-[Plotting
    with UDFs](index_split_028.html#filepos1754939)
  id: totrans-581
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绘图数据, [使用 UDFs 绘图](index_split_028.html#filepos1741829)-[使用 UDFs 绘图](index_split_028.html#filepos1754939)
- en: Python Package Tracker
  id: totrans-582
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 包追踪器
- en: adding packages, [What We Will Build](index_split_027.html#filepos1489144)-[What
    We Will Build](index_split_027.html#filepos1492009)
  id: totrans-583
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加包, [我们将要构建什么](index_split_027.html#filepos1489144)-[我们将要构建什么](index_split_027.html#filepos1492009)
- en: application structure, [Application Structure](index_split_027.html#filepos1601418)
  id: totrans-584
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序结构, [应用程序结构](index_split_027.html#filepos1601418)
- en: backend, [Backend](index_split_027.html#filepos1620020)-[Backend](index_split_027.html#filepos1644241)
  id: totrans-585
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端, [后端](index_split_027.html#filepos1620020)-[后端](index_split_027.html#filepos1644241)
- en: databases, [Databases](index_split_027.html#filepos1515417)-[SQL injection](index_split_027.html#filepos1579942)
  id: totrans-586
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库, [数据库](index_split_027.html#filepos1515417)-[SQL 注入](index_split_027.html#filepos1579942)
- en: debugging, [Debugging](index_split_027.html#filepos1644656)-[Debugging](index_split_027.html#filepos1651460)
  id: totrans-587
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试, [调试](index_split_027.html#filepos1644656)-[调试](index_split_027.html#filepos1651460)
- en: error handling, [Exceptions](index_split_027.html#filepos1580257)-[Exceptions](index_split_027.html#filepos1601081)
  id: totrans-588
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误处理, [异常](index_split_027.html#filepos1580257)-[异常](index_split_027.html#filepos1601081)
- en: frontend, [Frontend](index_split_027.html#filepos1606230)-[Frontend](index_split_027.html#filepos1619827)
  id: totrans-589
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前端, [前端](index_split_027.html#filepos1606230)-[前端](index_split_027.html#filepos1619827)
- en: web APIs, [Web APIs](index_split_027.html#filepos1492808)-[Web APIs](index_split_027.html#filepos1515072)
  id: totrans-590
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: web APIs, [Web APIs](index_split_027.html#filepos1492808)-[Web APIs](index_split_027.html#filepos1515072)
- en: cd command, [Anaconda Prompt](index_split_008.html#filepos111447)
  id: totrans-591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cd 命令, [Anaconda Prompt](index_split_008.html#filepos111447)
- en: cell formatting (xlwings), clearing, [How to Work Around Missing Functionality](index_split_025.html#filepos1429624)-[How
    to Work Around Missing Functionality](index_split_025.html#filepos1435920)
  id: totrans-592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单元格格式（xlwings），清除, [如何解决缺失功能](index_split_025.html#filepos1429624)-[如何解决缺失功能](index_split_025.html#filepos1435920)
- en: cell looping, [The excel.py Module](index_split_021.html#filepos974268)
  id: totrans-593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cell looping, [excel.py 模块](index_split_021.html#filepos974268)
- en: cells (Jupyter notebooks)
  id: totrans-594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cells（Jupyter 笔记本）
- en: edit mode versus command mode, [Edit vs. Command Mode](index_split_009.html#filepos140230)-[Edit
    vs. Command Mode](index_split_009.html#filepos145012)
  id: totrans-595
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑模式与命令模式, [编辑 vs. 命令模式](index_split_009.html#filepos140230)-[编辑 vs. 命令模式](index_split_009.html#filepos145012)
- en: in Python scripts, [Python Scripts with Code Cells](index_split_030.html#filepos1829327)
  id: totrans-596
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 脚本中, [带有代码单元的 Python 脚本](index_split_030.html#filepos1829327)
- en: operational overview, [Notebook Cells](index_split_009.html#filepos134675)-[Notebook
    Cells](index_split_009.html#filepos140068)
  id: totrans-597
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运营概述, [笔记本单元](index_split_009.html#filepos134675)-[笔记本单元](index_split_009.html#filepos140068)
- en: output, [Notebook Cells](index_split_009.html#filepos137198)
  id: totrans-598
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输出, [笔记本单元](index_split_009.html#filepos137198)
- en: run order, [Run Order Matters](index_split_009.html#filepos145168)
  id: totrans-599
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行顺序, [运行顺序重要](index_split_009.html#filepos145168)
- en: chaining indexing and slicing operations, [Slicing](index_split_011.html#filepos240871),
    [Getting and Setting Array Elements](index_split_014.html#filepos463605)
  id: totrans-600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 链接索引和切片操作, [切片](index_split_011.html#filepos240871), [获取和设置数组元素](index_split_014.html#filepos463605)
- en: changing
  id: totrans-601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改
- en: cell types (Jupyter notebooks), [Notebook Cells](index_split_009.html#filepos138341)
  id: totrans-602
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: cell 类型（Jupyter 笔记本）, [笔记本单元](index_split_009.html#filepos138341)
- en: directories, [Anaconda Prompt](index_split_008.html#filepos111447)
  id: totrans-603
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目录, [Anaconda Prompt](index_split_008.html#filepos111447)
- en: list separators (Excel), [The Excel Object Model](index_split_024.html#filepos1254107)-[The
    Excel Object Model](index_split_024.html#filepos1255983)
  id: totrans-604
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列分隔符（Excel）, [Excel 对象模型](index_split_024.html#filepos1254107)-[Excel 对象模型](index_split_024.html#filepos1255983)
- en: to parent directory, [Anaconda Prompt](index_split_008.html#filepos112850)
  id: totrans-605
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到父目录，[Anaconda Prompt](index_split_008.html#filepos112850)
- en: charts (Excel), [Pivoting and Melting](index_split_016.html#filepos716676)
  id: totrans-606
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图表（Excel），[透视和融合](index_split_016.html#filepos716676)
- en: (see also plots)
  id: totrans-607
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: （另见图表）
- en: creating in OpenPyXL, [Writing with OpenPyXL](index_split_021.html#filepos996317)-[Writing
    with OpenPyXL](index_split_021.html#filepos1032891)
  id: totrans-608
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 OpenPyXL 中创建，[使用 OpenPyXL 写入](index_split_021.html#filepos996317)-[使用 OpenPyXL
    写入](index_split_021.html#filepos1032891)
- en: creating in XlsxWriter, [XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)
  id: totrans-609
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 XlsxWriter 中创建，[XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)
- en: creating in xlwings, [Excel charts](index_split_025.html#filepos1368049)-[Excel
    charts](index_split_025.html#filepos1374395)
  id: totrans-610
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 xlwings 中创建，[Excel 图表](index_split_025.html#filepos1368049)-[Excel 图表](index_split_025.html#filepos1374395)
- en: class inheritance, [Modern Language Features](index_split_007.html#filepos89951)
  id: totrans-611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类继承，[现代语言特性](index_split_007.html#filepos89951)
- en: classes, [Attributes and methods](index_split_011.html#filepos188185)
  id: totrans-612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类，[属性和方法](index_split_011.html#filepos188185)
- en: instantiation, [The datetime Class](index_split_012.html#filepos394507), [Classes
    and Objects](index_split_031.html#filepos1833058)
  id: totrans-613
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例化，[datetime 类](index_split_012.html#filepos394507), [类和对象](index_split_031.html#filepos1833058)
- en: objects and, [Classes and Objects](index_split_031.html#filepos1832657)-[Classes
    and Objects](index_split_031.html#filepos1847675)
  id: totrans-614
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象和，[类和对象](index_split_031.html#filepos1832657)-[类和对象](index_split_031.html#filepos1847675)
- en: clearing cell formatting (xlwings), [How to Work Around Missing Functionality](index_split_025.html#filepos1429624)-[How
    to Work Around Missing Functionality](index_split_025.html#filepos1435920)
  id: totrans-615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清除单元格格式（xlwings），[如何解决缺失功能](index_split_025.html#filepos1429624)-[如何解决缺失功能](index_split_025.html#filepos1435920)
- en: cloud providers for Jupyter notebooks, [Shutting Down Jupyter Notebooks](index_split_009.html#filepos151042)
  id: totrans-616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 笔记本的云提供商，[关闭 Jupyter 笔记本](index_split_009.html#filepos151042)
- en: code blocks, [Code Blocks and the pass Statement](index_split_011.html#filepos303668)-[Code
    Blocks and the pass Statement](index_split_012.html#filepos306087)
  id: totrans-617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码块，[代码块和 pass 语句](index_split_011.html#filepos303668)-[代码块和 pass 语句](index_split_012.html#filepos306087)
- en: code cells (Jupyter notebooks), [Notebook Cells](index_split_009.html#filepos137960)
  id: totrans-618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码单元格（Jupyter 笔记本），[笔记本单元格](index_split_009.html#filepos137960)
- en: code command (VS Code), [Running a Python Script](index_split_009.html#filepos165226)
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码命令（VS Code），[运行 Python 脚本](index_split_009.html#filepos165226)
- en: collections (xlwings)
  id: totrans-620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合（xlwings）
- en: charts (Excel), creating, [Excel charts](index_split_025.html#filepos1368049)-[Excel
    charts](index_split_025.html#filepos1374395)
  id: totrans-621
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图表（Excel），创建，[Excel 图表](index_split_025.html#filepos1368049)-[Excel 图表](index_split_025.html#filepos1374395)
- en: defined names (Excel), creating, [Defined names](index_split_025.html#filepos1390078)-[Defined
    names](index_split_025.html#filepos1400526)
  id: totrans-622
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义名称（Excel），创建，[定义名称](index_split_025.html#filepos1390078)-[定义名称](index_split_025.html#filepos1400526)
- en: 'pictures (Excel), Matplotlib plots as, [Pictures: Matplotlib plots](index_split_025.html#filepos1374823)-[Pictures:
    Matplotlib plots](index_split_025.html#filepos1389691)'
  id: totrans-623
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图片（Excel），将 Matplotlib 绘图作为，[图片：Matplotlib 绘图](index_split_025.html#filepos1374823)-[图片：Matplotlib
    绘图](index_split_025.html#filepos1389691)
- en: purpose of, [The Excel Object Model](index_split_024.html#filepos1252253)
  id: totrans-624
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[Excel 对象模型](index_split_024.html#filepos1252253)
- en: colors, hexadecimal values for, [Writing with OpenPyXL](index_split_021.html#filepos1032314)-[Writing
    with OpenPyXL](index_split_021.html#filepos1032891)
  id: totrans-625
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 颜色，十六进制值，[使用 OpenPyXL 写入](index_split_021.html#filepos1032314)-[使用 OpenPyXL
    写入](index_split_021.html#filepos1032891)
- en: columns (pandas)
  id: totrans-626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列（pandas）
- en: adding to DataFrame, [Setting data by adding a new column](index_split_015.html#filepos592331)
  id: totrans-627
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加到 DataFrame，[通过添加新列设置数据](index_split_015.html#filepos592331)
- en: for DataFrames, [Columns](index_split_015.html#filepos512954)-[Columns](index_split_015.html#filepos524119),
    [Formatting a DataFrame’s index and headers](index_split_022.html#filepos1170468)-[Formatting
    a DataFrame’s index and headers](index_split_022.html#filepos1205120)
  id: totrans-628
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于 DataFrames，[列](index_split_015.html#filepos512954)-[列](index_split_015.html#filepos524119)，[格式化
    DataFrame 的索引和标头](index_split_022.html#filepos1170468)-[格式化 DataFrame 的索引和标头](index_split_022.html#filepos1205120)
- en: selecting, [Selecting by label](index_split_015.html#filepos537621)
  id: totrans-629
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择，[按标签选择](index_split_015.html#filepos537621)
- en: COM (Component Object Model), [xlwings Foundations](index_split_025.html#filepos1411455)
  id: totrans-630
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: COM（组件对象模型），[xlwings 基础](index_split_025.html#filepos1411455)
- en: combining DataFrames
  id: totrans-631
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并 DataFrames
- en: concatenation, [Concatenating](index_split_016.html#filepos653577)-[Concatenating](index_split_016.html#filepos667519)
  id: totrans-632
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接，[连接](index_split_016.html#filepos653577)-[连接](index_split_016.html#filepos667519)
- en: joining, [Joining and Merging](index_split_016.html#filepos667765)-[Joining
    and Merging](index_split_016.html#filepos690380)
  id: totrans-633
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接，[连接和合并](index_split_016.html#filepos667765)-[连接和合并](index_split_016.html#filepos690380)
- en: merging, [Joining and Merging](index_split_016.html#filepos682873)-[Joining
    and Merging](index_split_016.html#filepos690380)
  id: totrans-634
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并，[连接和合并](index_split_016.html#filepos682873)-[连接和合并](index_split_016.html#filepos690380)
- en: command history, scrolling through, [Anaconda Prompt](index_split_008.html#filepos113245)
  id: totrans-635
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令历史记录，通过滚动查看，[Anaconda 提示符](index_split_008.html#filepos113245)
- en: command mode (Jupyter notebooks), [Edit vs. Command Mode](index_split_009.html#filepos140230)-[Edit
    vs. Command Mode](index_split_009.html#filepos145012)
  id: totrans-636
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令模式（Jupyter 笔记本），[编辑模式与命令模式](index_split_009.html#filepos140230)-[编辑模式与命令模式](index_split_009.html#filepos145012)
- en: Command Palette (VS Code), [Installation and Configuration](index_split_009.html#filepos163380)
  id: totrans-637
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令面板（VS Code），[安装和配置](index_split_009.html#filepos163380)
- en: Command Prompt (Windows), [Anaconda Prompt](index_split_008.html#filepos102144)
  id: totrans-638
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令提示符（Windows），[Anaconda 提示符](index_split_008.html#filepos102144)
- en: debugging with, [Debugging](index_split_027.html#filepos1650611)
  id: totrans-639
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试，[调试](index_split_027.html#filepos1650611)
- en: disabling auto activation of Conda environment, [Disable Auto Activation](index_split_029.html#filepos1818813)
  id: totrans-640
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用 Conda 环境的自动激活，[禁用自动激活](index_split_029.html#filepos1818813)
- en: commands in Anaconda Prompt, list of, [Anaconda Prompt](index_split_008.html#filepos106145)
  id: totrans-641
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda 提示符中的命令列表，[Anaconda 提示符](index_split_008.html#filepos106145)
- en: comments in Python, [Mathematical operators](index_split_011.html#filepos201944)
  id: totrans-642
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 中的注释，[数学运算符](index_split_011.html#filepos201944)
- en: complex data type, [Numeric Types](index_split_011.html#filepos194226)
  id: totrans-643
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复杂数据类型，[数值类型](index_split_011.html#filepos194226)
- en: composite keys (databases), [The Package Tracker database](index_split_027.html#filepos1527951)
  id: totrans-644
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复合键（数据库），[包裹追踪数据库](index_split_027.html#filepos1527951)
- en: concat function (pandas), [Concatenating](index_split_016.html#filepos653577)-[Concatenating](index_split_016.html#filepos667519),
    [Rebasing and Correlation](index_split_017.html#filepos831244)
  id: totrans-645
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 中的 concat 函数，[串联](index_split_016.html#filepos653577)-[串联](index_split_016.html#filepos667519)，[重置基础和相关性](index_split_017.html#filepos831244)
- en: concatenating
  id: totrans-646
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 串联
- en: DataFrames, [Concatenating](index_split_016.html#filepos653577)-[Concatenating](index_split_016.html#filepos667519)
  id: totrans-647
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrames，[串联](index_split_016.html#filepos653577)-[串联](index_split_016.html#filepos667519)
- en: lists, [Lists](index_split_011.html#filepos246001)
  id: totrans-648
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表，[列表](index_split_011.html#filepos246001)
- en: strings, [Strings](index_split_011.html#filepos218479)
  id: totrans-649
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串，[字符串](index_split_011.html#filepos218479)
- en: tuples, [Tuples](index_split_011.html#filepos288158)
  id: totrans-650
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组，[元组](index_split_011.html#filepos288158)
- en: 'Conda, [Package Managers: Conda and pip](index_split_008.html#filepos119343)-[Package
    Managers: Conda and pip](index_split_008.html#filepos127083)'
  id: totrans-651
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Conda，[包管理器：Conda 和 pip](index_split_008.html#filepos119343)-[包管理器：Conda 和 pip](index_split_008.html#filepos127083)
- en: 'commands, [Package Managers: Conda and pip](index_split_008.html#filepos120708)'
  id: totrans-652
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令，[包管理器：Conda 和 pip](index_split_008.html#filepos120708)
- en: environments, [Conda Environments](index_split_008.html#filepos127438)
  id: totrans-653
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境，[Conda 环境](index_split_008.html#filepos127438)
- en: creating, [Create a New Conda Environment](index_split_029.html#filepos1812140)-[Create
    a New Conda Environment](index_split_029.html#filepos1817881)
  id: totrans-654
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建，[创建一个新的 Conda 环境](index_split_029.html#filepos1812140)-[创建一个新的 Conda 环境](index_split_029.html#filepos1817881)
- en: disabling auto activation, [Disable Auto Activation](index_split_029.html#filepos1818091)
  id: totrans-655
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用自动激活，[禁用自动激活](index_split_029.html#filepos1818091)
- en: purpose of, [Conda Environments](index_split_029.html#filepos1811202)
  id: totrans-656
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[Conda 环境](index_split_029.html#filepos1811202)
- en: 'pip versus, [Package Managers: Conda and pip](index_split_008.html#filepos120576)'
  id: totrans-657
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pip 对比，[包管理器：Conda 和 pip](index_split_008.html#filepos120576)
- en: conditional expressions, [The if Statement and Conditional Expressions](index_split_012.html#filepos314525)
  id: totrans-658
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条件表达式，[if 语句和条件表达式](index_split_012.html#filepos314525)
- en: conditional formatting in Python Package Tracker, [Frontend](index_split_027.html#filepos1615600)
  id: totrans-659
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python Package Tracker 中的条件格式化，[前端](index_split_027.html#filepos1615600)
- en: configuration hierarchy for xlwings, [Configuration Hierarchy](index_split_026.html#filepos1478189)
  id: totrans-660
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对 xlwings 的配置层次结构，[配置层次结构](index_split_026.html#filepos1478189)
- en: configuring VS Code, [Installation and Configuration](index_split_009.html#filepos160636)-[Installation
    and Configuration](index_split_009.html#filepos164899)
  id: totrans-661
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 VS Code，[安装和配置](index_split_009.html#filepos160636)-[安装和配置](index_split_009.html#filepos164899)
- en: connections to databases, [Database connections](index_split_027.html#filepos1529652)-[Database
    connections](index_split_027.html#filepos1537920)
  id: totrans-662
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库连接，[数据库连接](index_split_027.html#filepos1529652)-[数据库连接](index_split_027.html#filepos1537920)
- en: constant memory (XlsxWriter), [Writing with XlsxWriter](index_split_022.html#filepos1130401)
  id: totrans-663
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常量内存（XlsxWriter），[使用 XlsxWriter 写入](index_split_022.html#filepos1130401)
- en: constructors for arrays (NumPy), [Useful Array Constructors](index_split_014.html#filepos470880)
  id: totrans-664
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数组构造函数（NumPy），[有用的数组构造函数](index_split_014.html#filepos470880)
- en: context managers, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos910651)
  id: totrans-665
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上下文管理器，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos910651)
- en: Continue button (VS Code debugger), [Debugger](index_split_030.html#filepos1823390)
  id: totrans-666
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Continue 按钮（VS Code 调试器），[调试器](index_split_030.html#filepos1823390)
- en: continue statement, [The for and while Loops](index_split_012.html#filepos337705)
  id: totrans-667
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: continue 语句，[for 和 while 循环](index_split_012.html#filepos337705)
- en: control flow
  id: totrans-668
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制流
- en: code blocks, [Code Blocks and the pass Statement](index_split_011.html#filepos303668)-[Code
    Blocks and the pass Statement](index_split_012.html#filepos306087)
  id: totrans-669
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码块，[代码块和 pass 语句](index_split_011.html#filepos303668)-[代码块和 pass 语句](index_split_012.html#filepos306087)
- en: conditional expressions, [The if Statement and Conditional Expressions](index_split_012.html#filepos314525)
  id: totrans-670
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条件表达式，[if 语句和条件表达式](index_split_012.html#filepos314525)
- en: dictionary comprehensions, [List, Dictionary, and Set Comprehensions](index_split_012.html#filepos355651)
  id: totrans-671
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典推导式，[列表、字典和集合推导式](index_split_012.html#filepos355651)
- en: for loops, [The for and while Loops](index_split_012.html#filepos316683)-[The
    for and while Loops](index_split_012.html#filepos341967)
  id: totrans-672
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: for 循环，[for 和 while 循环](index_split_012.html#filepos316683)-[for 和 while 循环](index_split_012.html#filepos341967)
- en: if statements, [The if Statement and Conditional Expressions](index_split_012.html#filepos306285)-[The
    if Statement and Conditional Expressions](index_split_012.html#filepos316429)
  id: totrans-673
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: if 语句，[if 语句和条件表达式](index_split_012.html#filepos306285)-[if 语句和条件表达式](index_split_012.html#filepos316429)
- en: list comprehensions, [List, Dictionary, and Set Comprehensions](index_split_012.html#filepos347118)
  id: totrans-674
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表推导式，[列表、字典和集合推导式](index_split_012.html#filepos347118)
- en: pass statement, [Code Blocks and the pass Statement](index_split_011.html#filepos303668)-[Code
    Blocks and the pass Statement](index_split_012.html#filepos306087)
  id: totrans-675
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pass 语句，[代码块和 pass 语句](index_split_011.html#filepos303668)-[代码块和 pass 语句](index_split_012.html#filepos306087)
- en: set comprehensions, [List, Dictionary, and Set Comprehensions](index_split_012.html#filepos358997)
  id: totrans-676
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合推导式，[列表、字典和集合推导式](index_split_012.html#filepos358997)
- en: while loops, [The for and while Loops](index_split_012.html#filepos343907)
  id: totrans-677
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: while 循环，[for 和 while 循环](index_split_012.html#filepos343907)
- en: converters (xlwings), [Converters and Options](index_split_025.html#filepos1340690)
  id: totrans-678
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转换器（xlwings），[转换器和选项](index_split_025.html#filepos1340690)
- en: converting
  id: totrans-679
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转换
- en: data types with excel.py module, [The excel.py Module](index_split_021.html#filepos973831)-[The
    excel.py Module](index_split_021.html#filepos977785)
  id: totrans-680
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: excel.py 模块中的数据类型，[excel.py 模块](index_split_021.html#filepos973831)-[excel.py
    模块](index_split_021.html#filepos977785)
- en: indices to columns (pandas), [Index](index_split_015.html#filepos502052)
  id: totrans-681
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引到列（pandas），[索引](index_split_015.html#filepos502052)
- en: objects to boolean data type, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos891785)
  id: totrans-682
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象到布尔数据类型，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos891785)
- en: strings to datetime data type, [Creating a DatetimeIndex](index_split_017.html#filepos783176)
  id: totrans-683
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串到日期时间数据类型，[创建日期时间索引](index_split_017.html#filepos783176)
- en: Coordinated Universal Time (UTC), [Working with Time Zones](index_split_017.html#filepos805006),
    [Working with Time-Zone-Aware datetime Objects](index_split_031.html#filepos1848164)
  id: totrans-684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协调世界时（UTC），[处理时区](index_split_017.html#filepos805006)，[使用时区感知的 datetime 对象](index_split_031.html#filepos1848164)
- en: copies (DataFrames)
  id: totrans-685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 副本（数据框）
- en: returned by methods, [Index](index_split_015.html#filepos506311)
  id: totrans-686
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法返回的，[索引](index_split_015.html#filepos506311)
- en: views versus, [View vs. Copy](index_split_015.html#filepos649623)
  id: totrans-687
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视图与，[视图 vs. 副本](index_split_015.html#filepos649623)
- en: copies (NumPy), views versus, [View vs. Copy](index_split_014.html#filepos475259)-[View
    vs. Copy](index_split_014.html#filepos480562)
  id: totrans-688
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 副本（NumPy），视图与，[视图 vs. 副本](index_split_014.html#filepos475259)-[视图 vs. 副本](index_split_014.html#filepos480562)
- en: copy method, shallow versus deep copies, [Mutable vs. Immutable Python Objects](index_split_031.html#filepos1881031)
  id: totrans-689
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: copy 方法，浅复制与深复制，[可变 vs. 不可变的 Python 对象](index_split_031.html#filepos1881031)
- en: corr method (pandas), [Rebasing and Correlation](index_split_017.html#filepos838567)
  id: totrans-690
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相关方法（pandas），[重新基准化和相关性](index_split_017.html#filepos838567)
- en: correlation in time series analysis, [Rebasing and Correlation](index_split_017.html#filepos822133)-[Rebasing
    and Correlation](index_split_017.html#filepos846848)
  id: totrans-691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析中的相关性，[重新基准化和相关性](index_split_017.html#filepos822133)-[重新基准化和相关性](index_split_017.html#filepos846848)
- en: counter variables in loops, [The for and while Loops](index_split_012.html#filepos340077)
  id: totrans-692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环中的计数变量，[for 和 while 循环](index_split_012.html#filepos340077)
- en: COVID-19 test results, delayed reporting, [Excel in the News](index_split_007.html#filepos39115)
  id: totrans-693
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: COVID-19 测试结果，延迟报告，[Excel 新闻](index_split_007.html#filepos39115)
- en: CPU times, [Reading sheets in parallel](index_split_022.html#filepos1148285)
  id: totrans-694
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU 时间，[并行读取工作表](index_split_022.html#filepos1148285)
- en: cross-application calls (xlwings), minimizing, [Minimize cross-application calls](index_split_025.html#filepos1416834),
    [Minimize cross-application calls](index_split_028.html#filepos1762196)-[Minimize
    cross-application calls](index_split_028.html#filepos1770595)
  id: totrans-695
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨应用调用（xlwings），最小化，[最小化跨应用调用](index_split_025.html#filepos1416834), [最小化跨应用调用](index_split_028.html#filepos1762196)-[最小化跨应用调用](index_split_028.html#filepos1770595)
- en: cross-platform compatibility, [Cross-Platform Compatibility](index_split_007.html#filepos90342)
  id: totrans-696
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨平台兼容性，[跨平台兼容性](index_split_007.html#filepos90342)
- en: CSE arrays (Excel), [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1695089)
  id: totrans-697
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSE 数组（Excel），[使用 DataFrames 和动态数组](index_split_028.html#filepos1695089)
- en: CSS (Cascading Style Sheets), [Formatting a DataFrame’s data part](index_split_022.html#filepos1222109)
  id: totrans-698
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSS（层叠样式表），[格式化 DataFrame 的数据部分](index_split_022.html#filepos1222109)
- en: CSV files
  id: totrans-699
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSV 文件
- en: exporting DataFrame data as, [Exporting CSV Files](index_split_016.html#filepos745826)-[Exporting
    CSV Files](index_split_016.html#filepos748395)
  id: totrans-700
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 DataFrame 数据导出为，[导出 CSV 文件](index_split_016.html#filepos745826)-[导出 CSV 文件](index_split_016.html#filepos748395)
- en: importing to DataFrames, [Importing CSV Files](index_split_016.html#filepos748628)-[Importing
    CSV Files](index_split_016.html#filepos764876)
  id: totrans-701
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入到 DataFrames，[导入 CSV 文件](index_split_016.html#filepos748628)-[导入 CSV 文件](index_split_016.html#filepos764876)
- en: cuDF, [Limitations with pandas](index_split_017.html#filepos861209)
  id: totrans-702
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cuDF，[与 pandas 的限制](index_split_017.html#filepos861209)
- en: current directory
  id: totrans-703
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前目录
- en: in Windows, listing files in, [Anaconda Prompt](index_split_008.html#filepos110263)
  id: totrans-704
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 中，列出文件在，[Anaconda Prompt](index_split_008.html#filepos110263)
- en: in macOS
  id: totrans-705
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 macOS
- en: listing files in, [Anaconda Prompt](index_split_008.html#filepos110600)
  id: totrans-706
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出文件在，[Anaconda Prompt](index_split_008.html#filepos110600)
- en: viewing full path, [Anaconda Prompt](index_split_008.html#filepos105254)
  id: totrans-707
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看完整路径，[Anaconda Prompt](index_split_008.html#filepos105254)
- en: 'custom add-ins (xlwings), [Standalone Workbooks: Getting Rid of the xlwings
    Add-in](index_split_026.html#filepos1477721), [UDF Quickstart](index_split_028.html#filepos1678327)'
  id: totrans-708
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义插件（xlwings），[独立工作簿：摆脱 xlwings 插件](index_split_026.html#filepos1477721), [UDF
    快速入门](index_split_028.html#filepos1678327)
- en: custom functions (see UDFs)
  id: totrans-709
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义函数（参见 UDFs）
- en: D
  id: totrans-710
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: D
- en: Dask, [Limitations with pandas](index_split_017.html#filepos860975)
  id: totrans-711
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dask，[与 pandas 的限制](index_split_017.html#filepos860975)
- en: data alignment (pandas), [Data Analysis with pandas](index_split_015.html#filepos483705),
    [Index](index_split_015.html#filepos509147), [Arithmetic Operations](index_split_015.html#filepos619204)
  id: totrans-712
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据对齐（pandas），[使用 pandas 进行数据分析](index_split_015.html#filepos483705), [索引](index_split_015.html#filepos509147),
    [算术操作](index_split_015.html#filepos619204)
- en: Data Analysis Expressions (DAX), [Preface](index_split_003.html#filepos9339)
  id: totrans-713
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据分析表达式（DAX），[前言](index_split_003.html#filepos9339)
- en: data analysis with pandas (see pandas)
  id: totrans-714
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 pandas 进行数据分析（参见 pandas）
- en: data layer, [Separation of concerns](index_split_007.html#filepos44428)
  id: totrans-715
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据层，[关注点分离](index_split_007.html#filepos44428)
- en: data parts (DataFrames), formatting, [Formatting a DataFrame’s data part](index_split_022.html#filepos1205675)-[Formatting
    a DataFrame’s data part](index_split_022.html#filepos1224706)
  id: totrans-716
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据部分（DataFrames），格式化，[格式化 DataFrame 的数据部分](index_split_022.html#filepos1205675)-[格式化
    DataFrame 的数据部分](index_split_022.html#filepos1224706)
- en: data structures
  id: totrans-717
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据结构
- en: dictionaries, [Dictionaries](index_split_011.html#filepos268897)-[Dictionaries](index_split_011.html#filepos285555)
  id: totrans-718
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典，[字典](index_split_011.html#filepos268897)-[字典](index_split_011.html#filepos285555)
- en: list of, [Sets](index_split_011.html#filepos302517)
  id: totrans-719
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表，[集合](index_split_011.html#filepos302517)
- en: lists, [Lists](index_split_011.html#filepos243228)-[Lists](index_split_011.html#filepos268531)
  id: totrans-720
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表，[列表](index_split_011.html#filepos243228)-[列表](index_split_011.html#filepos268531)
- en: purpose of, [Data Structures](index_split_011.html#filepos242442)
  id: totrans-721
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[数据结构](index_split_011.html#filepos242442)
- en: sets, [Sets](index_split_011.html#filepos290624)-[Sets](index_split_011.html#filepos302517)
  id: totrans-722
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合，[集合](index_split_011.html#filepos290624)-[集合](index_split_011.html#filepos302517)
- en: tuples, [Tuples](index_split_011.html#filepos285858)
  id: totrans-723
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组，[元组](index_split_011.html#filepos285858)
- en: in VBA, [Data Structures](index_split_011.html#filepos242442)
  id: totrans-724
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 VBA 中，[数据结构](index_split_011.html#filepos242442)
- en: data types
  id: totrans-725
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据类型
- en: boolean, [Booleans](index_split_011.html#filepos205063)-[Booleans](index_split_011.html#filepos217752),
    [The read_excel Function and ExcelFile Class](index_split_019.html#filepos891785)
  id: totrans-726
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔值，[布尔值](index_split_011.html#filepos205063)-[布尔值](index_split_011.html#filepos217752)，[read_excel函数和ExcelFile类](index_split_019.html#filepos891785)
- en: converting with excel.py module, [The excel.py Module](index_split_021.html#filepos973831)-[The
    excel.py Module](index_split_021.html#filepos977785)
  id: totrans-727
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用excel.py模块转换，[excel.py模块](index_split_021.html#filepos973831)-[excel.py模块](index_split_021.html#filepos977785)
- en: in DataFrames, [DataFrame and Series](index_split_015.html#filepos498597)
  id: totrans-728
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在数据帧中，[数据帧和系列](index_split_015.html#filepos498597)
- en: datetime, converting strings to, [Creating a DatetimeIndex](index_split_017.html#filepos783176)
  id: totrans-729
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime，字符串转换为，[创建DatetimeIndex](index_split_017.html#filepos783176)
- en: mutable versus immutable, [Mutable vs. Immutable Python Objects](index_split_031.html#filepos1865731)
  id: totrans-730
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可变与不可变，[Python中可变与不可变对象](index_split_031.html#filepos1865731)
- en: numeric, [Numeric Types](index_split_011.html#filepos189160)-[Numeric Types](index_split_011.html#filepos194525)
  id: totrans-731
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值，[数值类型](index_split_011.html#filepos189160)-[数值类型](index_split_011.html#filepos194525)
- en: of NumPy arrays, [NumPy Array](index_split_014.html#filepos445451)-[NumPy Array](index_split_014.html#filepos447897)
  id: totrans-732
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: NumPy数组，[NumPy数组](index_split_014.html#filepos445451)-[NumPy数组](index_split_014.html#filepos447897)
- en: purpose of, [Data Types](index_split_010.html#filepos180377)
  id: totrans-733
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[数据类型](index_split_010.html#filepos180377)
- en: strings, [Strings](index_split_011.html#filepos217986)-[Strings](index_split_011.html#filepos227137)
  id: totrans-734
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串，[字符串](index_split_011.html#filepos217986)-[字符串](index_split_011.html#filepos227137)
- en: data validation in Python Package Tracker, [Frontend](index_split_027.html#filepos1614044)
  id: totrans-735
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python包跟踪器中的数据验证，[前端](index_split_027.html#filepos1614044)
- en: Data Viewer (VS Code), [Run Jupyter Notebooks](index_split_030.html#filepos1828467)
  id: totrans-736
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据查看器（VS Code），[运行Jupyter笔记本](index_split_030.html#filepos1828467)
- en: data viewer, Excel as, [Using Excel as Data Viewer](index_split_024.html#filepos1239513)-[Using
    Excel as Data Viewer](index_split_024.html#filepos1248699)
  id: totrans-737
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据查看器，Excel作为，[使用Excel作为数据查看器](index_split_024.html#filepos1239513)-[使用Excel作为数据查看器](index_split_024.html#filepos1248699)
- en: database.py example, [Backend](index_split_027.html#filepos1634047)
  id: totrans-738
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: database.py示例，[后端](index_split_027.html#filepos1634047)
- en: databases
  id: totrans-739
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库
- en: connections, [Database connections](index_split_027.html#filepos1529652)-[Database
    connections](index_split_027.html#filepos1537920)
  id: totrans-740
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接，[数据库连接](index_split_027.html#filepos1529652)-[数据库连接](index_split_027.html#filepos1537920)
- en: SQL injection, [SQL injection](index_split_027.html#filepos1563158)-[SQL injection](index_split_027.html#filepos1579942)
  id: totrans-741
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL注入，[SQL注入](index_split_027.html#filepos1563158)-[SQL注入](index_split_027.html#filepos1579942)
- en: SQL queries, [SQL queries](index_split_027.html#filepos1538233)-[SQL queries](index_split_027.html#filepos1562882)
  id: totrans-742
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL查询，[SQL查询](index_split_027.html#filepos1538233)-[SQL查询](index_split_027.html#filepos1562882)
- en: structure for Python Package Tracker case study, [The Package Tracker database](index_split_027.html#filepos1520310)-[The
    Package Tracker database](index_split_027.html#filepos1529401)
  id: totrans-743
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python包跟踪器案例研究结构，[包跟踪器数据库](index_split_027.html#filepos1520310)-[包跟踪器数据库](index_split_027.html#filepos1529401)
- en: types of, [Databases](index_split_027.html#filepos1515417)-[Databases](index_split_027.html#filepos1519777)
  id: totrans-744
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型，[数据库](index_split_027.html#filepos1515417)-[数据库](index_split_027.html#filepos1519777)
- en: DataFrames
  id: totrans-745
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据帧
- en: applying functions, [Applying a Function](index_split_015.html#filepos641087)-[Applying
    a Function](index_split_015.html#filepos649303)
  id: totrans-746
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用函数，[应用函数](index_split_015.html#filepos641087)-[应用函数](index_split_015.html#filepos649303)
- en: arithmetic operations, [Arithmetic Operations](index_split_015.html#filepos617369)-[Arithmetic
    Operations](index_split_015.html#filepos633672)
  id: totrans-747
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 算术运算，[算术运算](index_split_015.html#filepos617369)-[算术运算](index_split_015.html#filepos633672)
- en: columns, [Columns](index_split_015.html#filepos512954)-[Columns](index_split_015.html#filepos524119)
  id: totrans-748
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列，[列](index_split_015.html#filepos512954)-[列](index_split_015.html#filepos524119)
- en: concatenating, [Concatenating](index_split_016.html#filepos653577)-[Concatenating](index_split_016.html#filepos667519)
  id: totrans-749
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接，[连接](index_split_016.html#filepos653577)-[连接](index_split_016.html#filepos667519)
- en: copies
  id: totrans-750
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拷贝
- en: returned by methods, [Index](index_split_015.html#filepos506311)
  id: totrans-751
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法返回，[索引](index_split_015.html#filepos506311)
- en: views versus, [View vs. Copy](index_split_015.html#filepos649623)
  id: totrans-752
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视图与，[视图与副本](index_split_015.html#filepos649623)
- en: creating, [DataFrame and Series](index_split_015.html#filepos489479)
  id: totrans-753
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建，[数据帧和系列](index_split_015.html#filepos489479)
- en: descriptive statistics, [Descriptive Statistics](index_split_016.html#filepos691290)-[Descriptive
    Statistics](index_split_016.html#filepos695190)
  id: totrans-754
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述性统计，[描述性统计](index_split_016.html#filepos691290)-[描述性统计](index_split_016.html#filepos695190)
- en: duplicate data, [Duplicate Data](index_split_015.html#filepos608897)-[Duplicate
    Data](index_split_015.html#filepos617033)
  id: totrans-755
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复数据，[重复数据](index_split_015.html#filepos608897)-[重复数据](index_split_015.html#filepos617033)
- en: Excel spreadsheets versus, [DataFrame and Series](index_split_015.html#filepos485631)-[DataFrame
    and Series](index_split_015.html#filepos489337)
  id: totrans-756
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 电子表格与，[数据框和系列](index_split_015.html#filepos485631)-[数据框和系列](index_split_015.html#filepos489337)
- en: exploration methods, [Importing CSV Files](index_split_016.html#filepos758459)
  id: totrans-757
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索方法，[导入 CSV 文件](index_split_016.html#filepos758459)
- en: exporting
  id: totrans-758
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出
- en: as CSV files, [Exporting CSV Files](index_split_016.html#filepos745826)-[Exporting
    CSV Files](index_split_016.html#filepos748395)
  id: totrans-759
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为 CSV 文件，[导出 CSV 文件](index_split_016.html#filepos745826)-[导出 CSV 文件](index_split_016.html#filepos748395)
- en: purpose of, [Importing and Exporting DataFrames](index_split_016.html#filepos740480)
  id: totrans-760
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[导入和导出数据框](index_split_016.html#filepos740480)
- en: formatting in Excel, [Formatting DataFrames in Excel](index_split_022.html#filepos1157749)-[Formatting
    a DataFrame’s data part](index_split_022.html#filepos1224706)
  id: totrans-761
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Excel 中格式化，[在 Excel 中格式化数据框](index_split_022.html#filepos1157749)-[格式化数据框的数据部分](index_split_022.html#filepos1224706)
- en: in Google Trends case study, [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1682486)-[Working
    with DataFrames and Dynamic Arrays](index_split_028.html#filepos1714516)
  id: totrans-762
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Google Trends 案例研究中，[操作数据框和动态数组](index_split_028.html#filepos1682486)-[操作数据框和动态数组](index_split_028.html#filepos1714516)
- en: grouping data, [Grouping](index_split_016.html#filepos695504)
  id: totrans-763
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分组数据，[分组](index_split_016.html#filepos695504)
- en: importing
  id: totrans-764
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入
- en: as CSV files, [Importing CSV Files](index_split_016.html#filepos748628)-[Importing
    CSV Files](index_split_016.html#filepos764876)
  id: totrans-765
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为 CSV 文件，[导入 CSV 文件](index_split_016.html#filepos748628)-[导入 CSV 文件](index_split_016.html#filepos764876)
- en: purpose of, [Importing and Exporting DataFrames](index_split_016.html#filepos740480)
  id: totrans-766
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[导入和导出数据框](index_split_016.html#filepos740480)
- en: indices, [Index](index_split_015.html#filepos498949)-[Index](index_split_015.html#filepos512717)
  id: totrans-767
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引，[索引](index_split_015.html#filepos498949)-[索引](index_split_015.html#filepos512717)
- en: joining, [Joining and Merging](index_split_016.html#filepos667765)-[Joining
    and Merging](index_split_016.html#filepos690380)
  id: totrans-768
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接，[连接和合并](index_split_016.html#filepos667765)-[连接和合并](index_split_016.html#filepos690380)
- en: limitations, [Limitations with pandas](index_split_017.html#filepos860285)
  id: totrans-769
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制，[pandas 的限制](index_split_017.html#filepos860285)
- en: melting data, [Pivoting and Melting](index_split_016.html#filepos712684)
  id: totrans-770
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 融合数据，[数据透视和融合](index_split_016.html#filepos712684)
- en: merging, [Joining and Merging](index_split_016.html#filepos682873)-[Joining
    and Merging](index_split_016.html#filepos690380)
  id: totrans-771
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并，[连接和合并](index_split_016.html#filepos682873)-[连接和合并](index_split_016.html#filepos690380)
- en: missing data, [Missing Data](index_split_015.html#filepos598810)-[Missing Data](index_split_015.html#filepos608614)
  id: totrans-772
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失数据，[缺失数据](index_split_015.html#filepos598810)-[缺失数据](index_split_015.html#filepos608614)
- en: pivoting data, [Pivoting and Melting](index_split_016.html#filepos701536)-[Pivoting
    and Melting](index_split_016.html#filepos716422)
  id: totrans-773
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 透视数据，[数据透视和融合](index_split_016.html#filepos701536)-[数据透视和融合](index_split_016.html#filepos716422)
- en: plotting
  id: totrans-774
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绘图
- en: list of plotting libraries, [Plotly](index_split_016.html#filepos738084)
  id: totrans-775
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绘图库列表，[Plotly](index_split_016.html#filepos738084)
- en: with Matplotlib, [Matplotlib](index_split_016.html#filepos717479)-[Matplotlib](index_split_016.html#filepos727877)
  id: totrans-776
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Matplotlib，[Matplotlib](index_split_016.html#filepos717479)-[Matplotlib](index_split_016.html#filepos727877)
- en: with Plotly, [Plotly](index_split_016.html#filepos728120)-[Plotly](index_split_016.html#filepos737814)
  id: totrans-777
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Plotly，[Plotly](index_split_016.html#filepos728120)-[Plotly](index_split_016.html#filepos737814)
- en: purpose of, [Plotting](index_split_016.html#filepos716977)
  id: totrans-778
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[绘图](index_split_016.html#filepos716977)
- en: reading/writing in Excel with xlwings, [Working with DataFrames](index_split_025.html#filepos1324128)-[Working
    with DataFrames](index_split_025.html#filepos1340369)
  id: totrans-779
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Excel 中使用 xlwings 进行读写，[操作数据框](index_split_025.html#filepos1324128)-[操作数据框](index_split_025.html#filepos1340369)
- en: selecting data
  id: totrans-780
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择数据
- en: by boolean indexing, [Selecting by boolean indexing](index_split_015.html#filepos549780)-[Selecting
    by boolean indexing](index_split_015.html#filepos567453)
  id: totrans-781
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用布尔索引，[通过布尔索引进行选择](index_split_015.html#filepos549780)-[通过布尔索引进行选择](index_split_015.html#filepos567453)
- en: by label, [Selecting by label](index_split_015.html#filepos525461)-[Selecting
    by label](index_split_015.html#filepos538911)
  id: totrans-782
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按标签，[按标签选择](index_split_015.html#filepos525461)-[按标签选择](index_split_015.html#filepos538911)
- en: with MultiIndexes, [Selecting by using a MultiIndex](index_split_015.html#filepos567793)-[Selecting
    by using a MultiIndex](index_split_015.html#filepos575571)
  id: totrans-783
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 MultiIndexes，[使用 MultiIndex 进行选择](index_split_015.html#filepos567793)-[使用
    MultiIndex 进行选择](index_split_015.html#filepos575571)
- en: by position, [Selecting by position](index_split_015.html#filepos539083)-[Selecting
    by position](index_split_015.html#filepos549467)
  id: totrans-784
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按位置，[按位置选择](index_split_015.html#filepos539083)-[按位置选择](index_split_015.html#filepos549467)
- en: Series versus, [DataFrame and Series](index_split_015.html#filepos484520)-[DataFrame
    and Series](index_split_015.html#filepos485550), [Selecting by label](index_split_015.html#filepos536695)
  id: totrans-785
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Series 对比，[DataFrame 和 Series](index_split_015.html#filepos484520)-[DataFrame
    和 Series](index_split_015.html#filepos485550)，[按标签选择](index_split_015.html#filepos536695)
- en: setting data
  id: totrans-786
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置数据
- en: by adding columns, [Setting data by adding a new column](index_split_015.html#filepos592331)
  id: totrans-787
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过添加列，[通过添加新列设置数据](index_split_015.html#filepos592331)
- en: by boolean indexing, [Setting data by boolean indexing](index_split_015.html#filepos582259)-[Setting
    data by boolean indexing](index_split_015.html#filepos589159)
  id: totrans-788
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过布尔索引，[通过布尔索引设置数据](index_split_015.html#filepos582259)-[通过布尔索引设置数据](index_split_015.html#filepos589159)
- en: by label, [Setting data by label or position](index_split_015.html#filepos576247)
  id: totrans-789
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按标签，[按标签或位置设置数据](index_split_015.html#filepos576247)
- en: by position, [Setting data by label or position](index_split_015.html#filepos576247)
  id: totrans-790
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按位置，[按标签或位置设置数据](index_split_015.html#filepos576247)
- en: by replacing values, [Setting data by replacing values](index_split_015.html#filepos589332)
  id: totrans-791
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过替换值，[通过替换值设置数据](index_split_015.html#filepos589332)
- en: SQL queries versus, [SQL queries](index_split_027.html#filepos1540168)
  id: totrans-792
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 查询对比，[SQL 查询](index_split_027.html#filepos1540168)
- en: text columns, [Working with Text Columns](index_split_015.html#filepos634000)
  id: totrans-793
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本列，[处理文本列](index_split_015.html#filepos634000)
- en: time series analysis (see time series analysis)
  id: totrans-794
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析（参见时间序列分析）
- en: transposing, [Columns](index_split_015.html#filepos520188)
  id: totrans-795
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转置，[列](index_split_015.html#filepos520188)
- en: date serial number (Excel), [The datetime Class](index_split_012.html#filepos393168)
  id: totrans-796
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期序列号（Excel），[datetime 类](index_split_012.html#filepos393168)
- en: datetime data type, converting strings to, [Creating a DatetimeIndex](index_split_017.html#filepos783176)
  id: totrans-797
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime 数据类型，将字符串转换为，[创建一个DatetimeIndex](index_split_017.html#filepos783176)
- en: datetime module, [The datetime Class](index_split_012.html#filepos392883)-[The
    datetime Class](index_split_012.html#filepos408810), [Working with Time-Zone-Aware
    datetime Objects](index_split_031.html#filepos1848019)-[Working with Time-Zone-Aware
    datetime Objects](index_split_031.html#filepos1862968)
  id: totrans-798
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime 模块，[datetime 类](index_split_012.html#filepos392883)-[datetime 类](index_split_012.html#filepos408810)，[处理时区感知的datetime对象](index_split_031.html#filepos1848019)-[处理时区感知的datetime对象](index_split_031.html#filepos1862968)
- en: DatetimeIndex (pandas)
  id: totrans-799
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DatetimeIndex（pandas）
- en: creating, [Creating a DatetimeIndex](index_split_017.html#filepos770795)-[Creating
    a DatetimeIndex](index_split_017.html#filepos794737)
  id: totrans-800
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建，[创建一个DatetimeIndex](index_split_017.html#filepos770795)-[创建一个DatetimeIndex](index_split_017.html#filepos794737)
- en: filtering, [Filtering a DatetimeIndex](index_split_017.html#filepos794993)-[Filtering
    a DatetimeIndex](index_split_017.html#filepos798956)
  id: totrans-801
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过滤，[过滤DatetimeIndex](index_split_017.html#filepos794993)-[过滤DatetimeIndex](index_split_017.html#filepos798956)
- en: time zones in, [Working with Time Zones](index_split_017.html#filepos799257)-[Working
    with Time Zones](index_split_017.html#filepos808759)
  id: totrans-802
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时区在，[处理时区](index_split_017.html#filepos799257)-[处理时区](index_split_017.html#filepos808759)
- en: dateutil package, [Working with Time-Zone-Aware datetime Objects](index_split_031.html#filepos1848527)
  id: totrans-803
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dateutil 包，[处理时区感知的datetime对象](index_split_031.html#filepos1848527)
- en: date_range function (pandas), [Creating a DatetimeIndex](index_split_017.html#filepos770851)
  id: totrans-804
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: date_range 函数（pandas），[创建一个DatetimeIndex](index_split_017.html#filepos770851)
- en: DAX (Data Analysis Expressions), [Preface](index_split_003.html#filepos9339)
  id: totrans-805
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DAX（数据分析表达式），[前言](index_split_003.html#filepos9339)
- en: deactivating Conda environments, [Create a New Conda Environment](index_split_029.html#filepos1816090)
  id: totrans-806
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停用 Conda 环境，[创建一个新的Conda环境](index_split_029.html#filepos1816090)
- en: debugging
  id: totrans-807
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试
- en: Python Package Tracker, [Debugging](index_split_027.html#filepos1644656)-[Debugging](index_split_027.html#filepos1651460)
  id: totrans-808
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 包追踪器，[调试](index_split_027.html#filepos1644656)-[调试](index_split_027.html#filepos1651460)
- en: in text editor, [Visual Studio Code](index_split_009.html#filepos156231)
  id: totrans-809
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在文本编辑器中，[Visual Studio Code](index_split_009.html#filepos156231)
- en: UDFs, [Debugging UDFs](index_split_028.html#filepos1755260)-[Debugging UDFs](index_split_028.html#filepos1760605)
  id: totrans-810
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: UDFs，[调试UDFs](index_split_028.html#filepos1755260)-[调试UDFs](index_split_028.html#filepos1760605)
- en: in VS Code, [Debugger](index_split_030.html#filepos1821433)-[Debugger](index_split_030.html#filepos1825904)
  id: totrans-811
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 VS Code 中，[调试器](index_split_030.html#filepos1821433)-[调试器](index_split_030.html#filepos1825904)
- en: decimal data type, [Numeric Types](index_split_011.html#filepos194226)
  id: totrans-812
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 十进制数据类型，[数值类型](index_split_011.html#filepos194226)
- en: declarative languages, [SQL queries](index_split_027.html#filepos1538408)
  id: totrans-813
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 声明性语言，[SQL 查询](index_split_027.html#filepos1538408)
- en: decorators (xlwings)
  id: totrans-814
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 装饰器（xlwings）
- en: order of, [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1709067)
  id: totrans-815
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 的顺序，[使用数据框和动态数组工作](index_split_028.html#filepos1709067)
- en: purpose of, [UDF Quickstart](index_split_028.html#filepos1661857)
  id: totrans-816
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 的目的，[UDF 快速入门](index_split_028.html#filepos1661857)
- en: sub decorator, [The Sub Decorator](index_split_028.html#filepos1795393)-[The
    Sub Decorator](index_split_028.html#filepos1804381)
  id: totrans-817
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子装饰器，[子装饰器](index_split_028.html#filepos1795393)-[子装饰器](index_split_028.html#filepos1804381)
- en: deep copies, [Mutable vs. Immutable Python Objects](index_split_031.html#filepos1881228)
  id: totrans-818
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深度拷贝，[可变 vs. 不可变 Python 对象](index_split_031.html#filepos1881228)
- en: def keyword, [Defining functions](index_split_012.html#filepos362541)
  id: totrans-819
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: def 关键字，[定义函数](index_split_012.html#filepos362541)
- en: default arguments, mutable objects as, [Functions with Mutable Objects as Default
    Arguments](index_split_031.html#filepos1896791)
  id: totrans-820
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认参数，可变对象作为，[具有可变对象作为默认参数的函数](index_split_031.html#filepos1896791)
- en: defined names (Excel), creating in xlwings, [Defined names](index_split_025.html#filepos1390078)-[Defined
    names](index_split_025.html#filepos1400526)
  id: totrans-821
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义名称（Excel），在 xlwings 中创建，[定义名称](index_split_025.html#filepos1390078)-[定义名称](index_split_025.html#filepos1400526)
- en: defining functions, [Defining functions](index_split_012.html#filepos362480)
  id: totrans-822
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义函数，[定义函数](index_split_012.html#filepos362480)
- en: del statement (lists), [Lists](index_split_011.html#filepos260070)
  id: totrans-823
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: del 语句（列表），[列表](index_split_011.html#filepos260070)
- en: deleting
  id: totrans-824
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除
- en: columns (pandas), [Columns](index_split_015.html#filepos517912)
  id: totrans-825
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列（pandas），[列](index_split_015.html#filepos517912)
- en: Conda environments, [Create a New Conda Environment](index_split_029.html#filepos1816460)
  id: totrans-826
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Conda 环境，[创建一个新的 Conda 环境](index_split_029.html#filepos1816460)
- en: elements from lists, [Lists](index_split_011.html#filepos260070)
  id: totrans-827
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从列表中提取元素，[列表](index_split_011.html#filepos260070)
- en: dependencies
  id: totrans-828
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖项
- en: xlwings deployment, [Python Dependency](index_split_026.html#filepos1472746)-[Python
    Dependency](index_split_026.html#filepos1475110)
  id: totrans-829
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 部署, [Python 依赖](index_split_026.html#filepos1472746)-[Python 依赖](index_split_026.html#filepos1475110)
- en: in xlwings, [xlwings Foundations](index_split_025.html#filepos1410868)
  id: totrans-830
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 xlwings 中，[xlwings 基础](index_split_025.html#filepos1410868)
- en: deployment
  id: totrans-831
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署
- en: defined, [Deployment](index_split_026.html#filepos1472064)
  id: totrans-832
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已定义，[部署](index_split_026.html#filepos1472064)
- en: of xlwings
  id: totrans-833
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 xlwings
- en: configuration hierarchy, [Configuration Hierarchy](index_split_026.html#filepos1478189)
  id: totrans-834
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置层次结构，[配置层次结构](index_split_026.html#filepos1478189)
- en: Python dependencies, [Python Dependency](index_split_026.html#filepos1472746)-[Python
    Dependency](index_split_026.html#filepos1475110)
  id: totrans-835
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 依赖项，[Python 依赖](index_split_026.html#filepos1472746)-[Python 依赖](index_split_026.html#filepos1475110)
- en: settings, [Settings](index_split_026.html#filepos1480593)-[Settings](index_split_026.html#filepos1484138)
  id: totrans-836
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置，[设置](index_split_026.html#filepos1480593)-[设置](index_split_026.html#filepos1484138)
- en: 'standalone workbooks, [Standalone Workbooks: Getting Rid of the xlwings Add-in](index_split_026.html#filepos1475399)-[Standalone
    Workbooks: Getting Rid of the xlwings Add-in](index_split_026.html#filepos1477920)'
  id: totrans-837
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 独立工作簿，[独立工作簿：摆脱 xlwings 插件](index_split_026.html#filepos1475399)-[独立工作簿：摆脱 xlwings
    插件](index_split_026.html#filepos1477920)
- en: describe.py example, [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1682978)
  id: totrans-838
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: describe.py 示例，[使用数据框和动态数组工作](index_split_028.html#filepos1682978)
- en: descriptive statistics, [Descriptive Statistics](index_split_016.html#filepos691290)-[Descriptive
    Statistics](index_split_016.html#filepos695190)
  id: totrans-839
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述统计，[描述统计](index_split_016.html#filepos691290)-[描述统计](index_split_016.html#filepos695190)
- en: deterministic functions, [Caching](index_split_028.html#filepos1775539)
  id: totrans-840
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定性函数，[缓存](index_split_028.html#filepos1775539)
- en: development environment (see Anaconda; Jupyter notebooks; VS Code)
  id: totrans-841
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发环境（参见 Anaconda; Jupyter 笔记本; VS Code）
- en: dict constructor, [Sets](index_split_011.html#filepos302517)
  id: totrans-842
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典构造函数，[集合](index_split_011.html#filepos302517)
- en: dictionaries, [Dictionaries](index_split_011.html#filepos268897)-[Dictionaries](index_split_011.html#filepos285555)
  id: totrans-843
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典，[字典](index_split_011.html#filepos268897)-[字典](index_split_011.html#filepos285555)
- en: dictionary comprehensions, [List, Dictionary, and Set Comprehensions](index_split_012.html#filepos355651)
  id: totrans-844
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典推导式，[列表、字典和集合推导式](index_split_012.html#filepos355651)
- en: dir command, [Anaconda Prompt](index_split_008.html#filepos110263)
  id: totrans-845
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dir 命令，[Anaconda 命令提示符](index_split_008.html#filepos110263)
- en: directories
  id: totrans-846
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目录
- en: changing, [Anaconda Prompt](index_split_008.html#filepos111447)
  id: totrans-847
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改，[Anaconda 命令提示符](index_split_008.html#filepos111447)
- en: current directory
  id: totrans-848
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前目录
- en: listing files in, [Anaconda Prompt](index_split_008.html#filepos110263)
  id: totrans-849
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 [Anaconda 命令提示符](index_split_008.html#filepos110263) 中列出文件
- en: viewing full path, [Anaconda Prompt](index_split_008.html#filepos105254)
  id: totrans-850
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看完整路径，[Anaconda 命令提示符](index_split_008.html#filepos105254)
- en: parent directory, changing to, [Anaconda Prompt](index_split_008.html#filepos112850)
  id: totrans-851
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 父目录，切换到，[Anaconda提示符](index_split_008.html#filepos112850)
- en: disabling auto activation of Conda environments, [Disable Auto Activation](index_split_029.html#filepos1818091)
  id: totrans-852
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用Conda环境的自动激活，[禁用自动激活](index_split_029.html#filepos1818091)
- en: 'docstrings, [PEP 8: Style Guide for Python Code](index_split_012.html#filepos420835)'
  id: totrans-853
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档字符串，[PEP 8：Python代码风格指南](index_split_012.html#filepos420835)
- en: documentation, [Strings](index_split_011.html#filepos225822)
  id: totrans-854
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档，[字符串](index_split_011.html#filepos225822)
- en: dot notation, [Attributes and methods](index_split_011.html#filepos187525)
  id: totrans-855
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点符号表示法，[属性和方法](index_split_011.html#filepos187525)
- en: downsampling, [Resampling](index_split_017.html#filepos847090)
  id: totrans-856
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 降采样，[重采样](index_split_017.html#filepos847090)
- en: drivers (for databases), [Database connections](index_split_027.html#filepos1529652)-[Database
    connections](index_split_027.html#filepos1537920)
  id: totrans-857
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 驱动程序（用于数据库），[数据库连接](index_split_027.html#filepos1529652)-[数据库连接](index_split_027.html#filepos1537920)
- en: dropna method (pandas), [Missing Data](index_split_015.html#filepos602631)
  id: totrans-858
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dropna方法（pandas），[缺失数据](index_split_015.html#filepos602631)
- en: drop_duplicates method (pandas), [Duplicate Data](index_split_015.html#filepos609015)
  id: totrans-859
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: drop_duplicates方法（pandas），[重复数据](index_split_015.html#filepos609015)
- en: DRY principle, [DRY principle](index_split_007.html#filepos46294)
  id: totrans-860
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DRY原则，[DRY原则](index_split_007.html#filepos46294)
- en: duplicate data in DataFrames, [Duplicate Data](index_split_015.html#filepos608897)-[Duplicate
    Data](index_split_015.html#filepos617033)
  id: totrans-861
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据框中的重复数据，[重复数据](index_split_015.html#filepos608897)-[重复数据](index_split_015.html#filepos617033)
- en: duplicated method (pandas), [Duplicate Data](index_split_015.html#filepos612773)
  id: totrans-862
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: duplicated方法（pandas），[重复数据](index_split_015.html#filepos612773)
- en: dynamic arrays (Excel), [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1682486)-[Working
    with DataFrames and Dynamic Arrays](index_split_028.html#filepos1714516)
  id: totrans-863
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态数组（Excel），[使用数据框和动态数组工作](index_split_028.html#filepos1682486)-[使用数据框和动态数组工作](index_split_028.html#filepos1714516)
- en: dynamic typing, [Variables](index_split_010.html#filepos183257)
  id: totrans-864
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态类型，[变量](index_split_010.html#filepos183257)
- en: E
  id: totrans-865
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: E
- en: edit mode (Jupyter notebooks), [Edit vs. Command Mode](index_split_009.html#filepos140230)-[Edit
    vs. Command Mode](index_split_009.html#filepos145012)
  id: totrans-866
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑模式（Jupyter笔记本），[编辑 vs. 命令模式](index_split_009.html#filepos140230)-[编辑 vs. 命令模式](index_split_009.html#filepos145012)
- en: editing files (Excel)
  id: totrans-867
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑文件（Excel）
- en: with OpenPyXL, [Editing with OpenPyXL](index_split_021.html#filepos1033340)-[Editing
    with OpenPyXL](index_split_021.html#filepos1039562)
  id: totrans-868
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OpenPyXL，[使用OpenPyXL进行编辑](index_split_021.html#filepos1033340)-[使用OpenPyXL进行编辑](index_split_021.html#filepos1039562)
- en: with xlutils, [Editing with xlutils](index_split_022.html#filepos1119688)
  id: totrans-869
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用xlutils，[使用xlutils进行编辑](index_split_022.html#filepos1119688)
- en: elements of arrays (NumPy), getting and setting, [Getting and Setting Array
    Elements](index_split_014.html#filepos463404)-[Getting and Setting Array Elements](index_split_014.html#filepos470575)
  id: totrans-870
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数组元素（NumPy），获取和设置，[获取和设置数组元素](index_split_014.html#filepos463404)-[获取和设置数组元素](index_split_014.html#filepos470575)
- en: Emacs, [Running a Python Script](index_split_009.html#filepos174170)
  id: totrans-871
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Emacs，[运行Python脚本](index_split_009.html#filepos174170)
- en: enabling macros (Excel), [RunPython Function](index_split_026.html#filepos1459885)
  id: totrans-872
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用宏（Excel），[RunPython函数](index_split_026.html#filepos1459885)
- en: 'ending interactive Python session, [Python REPL: An Interactive Python Session](index_split_008.html#filepos118780)'
  id: totrans-873
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结束交互式Python会话，[Python REPL：交互式Python会话](index_split_008.html#filepos118780)
- en: endpoints, [Web APIs](index_split_027.html#filepos1505232)
  id: totrans-874
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端点，[Web API](index_split_027.html#filepos1505232)
- en: engine parameter (read_excel or to_excel functions), [When to Use Which Package](index_split_021.html#filepos971083)
  id: totrans-875
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引擎参数（read_excel或to_excel函数），[何时使用哪个包](index_split_021.html#filepos971083)
- en: enumerate function, [The for and while Loops](index_split_012.html#filepos328659)
  id: totrans-876
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: enumerate函数，[for和while循环](index_split_012.html#filepos328659)
- en: environment variables, [Settings](index_split_026.html#filepos1482074)
  id: totrans-877
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境变量，[设置](index_split_026.html#filepos1482074)
- en: error handling
  id: totrans-878
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误处理
- en: in Python Package Tracker, [Exceptions](index_split_027.html#filepos1580257)-[Exceptions](index_split_027.html#filepos1601081)
  id: totrans-879
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Python包追踪器中，[异常](index_split_027.html#filepos1580257)-[异常](index_split_027.html#filepos1601081)
- en: in VBA, [Modern Language Features](index_split_007.html#filepos81423)
  id: totrans-880
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VBA中，[现代语言特性](index_split_007.html#filepos81423)
- en: escape characters in strings, [Strings](index_split_011.html#filepos219648)
  id: totrans-881
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串中的转义字符，[字符串](index_split_011.html#filepos219648)
- en: EuSpRIG (European Spreadsheet Risks Interest Group), [Excel in the News](index_split_007.html#filepos40774)
  id: totrans-882
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EuSpRIG（欧洲电子表格风险兴趣组），[Excel新闻](index_split_007.html#filepos40774)
- en: examples
  id: totrans-883
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例
- en: add_package function (Python Package Tracker), [Backend](index_split_027.html#filepos1621394)-[Backend](index_split_027.html#filepos1633823)
  id: totrans-884
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: add_package函数（Python包追踪器），[后端](index_split_027.html#filepos1621394)-[后端](index_split_027.html#filepos1633823)
- en: database.py, [Backend](index_split_027.html#filepos1634047)
  id: totrans-885
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: database.py，[后端](index_split_027.html#filepos1634047)
- en: describe.py, [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1682978)
  id: totrans-886
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: describe.py，[与数据框和动态数组一起工作](index_split_028.html#filepos1682978)
- en: first_project.py, [Run Main](index_split_026.html#filepos1449910)-[Run Main](index_split_026.html#filepos1458891)
  id: totrans-887
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: first_project.py，[运行主程序](index_split_026.html#filepos1449910)-[运行主程序](index_split_026.html#filepos1458891)
- en: first_udf.py, [UDF Quickstart](index_split_028.html#filepos1659823)
  id: totrans-888
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: first_udf.py，[UDF快速入门](index_split_028.html#filepos1659823)
- en: get_interest_over_time function (google_trends.py), [Fetching Data from Google
    Trends](index_split_028.html#filepos1735053)-[Fetching Data from Google Trends](index_split_028.html#filepos1738598)
  id: totrans-889
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: get_interest_over_time函数（google_trends.py），[从Google趋势获取数据](index_split_028.html#filepos1735053)-[从Google趋势获取数据](index_split_028.html#filepos1738598)
- en: importsub.py, [The Sub Decorator](index_split_028.html#filepos1796656)
  id: totrans-890
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: importsub.py，[子装饰器](index_split_028.html#filepos1796656)
- en: 'pep8_sample.py, [PEP 8: Style Guide for Python Code](index_split_012.html#filepos409133)-[PEP
    8: Style Guide for Python Code](index_split_012.html#filepos425840)'
  id: totrans-891
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pep8_sample.py，[PEP 8：Python代码风格指南](index_split_012.html#filepos409133)-[PEP
    8：Python代码风格指南](index_split_012.html#filepos425840)
- en: plot function (google_trends.py), [Plotting with UDFs](index_split_028.html#filepos1742308)-[Plotting
    with UDFs](index_split_028.html#filepos1753405)
  id: totrans-892
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: plot函数（google_trends.py），[使用UDFs绘图](index_split_028.html#filepos1742308)-[使用UDFs绘图](index_split_028.html#filepos1753405)
- en: revenues.py, [Minimize cross-application calls](index_split_028.html#filepos1764661)
  id: totrans-893
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: revenues.py，[最小化跨应用程序调用](index_split_028.html#filepos1764661)
- en: 'sales_report_pandas.py, [Case Study: Excel Reporting](index_split_019.html#filepos871006)-[Case
    Study: Excel Reporting](index_split_019.html#filepos884117)'
  id: totrans-894
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: sales_report_pandas.py，[案例研究：Excel报告](index_split_019.html#filepos871006)-[案例研究：Excel报告](index_split_019.html#filepos884117)
- en: 'sales_report_xlwings.py, [Case Study (Re-Revisited): Excel Reporting](index_split_025.html#filepos1403162)'
  id: totrans-895
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: sales_report_xlwings.py，[案例研究（再次审视）：Excel报告](index_split_025.html#filepos1403162)
- en: temperature.py, [Modules and the import Statement](index_split_012.html#filepos377100)
  id: totrans-896
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: temperature.py，[模块和导入语句](index_split_012.html#filepos377100)
- en: Excel
  id: totrans-897
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel
- en: array-based calculations, [Vectorization and Broadcasting](index_split_014.html#filepos453400)
  id: totrans-898
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于数组的计算，[向量化和广播](index_split_014.html#filepos453400)
- en: automation (see xlwings)
  id: totrans-899
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化（见xlwings）
- en: charts, [Pivoting and Melting](index_split_016.html#filepos716676)
  id: totrans-900
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图表，[数据透视和融合](index_split_016.html#filepos716676)
- en: (see also plots)
  id: totrans-901
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: （见图表）
- en: creating in OpenPyXL, [Writing with OpenPyXL](index_split_021.html#filepos996317)-[Writing
    with OpenPyXL](index_split_021.html#filepos1032891)
  id: totrans-902
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在OpenPyXL中创建，[使用OpenPyXL写入](index_split_021.html#filepos996317)-[使用OpenPyXL写入](index_split_021.html#filepos1032891)
- en: creating in XlsxWriter, [XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)
  id: totrans-903
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在XlsxWriter中创建，[XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)
- en: creating in xlwings, [Excel charts](index_split_025.html#filepos1368049)-[Excel
    charts](index_split_025.html#filepos1374395)
  id: totrans-904
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在xlwings中创建，[Excel图表](index_split_025.html#filepos1368049)-[Excel图表](index_split_025.html#filepos1374395)
- en: as data viewer, [Using Excel as Data Viewer](index_split_024.html#filepos1239513)-[Using
    Excel as Data Viewer](index_split_024.html#filepos1248699)
  id: totrans-905
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为数据查看器，[使用Excel作为数据查看器](index_split_024.html#filepos1239513)-[使用Excel作为数据查看器](index_split_024.html#filepos1248699)
- en: DataFrames, reading/writing with xlwings, [Working with DataFrames](index_split_025.html#filepos1324128)-[Working
    with DataFrames](index_split_025.html#filepos1340369)
  id: totrans-906
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用xlwings读写数据框，[使用数据框](index_split_025.html#filepos1324128)-[使用数据框](index_split_025.html#filepos1340369)
- en: date serial number, [The datetime Class](index_split_012.html#filepos393168)
  id: totrans-907
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期序列号，[datetime类](index_split_012.html#filepos393168)
- en: defined names, creating in xlwings, [Defined names](index_split_025.html#filepos1390078)-[Defined
    names](index_split_025.html#filepos1400526)
  id: totrans-908
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在xlwings中创建定义名称，[定义名称](index_split_025.html#filepos1390078)-[定义名称](index_split_025.html#filepos1400526)
- en: files (see files)
  id: totrans-909
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件（见文件）
- en: floats in, [Numeric Types](index_split_011.html#filepos193692)
  id: totrans-910
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点数在，[数值类型](index_split_011.html#filepos193692)
- en: formatting DataFrames in, [Formatting DataFrames in Excel](index_split_022.html#filepos1157749)-[Formatting
    a DataFrame’s data part](index_split_022.html#filepos1224706)
  id: totrans-911
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Excel中格式化数据框，[在Excel中格式化数据框](index_split_022.html#filepos1157749)-[格式化数据框的数据部分](index_split_022.html#filepos1224706)
- en: as frontend
  id: totrans-912
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为前端
- en: installing xlwings add-in, [Excel Add-in](index_split_026.html#filepos1442113)-[Excel
    Add-in](index_split_026.html#filepos1447961)
  id: totrans-913
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 xlwings 插件，[Excel 插件](index_split_026.html#filepos1442113)-[Excel 插件](index_split_026.html#filepos1447961)
- en: purpose of, [Using Excel as Frontend with xlwings](index_split_026.html#filepos1440971)
  id: totrans-914
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用途，[使用 Excel 作为前端与 xlwings](index_split_026.html#filepos1440971)
- en: quickstart command, [Quickstart Command](index_split_026.html#filepos1448302)
  id: totrans-915
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速启动命令，[快速启动命令](index_split_026.html#filepos1448302)
- en: Run main button, [Run Main](index_split_026.html#filepos1449910)-[Run Main](index_split_026.html#filepos1458891)
  id: totrans-916
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行主按钮，[运行主按钮](index_split_026.html#filepos1449910)-[运行主按钮](index_split_026.html#filepos1458891)
- en: RunPython function, [RunPython Function](index_split_026.html#filepos1459375)-[RunPython
    without quickstart command](index_split_026.html#filepos1471460)
  id: totrans-917
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RunPython 函数，[RunPython 函数](index_split_026.html#filepos1459375)-[不使用快速启动命令的
    RunPython](index_split_026.html#filepos1471460)
- en: history of, [Why Python for Excel?](index_split_007.html#filepos33602)
  id: totrans-918
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 历史，[为什么选择 Python 用于 Excel？](index_split_007.html#filepos33602)
- en: instances, [The Excel Object Model](index_split_024.html#filepos1252360), [The
    Excel Object Model](index_split_024.html#filepos1296280)
  id: totrans-919
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例，[Excel 对象模型](index_split_024.html#filepos1252360), [Excel 对象模型](index_split_024.html#filepos1296280)
- en: Jupyter notebooks versus, [Jupyter Notebooks](index_split_008.html#filepos131000)
  id: totrans-920
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 笔记本与之对比，[Jupyter 笔记本](index_split_008.html#filepos131000)
- en: language and regional settings, [The Excel Object Model](index_split_024.html#filepos1254107)-[The
    Excel Object Model](index_split_024.html#filepos1255983)
  id: totrans-921
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语言和区域设置，[Excel 对象模型](index_split_024.html#filepos1254107)-[Excel 对象模型](index_split_024.html#filepos1255983)
- en: logarithms in, [Shifting and Percentage Changes](index_split_017.html#filepos810574)
  id: totrans-922
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对数，[偏移和百分比变化](index_split_017.html#filepos810574)
- en: macOS permissions, [Using Excel as Data Viewer](index_split_024.html#filepos1249144)
  id: totrans-923
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS 权限，[使用 Excel 作为数据查看器](index_split_024.html#filepos1249144)
- en: modern Excel, [Modern Excel](index_split_007.html#filepos58283)
  id: totrans-924
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现代 Excel，[现代 Excel](index_split_007.html#filepos58283)
- en: Name Manager, [Defined names](index_split_025.html#filepos1399895)
  id: totrans-925
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称管理器，[定义名称](index_split_025.html#filepos1399895)
- en: in news stories, [Excel in the News](index_split_007.html#filepos38612)-[Excel
    in the News](index_split_007.html#filepos41040)
  id: totrans-926
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在新闻报道中，[Excel 在新闻中](index_split_007.html#filepos38612)-[Excel 在新闻中](index_split_007.html#filepos41040)
- en: object model, [The Excel Object Model](index_split_024.html#filepos1250235)-[The
    Excel Object Model](index_split_024.html#filepos1313152)
  id: totrans-927
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象模型，[Excel 对象模型](index_split_024.html#filepos1250235)-[Excel 对象模型](index_split_024.html#filepos1313152)
- en: 'pictures, Matplotlib plots as, [Pictures: Matplotlib plots](index_split_025.html#filepos1374823)-[Pictures:
    Matplotlib plots](index_split_025.html#filepos1389691)'
  id: totrans-928
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图片，Matplotlib 绘图作为，[图片：Matplotlib 绘图](index_split_025.html#filepos1374823)-[图片：Matplotlib
    绘图](index_split_025.html#filepos1389691)
- en: as programming language, [Excel Is a Programming Language](index_split_007.html#filepos35748)-[Excel
    Is a Programming Language](index_split_007.html#filepos38457)
  id: totrans-929
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为编程语言，[Excel 是一种编程语言](index_split_007.html#filepos35748)-[Excel 是一种编程语言](index_split_007.html#filepos38457)
- en: programming, reading/writing files versus, [How This Book Is Organized](index_split_005.html#filepos18185)
  id: totrans-930
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程，读写文件对比，[本书的组织方式](index_split_005.html#filepos18185)
- en: Python advantages for, [Python for Excel](index_split_007.html#filepos62589)
  id: totrans-931
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 在 Excel 中的优势，[Python 用于 Excel](index_split_007.html#filepos62589)
- en: cross-platform compatibility, [Cross-Platform Compatibility](index_split_007.html#filepos90342)
  id: totrans-932
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨平台兼容性，[跨平台兼容性](index_split_007.html#filepos90342)
- en: modern language features, [Modern Language Features](index_split_007.html#filepos80870)-[Modern
    Language Features](index_split_007.html#filepos89951)
  id: totrans-933
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现代语言特性，[现代语言特性](index_split_007.html#filepos80870)-[现代语言特性](index_split_007.html#filepos89951)
- en: readability, [Readability and Maintainability](index_split_007.html#filepos64414)-[Readability
    and Maintainability](index_split_007.html#filepos71415)
  id: totrans-934
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可读性，[可读性和可维护性](index_split_007.html#filepos64414)-[可读性和可维护性](index_split_007.html#filepos71415)
- en: scientific computing, [Scientific Computing](index_split_007.html#filepos76559)
  id: totrans-935
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 科学计算，[科学计算](index_split_007.html#filepos76559)
- en: standard library and package manager, [Standard Library and Package Manager](index_split_007.html#filepos71589)-[Standard
    Library and Package Manager](index_split_007.html#filepos76314)
  id: totrans-936
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准库和包管理器，[标准库和包管理器](index_split_007.html#filepos71589)-[标准库和包管理器](index_split_007.html#filepos76314)
- en: 'reporting case study, [Case Study: Excel Reporting](index_split_019.html#filepos864531)-[Case
    Study: Excel Reporting](index_split_019.html#filepos885516), [Case Study (Revisited):
    Excel Reporting](index_split_022.html#filepos1232433), [Case Study (Re-Revisited):
    Excel Reporting](index_split_025.html#filepos1400987)-[Case Study (Re-Revisited):
    Excel Reporting](index_split_025.html#filepos1409826)'
  id: totrans-937
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 汇报案例研究，[案例研究：Excel 报告](index_split_019.html#filepos864531)-[案例研究：Excel 报告](index_split_019.html#filepos885516)，[案例研究（重访）：Excel
    报告](index_split_022.html#filepos1232433)，[案例研究（再次重访）：Excel 报告](index_split_025.html#filepos1400987)-[案例研究（再次重访）：Excel
    报告](index_split_025.html#filepos1409826)
- en: spreadsheets, DataFrames versus, [DataFrame and Series](index_split_015.html#filepos485631)-[DataFrame
    and Series](index_split_015.html#filepos489337)
  id: totrans-938
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子表格，数据框与之对比，[数据框和系列](index_split_015.html#filepos485631)-[数据框和系列](index_split_015.html#filepos489337)
- en: 'standalone workbooks, [Standalone Workbooks: Getting Rid of the xlwings Add-in](index_split_026.html#filepos1475399)-[Standalone
    Workbooks: Getting Rid of the xlwings Add-in](index_split_026.html#filepos1477920)'
  id: totrans-939
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 独立工作簿，[独立工作簿：摆脱 xlwings 插件](index_split_026.html#filepos1475399)-[独立工作簿：摆脱 xlwings
    插件](index_split_026.html#filepos1477920)
- en: time series analysis limitations, [Time Series Analysis with pandas](index_split_017.html#filepos768348)
  id: totrans-940
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析的局限性，[使用 pandas 进行时间序列分析](index_split_017.html#filepos768348)
- en: Trust access to VBA project model setting, [Getting Started with UDFs](index_split_028.html#filepos1656916)
  id: totrans-941
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信任对 VBA 项目模型的访问设置，[UDF 入门](index_split_028.html#filepos1656916)
- en: used range, [Reading with xlrd](index_split_021.html#filepos1099306)
  id: totrans-942
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用范围，[使用 xlrd 读取](index_split_021.html#filepos1099306)
- en: version control, [Version control](index_split_007.html#filepos51713)-[Version
    control](index_split_007.html#filepos57576)
  id: totrans-943
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制，[版本控制](index_split_007.html#filepos51713)-[版本控制](index_split_007.html#filepos57576)
- en: versions of, [Python and Excel Versions](index_split_005.html#filepos19959)-[Python
    and Excel Versions](index_split_005.html#filepos20478)
  id: totrans-944
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本，[Python 和 Excel 版本](index_split_005.html#filepos19959)-[Python 和 Excel 版本](index_split_005.html#filepos20478)
- en: zombie processes, [xlwings Foundations](index_split_025.html#filepos1412114)
  id: totrans-945
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 僵尸进程，[xlwings 基础](index_split_025.html#filepos1412114)
- en: excel.py module, [The excel.py Module](index_split_021.html#filepos972622)-[The
    excel.py Module](index_split_021.html#filepos980989)
  id: totrans-946
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: excel.py 模块，[excel.py 模块](index_split_021.html#filepos972622)-[excel.py 模块](index_split_021.html#filepos980989)
- en: ExcelFile class (pandas), [The read_excel Function and ExcelFile Class](index_split_019.html#filepos886398)-[The
    read_excel Function and ExcelFile Class](index_split_019.html#filepos935481)
  id: totrans-947
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ExcelFile 类（pandas），[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos886398)-[read_excel
    函数和 ExcelFile 类](index_split_019.html#filepos935481)
- en: ExcelWriter class (pandas), [The to_excel Method and ExcelWriter Class](index_split_019.html#filepos935768)-[The
    to_excel Method and ExcelWriter Class](index_split_019.html#filepos953568)
  id: totrans-948
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ExcelWriter 类（pandas），[to_excel 方法和 ExcelWriter 类](index_split_019.html#filepos935768)-[to_excel
    方法和 ExcelWriter 类](index_split_019.html#filepos953568)
- en: exceptions (see error handling)
  id: totrans-949
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常（参见错误处理）
- en: expand method (xlwings), [Working with DataFrames](index_split_025.html#filepos1333572)
  id: totrans-950
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: expand 方法（xlwings），[处理数据框](index_split_025.html#filepos1333572)
- en: exporting DataFrame data
  id: totrans-951
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出 DataFrame 数据
- en: as CSV files, [Exporting CSV Files](index_split_016.html#filepos745826)-[Exporting
    CSV Files](index_split_016.html#filepos748395)
  id: totrans-952
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为 CSV 文件，[导出 CSV 文件](index_split_016.html#filepos745826)-[导出 CSV 文件](index_split_016.html#filepos748395)
- en: purpose of, [Importing and Exporting DataFrames](index_split_016.html#filepos740480)
  id: totrans-953
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的是，[导入和导出数据框](index_split_016.html#filepos740480)
- en: extracting macro code (Xlsxwriter) from xlsm files, [XlsxWriter](index_split_021.html#filepos1064438)-[XlsxWriter](index_split_021.html#filepos1066693)
  id: totrans-954
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 xlsm 文件中提取宏代码（Xlsxwriter），[XlsxWriter](index_split_021.html#filepos1064438)-[XlsxWriter](index_split_021.html#filepos1066693)
- en: F
  id: totrans-955
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: F
- en: f-strings (formatted string literals), [Strings](index_split_011.html#filepos222026)
  id: totrans-956
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: f-strings（格式化字符串字面值），[字符串](index_split_011.html#filepos222026)
- en: False boolean data type, [Booleans](index_split_011.html#filepos205063)-[Booleans](index_split_011.html#filepos217752)
  id: totrans-957
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假布尔数据类型，[布尔值](index_split_011.html#filepos205063)-[布尔值](index_split_011.html#filepos217752)
- en: ffill method (pandas), [Resampling](index_split_017.html#filepos850748)
  id: totrans-958
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ffill 方法（pandas），[重采样](index_split_017.html#filepos850748)
- en: 'figure object (Matplotlib), [Pictures: Matplotlib plots](index_split_025.html#filepos1374823)-[Pictures:
    Matplotlib plots](index_split_025.html#filepos1389691)'
  id: totrans-959
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形对象（Matplotlib），[图片：Matplotlib 绘图](index_split_025.html#filepos1374823)-[图片：Matplotlib
    绘图](index_split_025.html#filepos1389691)
- en: file extensions, viewing, [Anaconda Prompt](index_split_008.html#filepos113417)-[Anaconda
    Prompt](index_split_008.html#filepos114549)
  id: totrans-960
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件扩展名，查看，[Anaconda 命令提示符](index_split_008.html#filepos113417)-[Anaconda 命令提示符](index_split_008.html#filepos114549)
- en: file paths
  id: totrans-961
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件路径
- en: absolute versus relative, [Backend](index_split_027.html#filepos1638593)
  id: totrans-962
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绝对路径与相对路径，[后端](index_split_027.html#filepos1638593)
- en: 'globbing, [Case Study: Excel Reporting](index_split_019.html#filepos884117)'
  id: totrans-963
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件匹配，[案例研究：Excel 报告](index_split_019.html#filepos884117)
- en: 'Path class, [Case Study: Excel Reporting](index_split_019.html#filepos882885)'
  id: totrans-964
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Path 类，[案例研究：Excel 报告](index_split_019.html#filepos882885)
- en: in Windows as raw strings, [Exporting CSV Files](index_split_016.html#filepos747454)
  id: totrans-965
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 中作为原始字符串，[导出 CSV 文件](index_split_016.html#filepos747454)
- en: files
  id: totrans-966
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件
- en: in current directory, listing, [Anaconda Prompt](index_split_008.html#filepos110263)
  id: totrans-967
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在当前目录中，列出，[Anaconda Prompt](index_split_008.html#filepos110263)
- en: editing
  id: totrans-968
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑
- en: with OpenPyXL, [Editing with OpenPyXL](index_split_021.html#filepos1033340)-[Editing
    with OpenPyXL](index_split_021.html#filepos1039562)
  id: totrans-969
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OpenPyXL，[使用 OpenPyXL 进行编辑](index_split_021.html#filepos1033340)-[使用 OpenPyXL
    进行编辑](index_split_021.html#filepos1039562)
- en: with xlutils, [Editing with xlutils](index_split_022.html#filepos1119688)
  id: totrans-970
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 xlutils，[使用 xlutils 进行编辑](index_split_022.html#filepos1119688)
- en: reading
  id: totrans-971
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取
- en: limitations in pandas, [Limitations When Using pandas with Excel Files](index_split_019.html#filepos957495)
  id: totrans-972
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 的局限性，[在使用 Excel 文件时的限制](index_split_019.html#filepos957495)
- en: with OpenPyXL, [Reading with OpenPyXL](index_split_021.html#filepos982131)-[Writing
    with OpenPyXL](index_split_021.html#filepos996210), [Reading with OpenPyXL](index_split_022.html#filepos1141062)
  id: totrans-973
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OpenPyXL，[使用 OpenPyXL 进行读取](index_split_021.html#filepos982131)-[使用 OpenPyXL
    进行写入](index_split_021.html#filepos996210)，[使用 OpenPyXL 进行读取](index_split_022.html#filepos1141062)
- en: with pandas, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos886398)-[The
    read_excel Function and ExcelFile Class](index_split_019.html#filepos935481)
  id: totrans-974
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 pandas，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos886398)-[read_excel
    函数和 ExcelFile 类](index_split_019.html#filepos935481)
- en: in parallel, [Reading sheets in parallel](index_split_022.html#filepos1144410)-[Reading
    sheets in parallel](index_split_022.html#filepos1157423)
  id: totrans-975
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并行处理，[并行读取工作表](index_split_022.html#filepos1144410)-[并行读取工作表](index_split_022.html#filepos1157423)
- en: programming Excel versus, [How This Book Is Organized](index_split_005.html#filepos18185)
  id: totrans-976
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程 Excel 与，[本书的组织方式](index_split_005.html#filepos18185)
- en: with pyxlsb, [pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
  id: totrans-977
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 pyxlsb，[pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
- en: from URLs, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos922687)
  id: totrans-978
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自 URL，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos922687)
- en: with xlrd, [Reading with xlrd](index_split_021.html#filepos1085917)-[Reading
    with xlrd](index_split_021.html#filepos1099832), [Reading with xlrd](index_split_022.html#filepos1134915)
  id: totrans-979
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 xlrd，[使用 xlrd 进行读取](index_split_021.html#filepos1085917)-[使用 xlrd 进行读取](index_split_021.html#filepos1099832)，[使用
    xlrd 进行读取](index_split_022.html#filepos1134915)
- en: writing
  id: totrans-980
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入
- en: limitations in pandas, [Limitations When Using pandas with Excel Files](index_split_019.html#filepos957495)
  id: totrans-981
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 的局限性，[在使用 Excel 文件时的限制](index_split_019.html#filepos957495)
- en: with OpenPyXL, [Writing with OpenPyXL](index_split_021.html#filepos996317)-[Writing
    with OpenPyXL](index_split_021.html#filepos1032891), [Writing with OpenPyXL](index_split_022.html#filepos1126036)
  id: totrans-982
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OpenPyXL，[使用 OpenPyXL 进行写入](index_split_021.html#filepos996317)-[使用 OpenPyXL
    进行写入](index_split_021.html#filepos1032891)，[使用 OpenPyXL 进行写入](index_split_022.html#filepos1126036)
- en: with pandas, [The to_excel Method and ExcelWriter Class](index_split_019.html#filepos935768)-[The
    to_excel Method and ExcelWriter Class](index_split_019.html#filepos953568)
  id: totrans-983
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 pandas，[to_excel 方法和 ExcelWriter 类](index_split_019.html#filepos935768)-[to_excel
    方法和 ExcelWriter 类](index_split_019.html#filepos953568)
- en: programming Excel versus, [How This Book Is Organized](index_split_005.html#filepos18185)
  id: totrans-984
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程 Excel 与，[本书的组织方式](index_split_005.html#filepos18185)
- en: with XlsxWriter, [XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941),
    [Writing with XlsxWriter](index_split_022.html#filepos1130359)
  id: totrans-985
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 XlsxWriter，[XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)，[使用
    XlsxWriter 进行写入](index_split_022.html#filepos1130359)
- en: with xlwt, [Writing with xlwt](index_split_022.html#filepos1099995)-[Editing
    with xlutils](index_split_022.html#filepos1119593)
  id: totrans-986
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 xlwt，[使用 xlwt 进行写入](index_split_022.html#filepos1099995)-[使用 xlutils 进行编辑](index_split_022.html#filepos1119593)
- en: fillna method (pandas), [Missing Data](index_split_015.html#filepos606608)
  id: totrans-987
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fillna 方法（pandas），[缺失数据](index_split_015.html#filepos606608)
- en: filtering
  id: totrans-988
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过滤
- en: DataFrames, [Selecting by boolean indexing](index_split_015.html#filepos549780)-[Selecting
    by boolean indexing](index_split_015.html#filepos567453)
  id: totrans-989
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据框（DataFrames），[通过布尔索引选择](index_split_015.html#filepos549780)-[通过布尔索引选择](index_split_015.html#filepos567453)
- en: DatetimeIndex (pandas), [Filtering a DatetimeIndex](index_split_017.html#filepos794993)-[Filtering
    a DatetimeIndex](index_split_017.html#filepos798956)
  id: totrans-990
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DatetimeIndex（pandas），[过滤 DatetimeIndex](index_split_017.html#filepos794993)-[过滤
    DatetimeIndex](index_split_017.html#filepos798956)
- en: first_project.py example, [Run Main](index_split_026.html#filepos1449910)-[Run
    Main](index_split_026.html#filepos1458891)
  id: totrans-991
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: first_project.py 示例，[运行主按钮](index_split_026.html#filepos1449910)-[运行主按钮](index_split_026.html#filepos1458891)
- en: first_udf.py example, [UDF Quickstart](index_split_028.html#filepos1659823)
  id: totrans-992
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: first_udf.py 示例，[UDF 快速开始](index_split_028.html#filepos1659823)
- en: flake8, [PEP 8 and VS Code](index_split_012.html#filepos426532)
  id: totrans-993
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: flake8，[PEP 8 和 VS Code](index_split_012.html#filepos426532)
- en: float data type, [Numeric Types](index_split_011.html#filepos189160)-[Numeric
    Types](index_split_011.html#filepos194525)
  id: totrans-994
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点数据类型，[数值类型](index_split_011.html#filepos189160)-[数值类型](index_split_011.html#filepos194525)
- en: float64 data type (NumPy), [NumPy Array](index_split_014.html#filepos445451)-[NumPy
    Array](index_split_014.html#filepos446866)
  id: totrans-995
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: float64 数据类型（NumPy），[NumPy 数组](index_split_014.html#filepos445451)-[NumPy 数组](index_split_014.html#filepos446866)
- en: floating-point inaccuracies, [Numeric Types](index_split_011.html#filepos194705)
  id: totrans-996
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点数不准确性，[数值类型](index_split_011.html#filepos194705)
- en: floating-point numbers, [Numeric Types](index_split_011.html#filepos189272)
  id: totrans-997
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浮点数，[数值类型](index_split_011.html#filepos189272)
- en: For Each statement (VBA), [The for and while Loops](index_split_012.html#filepos319389)
  id: totrans-998
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: For Each 语句（VBA），[for 和 while 循环](index_split_012.html#filepos319389)
- en: for loops, [The for and while Loops](index_split_012.html#filepos316683)-[The
    for and while Loops](index_split_012.html#filepos341967)
  id: totrans-999
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: for 循环，[for 和 while 循环](index_split_012.html#filepos316683)-[for 和 while 循环](index_split_012.html#filepos341967)
- en: foreign keys (databases), [The Package Tracker database](index_split_027.html#filepos1528709),
    [SQL queries](index_split_027.html#filepos1562373)
  id: totrans-1000
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外键（数据库），[包裹追踪器数据库](index_split_027.html#filepos1528709)，[SQL 查询](index_split_027.html#filepos1562373)
- en: Form Controls (Excel), [RunPython Function](index_split_026.html#filepos1464639)
  id: totrans-1001
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表单控件（Excel），[RunPython 函数](index_split_026.html#filepos1464639)
- en: formatting
  id: totrans-1002
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 格式化
- en: DataFrames in Excel, [Formatting DataFrames in Excel](index_split_022.html#filepos1157749)-[Formatting
    a DataFrame’s data part](index_split_022.html#filepos1224706)
  id: totrans-1003
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 中的数据框，[在 Excel 中格式化数据框](index_split_022.html#filepos1157749)-[格式化数据框的数据部分](index_split_022.html#filepos1224706)
- en: datetime objects into strings, [The datetime Class](index_split_012.html#filepos404852)
  id: totrans-1004
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将日期时间对象转换为字符串，[datetime 类](index_split_012.html#filepos404852)
- en: strings in DataFrames, [Applying a Function](index_split_015.html#filepos641289)-[Applying
    a Function](index_split_015.html#filepos645020)
  id: totrans-1005
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据框中的字符串，[应用函数](index_split_015.html#filepos641289)-[应用函数](index_split_015.html#filepos645020)
- en: forward-filling, [Resampling](index_split_017.html#filepos850748)
  id: totrans-1006
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前向填充，[重采样](index_split_017.html#filepos850748)
- en: fraction data type, [Numeric Types](index_split_011.html#filepos194226)
  id: totrans-1007
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分数数据类型，[数值类型](index_split_011.html#filepos194226)
- en: frontends
  id: totrans-1008
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前端
- en: defined, [Using Excel as Frontend with xlwings](index_split_026.html#filepos1440971)
  id: totrans-1009
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义，[使用 Excel 作为 xlwings 前端](index_split_026.html#filepos1440971)
- en: Excel as
  id: totrans-1010
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 作为
- en: installing xlwings add-in, [Excel Add-in](index_split_026.html#filepos1442113)-[Excel
    Add-in](index_split_026.html#filepos1447961)
  id: totrans-1011
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 xlwings 插件，[Excel 插件](index_split_026.html#filepos1442113)-[Excel 插件](index_split_026.html#filepos1447961)
- en: purpose of, [Using Excel as Frontend with xlwings](index_split_026.html#filepos1440971)
  id: totrans-1012
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[使用 Excel 作为 xlwings 前端](index_split_026.html#filepos1440971)
- en: quickstart command, [Quickstart Command](index_split_026.html#filepos1448302)
  id: totrans-1013
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速开始命令，[快速开始命令](index_split_026.html#filepos1448302)
- en: Run main button, [Run Main](index_split_026.html#filepos1449910)-[Run Main](index_split_026.html#filepos1458891)
  id: totrans-1014
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行主按钮，[运行主按钮](index_split_026.html#filepos1449910)-[运行主按钮](index_split_026.html#filepos1458891)
- en: RunPython function, [RunPython Function](index_split_026.html#filepos1459375)-[RunPython
    without quickstart command](index_split_026.html#filepos1471460)
  id: totrans-1015
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RunPython 函数，[RunPython 函数](index_split_026.html#filepos1459375)-[RunPython
    无快速开始命令](index_split_026.html#filepos1471460)
- en: purpose of, [Frontend](index_split_027.html#filepos1606292)
  id: totrans-1016
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[前端](index_split_027.html#filepos1606292)
- en: in Python Package Tracker, [Frontend](index_split_027.html#filepos1606230)-[Frontend](index_split_027.html#filepos1619827)
  id: totrans-1017
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 包追踪器中，[前端](index_split_027.html#filepos1606230)-[前端](index_split_027.html#filepos1619827)
- en: frozen executables, [Python Dependency](index_split_026.html#filepos1475043)
  id: totrans-1018
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 冻结的可执行文件，[Python 依赖](index_split_026.html#filepos1475043)
- en: full outer joins, [Joining and Merging](index_split_016.html#filepos669216)
  id: totrans-1019
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全外连接，[连接和合并](index_split_016.html#filepos669216)
- en: functions
  id: totrans-1020
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数
- en: applying to DataFrames, [Applying a Function](index_split_015.html#filepos641087)-[Applying
    a Function](index_split_015.html#filepos649303)
  id: totrans-1021
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用于数据框，[应用函数](index_split_015.html#filepos641087)-[应用函数](index_split_015.html#filepos649303)
- en: calling, [Functions](index_split_011.html#filepos185990), [Calling functions](index_split_012.html#filepos370297),
    [Calling Functions with Mutable Objects as Arguments](index_split_031.html#filepos1882799)-[Functions
    with Mutable Objects as Default Arguments](index_split_031.html#filepos1900058)
  id: totrans-1022
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用, [函数](index_split_011.html#filepos185990), [调用函数](index_split_012.html#filepos370297),
    [使用可变对象作为参数调用函数](index_split_031.html#filepos1882799)-[使用可变对象作为默认参数的函数](index_split_031.html#filepos1900058)
- en: decorators (xlwings)
  id: totrans-1023
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 装饰器 (xlwings)
- en: order of, [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1709067)
  id: totrans-1024
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顺序, [处理数据框和动态数组](index_split_028.html#filepos1709067)
- en: purpose of, [UDF Quickstart](index_split_028.html#filepos1661857)
  id: totrans-1025
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能的目的, [UDF 快速入门](index_split_028.html#filepos1661857)
- en: sub decorator, [The Sub Decorator](index_split_028.html#filepos1795393)-[The
    Sub Decorator](index_split_028.html#filepos1804381)
  id: totrans-1026
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子装饰器, [子装饰器](index_split_028.html#filepos1795393)-[子装饰器](index_split_028.html#filepos1804381)
- en: defining, [Defining functions](index_split_012.html#filepos362480)
  id: totrans-1027
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义, [定义函数](index_split_012.html#filepos362480)
- en: deterministic, [Caching](index_split_028.html#filepos1775539)
  id: totrans-1028
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定性, [缓存](index_split_028.html#filepos1775539)
- en: lambda expressions, [Applying a Function](index_split_015.html#filepos645164)
  id: totrans-1029
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lambda 表达式, [应用函数](index_split_015.html#filepos645164)
- en: purpose of, [Functions](index_split_012.html#filepos361996)
  id: totrans-1030
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能的目的, [函数](index_split_012.html#filepos361996)
- en: recalculating (Excel), [UDF Quickstart](index_split_028.html#filepos1671914)
  id: totrans-1031
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新计算 (Excel), [UDF 快速入门](index_split_028.html#filepos1671914)
- en: universal functions (NumPy), [Universal Functions (ufunc)](index_split_014.html#filepos454337)-[Universal
    Functions (ufunc)](index_split_014.html#filepos462582)
  id: totrans-1032
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通用函数 (NumPy), [通用函数 (ufunc)](index_split_014.html#filepos454337)-[通用函数 (ufunc)](index_split_014.html#filepos462582)
- en: user-defined functions (see UDFs)
  id: totrans-1033
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户定义的函数 (参见 UDFs)
- en: VBA, [DRY principle](index_split_007.html#filepos46886), [Running VBA Code](index_split_025.html#filepos1322194)
  id: totrans-1034
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VBA, [DRY 原则](index_split_007.html#filepos46886), [运行 VBA 代码](index_split_025.html#filepos1322194)
- en: volatile (Excel), [UDF Quickstart](index_split_028.html#filepos1673786)
  id: totrans-1035
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易变的（Excel），[UDF 快速入门](index_split_028.html#filepos1673786)
- en: functools module, [Caching](index_split_028.html#filepos1784463)
  id: totrans-1036
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: functools 模块, [缓存](index_split_028.html#filepos1784463)
- en: G
  id: totrans-1037
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: G
- en: get method (dictionaries), [Dictionaries](index_split_011.html#filepos281077)
  id: totrans-1038
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取方法 (字典), [字典](index_split_011.html#filepos281077)
- en: GET requests, [Web APIs](index_split_027.html#filepos1493322)
  id: totrans-1039
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GET 请求, [Web API](index_split_027.html#filepos1493322)
- en: getting array elements (NumPy), [Getting and Setting Array Elements](index_split_014.html#filepos463404)-[Getting
    and Setting Array Elements](index_split_014.html#filepos470575)
  id: totrans-1040
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取数组元素 (NumPy), [获取和设置数组元素](index_split_014.html#filepos463404)-[获取和设置数组元素](index_split_014.html#filepos470575)
- en: get_interest_over_time function (google_trends.py) example, [Fetching Data from
    Google Trends](index_split_028.html#filepos1735053)-[Fetching Data from Google
    Trends](index_split_028.html#filepos1738598)
  id: totrans-1041
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: get_interest_over_time 函数 (google_trends.py) 示例, [从 Google 趋势获取数据](index_split_028.html#filepos1735053)-[从
    Google 趋势获取数据](index_split_028.html#filepos1738598)
- en: Git, [Version control](index_split_007.html#filepos51713)-[Version control](index_split_007.html#filepos57576)
  id: totrans-1042
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git, [版本控制](index_split_007.html#filepos51713)-[版本控制](index_split_007.html#filepos57576)
- en: 'globbing, [Case Study: Excel Reporting](index_split_019.html#filepos884117)'
  id: totrans-1043
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件名匹配, [案例研究：Excel 报告](index_split_019.html#filepos884117)
- en: Google Colab, [Shutting Down Jupyter Notebooks](index_split_009.html#filepos152972)
  id: totrans-1044
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Colab, [关闭 Jupyter 笔记本](index_split_009.html#filepos152972)
- en: 'Google style guide for Python, [PEP 8: Style Guide for Python Code](index_split_012.html#filepos425552)'
  id: totrans-1045
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 的 Google 风格指南, [PEP 8：Python 代码风格指南](index_split_012.html#filepos425552)
- en: Google Trends case study
  id: totrans-1046
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google 趋势案例研究
- en: DataFrames and dynamic arrays, [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1682486)-[Working
    with DataFrames and Dynamic Arrays](index_split_028.html#filepos1714516)
  id: totrans-1047
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据框和动态数组, [处理数据框和动态数组](index_split_028.html#filepos1682486)-[处理数据框和动态数组](index_split_028.html#filepos1714516)
- en: debugging UDFs, [Debugging UDFs](index_split_028.html#filepos1755260)-[Debugging
    UDFs](index_split_028.html#filepos1760605)
  id: totrans-1048
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试用户定义函数, [调试用户定义函数](index_split_028.html#filepos1755260)-[调试用户定义函数](index_split_028.html#filepos1760605)
- en: explanation of Google Trends, [Introduction to Google Trends](index_split_028.html#filepos1680082)-[Introduction
    to Google Trends](index_split_028.html#filepos1682295)
  id: totrans-1049
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google 趋势的解释, [介绍 Google 趋势](index_split_028.html#filepos1680082)-[介绍 Google
    趋势](index_split_028.html#filepos1682295)
- en: fetching data, [Fetching Data from Google Trends](index_split_028.html#filepos1714798)-[Fetching
    Data from Google Trends](index_split_028.html#filepos1741590)
  id: totrans-1050
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提取数据, [从 Google 趋势获取数据](index_split_028.html#filepos1714798)-[从 Google 趋势获取数据](index_split_028.html#filepos1741590)
- en: plotting data, [Plotting with UDFs](index_split_028.html#filepos1741829)-[Plotting
    with UDFs](index_split_028.html#filepos1754939)
  id: totrans-1051
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绘制数据，[使用 UDF 进行绘图](index_split_028.html#filepos1741829)-[使用 UDF 进行绘图](index_split_028.html#filepos1754939)
- en: graphical user interfaces (see frontends)
  id: totrans-1052
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形用户界面（参见前端）
- en: gridlines (Excel), hiding, [Frontend](index_split_027.html#filepos1616277)
  id: totrans-1053
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网格线（Excel），隐藏，[前端](index_split_027.html#filepos1616277)
- en: grouping DataFrame data, [Grouping](index_split_016.html#filepos695504)
  id: totrans-1054
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分组 DataFrame 数据，[分组](index_split_016.html#filepos695504)
- en: GUIs (see frontends)
  id: totrans-1055
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GUI（参见前端）
- en: H
  id: totrans-1056
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: H
- en: head method (pandas), [Importing CSV Files](index_split_016.html#filepos750501)
  id: totrans-1057
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: head 方法（pandas），[导入 CSV 文件](index_split_016.html#filepos750501)
- en: headers for DataFrame columns, [Formatting a DataFrame’s index and headers](index_split_022.html#filepos1170468)-[Formatting
    a DataFrame’s index and headers](index_split_022.html#filepos1205120)
  id: totrans-1058
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrame 列的标题，[格式化 DataFrame 的索引和标题](index_split_022.html#filepos1170468)-[格式化
    DataFrame 的索引和标题](index_split_022.html#filepos1205120)
- en: heatmaps (Plotly), [Rebasing and Correlation](index_split_017.html#filepos838730)
  id: totrans-1059
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 热力图（Plotly），[重新基准和相关性](index_split_017.html#filepos838730)
- en: help documentation, [Strings](index_split_011.html#filepos225822)
  id: totrans-1060
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助文档，[字符串](index_split_011.html#filepos225822)
- en: hexadecimal values for colors, [Writing with OpenPyXL](index_split_021.html#filepos1032314)-[Writing
    with OpenPyXL](index_split_021.html#filepos1032891)
  id: totrans-1061
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 颜色的十六进制值，[使用 OpenPyXL 进行编写](index_split_021.html#filepos1032314)-[使用 OpenPyXL
    进行编写](index_split_021.html#filepos1032891)
- en: hiding gridlines (Excel), [Frontend](index_split_027.html#filepos1616277)
  id: totrans-1062
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐藏网格线（Excel），[前端](index_split_027.html#filepos1616277)
- en: HoloViews, [Plotly](index_split_016.html#filepos740040)
  id: totrans-1063
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HoloViews，[Plotly](index_split_016.html#filepos740040)
- en: homogenous data, [NumPy Array](index_split_014.html#filepos439635)
  id: totrans-1064
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同质数据，[NumPy 数组](index_split_014.html#filepos439635)
- en: Horror Stories web page, [Excel in the News](index_split_007.html#filepos40739)
  id: totrans-1065
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恐怖故事网页，[Excel 新闻](index_split_007.html#filepos40739)
- en: HTTP status codes, [Web APIs](index_split_027.html#filepos1508263)
  id: totrans-1066
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP 状态码，[Web API](index_split_027.html#filepos1508263)
- en: I
  id: totrans-1067
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: I
- en: Ibis, [Limitations with pandas](index_split_017.html#filepos861209)
  id: totrans-1068
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ibis，[与 pandas 的限制](index_split_017.html#filepos861209)
- en: IDEs (integrated development environments), [Visual Studio Code](index_split_009.html#filepos156885),
    [Running a Python Script](index_split_009.html#filepos174247)-[Running a Python
    Script](index_split_009.html#filepos176621)
  id: totrans-1069
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IDE（集成开发环境），[Visual Studio Code](index_split_009.html#filepos156885)，[运行 Python
    脚本](index_split_009.html#filepos174247)-[运行 Python 脚本](index_split_009.html#filepos176621)
- en: if statements, [The if Statement and Conditional Expressions](index_split_012.html#filepos306285)-[The
    if Statement and Conditional Expressions](index_split_012.html#filepos316429)
  id: totrans-1070
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: if 语句，[if 语句和条件表达式](index_split_012.html#filepos306285)-[if 语句和条件表达式](index_split_012.html#filepos316429)
- en: iloc attribute (pandas), [Selecting by position](index_split_015.html#filepos539083)-[Selecting
    by position](index_split_015.html#filepos549467), [Setting data by label or position](index_split_015.html#filepos581974)
  id: totrans-1071
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iloc 属性（pandas），[按位置选择](index_split_015.html#filepos539083)-[按位置选择](index_split_015.html#filepos549467)，[按标签或位置设置数据](index_split_015.html#filepos581974)
- en: immutable objects, [Tuples](index_split_011.html#filepos285912), [Mutable vs.
    Immutable Python Objects](index_split_031.html#filepos1865519)-[Mutable vs. Immutable
    Python Objects](index_split_031.html#filepos1882596)
  id: totrans-1072
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不可变对象，[元组](index_split_011.html#filepos285912)，[可变与不可变的 Python 对象](index_split_031.html#filepos1865519)-[可变与不可变的
    Python 对象](index_split_031.html#filepos1882596)
- en: implicit line breaks, [Lists](index_split_011.html#filepos256242)
  id: totrans-1073
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐式换行，[列表](index_split_011.html#filepos256242)
- en: import statement, [Modules and the import Statement](index_split_012.html#filepos376420)-[Modules
    and the import Statement](index_split_012.html#filepos392723)
  id: totrans-1074
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: import 语句，[模块和 import 语句](index_split_012.html#filepos376420)-[模块和 import 语句](index_split_012.html#filepos392723)
- en: importing
  id: totrans-1075
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入
- en: DataFrame data
  id: totrans-1076
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrame 数据
- en: as CSV files, [Importing CSV Files](index_split_016.html#filepos748628)-[Importing
    CSV Files](index_split_016.html#filepos764876)
  id: totrans-1077
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为 CSV 文件，[导入 CSV 文件](index_split_016.html#filepos748628)-[导入 CSV 文件](index_split_016.html#filepos764876)
- en: purpose of, [Importing and Exporting DataFrames](index_split_016.html#filepos740480)
  id: totrans-1078
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用途，[导入和导出数据框](index_split_016.html#filepos740480)
- en: modules, [Modules and the import Statement](index_split_012.html#filepos376420)-[Modules
    and the import Statement](index_split_012.html#filepos392723)
  id: totrans-1079
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块，[模块和 import 语句](index_split_012.html#filepos376420)-[模块和 import 语句](index_split_012.html#filepos392723)
- en: running scripts versus, [Backend](index_split_027.html#filepos1641594)
  id: totrans-1080
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行脚本与，[后端](index_split_027.html#filepos1641594)
- en: UDFs, [UDF Quickstart](index_split_028.html#filepos1657477)-[UDF Quickstart](index_split_028.html#filepos1679023)
  id: totrans-1081
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: UDF（用户定义函数），[UDF 快速入门](index_split_028.html#filepos1657477)-[UDF 快速入门](index_split_028.html#filepos1679023)
- en: importsub.py example, [The Sub Decorator](index_split_028.html#filepos1796656)
  id: totrans-1082
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: importsub.py 示例，[装饰器 Sub](index_split_028.html#filepos1796656)
- en: imshow method (Plotly), [Rebasing and Correlation](index_split_017.html#filepos846056)
  id: totrans-1083
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: imshow 方法（Plotly），[重基准化和相关性](index_split_017.html#filepos846056)
- en: in operator, [Lists](index_split_011.html#filepos262598), [Selecting by boolean
    indexing](index_split_015.html#filepos558929)
  id: totrans-1084
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: in 操作符，[列表](index_split_011.html#filepos262598)，[通过布尔索引选择](index_split_015.html#filepos558929)
- en: indexing
  id: totrans-1085
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引
- en: in Python, [Indexing](index_split_011.html#filepos228067)
  id: totrans-1086
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 中，[索引](index_split_011.html#filepos228067)
- en: range objects (xlwings), [The Excel Object Model](index_split_024.html#filepos1276198)
  id: totrans-1087
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围对象（xlwings），[Excel 对象模型](index_split_024.html#filepos1276198)
- en: in VBA, [Indexing](index_split_011.html#filepos228929)
  id: totrans-1088
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 VBA 中，[索引](index_split_011.html#filepos228929)
- en: zero- versus one-based, [The Excel Object Model](index_split_024.html#filepos1295706)
  id: totrans-1089
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零基和一基，[Excel 对象模型](index_split_024.html#filepos1295706)
- en: indices
  id: totrans-1090
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引
- en: for DataFrames, [Index](index_split_015.html#filepos498949)-[Index](index_split_015.html#filepos512717),
    [Formatting a DataFrame’s index and headers](index_split_022.html#filepos1170468)-[Formatting
    a DataFrame’s index and headers](index_split_022.html#filepos1205120)
  id: totrans-1091
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 DataFrames，[索引](index_split_015.html#filepos498949)-[索引](index_split_015.html#filepos512717)，[格式化
    DataFrame 的索引和标题](index_split_022.html#filepos1170468)-[格式化 DataFrame 的索引和标题](index_split_022.html#filepos1205120)
- en: time-based, [Time Series Analysis with pandas](index_split_017.html#filepos769969)
  id: totrans-1092
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于时间的，[使用 pandas 进行时间序列分析](index_split_017.html#filepos769969)
- en: info method (pandas), [DataFrame and Series](index_split_015.html#filepos496964),
    [Importing CSV Files](index_split_016.html#filepos750501), [The read_excel Function
    and ExcelFile Class](index_split_019.html#filepos887441)
  id: totrans-1093
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: info 方法（pandas），[DataFrame 和 Series](index_split_015.html#filepos496964)，[导入
    CSV 文件](index_split_016.html#filepos750501)，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos887441)
- en: init method, [Classes and Objects](index_split_031.html#filepos1837273)-[Classes
    and Objects](index_split_031.html#filepos1839671)
  id: totrans-1094
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: init 方法，[类和对象](index_split_031.html#filepos1837273)-[类和对象](index_split_031.html#filepos1839671)
- en: initialization (of objects), [Classes and Objects](index_split_031.html#filepos1837273)
  id: totrans-1095
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始化（对象的），[类和对象](index_split_031.html#filepos1837273)
- en: inner joins, [Joining and Merging](index_split_016.html#filepos668671)
  id: totrans-1096
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内连接，[连接和合并](index_split_016.html#filepos668671)
- en: inputs, separate layer for, [Separation of concerns](index_split_007.html#filepos45452)
  id: totrans-1097
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入，独立的层，[关注点分离](index_split_007.html#filepos45452)
- en: installing
  id: totrans-1098
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装
- en: Anaconda, [Installation](index_split_008.html#filepos99940)-[Installation](index_split_008.html#filepos101307)
  id: totrans-1099
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda，[安装](index_split_008.html#filepos99940)-[安装](index_split_008.html#filepos101307)
- en: 'packages, [Package Managers: Conda and pip](index_split_008.html#filepos125084),
    [Create a New Conda Environment](index_split_029.html#filepos1813742)'
  id: totrans-1100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包，[包管理器：Conda 和 pip](index_split_008.html#filepos125084)，[创建新的 Conda 环境](index_split_029.html#filepos1813742)
- en: Plotly, [Plotly](index_split_016.html#filepos728478)
  id: totrans-1101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Plotly，[Plotly](index_split_016.html#filepos728478)
- en: 'pytrends, [Package Managers: Conda and pip](index_split_008.html#filepos125608)'
  id: totrans-1102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pytrends，[包管理器：Conda 和 pip](index_split_008.html#filepos125608)
- en: 'pyxlsb, [Package Managers: Conda and pip](index_split_008.html#filepos125608)'
  id: totrans-1103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pyxlsb，[包管理器：Conda 和 pip](index_split_008.html#filepos125608)
- en: VS Code, [Installation and Configuration](index_split_009.html#filepos159642)
  id: totrans-1104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VS Code，[安装和配置](index_split_009.html#filepos159642)
- en: xlutils, [xlrd, xlwt, and xlutils](index_split_021.html#filepos1085435)
  id: totrans-1105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlutils，[xlrd、xlwt 和 xlutils](index_split_021.html#filepos1085435)
- en: xlwings add-in, [Excel Add-in](index_split_026.html#filepos1442113)-[Excel Add-in](index_split_026.html#filepos1447961)
  id: totrans-1106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 插件，[Excel 插件](index_split_026.html#filepos1442113)-[Excel 插件](index_split_026.html#filepos1447961)
- en: instances (of Excel), [The Excel Object Model](index_split_024.html#filepos1252360),
    [The Excel Object Model](index_split_024.html#filepos1296280)
  id: totrans-1107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例（Excel 的），[Excel 对象模型](index_split_024.html#filepos1252360)，[Excel 对象模型](index_split_024.html#filepos1296280)
- en: instantiation, [Attributes and methods](index_split_011.html#filepos188357),
    [The datetime Class](index_split_012.html#filepos394507), [Classes and Objects](index_split_031.html#filepos1833058)
  id: totrans-1108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例化，[属性和方法](index_split_011.html#filepos188357)，[datetime 类](index_split_012.html#filepos394507)，[类和对象](index_split_031.html#filepos1833058)
- en: int data type, [Numeric Types](index_split_011.html#filepos189160)-[Numeric
    Types](index_split_011.html#filepos194525)
  id: totrans-1109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: int 数据类型，[数值类型](index_split_011.html#filepos189160)-[数值类型](index_split_011.html#filepos194525)
- en: integers, [Numeric Types](index_split_011.html#filepos189272)
  id: totrans-1110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整数，[数值类型](index_split_011.html#filepos189272)
- en: integrated development environments (IDEs), [Visual Studio Code](index_split_009.html#filepos156885),
    [Running a Python Script](index_split_009.html#filepos174247)-[Running a Python
    Script](index_split_009.html#filepos176621)
  id: totrans-1111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成开发环境（IDEs），[Visual Studio Code](index_split_009.html#filepos156885)，[运行 Python
    脚本](index_split_009.html#filepos174247)-[运行 Python 脚本](index_split_009.html#filepos176621)
- en: IntelliSense, [Visual Studio Code](index_split_009.html#filepos155542)
  id: totrans-1112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IntelliSense，[Visual Studio Code](index_split_009.html#filepos155542)
- en: interactive Python session
  id: totrans-1113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交互式 Python 会话
- en: 'ending, [Python REPL: An Interactive Python Session](index_split_008.html#filepos118780)'
  id: totrans-1114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结束，[Python REPL：交互式 Python 会话](index_split_008.html#filepos118780)
- en: 'starting, [Python REPL: An Interactive Python Session](index_split_008.html#filepos115018)-[Python
    REPL: An Interactive Python Session](index_split_008.html#filepos118983)'
  id: totrans-1115
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始，[Python REPL：交互式 Python 会话](index_split_008.html#filepos115018)-[Python REPL：交互式
    Python 会话](index_split_008.html#filepos118983)
- en: isin operator (pandas), [Selecting by boolean indexing](index_split_015.html#filepos558929)
  id: totrans-1116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: isin 操作符（pandas），[通过布尔索引选择](index_split_015.html#filepos558929)
- en: isna method (pandas), [Missing Data](index_split_015.html#filepos605310)
  id: totrans-1117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: isna 方法（pandas），[缺失数据](index_split_015.html#filepos605310)
- en: items method, [The for and while Loops](index_split_012.html#filepos333494)
  id: totrans-1118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: items 方法，[for 和 while 循环](index_split_012.html#filepos333494)
- en: J
  id: totrans-1119
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: J
- en: JavaScript Object Notation (JSON), [Web APIs](index_split_027.html#filepos1494225)-[Web
    APIs](index_split_027.html#filepos1503692)
  id: totrans-1120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript 对象表示法（JSON），[Web APIs](index_split_027.html#filepos1494225)-[Web
    APIs](index_split_027.html#filepos1503692)
- en: join condition, [Joining and Merging](index_split_016.html#filepos683007)
  id: totrans-1121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接条件，[连接和合并](index_split_016.html#filepos683007)
- en: join method (pandas), [Joining and Merging](index_split_016.html#filepos667765)-[Joining
    and Merging](index_split_016.html#filepos690380)
  id: totrans-1122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: join 方法（pandas），[连接和合并](index_split_016.html#filepos667765)-[连接和合并](index_split_016.html#filepos690380)
- en: joining
  id: totrans-1123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加入
- en: database tables, [Databases](index_split_027.html#filepos1517665)
  id: totrans-1124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库表，[数据库](index_split_027.html#filepos1517665)
- en: DataFrames, [Joining and Merging](index_split_016.html#filepos667765)-[Joining
    and Merging](index_split_016.html#filepos690380)
  id: totrans-1125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据帧，[连接和合并](index_split_016.html#filepos667765)-[连接和合并](index_split_016.html#filepos690380)
- en: JSON (JavaScript Object Notation), [Web APIs](index_split_027.html#filepos1494225)-[Web
    APIs](index_split_027.html#filepos1503692)
  id: totrans-1126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSON（JavaScript 对象表示法），[Web APIs](index_split_027.html#filepos1494225)-[Web
    APIs](index_split_027.html#filepos1503692)
- en: json module, [Web APIs](index_split_027.html#filepos1495827)
  id: totrans-1127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: json 模块，[Web APIs](index_split_027.html#filepos1495827)
- en: Jupyter kernel, [Shutting Down Jupyter Notebooks](index_split_009.html#filepos149871)
  id: totrans-1128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 内核，[关闭 Jupyter 笔记本](index_split_009.html#filepos149871)
- en: Jupyter notebooks
  id: totrans-1129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 笔记本
- en: cells
  id: totrans-1130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单元格
- en: edit mode versus command mode, [Edit vs. Command Mode](index_split_009.html#filepos140230)-[Edit
    vs. Command Mode](index_split_009.html#filepos145012)
  id: totrans-1131
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑模式与命令模式，[编辑模式 vs. 命令模式](index_split_009.html#filepos140230)-[编辑模式 vs. 命令模式](index_split_009.html#filepos145012)
- en: operational overview, [Notebook Cells](index_split_009.html#filepos134675)-[Notebook
    Cells](index_split_009.html#filepos140068)
  id: totrans-1132
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行概述，[笔记本单元格](index_split_009.html#filepos134675)-[笔记本单元格](index_split_009.html#filepos140068)
- en: output, [Notebook Cells](index_split_009.html#filepos137198)
  id: totrans-1133
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输出，[笔记本单元格](index_split_009.html#filepos137198)
- en: in Python scripts, [Python Scripts with Code Cells](index_split_030.html#filepos1829327)
  id: totrans-1134
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 脚本中，[带有代码单元格的 Python 脚本](index_split_030.html#filepos1829327)
- en: run order, [Run Order Matters](index_split_009.html#filepos145168)
  id: totrans-1135
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行顺序，[运行顺序很重要](index_split_009.html#filepos145168)
- en: cloud providers, [Shutting Down Jupyter Notebooks](index_split_009.html#filepos151042)
  id: totrans-1136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云提供商，[关闭 Jupyter 笔记本](index_split_009.html#filepos151042)
- en: comments, [Mathematical operators](index_split_011.html#filepos204466)
  id: totrans-1137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注释，[数学运算符](index_split_011.html#filepos204466)
- en: Excel versus, [Jupyter Notebooks](index_split_008.html#filepos131000)
  id: totrans-1138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 与之比较，[Jupyter 笔记本](index_split_008.html#filepos131000)
- en: magic commands, [Matplotlib](index_split_016.html#filepos726866)
  id: totrans-1139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 魔术命令，[Matplotlib](index_split_016.html#filepos726866)
- en: purpose of, [Development Environment](index_split_008.html#filepos97807), [Jupyter
    Notebooks](index_split_008.html#filepos129917)-[Jupyter Notebooks](index_split_008.html#filepos132282)
  id: totrans-1140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[开发环境](index_split_008.html#filepos97807)，[Jupyter 笔记本](index_split_008.html#filepos129917)-[Jupyter
    笔记本](index_split_008.html#filepos132282)
- en: renaming, [Running Jupyter Notebooks](index_split_008.html#filepos134176)
  id: totrans-1141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重命名，[运行 Jupyter 笔记本](index_split_008.html#filepos134176)
- en: running, [Running Jupyter Notebooks](index_split_008.html#filepos132444)-[Running
    Jupyter Notebooks](index_split_008.html#filepos134424), [Run Jupyter Notebooks](index_split_030.html#filepos1826689)-[Run
    Jupyter Notebooks](index_split_030.html#filepos1829065)
  id: totrans-1142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行，[运行 Jupyter 笔记本](index_split_008.html#filepos132444)-[运行 Jupyter 笔记本](index_split_008.html#filepos134424)，[运行
    Jupyter 笔记本](index_split_030.html#filepos1826689)-[运行 Jupyter 笔记本](index_split_030.html#filepos1829065)
- en: saving in VS Code, [Run Jupyter Notebooks](index_split_030.html#filepos1828008)
  id: totrans-1143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 VS Code 中保存，[运行 Jupyter 笔记本](index_split_030.html#filepos1828008)
- en: shutting down, [Shutting Down Jupyter Notebooks](index_split_009.html#filepos149871)
  id: totrans-1144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关闭，[关闭 Jupyter 笔记本](index_split_009.html#filepos149871)
- en: VS Code versus, [Visual Studio Code](index_split_009.html#filepos154255)
  id: totrans-1145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VS Code 对比，[Visual Studio Code](index_split_009.html#filepos154255)
- en: JupyterLab, [Running a Python Script](index_split_009.html#filepos175602)
  id: totrans-1146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JupyterLab，[运行 Python 脚本](index_split_009.html#filepos175602)
- en: K
  id: totrans-1147
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: K
- en: Kaggle, [Shutting Down Jupyter Notebooks](index_split_009.html#filepos152502)
  id: totrans-1148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kaggle，[关闭 Jupyter 笔记本](index_split_009.html#filepos152502)
- en: key/value combinations (see dictionaries)
  id: totrans-1149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 键/值组合（参见字典）
- en: keyboard shortcuts
  id: totrans-1150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 键盘快捷键
- en: for comments, [Mathematical operators](index_split_011.html#filepos204466)
  id: totrans-1151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于注释，[数学运算符](index_split_011.html#filepos204466)
- en: Jupyter notebooks, [Edit vs. Command Mode](index_split_009.html#filepos141162)-[Edit
    vs. Command Mode](index_split_009.html#filepos144741)
  id: totrans-1152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 笔记本，[编辑 vs. 命令模式](index_split_009.html#filepos141162)-[编辑 vs. 命令模式](index_split_009.html#filepos144741)
- en: keyword arguments (for functions), [Calling functions](index_split_012.html#filepos372720)
  id: totrans-1153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关键字参数（用于函数），[调用函数](index_split_012.html#filepos372720)
- en: Koalas, [Limitations with pandas](index_split_017.html#filepos861209)
  id: totrans-1154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Koalas，[与 pandas 的限制](index_split_017.html#filepos861209)
- en: Komodo IDE, [Running a Python Script](index_split_009.html#filepos176335)
  id: totrans-1155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Komodo IDE，[运行 Python 脚本](index_split_009.html#filepos176335)
- en: L
  id: totrans-1156
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: L
- en: labels
  id: totrans-1157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签
- en: selecting data by (pandas), [Selecting by label](index_split_015.html#filepos525461)-[Selecting
    by label](index_split_015.html#filepos538911)
  id: totrans-1158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按标签选择数据（pandas），[按标签选择](index_split_015.html#filepos525461)-[按标签选择](index_split_015.html#filepos538911)
- en: setting data by (pandas), [Setting data by label or position](index_split_015.html#filepos576247)
  id: totrans-1159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按标签或位置设置数据（pandas），[按标签或位置设置数据](index_split_015.html#filepos576247)
- en: in VBA, [Modern Language Features](index_split_007.html#filepos89147)
  id: totrans-1160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 VBA 中，[现代语言特性](index_split_007.html#filepos89147)
- en: lambda expressions, [Applying a Function](index_split_015.html#filepos645164)
  id: totrans-1161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: lambda 表达式，[应用函数](index_split_015.html#filepos645164)
- en: lambda functions (Excel), [Excel Is a Programming Language](index_split_007.html#filepos36898)
  id: totrans-1162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: lambda 函数（Excel），[Excel 是一种编程语言](index_split_007.html#filepos36898)
- en: language settings (Excel), [The Excel Object Model](index_split_024.html#filepos1254107)-[The
    Excel Object Model](index_split_024.html#filepos1255983)
  id: totrans-1163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语言设置（Excel），[Excel 对象模型](index_split_024.html#filepos1254107)-[Excel 对象模型](index_split_024.html#filepos1255983)
- en: layers of applications, [Separation of concerns](index_split_007.html#filepos41940)-[Separation
    of concerns](index_split_007.html#filepos45911)
  id: totrans-1164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用层次，[关注点分离](index_split_007.html#filepos41940)-[关注点分离](index_split_007.html#filepos45911)
- en: left joins, [Joining and Merging](index_split_016.html#filepos668763)
  id: totrans-1165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左连接，[连接和合并](index_split_016.html#filepos668763)
- en: len function (lists), [Lists](index_split_011.html#filepos262598)
  id: totrans-1166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: len 函数（列表），[列表](index_split_011.html#filepos262598)
- en: line breaks, [Lists](index_split_011.html#filepos253745)
  id: totrans-1167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 换行，[列表](index_split_011.html#filepos253745)
- en: linting, [PEP 8 and VS Code](index_split_012.html#filepos426221)
  id: totrans-1168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码检查，[PEP 8 和 VS Code](index_split_012.html#filepos426221)
- en: list comprehensions, [List, Dictionary, and Set Comprehensions](index_split_012.html#filepos347118)
  id: totrans-1169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表推导式，[列表、字典和集合推导式](index_split_012.html#filepos347118)
- en: list constructor, [Sets](index_split_011.html#filepos302517)
  id: totrans-1170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表构造器，[集合](index_split_011.html#filepos302517)
- en: list separators (Excel), changing, [The Excel Object Model](index_split_024.html#filepos1254107)-[The
    Excel Object Model](index_split_024.html#filepos1255983)
  id: totrans-1171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列分隔符（Excel），更改，[Excel 对象模型](index_split_024.html#filepos1254107)-[Excel 对象模型](index_split_024.html#filepos1255983)
- en: listing current directory files, [Anaconda Prompt](index_split_008.html#filepos110263)
  id: totrans-1172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出当前目录文件，[Anaconda 提示符](index_split_008.html#filepos110263)
- en: lists, [Lists](index_split_011.html#filepos243228)-[Lists](index_split_011.html#filepos268531)
  id: totrans-1173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表，[列表](index_split_011.html#filepos243228)-[列表](index_split_011.html#filepos268531)
- en: literals, [Sets](index_split_011.html#filepos297752), [The datetime Class](index_split_012.html#filepos394192)
  id: totrans-1174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字面常量，[集合](index_split_011.html#filepos297752)，[datetime 类](index_split_012.html#filepos394192)
- en: loc attribute (pandas), [Selecting by label](index_split_015.html#filepos525461)-[Selecting
    by label](index_split_015.html#filepos538911), [Setting data by label or position](index_split_015.html#filepos576473)
  id: totrans-1175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: loc 属性（pandas），[按标签选择](index_split_015.html#filepos525461)-[按标签选择](index_split_015.html#filepos538911)，[按标签或位置设置数据](index_split_015.html#filepos576473)
- en: log returns, [Shifting and Percentage Changes](index_split_017.html#filepos809605)-[Shifting
    and Percentage Changes](index_split_017.html#filepos818833)
  id: totrans-1176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对数收益率，[移位和百分比变化](index_split_017.html#filepos809605)-[移位和百分比变化](index_split_017.html#filepos818833)
- en: log ufunc (NumPy), [Shifting and Percentage Changes](index_split_017.html#filepos814239)
  id: totrans-1177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录 ufunc（NumPy），[偏移和百分比变化](index_split_017.html#filepos814239)
- en: logarithms in Excel and Python, [Shifting and Percentage Changes](index_split_017.html#filepos810574)
  id: totrans-1178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 和 Python 中的对数，[偏移和百分比变化](index_split_017.html#filepos810574)
- en: London Whale story, [Excel in the News](index_split_007.html#filepos39761)
  id: totrans-1179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 伦敦鲸鱼故事，[Excel 新闻](index_split_007.html#filepos39761)
- en: loops
  id: totrans-1180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环
- en: for loops, [The for and while Loops](index_split_012.html#filepos316683)-[The
    for and while Loops](index_split_012.html#filepos341967)
  id: totrans-1181
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: for 循环，[for 和 while 循环](index_split_012.html#filepos316683)-[for 和 while 循环](index_split_012.html#filepos341967)
- en: while loops, [The for and while Loops](index_split_012.html#filepos343907)
  id: totrans-1182
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: while 循环，[for 和 while 循环](index_split_012.html#filepos343907)
- en: Lotus 1-2-3, [Why Python for Excel?](index_split_007.html#filepos33990)
  id: totrans-1183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lotus 1-2-3，[为什么选择 Python 处理 Excel？](index_split_007.html#filepos33990)
- en: low-level packages, [The excel.py Module](index_split_021.html#filepos974268)
  id: totrans-1184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低级包，[excel.py 模块](index_split_021.html#filepos974268)
- en: lowercase, transforming to/from uppercase, [Strings](index_split_011.html#filepos224113)
  id: totrans-1185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 小写，转换为/从大写，[字符串](index_split_011.html#filepos224113)
- en: lru_cache decorator, [Caching](index_split_028.html#filepos1784463)
  id: totrans-1186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: lru_cache 装饰器，[缓存](index_split_028.html#filepos1784463)
- en: ls command, [Anaconda Prompt](index_split_008.html#filepos110600)
  id: totrans-1187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ls 命令，[Anaconda Prompt](index_split_008.html#filepos110600)
- en: lxml, [Writing with OpenPyXL](index_split_022.html#filepos1126100)
  id: totrans-1188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: lxml，[使用 OpenPyXL 进行编写](index_split_022.html#filepos1126100)
- en: M
  id: totrans-1189
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: M
- en: M formula language (Power Query), [Preface](index_split_003.html#filepos9253)
  id: totrans-1190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: M 公式语言（Power Query），[前言](index_split_003.html#filepos9253)
- en: macOS
  id: totrans-1191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS
- en: Anaconda Prompt, running, [Anaconda Prompt](index_split_008.html#filepos104346)
  id: totrans-1192
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda Prompt，运行，[Anaconda Prompt](index_split_008.html#filepos104346)
- en: current directory
  id: totrans-1193
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前目录
- en: listing files in, [Anaconda Prompt](index_split_008.html#filepos110600)
  id: totrans-1194
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出文件在，[Anaconda Prompt](index_split_008.html#filepos110600)
- en: viewing full path, [Anaconda Prompt](index_split_008.html#filepos105254)
  id: totrans-1195
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看完整路径，[Anaconda Prompt](index_split_008.html#filepos105254)
- en: extracting macro code (Xlsxwriter), [XlsxWriter](index_split_021.html#filepos1066169)
  id: totrans-1196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提取宏代码（Xlsxwriter），[XlsxWriter](index_split_021.html#filepos1066169)
- en: file extensions, viewing, [Anaconda Prompt](index_split_008.html#filepos114549)
  id: totrans-1197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件扩展名，查看，[Anaconda Prompt](index_split_008.html#filepos114549)
- en: list separators (Excel), changing, [The Excel Object Model](index_split_024.html#filepos1255706)
  id: totrans-1198
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列分隔符（Excel），更改，[Excel 对象模型](index_split_024.html#filepos1255706)
- en: permissions in, [Using Excel as Data Viewer](index_split_024.html#filepos1249144),
    [The Excel Object Model](index_split_024.html#filepos1309403)
  id: totrans-1199
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 权限在，[将 Excel 用作数据查看器](index_split_024.html#filepos1249144)，[Excel 对象模型](index_split_024.html#filepos1309403)
- en: ribbon add-ins, [Excel Add-in](index_split_026.html#filepos1447883)
  id: totrans-1200
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能区添加，[Excel 插件](index_split_026.html#filepos1447883)
- en: Terminal, [Anaconda Prompt](index_split_008.html#filepos102144)-[Anaconda Prompt](index_split_008.html#filepos104346)
  id: totrans-1201
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 终端，[Anaconda Prompt](index_split_008.html#filepos102144)-[Anaconda Prompt](index_split_008.html#filepos104346)
- en: disabling auto activation of Conda environment, [Disable Auto Activation](index_split_029.html#filepos1819954)
  id: totrans-1202
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用 Conda 环境的自动激活，[禁用自动激活](index_split_029.html#filepos1819954)
- en: VS Code
  id: totrans-1203
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VS Code
- en: configuring, [Installation and Configuration](index_split_009.html#filepos164804)
  id: totrans-1204
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置，[安装和配置](index_split_009.html#filepos164804)
- en: installing, [Installation and Configuration](index_split_009.html#filepos160570)
  id: totrans-1205
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装，[安装和配置](index_split_009.html#filepos160570)
- en: xlwings dependencies, [xlwings Foundations](index_split_025.html#filepos1411927)
  id: totrans-1206
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 依赖，[xlwings 基础](index_split_025.html#filepos1411927)
- en: macro code (Xlsxwriter), extracting from xlsm files, [XlsxWriter](index_split_021.html#filepos1064438)-[XlsxWriter](index_split_021.html#filepos1066693)
  id: totrans-1207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宏代码（Xlsxwriter），从 xlsm 文件中提取，[XlsxWriter](index_split_021.html#filepos1064438)-[XlsxWriter](index_split_021.html#filepos1066693)
- en: macro object (xlwings), [Running VBA Code](index_split_024.html#filepos1316702)
  id: totrans-1208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宏对象（xlwings），[运行 VBA 代码](index_split_024.html#filepos1316702)
- en: macros
  id: totrans-1209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宏
- en: enabling (Excel), [RunPython Function](index_split_026.html#filepos1459885)
  id: totrans-1210
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用（Excel），[RunPython 函数](index_split_026.html#filepos1459885)
- en: in Python Package Tracker, [Frontend](index_split_027.html#filepos1616544)
  id: totrans-1211
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 包追踪器中，[前端](index_split_027.html#filepos1616544)
- en: running (Excel), [RunPython Function](index_split_026.html#filepos1462470)
  id: totrans-1212
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行（Excel），[RunPython 函数](index_split_026.html#filepos1462470)
- en: magic commands (Jupyter notebooks), [Matplotlib](index_split_016.html#filepos726866),
    [Reading sheets in parallel](index_split_022.html#filepos1147874)
  id: totrans-1213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 魔术命令（Jupyter 笔记本），[Matplotlib](index_split_016.html#filepos726866)，[并行读取表](index_split_022.html#filepos1147874)
- en: Markdown cells (Jupyter notebooks), [Notebook Cells](index_split_009.html#filepos138277)-[Notebook
    Cells](index_split_009.html#filepos139906)
  id: totrans-1214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Markdown 单元格（Jupyter 笔记本），[笔记本单元格](index_split_009.html#filepos138277)-[笔记本单元格](index_split_009.html#filepos139906)
- en: mathematical operators, [Mathematical operators](index_split_011.html#filepos196304)
  id: totrans-1215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数学运算符，[数学运算符](index_split_011.html#filepos196304)
- en: Matplotlib, [Matplotlib](index_split_016.html#filepos717479)-[Matplotlib](index_split_016.html#filepos727877)
  id: totrans-1216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matplotlib，[Matplotlib](index_split_016.html#filepos717479)-[Matplotlib](index_split_016.html#filepos727877)
- en: 'plots as Excel pictures, [Pictures: Matplotlib plots](index_split_025.html#filepos1374823)-[Pictures:
    Matplotlib plots](index_split_025.html#filepos1389691)'
  id: totrans-1217
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将图表绘制为 Excel 图片，[图片：Matplotlib 图表](index_split_025.html#filepos1374823)-[图片：Matplotlib
    图表](index_split_025.html#filepos1389691)
- en: matrix, [Lists](index_split_011.html#filepos249366), [Vectorization and Broadcasting](index_split_014.html#filepos451947)
  id: totrans-1218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩阵，[列表](index_split_011.html#filepos249366), [向量化和广播](index_split_014.html#filepos451947)
- en: mean method (pandas), [Grouping](index_split_016.html#filepos695674)
  id: totrans-1219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 均值方法（pandas），[分组](index_split_016.html#filepos695674)
- en: melt function (pandas), [Pivoting and Melting](index_split_016.html#filepos712684)
  id: totrans-1220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: melt 函数（pandas），[数据透视和溶解](index_split_016.html#filepos712684)
- en: melting DataFrame data, [Pivoting and Melting](index_split_016.html#filepos712684)
  id: totrans-1221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 融化 DataFrame 数据，[数据透视和溶解](index_split_016.html#filepos712684)
- en: memoization, [Caching](index_split_028.html#filepos1781894)
  id: totrans-1222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记忆化，[缓存](index_split_028.html#filepos1781894)
- en: merge method (pandas), [Joining and Merging](index_split_016.html#filepos682873)-[Joining
    and Merging](index_split_016.html#filepos690380)
  id: totrans-1223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: merge 方法（pandas），[连接和合并](index_split_016.html#filepos682873)-[连接和合并](index_split_016.html#filepos690380)
- en: merge requests, [Version control](index_split_007.html#filepos53419)
  id: totrans-1224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并请求，[版本控制](index_split_007.html#filepos53419)
- en: merging
  id: totrans-1225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并
- en: DataFrames, [Joining and Merging](index_split_016.html#filepos682873)-[Joining
    and Merging](index_split_016.html#filepos690380)
  id: totrans-1226
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrames，[连接和合并](index_split_016.html#filepos682873)-[连接和合并](index_split_016.html#filepos690380)
- en: dictionaries, [Dictionaries](index_split_011.html#filepos275528)
  id: totrans-1227
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典，[字典](index_split_011.html#filepos275528)
- en: method chaining, [Index](index_split_015.html#filepos505857)
  id: totrans-1228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法链，[索引](index_split_015.html#filepos505857)
- en: methods
  id: totrans-1229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法
- en: corresponding arithmetic operators for (pandas), [Arithmetic Operations](index_split_015.html#filepos625775)
  id: totrans-1230
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 对应的算术运算符，[算术运算](index_split_015.html#filepos625775)
- en: DataFrame exploration, [Importing CSV Files](index_split_016.html#filepos758459)
  id: totrans-1231
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 DataFrame，[导入 CSV 文件](index_split_016.html#filepos758459)
- en: of DataFrames, copies returned, [Index](index_split_015.html#filepos506311)
  id: totrans-1232
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrames 的副本返回，[索引](index_split_015.html#filepos506311)
- en: help documentation, [Strings](index_split_011.html#filepos225822)
  id: totrans-1233
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助文档，[字符串](index_split_011.html#filepos225822)
- en: purpose of, [Attributes and methods](index_split_011.html#filepos187275), [Classes
    and Objects](index_split_031.html#filepos1833311)-[Classes and Objects](index_split_031.html#filepos1847675)
  id: totrans-1234
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[属性和方法](index_split_011.html#filepos187275), [类和对象](index_split_031.html#filepos1833311)-[类和对象](index_split_031.html#filepos1847675)
- en: string methods in DataFrames, [Working with Text Columns](index_split_015.html#filepos634000)
  id: totrans-1235
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrames 中的字符串方法，[处理文本列](index_split_015.html#filepos634000)
- en: Microsoft Access, [Databases](index_split_027.html#filepos1516369)
  id: totrans-1236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft Access，[数据库](index_split_027.html#filepos1516369)
- en: migrating databases, [Databases](index_split_027.html#filepos1518267)
  id: totrans-1237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移数据库，[数据库](index_split_027.html#filepos1518267)
- en: minimizing cross-application calls (xlwings), [Minimize cross-application calls](index_split_025.html#filepos1416834),
    [Minimize cross-application calls](index_split_028.html#filepos1762196)-[Minimize
    cross-application calls](index_split_028.html#filepos1770595)
  id: totrans-1238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少跨应用调用（xlwings），[减少跨应用调用](index_split_025.html#filepos1416834), [减少跨应用调用](index_split_028.html#filepos1762196)-[减少跨应用调用](index_split_028.html#filepos1770595)
- en: missing data in DataFrames, [Missing Data](index_split_015.html#filepos598810)-[Missing
    Data](index_split_015.html#filepos608614)
  id: totrans-1239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrames 中的缺失数据，[缺失数据](index_split_015.html#filepos598810)-[缺失数据](index_split_015.html#filepos608614)
- en: model-view-controller (MVC), [Application Structure](index_split_027.html#filepos1605468)
  id: totrans-1240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型-视图-控制器（MVC），[应用程序结构](index_split_027.html#filepos1605468)
- en: modern Excel, [Modern Excel](index_split_007.html#filepos58283)
  id: totrans-1241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现代 Excel，[现代 Excel](index_split_007.html#filepos58283)
- en: modern language features in Python versus Excel, [Modern Language Features](index_split_007.html#filepos80870)-[Modern
    Language Features](index_split_007.html#filepos89951)
  id: totrans-1242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 与 Excel 中的现代语言特性，[现代语言特性](index_split_007.html#filepos80870)-[现代语言特性](index_split_007.html#filepos89951)
- en: Modin, [Limitations with pandas](index_split_017.html#filepos861209), [Reading
    sheets in parallel](index_split_022.html#filepos1154305)
  id: totrans-1243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Modin，[与 pandas 的限制](index_split_017.html#filepos861209), [并行读取工作表](index_split_022.html#filepos1154305)
- en: modularity, [Separation of concerns](index_split_007.html#filepos41610)-[Separation
    of concerns](index_split_007.html#filepos45911)
  id: totrans-1244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块化，[关注分离](index_split_007.html#filepos41610)-[关注分离](index_split_007.html#filepos45911)
- en: module search path (Python), [RunPython Function](index_split_026.html#filepos1466429)-[RunPython
    Function](index_split_026.html#filepos1468145), [Settings](index_split_026.html#filepos1483129)
  id: totrans-1245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块搜索路径（Python），[RunPython 函数](index_split_026.html#filepos1466429)-[RunPython
    函数](index_split_026.html#filepos1468145)，[设置](index_split_026.html#filepos1483129)
- en: modules
  id: totrans-1246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块
- en: datetime module, [The datetime Class](index_split_012.html#filepos392883)-[The
    datetime Class](index_split_012.html#filepos408810), [Working with Time-Zone-Aware
    datetime Objects](index_split_031.html#filepos1848019)-[Working with Time-Zone-Aware
    datetime Objects](index_split_031.html#filepos1862968)
  id: totrans-1247
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: datetime 模块，[datetime 类](index_split_012.html#filepos392883)-[datetime 类](index_split_012.html#filepos408810)，[使用时区感知的
    datetime 对象](index_split_031.html#filepos1848019)-[使用时区感知的 datetime 对象](index_split_031.html#filepos1862968)
- en: importing, [Modules and the import Statement](index_split_012.html#filepos376420)-[Modules
    and the import Statement](index_split_012.html#filepos392723)
  id: totrans-1248
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入，[模块和导入语句](index_split_012.html#filepos376420)-[模块和导入语句](index_split_012.html#filepos392723)
- en: running scripts versus, [Backend](index_split_027.html#filepos1641594)
  id: totrans-1249
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行脚本与，[后端](index_split_027.html#filepos1641594)
- en: timezone module, [Working with Time-Zone-Aware datetime Objects](index_split_031.html#filepos1862968)
  id: totrans-1250
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时区模块，[使用时区感知的 datetime 对象](index_split_031.html#filepos1862968)
- en: MongoDB, [Databases](index_split_027.html#filepos1518942)
  id: totrans-1251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB，[数据库](index_split_027.html#filepos1518942)
- en: moving averages in time series analysis, [Rolling Windows](index_split_017.html#filepos855004)
  id: totrans-1252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析中的移动平均线，[滚动窗口](index_split_017.html#filepos855004)
- en: MultiIndexes (pandas), selecting data by, [Selecting by using a MultiIndex](index_split_015.html#filepos567793)-[Selecting
    by using a MultiIndex](index_split_015.html#filepos575571)
  id: totrans-1253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MultiIndexes（pandas），通过选择数据，[通过 MultiIndex 选择数据](index_split_015.html#filepos567793)-[通过
    MultiIndex 选择数据](index_split_015.html#filepos575571)
- en: Multiplan, [Why Python for Excel?](index_split_007.html#filepos34096)
  id: totrans-1254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Multiplan，[为什么选择 Python 处理 Excel？](index_split_007.html#filepos34096)
- en: multiprocessing, [Reading sheets in parallel](index_split_022.html#filepos1144410)-[Reading
    sheets in parallel](index_split_022.html#filepos1157423)
  id: totrans-1255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多进程，[并行读取工作表](index_split_022.html#filepos1144410)-[并行读取工作表](index_split_022.html#filepos1157423)
- en: mutable objects
  id: totrans-1256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可变对象
- en: as function arguments, [Calling Functions with Mutable Objects as Arguments](index_split_031.html#filepos1882799)-[Functions
    with Mutable Objects as Default Arguments](index_split_031.html#filepos1900058)
  id: totrans-1257
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为函数参数，[将可变对象作为参数调用函数](index_split_031.html#filepos1882799)-[带有可变对象的默认参数函数](index_split_031.html#filepos1900058)
- en: immutable objects versus, [Mutable vs. Immutable Python Objects](index_split_031.html#filepos1865519)-[Mutable
    vs. Immutable Python Objects](index_split_031.html#filepos1882596)
  id: totrans-1258
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不可变对象与，[可变 vs. 不可变 Python 对象](index_split_031.html#filepos1865519)-[可变 vs. 不可变
    Python 对象](index_split_031.html#filepos1882596)
- en: MVC (model-view-controller), [Application Structure](index_split_027.html#filepos1605468)
  id: totrans-1259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MVC（模型-视图-控制器），[应用结构](index_split_027.html#filepos1605468)
- en: mypy, [Type Hints](index_split_012.html#filepos428975)
  id: totrans-1260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mypy，[类型提示](index_split_012.html#filepos428975)
- en: MySQL, [Databases](index_split_027.html#filepos1516369)
  id: totrans-1261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL，[数据库](index_split_027.html#filepos1516369)
- en: N
  id: totrans-1262
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: N
- en: Name Manager (Excel), [Defined names](index_split_025.html#filepos1399895)
  id: totrans-1263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称管理器（Excel），[定义名称](index_split_025.html#filepos1399895)
- en: named ranges
  id: totrans-1264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命名范围
- en: creating in xlwings, [Defined names](index_split_025.html#filepos1390078)-[Defined
    names](index_split_025.html#filepos1400526)
  id: totrans-1265
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 xlwings 中创建，[定义名称](index_split_025.html#filepos1390078)-[定义名称](index_split_025.html#filepos1400526)
- en: in Python Package Tracker, [Frontend](index_split_027.html#filepos1608660)
  id: totrans-1266
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python Package Tracker 中，[前端](index_split_027.html#filepos1608660)
- en: namespaces of scripts, [Modules and the import Statement](index_split_012.html#filepos391305)
  id: totrans-1267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本的命名空间，[模块和导入语句](index_split_012.html#filepos391305)
- en: naming
  id: totrans-1268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命名
- en: columns (pandas), [Columns](index_split_015.html#filepos514077)
  id: totrans-1269
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列（pandas），[列](index_split_015.html#filepos514077)
- en: indices (pandas), [Index](index_split_015.html#filepos500212)
  id: totrans-1270
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引（pandas），[索引](index_split_015.html#filepos500212)
- en: scripts, [Modules and the import Statement](index_split_012.html#filepos392387)
  id: totrans-1271
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本，[模块和导入语句](index_split_012.html#filepos392387)
- en: variables, [Variables](index_split_010.html#filepos185081)
  id: totrans-1272
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量，[变量](index_split_010.html#filepos185081)
- en: NaN values
  id: totrans-1273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NaN 值
- en: handling when reading Excel files, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos906409)
  id: totrans-1274
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取 Excel 文件时处理，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos906409)
- en: purpose of, [Missing Data](index_split_015.html#filepos598810)-[Missing Data](index_split_015.html#filepos608614)
  id: totrans-1275
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的是，[缺失数据](index_split_015.html#filepos598810)-[缺失数据](index_split_015.html#filepos608614)
- en: replacing with zeros, [Arithmetic Operations](index_split_015.html#filepos624230)
  id: totrans-1276
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 替换为零，[算术运算](index_split_015.html#filepos624230)
- en: nested lists, [Lists](index_split_011.html#filepos247058), [NumPy Array](index_split_014.html#filepos435109)
  id: totrans-1277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嵌套列表，[列表](index_split_011.html#filepos247058), [NumPy 数组](index_split_014.html#filepos435109)
- en: news stories, Excel in, [Excel in the News](index_split_007.html#filepos38612)-[Excel
    in the News](index_split_007.html#filepos41040)
  id: totrans-1278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新闻故事，Excel 中的，[新闻中的 Excel](index_split_007.html#filepos38612)-[新闻中的 Excel](index_split_007.html#filepos41040)
- en: None built-in constant, [Booleans](index_split_011.html#filepos213324)
  id: totrans-1279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: None 内建常量，[布尔值](index_split_011.html#filepos213324)
- en: normalization (databases), [Databases](index_split_027.html#filepos1516187)-[The
    Package Tracker database](index_split_027.html#filepos1520748)
  id: totrans-1280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准化（数据库），[数据库](index_split_027.html#filepos1516187)-[包裹跟踪器数据库](index_split_027.html#filepos1520748)
- en: NoSQL databases, [Databases](index_split_027.html#filepos1517033)
  id: totrans-1281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NoSQL 数据库，[数据库](index_split_027.html#filepos1517033)
- en: notebook cells (see cells)
  id: totrans-1282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 笔记本单元格（见单元格）
- en: Notepad++, [Running a Python Script](index_split_009.html#filepos173617)
  id: totrans-1283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Notepad++，[运行 Python 脚本](index_split_009.html#filepos173617)
- en: numeric data types, [Numeric Types](index_split_011.html#filepos189160)-[Numeric
    Types](index_split_011.html#filepos194525)
  id: totrans-1284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值数据类型，[数值类型](index_split_011.html#filepos189160)-[数值类型](index_split_011.html#filepos194525)
- en: NumFOCUS, [Standard Library and Package Manager](index_split_007.html#filepos75535)
  id: totrans-1285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NumFOCUS，[标准库和包管理器](index_split_007.html#filepos75535)
- en: NumPy, [Why Python for Excel?](index_split_007.html#filepos34564)
  id: totrans-1286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NumPy，[为什么选择 Python 来做 Excel？](index_split_007.html#filepos34564)
- en: arrays
  id: totrans-1287
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数组
- en: broadcasting, [Vectorization and Broadcasting](index_split_014.html#filepos451025)-[Vectorization
    and Broadcasting](index_split_014.html#filepos453983)
  id: totrans-1288
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广播，[向量化和广播](index_split_014.html#filepos451025)-[向量化和广播](index_split_014.html#filepos453983)
- en: constructors, [Useful Array Constructors](index_split_014.html#filepos470880)
  id: totrans-1289
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构造函数，[有用的数组构造函数](index_split_014.html#filepos470880)
- en: data types, [NumPy Array](index_split_014.html#filepos445451)-[NumPy Array](index_split_014.html#filepos447897)
  id: totrans-1290
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据类型，[NumPy 数组](index_split_014.html#filepos445451)-[NumPy 数组](index_split_014.html#filepos447897)
- en: getting and setting elements, [Getting and Setting Array Elements](index_split_014.html#filepos463404)-[Getting
    and Setting Array Elements](index_split_014.html#filepos470575)
  id: totrans-1291
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取和设置元素，[获取和设置数组元素](index_split_014.html#filepos463404)-[获取和设置数组元素](index_split_014.html#filepos470575)
- en: operational overview, [NumPy Array](index_split_014.html#filepos434881)-[NumPy
    Array](index_split_014.html#filepos448083)
  id: totrans-1292
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作概述，[NumPy 数组](index_split_014.html#filepos434881)-[NumPy 数组](index_split_014.html#filepos448083)
- en: universal functions (ufuncs), [Universal Functions (ufunc)](index_split_014.html#filepos454337)-[Universal
    Functions (ufunc)](index_split_014.html#filepos462582)
  id: totrans-1293
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通用函数（ufunc），[通用函数（ufunc）](index_split_014.html#filepos454337)-[通用函数（ufunc）](index_split_014.html#filepos462582)
- en: vectorization, [Vectorization and Broadcasting](index_split_014.html#filepos448254)-[Vectorization
    and Broadcasting](index_split_014.html#filepos453983)
  id: totrans-1294
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向量化，[向量化和广播](index_split_014.html#filepos448254)-[向量化和广播](index_split_014.html#filepos453983)
- en: views versus copies, [View vs. Copy](index_split_014.html#filepos475259)-[View
    vs. Copy](index_split_014.html#filepos480562)
  id: totrans-1295
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视图与副本，[视图 vs. 副本](index_split_014.html#filepos475259)-[视图 vs. 副本](index_split_014.html#filepos480562)
- en: data analysis issues in, [Conclusion](index_split_014.html#filepos481110)
  id: totrans-1296
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据分析问题，[结论](index_split_014.html#filepos481110)
- en: purpose of, [NumPy Foundations](index_split_014.html#filepos433502)
  id: totrans-1297
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[NumPy 基础](index_split_014.html#filepos433502)
- en: O
  id: totrans-1298
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: O
- en: object model (Excel), [The Excel Object Model](index_split_024.html#filepos1250235)-[The
    Excel Object Model](index_split_024.html#filepos1313152)
  id: totrans-1299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象模型（Excel），[Excel 对象模型](index_split_024.html#filepos1250235)-[Excel 对象模型](index_split_024.html#filepos1313152)
- en: object relational mapper (ORM), [Database connections](index_split_027.html#filepos1530130)
  id: totrans-1300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象关系映射器（ORM），[数据库连接](index_split_027.html#filepos1530130)
- en: objects
  id: totrans-1301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象
- en: attributes and methods, [Classes and Objects](index_split_031.html#filepos1833311)-[Classes
    and Objects](index_split_031.html#filepos1847675)
  id: totrans-1302
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性和方法，[类和对象](index_split_031.html#filepos1833311)-[类和对象](index_split_031.html#filepos1847675)
- en: help documentation, [Strings](index_split_011.html#filepos225822)
  id: totrans-1303
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助文档，[字符串](index_split_011.html#filepos225822)
- en: purpose of, [Attributes and methods](index_split_011.html#filepos187275)
  id: totrans-1304
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[属性和方法](index_split_011.html#filepos187275)
- en: as class instances, [The datetime Class](index_split_012.html#filepos394507),
    [Classes and Objects](index_split_031.html#filepos1833058)
  id: totrans-1305
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为类实例，[日期时间类](index_split_012.html#filepos394507), [类和对象](index_split_031.html#filepos1833058)
- en: classes and, [Classes and Objects](index_split_031.html#filepos1832657)-[Classes
    and Objects](index_split_031.html#filepos1847675)
  id: totrans-1306
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类和，[类和对象](index_split_031.html#filepos1832657)-[类和对象](index_split_031.html#filepos1847675)
- en: in collections, [The Excel Object Model](index_split_024.html#filepos1252253)
  id: totrans-1307
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在集合中，[Excel 对象模型](index_split_024.html#filepos1252253)
- en: converting to boolean data type, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos891785)
  id: totrans-1308
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转换为布尔数据类型，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos891785)
- en: help documentation, [Strings](index_split_011.html#filepos225822)
  id: totrans-1309
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助文档，[字符串](index_split_011.html#filepos225822)
- en: initialization, [Classes and Objects](index_split_031.html#filepos1837273)
  id: totrans-1310
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始化，[类和对象](index_split_031.html#filepos1837273)
- en: mutable as function arguments, [Calling Functions with Mutable Objects as Arguments](index_split_031.html#filepos1882799)-[Functions
    with Mutable Objects as Default Arguments](index_split_031.html#filepos1900058)
  id: totrans-1311
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为函数参数的可变对象，[使用可变对象作为参数调用函数](index_split_031.html#filepos1882799)-[默认参数为可变对象的函数](index_split_031.html#filepos1900058)
- en: mutable versus immutable, [Mutable vs. Immutable Python Objects](index_split_031.html#filepos1865519)-[Mutable
    vs. Immutable Python Objects](index_split_031.html#filepos1882596)
  id: totrans-1312
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可变与不可变，[可变 vs. 不可变 Python 对象](index_split_031.html#filepos1865519)-[可变 vs. 不可变
    Python 对象](index_split_031.html#filepos1882596)
- en: purpose of, [Objects](index_split_010.html#filepos180908)
  id: totrans-1313
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[对象](index_split_010.html#filepos180908)
- en: variables, [Variables](index_split_010.html#filepos181374)
  id: totrans-1314
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量，[变量](index_split_010.html#filepos181374)
- en: ohlc method (pandas), [Resampling](index_split_017.html#filepos850167)
  id: totrans-1315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ohlc 方法（pandas），[重新取样](index_split_017.html#filepos850167)
- en: oletools, [Formatting a DataFrame’s data part](index_split_022.html#filepos1231999)
  id: totrans-1316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: oletools，[格式化 DataFrame 的数据部分](index_split_022.html#filepos1231999)
- en: one-based indexing, [The Excel Object Model](index_split_024.html#filepos1295706)
  id: totrans-1317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于一的索引，[Excel 对象模型](index_split_024.html#filepos1295706)
- en: one-dimensional NumPy arrays, [NumPy Array](index_split_014.html#filepos439635)
  id: totrans-1318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一维 NumPy 数组，[NumPy 数组](index_split_014.html#filepos439635)
- en: one-to-many relationships (databases), [The Package Tracker database](index_split_027.html#filepos1528709)
  id: totrans-1319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一对多关系（数据库），[包裹跟踪数据库](index_split_027.html#filepos1528709)
- en: open mode (VS Code), [Running a Python Script](index_split_009.html#filepos172252)
  id: totrans-1320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开模式（VS Code），[运行 Python 脚本](index_split_009.html#filepos172252)
- en: Open Source Software (OSS), [Standard Library and Package Manager](index_split_007.html#filepos74609)
  id: totrans-1321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开源软件（OSS），[标准库和包管理器](index_split_007.html#filepos74609)
- en: opening Excel instances, [The Excel Object Model](index_split_024.html#filepos1252360)
  id: totrans-1322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开 Excel 实例，[Excel 对象模型](index_split_024.html#filepos1252360)
- en: OpenPyXL
  id: totrans-1323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenPyXL
- en: editing files, [Editing with OpenPyXL](index_split_021.html#filepos1033340)-[Editing
    with OpenPyXL](index_split_021.html#filepos1039562)
  id: totrans-1324
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑文件，[使用 OpenPyXL 进行编辑](index_split_021.html#filepos1033340)-[使用 OpenPyXL 进行编辑](index_split_021.html#filepos1039562)
- en: formatting DataFrames
  id: totrans-1325
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 格式化 DataFrame
- en: data parts, [Formatting a DataFrame’s data part](index_split_022.html#filepos1206138)
  id: totrans-1326
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据部分，[格式化 DataFrame 的数据部分](index_split_022.html#filepos1206138)
- en: indices and headers, [Formatting a DataFrame’s index and headers](index_split_022.html#filepos1174367)
  id: totrans-1327
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引和标题，[格式化 DataFrame 的索引和标题](index_split_022.html#filepos1174367)
- en: parallelization, [Reading sheets in parallel](index_split_022.html#filepos1153631)
  id: totrans-1328
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并行化，[并行读取工作表](index_split_022.html#filepos1153631)
- en: reading files, [Reading with OpenPyXL](index_split_021.html#filepos982131)-[Writing
    with OpenPyXL](index_split_021.html#filepos996210), [Reading with OpenPyXL](index_split_022.html#filepos1141062)
  id: totrans-1329
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取文件，[使用 OpenPyXL 进行读取](index_split_021.html#filepos982131)-[使用 OpenPyXL 进行写入](index_split_021.html#filepos996210)，[使用
    OpenPyXL 进行读取](index_split_022.html#filepos1141062)
- en: when to use, [When to Use Which Package](index_split_020.html#filepos964224)
  id: totrans-1330
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用时机，[何时使用哪个包](index_split_020.html#filepos964224)
- en: writing files, [Writing with OpenPyXL](index_split_021.html#filepos996317)-[Writing
    with OpenPyXL](index_split_021.html#filepos1032891), [Writing with OpenPyXL](index_split_022.html#filepos1126036)
  id: totrans-1331
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入文件，[使用 OpenPyXL 进行写入](index_split_021.html#filepos996317)-[使用 OpenPyXL 进行写入](index_split_021.html#filepos1032891)，[使用
    OpenPyXL 进行写入](index_split_022.html#filepos1126036)
- en: XlsxWriter versus, [When to Use Which Package](index_split_020.html#filepos968476)
  id: totrans-1332
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: XlsxWriter 对比，[何时使用哪个包](index_split_020.html#filepos968476)
- en: operator precedence, [Selecting by boolean indexing](index_split_015.html#filepos555852)
  id: totrans-1333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运算符优先级，[通过布尔索引进行选择](index_split_015.html#filepos555852)
- en: optimizing
  id: totrans-1334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化
- en: reader/writer packages, [Working with Big Excel Files](index_split_022.html#filepos1125159)-[Reading
    sheets in parallel](index_split_022.html#filepos1157423)
  id: totrans-1335
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取/写入包，[处理大型 Excel 文件](index_split_022.html#filepos1125159)-[并行读取工作表](index_split_022.html#filepos1157423)
- en: UDFs
  id: totrans-1336
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: UDF（用户自定义函数）
- en: caching, [Caching](index_split_028.html#filepos1775539)-[Caching](index_split_028.html#filepos1794980)
  id: totrans-1337
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存，[缓存](index_split_028.html#filepos1775539)-[缓存](index_split_028.html#filepos1794980)
- en: minimizing cross-application calls (xlwings), [Minimize cross-application calls](index_split_028.html#filepos1762196)-[Minimize
    cross-application calls](index_split_028.html#filepos1770595)
  id: totrans-1338
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少跨应用调用（xlwings），[减少跨应用调用](index_split_028.html#filepos1762196)-[减少跨应用调用](index_split_028.html#filepos1770595)
- en: raw values, [Using raw values](index_split_028.html#filepos1770837)
  id: totrans-1339
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始值，[使用原始值](index_split_028.html#filepos1770837)
- en: xlwings performance, [Improving Performance](index_split_025.html#filepos1416353)-[App
    properties](index_split_025.html#filepos1429357)
  id: totrans-1340
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 性能，[提升性能](index_split_025.html#filepos1416353)-[应用属性](index_split_025.html#filepos1429357)
- en: optional arguments (for functions), [Defining functions](index_split_012.html#filepos364918)
  id: totrans-1341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选参数（用于函数），[定义函数](index_split_012.html#filepos364918)
- en: options for range object (xlwings), [Converters and Options](index_split_025.html#filepos1345103)-[Converters
    and Options](index_split_025.html#filepos1366895)
  id: totrans-1342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围对象选项（xlwings），[转换器和选项](index_split_025.html#filepos1345103)-[转换器和选项](index_split_025.html#filepos1366895)
- en: Oracle, [Databases](index_split_027.html#filepos1516369)
  id: totrans-1343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oracle，[数据库](index_split_027.html#filepos1516369)
- en: ORM (object relational mapper), [Database connections](index_split_027.html#filepos1530130)
  id: totrans-1344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ORM（对象关系映射器），[数据库连接](index_split_027.html#filepos1530130)
- en: OSS (Open Source Software), [Standard Library and Package Manager](index_split_007.html#filepos74609)
  id: totrans-1345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OSS（开源软件），[标准库和包管理器](index_split_007.html#filepos74609)
- en: outer joins, [Joining and Merging](index_split_016.html#filepos669216)
  id: totrans-1346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外连接，[连接和合并](index_split_016.html#filepos669216)
- en: output
  id: totrans-1347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输出
- en: in Jupyter notebooks, [Notebook Cells](index_split_009.html#filepos137198)
  id: totrans-1348
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Jupyter 笔记本中，[笔记本单元格](index_split_009.html#filepos137198)
- en: separate layer for, [Separation of concerns](index_split_007.html#filepos45452)
  id: totrans-1349
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单独的层，[关注点分离](index_split_007.html#filepos45452)
- en: P
  id: totrans-1350
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: P
- en: 'package managers, [Standard Library and Package Manager](index_split_007.html#filepos71589)-[Standard
    Library and Package Manager](index_split_007.html#filepos76314), [Package Managers:
    Conda and pip](index_split_008.html#filepos119343)-[Package Managers: Conda and
    pip](index_split_008.html#filepos127083)'
  id: totrans-1351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包管理器，[标准库和包管理器](index_split_007.html#filepos71589)-[标准库和包管理器](index_split_007.html#filepos76314)，[包管理器：Conda
    和 pip](index_split_008.html#filepos119343)-[包管理器：Conda 和 pip](index_split_008.html#filepos127083)
- en: packages
  id: totrans-1352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包
- en: adding to Python Package Tracker, [What We Will Build](index_split_027.html#filepos1489144)-[What
    We Will Build](index_split_027.html#filepos1492009)
  id: totrans-1353
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加到 Python 包跟踪器，[我们将要构建的内容](index_split_027.html#filepos1489144)-[我们将要构建的内容](index_split_027.html#filepos1492009)
- en: building, [Settings](index_split_026.html#filepos1483129)
  id: totrans-1354
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: building，[设置](index_split_026.html#filepos1483129)
- en: 'installing, [Package Managers: Conda and pip](index_split_008.html#filepos125084),
    [Create a New Conda Environment](index_split_029.html#filepos1813742)'
  id: totrans-1355
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装，[包管理器：Conda 和 pip](index_split_008.html#filepos125084)，[创建新的 Conda 环境](index_split_029.html#filepos1813742)
- en: reader/writer packages
  id: totrans-1356
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读者/写者包
- en: excel.py module, [The excel.py Module](index_split_021.html#filepos972622)-[The
    excel.py Module](index_split_021.html#filepos980989)
  id: totrans-1357
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: excel.py 模块，[excel.py 模块](index_split_021.html#filepos972622)-[excel.py 模块](index_split_021.html#filepos980989)
- en: list of, [Formatting a DataFrame’s data part](index_split_022.html#filepos1230090)
  id: totrans-1358
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表，[格式化 DataFrame 数据部分](index_split_022.html#filepos1230090)
- en: OpenPyXL, [OpenPyXL](index_split_021.html#filepos981782)-[Editing with OpenPyXL](index_split_021.html#filepos1039562)
  id: totrans-1359
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenPyXL，[OpenPyXL](index_split_021.html#filepos981782)-[使用 OpenPyXL 进行编辑](index_split_021.html#filepos1039562)
- en: optimization for big files, [Working with Big Excel Files](index_split_022.html#filepos1125159)-[Reading
    sheets in parallel](index_split_022.html#filepos1157423)
  id: totrans-1360
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大文件优化，[处理大型 Excel 文件](index_split_022.html#filepos1125159)-[并行读取工作表](index_split_022.html#filepos1157423)
- en: pyxlsb, [pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
  id: totrans-1361
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pyxlsb，[pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
- en: when to use, [When to Use Which Package](index_split_020.html#filepos962384)-[When
    to Use Which Package](index_split_021.html#filepos972372)
  id: totrans-1362
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用，[何时使用哪个包](index_split_020.html#filepos962384)-[何时使用哪个包](index_split_021.html#filepos972372)
- en: xlrd, [Reading with xlrd](index_split_021.html#filepos1085917)-[Reading with
    xlrd](index_split_021.html#filepos1099832)
  id: totrans-1363
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlrd，[使用 xlrd 进行阅读](index_split_021.html#filepos1085917)-[使用 xlrd 进行阅读](index_split_021.html#filepos1099832)
- en: XlsxWriter, [XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)
  id: totrans-1364
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: XlsxWriter，[XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)
- en: xlutils, [Editing with xlutils](index_split_022.html#filepos1119688)
  id: totrans-1365
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlutils，[使用 xlutils 进行编辑](index_split_022.html#filepos1119688)
- en: xlwt, [Writing with xlwt](index_split_022.html#filepos1099995)-[Editing with
    xlutils](index_split_022.html#filepos1119593)
  id: totrans-1366
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwt，[使用 xlwt 进行写入](index_split_022.html#filepos1099995)-[使用 xlutils 进行编辑](index_split_022.html#filepos1119593)
- en: switching, [The excel.py Module](index_split_021.html#filepos973335)
  id: totrans-1367
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 切换，[excel.py 模块](index_split_021.html#filepos973335)
- en: 'versions of, [Package Managers: Conda and pip](index_split_008.html#filepos126480)-[Conda
    Environments](index_split_008.html#filepos127438)'
  id: totrans-1368
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本，[软件包管理器：Conda 和 pip](index_split_008.html#filepos126480)-[Conda 环境](index_split_008.html#filepos127438)
- en: pandas, [Why Python for Excel?](index_split_007.html#filepos34877)
  id: totrans-1369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas，[为什么选择 Python 处理 Excel?](index_split_007.html#filepos34877)
- en: DataFrames
  id: totrans-1370
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据框
- en: applying functions, [Applying a Function](index_split_015.html#filepos641087)-[Applying
    a Function](index_split_015.html#filepos649303)
  id: totrans-1371
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用函数，[应用函数](index_split_015.html#filepos641087)-[应用函数](index_split_015.html#filepos649303)
- en: arithmetic operations, [Arithmetic Operations](index_split_015.html#filepos617369)-[Arithmetic
    Operations](index_split_015.html#filepos633672)
  id: totrans-1372
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 算术运算，[算术运算](index_split_015.html#filepos617369)-[算术运算](index_split_015.html#filepos633672)
- en: columns, [Columns](index_split_015.html#filepos512954)-[Columns](index_split_015.html#filepos524119)
  id: totrans-1373
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列，[列](index_split_015.html#filepos512954)-[列](index_split_015.html#filepos524119)
- en: concatenating, [Concatenating](index_split_016.html#filepos653577)-[Concatenating](index_split_016.html#filepos667519)
  id: totrans-1374
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接，[连接](index_split_016.html#filepos653577)-[连接](index_split_016.html#filepos667519)
- en: copies, [Index](index_split_015.html#filepos506311)
  id: totrans-1375
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制，[索引](index_split_015.html#filepos506311)
- en: creating, [DataFrame and Series](index_split_015.html#filepos489479)
  id: totrans-1376
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建，[数据框和序列](index_split_015.html#filepos489479)
- en: descriptive statistics, [Descriptive Statistics](index_split_016.html#filepos691290)-[Descriptive
    Statistics](index_split_016.html#filepos695190)
  id: totrans-1377
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述性统计，[描述性统计](index_split_016.html#filepos691290)-[描述性统计](index_split_016.html#filepos695190)
- en: duplicate data, [Duplicate Data](index_split_015.html#filepos608897)-[Duplicate
    Data](index_split_015.html#filepos617033)
  id: totrans-1378
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复数据，[重复数据](index_split_015.html#filepos608897)-[重复数据](index_split_015.html#filepos617033)
- en: Excel spreadsheets versus, [DataFrame and Series](index_split_015.html#filepos485631)-[DataFrame
    and Series](index_split_015.html#filepos489337)
  id: totrans-1379
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 电子表格与，[数据框和序列](index_split_015.html#filepos485631)-[数据框和序列](index_split_015.html#filepos489337)
- en: exploration methods, [Importing CSV Files](index_split_016.html#filepos758459)
  id: totrans-1380
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索方法，[导入 CSV 文件](index_split_016.html#filepos758459)
- en: exporting, [Importing and Exporting DataFrames](index_split_016.html#filepos740480)
  id: totrans-1381
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出，[导入和导出数据框](index_split_016.html#filepos740480)
- en: formatting in Excel, [Formatting DataFrames in Excel](index_split_022.html#filepos1157749)-[Formatting
    a DataFrame’s data part](index_split_022.html#filepos1224706)
  id: totrans-1382
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 中的格式化，[在 Excel 中格式化数据框](index_split_022.html#filepos1157749)-[格式化数据框的数据部分](index_split_022.html#filepos1224706)
- en: in Google Trends case study, [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1682486)-[Working
    with DataFrames and Dynamic Arrays](index_split_028.html#filepos1714516)
  id: totrans-1383
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Google 趋势案例研究中，[处理数据框和动态数组](index_split_028.html#filepos1682486)-[处理数据框和动态数组](index_split_028.html#filepos1714516)
- en: grouping data, [Grouping](index_split_016.html#filepos695504)
  id: totrans-1384
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分组数据，[分组](index_split_016.html#filepos695504)
- en: importing, [Importing and Exporting DataFrames](index_split_016.html#filepos740480)
  id: totrans-1385
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入，[导入和导出数据框](index_split_016.html#filepos740480)
- en: indices, [Index](index_split_015.html#filepos498949)-[Index](index_split_015.html#filepos512717)
  id: totrans-1386
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引，[索引](index_split_015.html#filepos498949)-[索引](index_split_015.html#filepos512717)
- en: joining, [Joining and Merging](index_split_016.html#filepos667765)-[Joining
    and Merging](index_split_016.html#filepos690380)
  id: totrans-1387
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接，[连接和合并](index_split_016.html#filepos667765)-[连接和合并](index_split_016.html#filepos690380)
- en: limitations, [Limitations with pandas](index_split_017.html#filepos860285)
  id: totrans-1388
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制，[pandas 的限制](index_split_017.html#filepos860285)
- en: melting data, [Pivoting and Melting](index_split_016.html#filepos712684)
  id: totrans-1389
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 融合数据，[数据透视和融合](index_split_016.html#filepos712684)
- en: merging, [Joining and Merging](index_split_016.html#filepos682873)-[Joining
    and Merging](index_split_016.html#filepos690380)
  id: totrans-1390
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并，[连接和合并](index_split_016.html#filepos682873)-[连接和合并](index_split_016.html#filepos690380)
- en: missing data, [Missing Data](index_split_015.html#filepos598810)-[Missing Data](index_split_015.html#filepos608614)
  id: totrans-1391
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失数据，[缺失数据](index_split_015.html#filepos598810)-[缺失数据](index_split_015.html#filepos608614)
- en: pivoting data, [Pivoting and Melting](index_split_016.html#filepos701536)-[Pivoting
    and Melting](index_split_016.html#filepos716422)
  id: totrans-1392
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据透视，[数据透视和融合](index_split_016.html#filepos701536)-[数据透视和融合](index_split_016.html#filepos716422)
- en: plotting, [Plotting](index_split_016.html#filepos716977)-[Plotly](index_split_016.html#filepos740115)
  id: totrans-1393
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绘图，[绘图](index_split_016.html#filepos716977)-[Plotly](index_split_016.html#filepos740115)
- en: reading/writing in Excel with xlwings, [Working with DataFrames](index_split_025.html#filepos1324128)-[Working
    with DataFrames](index_split_025.html#filepos1340369)
  id: totrans-1394
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 xlwings 在 Excel 中读取/写入，[处理数据框](index_split_025.html#filepos1324128)-[处理数据框](index_split_025.html#filepos1340369)
- en: selecting data, [Selecting Data](index_split_015.html#filepos525158)-[Selecting
    by using a MultiIndex](index_split_015.html#filepos575571)
  id: totrans-1395
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据选择，[选择数据](index_split_015.html#filepos525158)-[使用 MultiIndex 进行选择](index_split_015.html#filepos575571)
- en: Series versus, [DataFrame and Series](index_split_015.html#filepos484520)-[DataFrame
    and Series](index_split_015.html#filepos485550), [Selecting by label](index_split_015.html#filepos536695)
  id: totrans-1396
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Series 与，[DataFrame 和 Series](index_split_015.html#filepos484520)-[DataFrame
    和 Series](index_split_015.html#filepos485550)，[按标签选择](index_split_015.html#filepos536695)
- en: setting data, [Setting Data](index_split_015.html#filepos575788)-[Setting data
    by adding a new column](index_split_015.html#filepos598654)
  id: totrans-1397
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置数据，[设置数据](index_split_015.html#filepos575788)-[通过添加新列设置数据](index_split_015.html#filepos598654)
- en: SQL queries versus, [SQL queries](index_split_027.html#filepos1540168)
  id: totrans-1398
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 查询与，[SQL 查询](index_split_027.html#filepos1540168)
- en: text columns, [Working with Text Columns](index_split_015.html#filepos634000)
  id: totrans-1399
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本列，[处理文本列](index_split_015.html#filepos634000)
- en: transposing, [Columns](index_split_015.html#filepos520188)
  id: totrans-1400
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转置，[列](index_split_015.html#filepos520188)
- en: views versus copies, [View vs. Copy](index_split_015.html#filepos649623)
  id: totrans-1401
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视图与副本，[视图 vs. 复制](index_split_015.html#filepos649623)
- en: DatetimeIndex
  id: totrans-1402
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DatetimeIndex
- en: creating, [Creating a DatetimeIndex](index_split_017.html#filepos770795)-[Creating
    a DatetimeIndex](index_split_017.html#filepos794737)
  id: totrans-1403
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建，[创建 DatetimeIndex](index_split_017.html#filepos770795)-[创建 DatetimeIndex](index_split_017.html#filepos794737)
- en: filtering, [Filtering a DatetimeIndex](index_split_017.html#filepos794993)-[Filtering
    a DatetimeIndex](index_split_017.html#filepos798956)
  id: totrans-1404
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过滤，[过滤 DatetimeIndex](index_split_017.html#filepos794993)-[过滤 DatetimeIndex](index_split_017.html#filepos798956)
- en: time zones in, [Working with Time Zones](index_split_017.html#filepos799257)-[Working
    with Time Zones](index_split_017.html#filepos808759)
  id: totrans-1405
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时区中的，[处理时区](index_split_017.html#filepos799257)-[处理时区](index_split_017.html#filepos808759)
- en: Excel files
  id: totrans-1406
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 文件
- en: limitations, [Limitations When Using pandas with Excel Files](index_split_019.html#filepos957495)
  id: totrans-1407
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制，[使用 pandas 与 Excel 文件时的限制](index_split_019.html#filepos957495)
- en: reading, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos886398)-[The
    read_excel Function and ExcelFile Class](index_split_019.html#filepos935481)
  id: totrans-1408
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos886398)-[read_excel
    函数和 ExcelFile 类](index_split_019.html#filepos935481)
- en: writing, [The to_excel Method and ExcelWriter Class](index_split_019.html#filepos935768)-[The
    to_excel Method and ExcelWriter Class](index_split_019.html#filepos953568)
  id: totrans-1409
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入，[to_excel 方法和 ExcelWriter 类](index_split_019.html#filepos935768)-[to_excel
    方法和 ExcelWriter 类](index_split_019.html#filepos953568)
- en: NumPy (see NumPy)
  id: totrans-1410
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: NumPy（见 NumPy）
- en: plot types, [Plotly](index_split_016.html#filepos733673)
  id: totrans-1411
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绘图类型，[Plotly](index_split_016.html#filepos733673)
- en: reader/writer packages
  id: totrans-1412
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取/写入包
- en: excel.py module, [The excel.py Module](index_split_021.html#filepos972622)-[The
    excel.py Module](index_split_021.html#filepos980989)
  id: totrans-1413
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: excel.py 模块，[excel.py 模块](index_split_021.html#filepos972622)-[excel.py 模块](index_split_021.html#filepos980989)
- en: list of, [Formatting a DataFrame’s data part](index_split_022.html#filepos1230090)
  id: totrans-1414
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表，[格式化 DataFrame 数据部分](index_split_022.html#filepos1230090)
- en: OpenPyXL, [OpenPyXL](index_split_021.html#filepos981782)-[Editing with OpenPyXL](index_split_021.html#filepos1039562)
  id: totrans-1415
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenPyXL，[OpenPyXL](index_split_021.html#filepos981782)-[使用 OpenPyXL 进行编辑](index_split_021.html#filepos1039562)
- en: optimization for big files, [Working with Big Excel Files](index_split_022.html#filepos1125159)-[Reading
    sheets in parallel](index_split_022.html#filepos1157423)
  id: totrans-1416
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大文件优化，[处理大型 Excel 文件](index_split_022.html#filepos1125159)-[并行读取工作表](index_split_022.html#filepos1157423)
- en: pyxlsb, [pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
  id: totrans-1417
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pyxlsb，[pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
- en: when to use, [When to Use Which Package](index_split_020.html#filepos962384)-[When
    to Use Which Package](index_split_021.html#filepos972372)
  id: totrans-1418
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用，[何时使用哪个包](index_split_020.html#filepos962384)-[何时使用哪个包](index_split_021.html#filepos972372)
- en: xlrd, [Reading with xlrd](index_split_021.html#filepos1085917)-[Reading with
    xlrd](index_split_021.html#filepos1099832)
  id: totrans-1419
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlrd，[使用 xlrd 进行读取](index_split_021.html#filepos1085917)-[使用 xlrd 进行读取](index_split_021.html#filepos1099832)
- en: XlsxWriter, [XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)
  id: totrans-1420
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: XlsxWriter，[XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)
- en: xlutils, [Editing with xlutils](index_split_022.html#filepos1119688)
  id: totrans-1421
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlutils，[使用 xlutils 进行编辑](index_split_022.html#filepos1119688)
- en: xlwt, [Writing with xlwt](index_split_022.html#filepos1099995)-[Editing with
    xlutils](index_split_022.html#filepos1119593)
  id: totrans-1422
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwt，[使用 xlwt 进行写入](index_split_022.html#filepos1099995)-[使用 xlutils 进行编辑](index_split_022.html#filepos1119593)
- en: time series analysis
  id: totrans-1423
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析
- en: correlation, [Rebasing and Correlation](index_split_017.html#filepos822133)-[Rebasing
    and Correlation](index_split_017.html#filepos846848)
  id: totrans-1424
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相关性，[重新基准化和相关性](index_split_017.html#filepos822133)-[重新基准化和相关性](index_split_017.html#filepos846848)
- en: percentage change, [Shifting and Percentage Changes](index_split_017.html#filepos809588)-[Shifting
    and Percentage Changes](index_split_017.html#filepos821793)
  id: totrans-1425
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 百分比变化，[移位和百分比变化](index_split_017.html#filepos809588)-[移位和百分比变化](index_split_017.html#filepos821793)
- en: rebasing, [Rebasing and Correlation](index_split_017.html#filepos822133)-[Rebasing
    and Correlation](index_split_017.html#filepos846848)
  id: totrans-1426
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新基准化，[重新基准化和相关性](index_split_017.html#filepos822133)-[重新基准化和相关性](index_split_017.html#filepos846848)
- en: resampling, [Resampling](index_split_017.html#filepos847003)-[Resampling](index_split_017.html#filepos854741)
  id: totrans-1427
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新采样，[重新采样](index_split_017.html#filepos847003)-[重新采样](index_split_017.html#filepos854741)
- en: rolling windows, [Rolling Windows](index_split_017.html#filepos855004)
  id: totrans-1428
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滚动窗口，[滚动窗口](index_split_017.html#filepos855004)
- en: shifting, [Shifting and Percentage Changes](index_split_017.html#filepos809588)-[Shifting
    and Percentage Changes](index_split_017.html#filepos821793)
  id: totrans-1429
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移位，[移位和百分比变化](index_split_017.html#filepos809588)-[移位和百分比变化](index_split_017.html#filepos821793)
- en: parallelization, [Reading sheets in parallel](index_split_022.html#filepos1144410)-[Reading
    sheets in parallel](index_split_022.html#filepos1157423)
  id: totrans-1430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并行化，[并行读取工作表](index_split_022.html#filepos1144410)-[并行读取工作表](index_split_022.html#filepos1157423)
- en: parent directory, changing to, [Anaconda Prompt](index_split_008.html#filepos112850)
  id: totrans-1431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 父目录，切换到，[Anaconda 命令提示符](index_split_008.html#filepos112850)
- en: parsing strings into datetime objects, [The datetime Class](index_split_012.html#filepos404852)
  id: totrans-1432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串解析为日期时间对象，[datetime 类](index_split_012.html#filepos404852)
- en: pass statement, [Code Blocks and the pass Statement](index_split_011.html#filepos303668)-[Code
    Blocks and the pass Statement](index_split_012.html#filepos306087)
  id: totrans-1433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pass 语句，[代码块和 pass 语句](index_split_011.html#filepos303668)-[代码块和 pass 语句](index_split_012.html#filepos306087)
- en: 'Path class, [Case Study: Excel Reporting](index_split_019.html#filepos882885)'
  id: totrans-1434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Path 类，[案例研究：Excel 报表](index_split_019.html#filepos882885)
- en: 'pathlib module, [Case Study: Excel Reporting](index_split_019.html#filepos882885)'
  id: totrans-1435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pathlib 模块，[案例研究：Excel 报表](index_split_019.html#filepos882885)
- en: pct_change method (pandas), [Shifting and Percentage Changes](index_split_017.html#filepos818833)
  id: totrans-1436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 的 pct_change 方法，[移位和百分比变化](index_split_017.html#filepos818833)
- en: PEP 8 style guide
  id: totrans-1437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PEP 8 风格指南
- en: 'examples, [PEP 8: Style Guide for Python Code](index_split_012.html#filepos409133)-[PEP
    8: Style Guide for Python Code](index_split_012.html#filepos425840)'
  id: totrans-1438
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例，[PEP 8：Python 代码风格指南](index_split_012.html#filepos409133)-[PEP 8：Python 代码风格指南](index_split_012.html#filepos425840)
- en: linting, [PEP 8 and VS Code](index_split_012.html#filepos426221)
  id: totrans-1439
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码审查，[PEP 8 和 VS Code](index_split_012.html#filepos426221)
- en: 'pep8_sample.py example, [PEP 8: Style Guide for Python Code](index_split_012.html#filepos409133)-[PEP
    8: Style Guide for Python Code](index_split_012.html#filepos425840)'
  id: totrans-1440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pep8_sample.py 示例，[PEP 8：Python 代码风格指南](index_split_012.html#filepos409133)-[PEP
    8：Python 代码风格指南](index_split_012.html#filepos425840)
- en: percentage change in time series analysis, [Shifting and Percentage Changes](index_split_017.html#filepos809588)-[Shifting
    and Percentage Changes](index_split_017.html#filepos821793)
  id: totrans-1441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析中的百分比变化，[移位和百分比变化](index_split_017.html#filepos809588)-[移位和百分比变化](index_split_017.html#filepos821793)
- en: performance optimization
  id: totrans-1442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能优化
- en: of reader/writer packages, [Working with Big Excel Files](index_split_022.html#filepos1125159)-[Reading
    sheets in parallel](index_split_022.html#filepos1157423)
  id: totrans-1443
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读写包的读者/写者，[处理大型 Excel 文件](index_split_022.html#filepos1125159)-[并行读取工作表](index_split_022.html#filepos1157423)
- en: of UDFs
  id: totrans-1444
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: UDFs
- en: caching, [Caching](index_split_028.html#filepos1775539)-[Caching](index_split_028.html#filepos1794980)
  id: totrans-1445
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存，[缓存](index_split_028.html#filepos1775539)-[缓存](index_split_028.html#filepos1794980)
- en: minimizing cross-application calls (xlwings), [Minimize cross-application calls](index_split_028.html#filepos1762196)-[Minimize
    cross-application calls](index_split_028.html#filepos1770595)
  id: totrans-1446
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小化跨应用程序调用（xlwings），[最小化跨应用程序调用](index_split_028.html#filepos1762196)-[最小化跨应用程序调用](index_split_028.html#filepos1770595)
- en: raw values, [Using raw values](index_split_028.html#filepos1770837)
  id: totrans-1447
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始值，[使用原始值](index_split_028.html#filepos1770837)
- en: in xlwings, [Improving Performance](index_split_025.html#filepos1416353)-[App
    properties](index_split_025.html#filepos1429357)
  id: totrans-1448
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 xlwings 中，[性能优化](index_split_025.html#filepos1416353)-[应用程序属性](index_split_025.html#filepos1429357)
- en: permissions in macOS, [Using Excel as Data Viewer](index_split_024.html#filepos1249144),
    [The Excel Object Model](index_split_024.html#filepos1309403)
  id: totrans-1449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS 权限，[将 Excel 用作数据查看器](index_split_024.html#filepos1249144)，[Excel 对象模型](index_split_024.html#filepos1309403)
- en: 'pictures (Excel), Matplotlib plots as, [Pictures: Matplotlib plots](index_split_025.html#filepos1374823)-[Pictures:
    Matplotlib plots](index_split_025.html#filepos1389691)'
  id: totrans-1450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pictures (Excel), Matplotlib plots as, [图片：Matplotlib 绘图](index_split_025.html#filepos1374823)-[图片：Matplotlib
    绘图](index_split_025.html#filepos1389691)
- en: 'Pillow, [Pictures: Matplotlib plots](index_split_025.html#filepos1388937)'
  id: totrans-1451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pillow, [图片：Matplotlib 绘图](index_split_025.html#filepos1388937)
- en: 'pip, [Standard Library and Package Manager](index_split_007.html#filepos73403)-[Standard
    Library and Package Manager](index_split_007.html#filepos76314), [Package Managers:
    Conda and pip](index_split_008.html#filepos119343)-[Package Managers: Conda and
    pip](index_split_008.html#filepos127083)'
  id: totrans-1452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pip, [标准库和包管理器](index_split_007.html#filepos73403)-[标准库和包管理器](index_split_007.html#filepos76314),
    [包管理器：Conda 和 pip](index_split_008.html#filepos119343)-[包管理器：Conda 和 pip](index_split_008.html#filepos127083)
- en: pivoting DataFrame data, [Pivoting and Melting](index_split_016.html#filepos701536)-[Pivoting
    and Melting](index_split_016.html#filepos716422)
  id: totrans-1453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pivoting DataFrame data, [数据透视和melting](index_split_016.html#filepos701536)-[数据透视和melting](index_split_016.html#filepos716422)
- en: pivot_table function (pandas), [Pivoting and Melting](index_split_016.html#filepos701536)-[Pivoting
    and Melting](index_split_016.html#filepos716422)
  id: totrans-1454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pivot_table function (pandas), [数据透视和melting](index_split_016.html#filepos701536)-[数据透视和melting](index_split_016.html#filepos716422)
- en: plot function (google_trends.py) example, [Plotting with UDFs](index_split_028.html#filepos1742308)-[Plotting
    with UDFs](index_split_028.html#filepos1753405)
  id: totrans-1455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: plot function (google_trends.py) example, [使用UDFs绘图](index_split_028.html#filepos1742308)-[使用UDFs绘图](index_split_028.html#filepos1753405)
- en: plot method (pandas), [Matplotlib](index_split_016.html#filepos717713), [Plotting
    with UDFs](index_split_028.html#filepos1741829)-[Plotting with UDFs](index_split_028.html#filepos1754939)
  id: totrans-1456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: plot method (pandas), [Matplotlib](index_split_016.html#filepos717713), [使用UDFs绘图](index_split_028.html#filepos1741829)-[使用UDFs绘图](index_split_028.html#filepos1754939)
- en: Plotly, [Plotly](index_split_016.html#filepos728120)-[Plotly](index_split_016.html#filepos737814)
  id: totrans-1457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Plotly, [Plotly](index_split_016.html#filepos728120)-[Plotly](index_split_016.html#filepos737814)
- en: heatmaps, [Rebasing and Correlation](index_split_017.html#filepos838730)
  id: totrans-1458
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: heatmaps, [重基和相关性](index_split_017.html#filepos838730)
- en: 'installing, [Package Managers: Conda and pip](index_split_008.html#filepos125084)'
  id: totrans-1459
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: installing, [包管理器：Conda 和 pip](index_split_008.html#filepos125084)
- en: plots
  id: totrans-1460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: plots
- en: 'as Excel pictures, [Pictures: Matplotlib plots](index_split_025.html#filepos1374823)-[Pictures:
    Matplotlib plots](index_split_025.html#filepos1389691)'
  id: totrans-1461
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: as Excel pictures, [图片：Matplotlib 绘图](index_split_025.html#filepos1374823)-[图片：Matplotlib
    绘图](index_split_025.html#filepos1389691)
- en: list of plotting libraries, [Plotly](index_split_016.html#filepos738084)
  id: totrans-1462
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: list of plotting libraries, [Plotly](index_split_016.html#filepos738084)
- en: in Matplotlib, [Matplotlib](index_split_016.html#filepos717479)-[Matplotlib](index_split_016.html#filepos727877)
  id: totrans-1463
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: in Matplotlib, [Matplotlib](index_split_016.html#filepos717479)-[Matplotlib](index_split_016.html#filepos727877)
- en: in Plotly, [Plotly](index_split_016.html#filepos728120)-[Plotly](index_split_016.html#filepos737814)
  id: totrans-1464
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: in Plotly, [Plotly](index_split_016.html#filepos728120)-[Plotly](index_split_016.html#filepos737814)
- en: types of (pandas), [Plotly](index_split_016.html#filepos733673)
  id: totrans-1465
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: types of (pandas), [Plotly](index_split_016.html#filepos733673)
- en: plotting
  id: totrans-1466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: plotting
- en: DataFrame data
  id: totrans-1467
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrame data
- en: list of plotting libraries, [Plotly](index_split_016.html#filepos738084)
  id: totrans-1468
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: list of plotting libraries, [Plotly](index_split_016.html#filepos738084)
- en: with Matplotlib, [Matplotlib](index_split_016.html#filepos717479)-[Matplotlib](index_split_016.html#filepos727877)
  id: totrans-1469
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: with Matplotlib, [Matplotlib](index_split_016.html#filepos717479)-[Matplotlib](index_split_016.html#filepos727877)
- en: with Plotly, [Plotly](index_split_016.html#filepos728120)-[Plotly](index_split_016.html#filepos737814)
  id: totrans-1470
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: with Plotly, [Plotly](index_split_016.html#filepos728120)-[Plotly](index_split_016.html#filepos737814)
- en: purpose of, [Plotting](index_split_016.html#filepos716977)
  id: totrans-1471
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: purpose of, [绘图](index_split_016.html#filepos716977)
- en: with UDFs, [Plotting with UDFs](index_split_028.html#filepos1741829)-[Plotting
    with UDFs](index_split_028.html#filepos1754939)
  id: totrans-1472
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: with UDFs, [使用UDFs绘图](index_split_028.html#filepos1741829)-[使用UDFs绘图](index_split_028.html#filepos1754939)
- en: pop method (lists), [Lists](index_split_011.html#filepos260070)
  id: totrans-1473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pop method (lists), [列表](index_split_011.html#filepos260070)
- en: position (pandas)
  id: totrans-1474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: position (pandas)
- en: selecting data by, [Selecting by position](index_split_015.html#filepos539083)-[Selecting
    by position](index_split_015.html#filepos549467)
  id: totrans-1475
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: selecting data by, [按位置选择](index_split_015.html#filepos539083)-[按位置选择](index_split_015.html#filepos549467)
- en: setting data by, [Setting data by label or position](index_split_015.html#filepos576247)
  id: totrans-1476
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: setting data by, [按标签或位置设置数据](index_split_015.html#filepos576247)
- en: positional arguments (for functions), [Calling functions](index_split_012.html#filepos372056)
  id: totrans-1477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: positional arguments (for functions), [调用函数](index_split_012.html#filepos372056)
- en: POST requests, [Web APIs](index_split_027.html#filepos1493790)
  id: totrans-1478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: POST requests, [Web APIs](index_split_027.html#filepos1493790)
- en: PostgreSQL, [Databases](index_split_027.html#filepos1516369), [Backend](index_split_027.html#filepos1643404)
  id: totrans-1479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PostgreSQL、[数据库](index_split_027.html#filepos1516369)、[后端](index_split_027.html#filepos1643404)
- en: Power BI, [Power BI](index_split_007.html#filepos61061)
  id: totrans-1480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Power BI、[Power BI](index_split_007.html#filepos61061)
- en: Power Pivot, [Preface](index_split_003.html#filepos9127), [Power Query and Power
    Pivot](index_split_007.html#filepos60136)
  id: totrans-1481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Power Pivot、[前言](index_split_003.html#filepos9127)、[Power Query 和 Power Pivot](index_split_007.html#filepos60136)
- en: Power Query, [Preface](index_split_003.html#filepos9041), [Power Query and Power
    Pivot](index_split_007.html#filepos59126)
  id: totrans-1482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Power Query、[前言](index_split_003.html#filepos9041)、[Power Query 和 Power Pivot](index_split_007.html#filepos59126)
- en: The Pragmatic Programmer (Hunt and Thomas), [DRY principle](index_split_007.html#filepos46294)
  id: totrans-1483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 《实用程序员》（Hunt 和 Thomas）、[DRY 原则](index_split_007.html#filepos46294)
- en: presentation layer, [Separation of concerns](index_split_007.html#filepos43779)
  id: totrans-1484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表示层、[关注点的分离](index_split_007.html#filepos43779)
- en: primary keys (databases), [The Package Tracker database](index_split_027.html#filepos1527951)
  id: totrans-1485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主键（数据库）、[包裹跟踪器数据库](index_split_027.html#filepos1527951)
- en: print function, [Running a Python Script](index_split_009.html#filepos167325),
    [Debugging UDFs](index_split_028.html#filepos1755260)
  id: totrans-1486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打印函数、[运行 Python 脚本](index_split_009.html#filepos167325)、[调试 UDF](index_split_028.html#filepos1755260)
- en: programming Excel, reading/writing files versus, [How This Book Is Organized](index_split_005.html#filepos18185)
  id: totrans-1487
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程 Excel、读取/写入文件相对于、[本书的组织结构](index_split_005.html#filepos18185)
- en: programming languages
  id: totrans-1488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程语言
- en: best practices
  id: totrans-1489
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最佳实践
- en: DRY principle, [DRY principle](index_split_007.html#filepos46294)
  id: totrans-1490
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DRY 原则、[DRY 原则](index_split_007.html#filepos46294)
- en: separation of concerns, [Separation of concerns](index_split_007.html#filepos41610)-[Separation
    of concerns](index_split_007.html#filepos45911)
  id: totrans-1491
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关注点的分离、[关注点的分离](index_split_007.html#filepos41610)-[关注点的分离](index_split_007.html#filepos45911)
- en: testing, [Testing](index_split_007.html#filepos48860)
  id: totrans-1492
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试、[测试](index_split_007.html#filepos48860)
- en: version control, [Version control](index_split_007.html#filepos51713)-[Version
    control](index_split_007.html#filepos57576)
  id: totrans-1493
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制、[版本控制](index_split_007.html#filepos51713)-[版本控制](index_split_007.html#filepos57576)
- en: Excel as, [Excel Is a Programming Language](index_split_007.html#filepos35748)-[Excel
    Is a Programming Language](index_split_007.html#filepos38457)
  id: totrans-1494
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 作为、[Excel 是一种编程语言](index_split_007.html#filepos35748)-[Excel 是一种编程语言](index_split_007.html#filepos38457)
- en: properties of app object (xlwings), [App properties](index_split_025.html#filepos1428002)
  id: totrans-1495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: app 对象的属性（xlwings）、[App 属性](index_split_025.html#filepos1428002)
- en: pseudorandom numbers, generating, [Useful Array Constructors](index_split_014.html#filepos473280)
  id: totrans-1496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 伪随机数、生成、[有用的数组构造器](index_split_014.html#filepos473280)
- en: PTVS (Python Tools for Visual Studio), [Visual Studio Code](index_split_009.html#filepos159079)
  id: totrans-1497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PTVS（Visual Studio 的 Python 工具）、[Visual Studio Code](index_split_009.html#filepos159079)
- en: pull requests, [Version control](index_split_007.html#filepos53419)
  id: totrans-1498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拉取请求、[版本控制](index_split_007.html#filepos53419)
- en: pwd command, [Anaconda Prompt](index_split_008.html#filepos105254)
  id: totrans-1499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pwd 命令、[Anaconda Prompt](index_split_008.html#filepos105254)
- en: PyArrow, [Limitations with pandas](index_split_017.html#filepos861209)
  id: totrans-1500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyArrow、[与 pandas 的限制](index_split_017.html#filepos861209)
- en: pycache folder, [Modules and the import Statement](index_split_012.html#filepos390629)
  id: totrans-1501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pycache 文件夹、[模块和 import 语句](index_split_012.html#filepos390629)
- en: PyCharm, [Running a Python Script](index_split_009.html#filepos174659)
  id: totrans-1502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyCharm、[运行 Python 脚本](index_split_009.html#filepos174659)
- en: PyDev, [Running a Python Script](index_split_009.html#filepos176621)
  id: totrans-1503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyDev、[运行 Python 脚本](index_split_009.html#filepos176621)
- en: pyexcel, [Formatting a DataFrame’s data part](index_split_022.html#filepos1230583)
  id: totrans-1504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pyexcel、[格式化数据帧的数据部分](index_split_022.html#filepos1230583)
- en: PyExcelerate, [Formatting a DataFrame’s data part](index_split_022.html#filepos1230903)
  id: totrans-1505
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyExcelerate、[格式化数据帧的数据部分](index_split_022.html#filepos1230903)
- en: PyInstaller, [Python Dependency](index_split_026.html#filepos1475043)
  id: totrans-1506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyInstaller、[Python 依赖](index_split_026.html#filepos1475043)
- en: pylightxl, [Formatting a DataFrame’s data part](index_split_022.html#filepos1231224)
  id: totrans-1507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pylightxl、[格式化数据帧的数据部分](index_split_022.html#filepos1231224)
- en: PyPI (Python Package Index), [Standard Library and Package Manager](index_split_007.html#filepos72449),
    [What We Will Build](index_split_027.html#filepos1489666), [Web APIs](index_split_027.html#filepos1504690)
  id: totrans-1508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyPI（Python 包索引）、[标准库和包管理器](index_split_007.html#filepos72449)、[我们将构建什么](index_split_027.html#filepos1489666)、[Web
    API](index_split_027.html#filepos1504690)
- en: PyPy, [Standard Library and Package Manager](index_split_007.html#filepos73085)
  id: totrans-1509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyPy、[标准库和包管理器](index_split_007.html#filepos73085)
- en: PySpark, [Limitations with pandas](index_split_017.html#filepos861209)
  id: totrans-1510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PySpark、[与 pandas 的限制](index_split_017.html#filepos861209)
- en: Python
  id: totrans-1511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python
- en: advantages for Excel, [Python for Excel](index_split_007.html#filepos62589)
  id: totrans-1512
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 的优势、[用于 Excel 的 Python](index_split_007.html#filepos62589)
- en: cross-platform compatibility, [Cross-Platform Compatibility](index_split_007.html#filepos90342)
  id: totrans-1513
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨平台兼容性，[跨平台兼容性](index_split_007.html#filepos90342)
- en: modern language features, [Modern Language Features](index_split_007.html#filepos80870)-[Modern
    Language Features](index_split_007.html#filepos89951)
  id: totrans-1514
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现代语言特性，[现代语言特性](index_split_007.html#filepos80870)-[现代语言特性](index_split_007.html#filepos89951)
- en: readability, [Readability and Maintainability](index_split_007.html#filepos64414)-[Readability
    and Maintainability](index_split_007.html#filepos71415)
  id: totrans-1515
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可读性，[可读性和可维护性](index_split_007.html#filepos64414)-[可读性和可维护性](index_split_007.html#filepos71415)
- en: scientific computing, [Scientific Computing](index_split_007.html#filepos76559)
  id: totrans-1516
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 科学计算，[科学计算](index_split_007.html#filepos76559)
- en: standard library and package manager, [Standard Library and Package Manager](index_split_007.html#filepos71589)-[Standard
    Library and Package Manager](index_split_007.html#filepos76314)
  id: totrans-1517
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准库和包管理器，[标准库和包管理器](index_split_007.html#filepos71589)-[标准库和包管理器](index_split_007.html#filepos76314)
- en: Anaconda distribution (see Anaconda)
  id: totrans-1518
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda 发行版（参见 Anaconda）
- en: boolean operators, [Booleans](index_split_011.html#filepos205160)
  id: totrans-1519
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔运算符，[布尔值](index_split_011.html#filepos205160)
- en: classes, [Attributes and methods](index_split_011.html#filepos188185)
  id: totrans-1520
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类，[属性和方法](index_split_011.html#filepos188185)
- en: comments, [Mathematical operators](index_split_011.html#filepos201944)
  id: totrans-1521
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注释，[数学运算符](index_split_011.html#filepos201944)
- en: control flow
  id: totrans-1522
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制流
- en: code blocks, [Code Blocks and the pass Statement](index_split_011.html#filepos303668)-[Code
    Blocks and the pass Statement](index_split_012.html#filepos306087)
  id: totrans-1523
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码块，[代码块和 pass 语句](index_split_011.html#filepos303668)-[代码块和 pass 语句](index_split_012.html#filepos306087)
- en: conditional expressions, [The if Statement and Conditional Expressions](index_split_012.html#filepos314525)
  id: totrans-1524
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条件表达式，[if 语句和条件表达式](index_split_012.html#filepos314525)
- en: dictionary comprehensions, [List, Dictionary, and Set Comprehensions](index_split_012.html#filepos355651)
  id: totrans-1525
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典推导式，[列表、字典和集合推导式](index_split_012.html#filepos355651)
- en: for loops, [The for and while Loops](index_split_012.html#filepos316683)-[The
    for and while Loops](index_split_012.html#filepos341967)
  id: totrans-1526
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: for 循环，[for 和 while 循环](index_split_012.html#filepos316683)-[for 和 while 循环](index_split_012.html#filepos341967)
- en: if statements, [The if Statement and Conditional Expressions](index_split_012.html#filepos306285)-[The
    if Statement and Conditional Expressions](index_split_012.html#filepos316429)
  id: totrans-1527
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: if 语句，[if 语句和条件表达式](index_split_012.html#filepos306285)-[if 语句和条件表达式](index_split_012.html#filepos316429)
- en: list comprehensions, [List, Dictionary, and Set Comprehensions](index_split_012.html#filepos347118)
  id: totrans-1528
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表推导式，[列表、字典和集合推导式](index_split_012.html#filepos347118)
- en: pass statement, [Code Blocks and the pass Statement](index_split_011.html#filepos303668)-[Code
    Blocks and the pass Statement](index_split_012.html#filepos306087)
  id: totrans-1529
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pass 语句，[代码块和 pass 语句](index_split_011.html#filepos303668)-[代码块和 pass 语句](index_split_012.html#filepos306087)
- en: set comprehensions, [List, Dictionary, and Set Comprehensions](index_split_012.html#filepos358997)
  id: totrans-1530
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合推导式，[列表、字典和集合推导式](index_split_012.html#filepos358997)
- en: while loops, [The for and while Loops](index_split_012.html#filepos343907)
  id: totrans-1531
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: while 循环，[for 和 while 循环](index_split_012.html#filepos343907)
- en: data structures
  id: totrans-1532
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据结构
- en: dictionaries, [Dictionaries](index_split_011.html#filepos268897)-[Dictionaries](index_split_011.html#filepos285555)
  id: totrans-1533
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典，[字典](index_split_011.html#filepos268897)-[字典](index_split_011.html#filepos285555)
- en: list of, [Sets](index_split_011.html#filepos302517)
  id: totrans-1534
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表，[集合](index_split_011.html#filepos302517)
- en: lists, [Lists](index_split_011.html#filepos243228)-[Lists](index_split_011.html#filepos268531)
  id: totrans-1535
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表，[列表](index_split_011.html#filepos243228)-[列表](index_split_011.html#filepos268531)
- en: purpose of, [Data Structures](index_split_011.html#filepos242442)
  id: totrans-1536
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用途，[数据结构](index_split_011.html#filepos242442)
- en: sets, [Sets](index_split_011.html#filepos290624)-[Sets](index_split_011.html#filepos302517)
  id: totrans-1537
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合，[集合](index_split_011.html#filepos290624)-[集合](index_split_011.html#filepos302517)
- en: tuples, [Tuples](index_split_011.html#filepos285858)
  id: totrans-1538
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组，[元组](index_split_011.html#filepos285858)
- en: data types
  id: totrans-1539
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据类型
- en: boolean, [Booleans](index_split_011.html#filepos205063)-[Booleans](index_split_011.html#filepos217752)
  id: totrans-1540
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔值，[布尔值](index_split_011.html#filepos205063)-[布尔值](index_split_011.html#filepos217752)
- en: mutable versus immutable, [Mutable vs. Immutable Python Objects](index_split_031.html#filepos1865731)
  id: totrans-1541
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可变与不可变，[可变 vs. 不可变 Python 对象](index_split_031.html#filepos1865731)
- en: numeric, [Numeric Types](index_split_011.html#filepos189160)-[Numeric Types](index_split_011.html#filepos194525)
  id: totrans-1542
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字，[数值类型](index_split_011.html#filepos189160)-[数值类型](index_split_011.html#filepos194525)
- en: purpose of, [Data Types](index_split_010.html#filepos180377)
  id: totrans-1543
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用途，[数据类型](index_split_010.html#filepos180377)
- en: strings, [Strings](index_split_011.html#filepos217986)-[Strings](index_split_011.html#filepos227137)
  id: totrans-1544
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串, [字符串](index_split_011.html#filepos217986)-[字符串](index_split_011.html#filepos227137)
- en: functions
  id: totrans-1545
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数
- en: calling, [Functions](index_split_011.html#filepos185990), [Calling functions](index_split_012.html#filepos370297),
    [Calling Functions with Mutable Objects as Arguments](index_split_031.html#filepos1882799)-[Functions
    with Mutable Objects as Default Arguments](index_split_031.html#filepos1900058)
  id: totrans-1546
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用, [函数](index_split_011.html#filepos185990), [调用函数](index_split_012.html#filepos370297),
    [带可变对象作为参数调用函数](index_split_031.html#filepos1882799)-[带可变对象作为默认参数的函数](index_split_031.html#filepos1900058)
- en: defining, [Defining functions](index_split_012.html#filepos362480)
  id: totrans-1547
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义, [定义函数](index_split_012.html#filepos362480)
- en: purpose of, [Functions](index_split_012.html#filepos361996)
  id: totrans-1548
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的, [函数](index_split_012.html#filepos361996)
- en: history of, [Why Python for Excel?](index_split_007.html#filepos34260)-[Why
    Python for Excel?](index_split_007.html#filepos35198)
  id: totrans-1549
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 历史背景, [为什么选择Python处理Excel？](index_split_007.html#filepos34260)-[为什么选择Python处理Excel？](index_split_007.html#filepos35198)
- en: indexing, [Indexing](index_split_011.html#filepos228067)
  id: totrans-1550
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引, [索引](index_split_011.html#filepos228067)
- en: interactive session
  id: totrans-1551
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交互式会话
- en: 'ending, [Python REPL: An Interactive Python Session](index_split_008.html#filepos118780)'
  id: totrans-1552
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结束, [Python REPL：交互式Python会话](index_split_008.html#filepos118780)
- en: 'starting, [Python REPL: An Interactive Python Session](index_split_008.html#filepos115018)-[Python
    REPL: An Interactive Python Session](index_split_008.html#filepos118983)'
  id: totrans-1553
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动, [Python REPL：交互式Python会话](index_split_008.html#filepos115018)-[Python REPL：交互式Python会话](index_split_008.html#filepos118983)
- en: line breaks, [Lists](index_split_011.html#filepos253745)
  id: totrans-1554
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 换行符, [列表](index_split_011.html#filepos253745)
- en: logarithms in, [Shifting and Percentage Changes](index_split_017.html#filepos810574)
  id: totrans-1555
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对数计算, [变化和百分比变化](index_split_017.html#filepos810574)
- en: macOS permissions, [Using Excel as Data Viewer](index_split_024.html#filepos1249144)
  id: totrans-1556
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS 权限, [使用Excel作为数据查看器](index_split_024.html#filepos1249144)
- en: mathematical operators, [Mathematical operators](index_split_011.html#filepos196304)
  id: totrans-1557
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数学运算符, [数学运算符](index_split_011.html#filepos196304)
- en: module search path, [RunPython Function](index_split_026.html#filepos1466429)-[RunPython
    Function](index_split_026.html#filepos1468145), [Settings](index_split_026.html#filepos1483129)
  id: totrans-1558
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块搜索路径, [RunPython 函数](index_split_026.html#filepos1466429)-[RunPython 函数](index_split_026.html#filepos1468145),
    [设置](index_split_026.html#filepos1483129)
- en: modules
  id: totrans-1559
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块
- en: datetime module, [The datetime Class](index_split_012.html#filepos392883)-[The
    datetime Class](index_split_012.html#filepos408810), [Working with Time-Zone-Aware
    datetime Objects](index_split_031.html#filepos1848019)-[Working with Time-Zone-Aware
    datetime Objects](index_split_031.html#filepos1862968)
  id: totrans-1560
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期时间模块, [datetime 类](index_split_012.html#filepos392883)-[datetime 类](index_split_012.html#filepos408810),
    [处理时区感知日期时间对象](index_split_031.html#filepos1848019)-[处理时区感知日期时间对象](index_split_031.html#filepos1862968)
- en: importing, [Modules and the import Statement](index_split_012.html#filepos376420)-[Modules
    and the import Statement](index_split_012.html#filepos392723)
  id: totrans-1561
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入, [模块和 import 语句](index_split_012.html#filepos376420)-[模块和 import 语句](index_split_012.html#filepos392723)
- en: timezone module, [Working with Time-Zone-Aware datetime Objects](index_split_031.html#filepos1862968)
  id: totrans-1562
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时区模块, [处理时区感知日期时间对象](index_split_031.html#filepos1862968)
- en: objects
  id: totrans-1563
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象
- en: attributes and methods, [Attributes and methods](index_split_011.html#filepos187275),
    [Classes and Objects](index_split_031.html#filepos1833311)-[Classes and Objects](index_split_031.html#filepos1847675)
  id: totrans-1564
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性和方法, [属性和方法](index_split_011.html#filepos187275), [类和对象](index_split_031.html#filepos1833311)-[类和对象](index_split_031.html#filepos1847675)
- en: as class instances, [The datetime Class](index_split_012.html#filepos394507)
  id: totrans-1565
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为类实例, [datetime 类](index_split_012.html#filepos394507)
- en: classes and, [Classes and Objects](index_split_031.html#filepos1832657)-[Classes
    and Objects](index_split_031.html#filepos1847675)
  id: totrans-1566
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类与, [类和对象](index_split_031.html#filepos1832657)-[类和对象](index_split_031.html#filepos1847675)
- en: help documentation, [Strings](index_split_011.html#filepos225822)
  id: totrans-1567
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助文档, [字符串](index_split_011.html#filepos225822)
- en: initialization, [Classes and Objects](index_split_031.html#filepos1837273)
  id: totrans-1568
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始化, [类和对象](index_split_031.html#filepos1837273)
- en: mutable as function arguments, [Calling Functions with Mutable Objects as Arguments](index_split_031.html#filepos1882799)-[Functions
    with Mutable Objects as Default Arguments](index_split_031.html#filepos1900058)
  id: totrans-1569
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可变函数参数, [带可变对象作为参数调用函数](index_split_031.html#filepos1882799)-[带可变对象作为默认参数的函数](index_split_031.html#filepos1900058)
- en: mutable versus immutable, [Mutable vs. Immutable Python Objects](index_split_031.html#filepos1865519)-[Mutable
    vs. Immutable Python Objects](index_split_031.html#filepos1882596)
  id: totrans-1570
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可变与不可变，[可变与不可变的 Python 对象](index_split_031.html#filepos1865519)-[可变与不可变的 Python
    对象](index_split_031.html#filepos1882596)
- en: purpose of, [Objects](index_split_010.html#filepos180908)
  id: totrans-1571
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用途，[对象](index_split_010.html#filepos180908)
- en: packages, building, [Settings](index_split_026.html#filepos1483129)
  id: totrans-1572
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包，构建，[设置](index_split_026.html#filepos1483129)
- en: PEP 8 style guide
  id: totrans-1573
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: PEP 8 样式指南
- en: 'examples, [PEP 8: Style Guide for Python Code](index_split_012.html#filepos409133)-[PEP
    8: Style Guide for Python Code](index_split_012.html#filepos425840)'
  id: totrans-1574
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例，[PEP 8：Python 代码风格指南](index_split_012.html#filepos409133)-[PEP 8：Python 代码风格指南](index_split_012.html#filepos425840)
- en: linting, [PEP 8 and VS Code](index_split_012.html#filepos426221)
  id: totrans-1575
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码检查，[PEP 8 和 VS Code](index_split_012.html#filepos426221)
- en: purpose of, [Preface](index_split_003.html#filepos9905)-[Preface](index_split_003.html#filepos10584)
  id: totrans-1576
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用途，[前言](index_split_003.html#filepos9905)-[前言](index_split_003.html#filepos10584)
- en: saving files, [UDF Quickstart](index_split_028.html#filepos1674980)
  id: totrans-1577
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存文件，[UDF 快速入门](index_split_028.html#filepos1674980)
- en: scripts (see scripts)
  id: totrans-1578
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本（请参阅脚本）
- en: slicing, [Slicing](index_split_011.html#filepos233726)
  id: totrans-1579
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 切片，[切片](index_split_011.html#filepos233726)
- en: variables, [Variables](index_split_010.html#filepos181374)
  id: totrans-1580
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量，[变量](index_split_010.html#filepos181374)
- en: versions of, [Python and Excel Versions](index_split_005.html#filepos19456)
  id: totrans-1581
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本，[Python 和 Excel 版本](index_split_005.html#filepos19456)
- en: xlwings dependencies, [Python Dependency](index_split_026.html#filepos1472746)-[Python
    Dependency](index_split_026.html#filepos1475110)
  id: totrans-1582
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 依赖项，[Python 依赖](index_split_026.html#filepos1472746)-[Python 依赖](index_split_026.html#filepos1475110)
- en: 'python command, [Python REPL: An Interactive Python Session](index_split_008.html#filepos115104)'
  id: totrans-1583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: python 命令，[Python REPL：交互式 Python 会话](index_split_008.html#filepos115104)
- en: Python Data Analysis Library (see pandas)
  id: totrans-1584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 数据分析库（参见 pandas）
- en: Python Interactive Window (VS Code), [Python Scripts with Code Cells](index_split_030.html#filepos1831056)
  id: totrans-1585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 交互窗口（VS Code），[Python 脚本与代码单元](index_split_030.html#filepos1831056)
- en: Python interpreters (xlwings), [Settings](index_split_026.html#filepos1482074)
  id: totrans-1586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 解释器（xlwings），[设置](index_split_026.html#filepos1482074)
- en: Python Package Tracker case study
  id: totrans-1587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 包追踪器案例研究
- en: application structure, [Application Structure](index_split_027.html#filepos1601418)
  id: totrans-1588
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序结构，[应用程序结构](index_split_027.html#filepos1601418)
- en: backend, [Backend](index_split_027.html#filepos1620020)-[Backend](index_split_027.html#filepos1644241)
  id: totrans-1589
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端，[后端](index_split_027.html#filepos1620020)-[后端](index_split_027.html#filepos1644241)
- en: debugging, [Debugging](index_split_027.html#filepos1644656)-[Debugging](index_split_027.html#filepos1651460)
  id: totrans-1590
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试，[调试](index_split_027.html#filepos1644656)-[调试](index_split_027.html#filepos1651460)
- en: frontend, [Frontend](index_split_027.html#filepos1606230)-[Frontend](index_split_027.html#filepos1619827)
  id: totrans-1591
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前端，[前端](index_split_027.html#filepos1606230)-[前端](index_split_027.html#filepos1619827)
- en: databases
  id: totrans-1592
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库
- en: connections, [Database connections](index_split_027.html#filepos1529652)-[Database
    connections](index_split_027.html#filepos1537920)
  id: totrans-1593
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接，[数据库连接](index_split_027.html#filepos1529652)-[数据库连接](index_split_027.html#filepos1537920)
- en: SQL injection, [SQL injection](index_split_027.html#filepos1563158)-[SQL injection](index_split_027.html#filepos1579942)
  id: totrans-1594
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 注入，[SQL 注入](index_split_027.html#filepos1563158)-[SQL 注入](index_split_027.html#filepos1579942)
- en: SQL queries, [SQL queries](index_split_027.html#filepos1538233)-[SQL queries](index_split_027.html#filepos1562882)
  id: totrans-1595
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 查询，[SQL 查询](index_split_027.html#filepos1538233)-[SQL 查询](index_split_027.html#filepos1562882)
- en: structure of, [The Package Tracker database](index_split_027.html#filepos1520310)-[The
    Package Tracker database](index_split_027.html#filepos1529401)
  id: totrans-1596
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结构，[包裹追踪器数据库](index_split_027.html#filepos1520310)-[包裹追踪器数据库](index_split_027.html#filepos1529401)
- en: types of, [Databases](index_split_027.html#filepos1515417)-[Databases](index_split_027.html#filepos1519777)
  id: totrans-1597
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型，[数据库](index_split_027.html#filepos1515417)-[数据库](index_split_027.html#filepos1519777)
- en: error handling, [Exceptions](index_split_027.html#filepos1580257)-[Exceptions](index_split_027.html#filepos1601081)
  id: totrans-1598
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误处理，[异常](index_split_027.html#filepos1580257)-[异常](index_split_027.html#filepos1601081)
- en: packages, adding, [What We Will Build](index_split_027.html#filepos1489144)-[What
    We Will Build](index_split_027.html#filepos1492009)
  id: totrans-1599
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包，添加，[我们将构建什么](index_split_027.html#filepos1489144)-[我们将构建什么](index_split_027.html#filepos1492009)
- en: web APIs, [Web APIs](index_split_027.html#filepos1492808)-[Web APIs](index_split_027.html#filepos1515072)
  id: totrans-1600
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: web API，[Web API](index_split_027.html#filepos1492808)-[Web API](index_split_027.html#filepos1515072)
- en: 'Python REPL, [Python REPL: An Interactive Python Session](index_split_008.html#filepos115018)-[Python
    REPL: An Interactive Python Session](index_split_008.html#filepos118983)'
  id: totrans-1601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python REPL，[Python REPL：交互式 Python 会话](index_split_008.html#filepos115018)-[Python
    REPL：交互式 Python 会话](index_split_008.html#filepos118983)
- en: Python Tools for Visual Studio (PTVS), [Visual Studio Code](index_split_009.html#filepos159079)
  id: totrans-1602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python Tools for Visual Studio (PTVS)，[Visual Studio Code](index_split_009.html#filepos159079)
- en: Pythonic style, [The if Statement and Conditional Expressions](index_split_012.html#filepos309980)
  id: totrans-1603
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 风格，[if 语句和条件表达式](index_split_012.html#filepos309980)
- en: PYTHONPATH setting (xlwings), [RunPython Function](index_split_026.html#filepos1466429)-[RunPython
    Function](index_split_026.html#filepos1468145), [Settings](index_split_026.html#filepos1483129),
    [UDF Quickstart](index_split_028.html#filepos1676726)
  id: totrans-1604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PYTHONPATH 设置 (xlwings)，[RunPython 函数](index_split_026.html#filepos1466429)-[RunPython
    函数](index_split_026.html#filepos1468145)，[设置](index_split_026.html#filepos1483129)，[UDF
    快速入门](index_split_028.html#filepos1676726)
- en: 'pytrends, [Package Managers: Conda and pip](index_split_008.html#filepos125608),
    [Fetching Data from Google Trends](index_split_028.html#filepos1715202)-[Fetching
    Data from Google Trends](index_split_028.html#filepos1738598)'
  id: totrans-1605
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pytrends，[包管理器：Conda 和 pip](index_split_008.html#filepos125608)，[从 Google 趋势获取数据](index_split_028.html#filepos1715202)-[从
    Google 趋势获取数据](index_split_028.html#filepos1738598)
- en: pyxlsb
  id: totrans-1606
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pyxlsb
- en: 'installing, [Package Managers: Conda and pip](index_split_008.html#filepos125608)'
  id: totrans-1607
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装，[包管理器：Conda 和 pip](index_split_008.html#filepos125608)
- en: reading files, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos926988),
    [pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
  id: totrans-1608
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取文件，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos926988)，[pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
- en: when to use, [When to Use Which Package](index_split_020.html#filepos964224)
  id: totrans-1609
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用时机，[何时使用哪个包](index_split_020.html#filepos964224)
- en: Q
  id: totrans-1610
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Q
- en: queries (SQL), [SQL queries](index_split_027.html#filepos1538233)-[SQL queries](index_split_027.html#filepos1562882)
  id: totrans-1611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询（SQL），[SQL 查询](index_split_027.html#filepos1538233)-[SQL 查询](index_split_027.html#filepos1562882)
- en: quickstart command (xlwings), [Quickstart Command](index_split_026.html#filepos1448302)
  id: totrans-1612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速启动命令 (xlwings)，[快速启动命令](index_split_026.html#filepos1448302)
- en: importing UDFs, [UDF Quickstart](index_split_028.html#filepos1657477)-[UDF Quickstart](index_split_028.html#filepos1679023)
  id: totrans-1613
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入 UDF，[UDF 快速入门](index_split_028.html#filepos1657477)-[UDF 快速入门](index_split_028.html#filepos1679023)
- en: RunPython function and, [RunPython Function](index_split_026.html#filepos1459577)-[RunPython
    Function](index_split_026.html#filepos1468568)
  id: totrans-1614
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RunPython 函数和，[RunPython 函数](index_split_026.html#filepos1459577)-[RunPython
    函数](index_split_026.html#filepos1468568)
- en: 'quit command, [Python REPL: An Interactive Python Session](index_split_008.html#filepos118780)'
  id: totrans-1615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 退出命令，[Python REPL：交互式 Python 会话](index_split_008.html#filepos118780)
- en: R
  id: totrans-1616
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: R
- en: random numbers, generating, [Useful Array Constructors](index_split_014.html#filepos473280)
  id: totrans-1617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机数生成，[有用的数组构造器](index_split_014.html#filepos473280)
- en: range function, [The for and while Loops](index_split_012.html#filepos322530)-[The
    for and while Loops](index_split_012.html#filepos328659)
  id: totrans-1618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围函数，[for 和 while 循环](index_split_012.html#filepos322530)-[for 和 while 循环](index_split_012.html#filepos328659)
- en: range object (xlwings), [The Excel Object Model](index_split_024.html#filepos1265312)-[The
    Excel Object Model](index_split_024.html#filepos1293849)
  id: totrans-1619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围对象 (xlwings)，[Excel 对象模型](index_split_024.html#filepos1265312)-[Excel 对象模型](index_split_024.html#filepos1293849)
- en: converters, [Converters and Options](index_split_025.html#filepos1340690)
  id: totrans-1620
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转换器，[转换器和选项](index_split_025.html#filepos1340690)
- en: options, [Converters and Options](index_split_025.html#filepos1345103)-[Converters
    and Options](index_split_025.html#filepos1366895)
  id: totrans-1621
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选项，[转换器和选项](index_split_025.html#filepos1345103)-[转换器和选项](index_split_025.html#filepos1366895)
- en: raw strings, [Exporting CSV Files](index_split_016.html#filepos747454)
  id: totrans-1622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始字符串，[导出 CSV 文件](index_split_016.html#filepos747454)
- en: raw values, [Raw values](index_split_025.html#filepos1424751), [Using raw values](index_split_028.html#filepos1770837)
  id: totrans-1623
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始值，[原始值](index_split_025.html#filepos1424751)，[使用原始值](index_split_028.html#filepos1770837)
- en: read function (excel.py), [The excel.py Module](index_split_021.html#filepos976882)
  id: totrans-1624
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: read 函数 (excel.py)，[excel.py 模块](index_split_021.html#filepos976882)
- en: readability of Python, [Readability and Maintainability](index_split_007.html#filepos64414)-[Readability
    and Maintainability](index_split_007.html#filepos71415)
  id: totrans-1625
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 可读性，[可读性和可维护性](index_split_007.html#filepos64414)-[可读性和可维护性](index_split_007.html#filepos71415)
- en: reader/writer packages
  id: totrans-1626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取器/写入器包
- en: excel.py module, [The excel.py Module](index_split_021.html#filepos972622)-[The
    excel.py Module](index_split_021.html#filepos980989)
  id: totrans-1627
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: excel.py 模块，[excel.py 模块](index_split_021.html#filepos972622)-[excel.py 模块](index_split_021.html#filepos980989)
- en: list of, [Formatting a DataFrame’s data part](index_split_022.html#filepos1230090)
  id: totrans-1628
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表，[格式化 DataFrame 的数据部分](index_split_022.html#filepos1230090)
- en: OpenPyXL, [OpenPyXL](index_split_021.html#filepos981782)-[Editing with OpenPyXL](index_split_021.html#filepos1039562)
  id: totrans-1629
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenPyXL，[OpenPyXL](index_split_021.html#filepos981782)-[使用 OpenPyXL 进行编辑](index_split_021.html#filepos1039562)
- en: optimization for big files, [Working with Big Excel Files](index_split_022.html#filepos1125159)-[Reading
    sheets in parallel](index_split_022.html#filepos1157423)
  id: totrans-1630
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大文件优化，[处理大型Excel文件](index_split_022.html#filepos1125159)-[并行读取工作表](index_split_022.html#filepos1157423)
- en: pyxlsb, [pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
  id: totrans-1631
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pyxlsb，[pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
- en: when to use, [When to Use Which Package](index_split_020.html#filepos962384)-[When
    to Use Which Package](index_split_021.html#filepos972372)
  id: totrans-1632
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用，[何时使用哪个包](index_split_020.html#filepos962384)-[何时使用哪个包](index_split_021.html#filepos972372)
- en: xlrd, [Reading with xlrd](index_split_021.html#filepos1085917)-[Reading with
    xlrd](index_split_021.html#filepos1099832)
  id: totrans-1633
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlrd，[使用xlrd进行读取](index_split_021.html#filepos1085917)-[使用xlrd进行读取](index_split_021.html#filepos1099832)
- en: XlsxWriter, [XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)
  id: totrans-1634
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: XlsxWriter，[XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)
- en: xlutils, [Editing with xlutils](index_split_022.html#filepos1119688)
  id: totrans-1635
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlutils，[使用xlutils进行编辑](index_split_022.html#filepos1119688)
- en: xlwt, [Writing with xlwt](index_split_022.html#filepos1099995)-[Editing with
    xlutils](index_split_022.html#filepos1119593)
  id: totrans-1636
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwt，[使用xlwt进行写入](index_split_022.html#filepos1099995)-[使用xlutils进行编辑](index_split_022.html#filepos1119593)
- en: reading
  id: totrans-1637
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取
- en: DataFrames in Excel with xlwings, [Working with DataFrames](index_split_025.html#filepos1324128)-[Working
    with DataFrames](index_split_025.html#filepos1340369)
  id: totrans-1638
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Excel中使用xlwings的数据框架，[使用数据框架工作](index_split_025.html#filepos1324128)-[使用数据框架工作](index_split_025.html#filepos1340369)
- en: files (Excel)
  id: totrans-1639
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件（Excel）
- en: limitations in pandas, [Limitations When Using pandas with Excel Files](index_split_019.html#filepos957495)
  id: totrans-1640
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas中的限制，[使用pandas处理Excel文件的限制](index_split_019.html#filepos957495)
- en: with OpenPyXL, [Reading with OpenPyXL](index_split_021.html#filepos982131)-[Writing
    with OpenPyXL](index_split_021.html#filepos996210), [Reading with OpenPyXL](index_split_022.html#filepos1141062)
  id: totrans-1641
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OpenPyXL，[使用OpenPyXL进行读取](index_split_021.html#filepos982131)-[使用OpenPyXL进行写入](index_split_021.html#filepos996210)，[使用OpenPyXL进行读取](index_split_022.html#filepos1141062)
- en: with pandas, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos886398)-[The
    read_excel Function and ExcelFile Class](index_split_019.html#filepos935481)
  id: totrans-1642
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用pandas，[read_excel函数和ExcelFile类](index_split_019.html#filepos886398)-[read_excel函数和ExcelFile类](index_split_019.html#filepos935481)
- en: in parallel, [Reading sheets in parallel](index_split_022.html#filepos1144410)-[Reading
    sheets in parallel](index_split_022.html#filepos1157423)
  id: totrans-1643
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并行处理，[并行读取工作表](index_split_022.html#filepos1144410)-[并行读取工作表](index_split_022.html#filepos1157423)
- en: programming Excel versus, [How This Book Is Organized](index_split_005.html#filepos18185)
  id: totrans-1644
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程Excel与，[本书的组织方式](index_split_005.html#filepos18185)
- en: with pyxlsb, [pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
  id: totrans-1645
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用pyxlsb，[pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
- en: from URLs, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos922687)
  id: totrans-1646
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从URL中，[read_excel函数和ExcelFile类](index_split_019.html#filepos922687)
- en: with xlrd, [Reading with xlrd](index_split_021.html#filepos1085917)-[Reading
    with xlrd](index_split_021.html#filepos1099832), [Reading with xlrd](index_split_022.html#filepos1134915)
  id: totrans-1647
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用xlrd，[使用xlrd进行读取](index_split_021.html#filepos1085917)-[使用xlrd进行读取](index_split_021.html#filepos1099832)，[使用xlrd进行读取](index_split_022.html#filepos1134915)
- en: read_csv function (pandas), [Importing CSV Files](index_split_016.html#filepos748628)-[Importing
    CSV Files](index_split_016.html#filepos764876), [Creating a DatetimeIndex](index_split_017.html#filepos786030)
  id: totrans-1648
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: read_csv函数（pandas），[导入CSV文件](index_split_016.html#filepos748628)-[导入CSV文件](index_split_016.html#filepos764876)，[创建DatetimeIndex](index_split_017.html#filepos786030)
- en: 'read_excel function (pandas), [DataFrame and Series](index_split_015.html#filepos486309),
    [Case Study: Excel Reporting](index_split_019.html#filepos866436), [The read_excel
    Function and ExcelFile Class](index_split_019.html#filepos886398)-[The read_excel
    Function and ExcelFile Class](index_split_019.html#filepos935481), [When to Use
    Which Package](index_split_021.html#filepos971083)'
  id: totrans-1649
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: read_excel函数（pandas），[DataFrame和Series](index_split_015.html#filepos486309)，[案例研究：Excel报告](index_split_019.html#filepos866436)，[read_excel函数和ExcelFile类](index_split_019.html#filepos886398)-[read_excel函数和ExcelFile类](index_split_019.html#filepos935481)，[何时使用哪个包](index_split_021.html#filepos971083)
- en: rebasing in time series analysis, [Rebasing and Correlation](index_split_017.html#filepos822133)-[Rebasing
    and Correlation](index_split_017.html#filepos846848)
  id: totrans-1650
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析中的重基准，[重基准与相关性](index_split_017.html#filepos822133)-[重基准与相关性](index_split_017.html#filepos846848)
- en: recalculating functions (Excel), [UDF Quickstart](index_split_028.html#filepos1671914)
  id: totrans-1651
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新计算函数（Excel），[UDF快速入门](index_split_028.html#filepos1671914)
- en: records (databases), [The Package Tracker database](index_split_027.html#filepos1527951)
  id: totrans-1652
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录（数据库），[包裹跟踪器数据库](index_split_027.html#filepos1527951)
- en: 'recursive globbing, [Case Study: Excel Reporting](index_split_019.html#filepos884117)'
  id: totrans-1653
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 递归式全局搜索，[案例研究：Excel 报告](index_split_019.html#filepos884117)
- en: Redis, [Databases](index_split_027.html#filepos1518942)
  id: totrans-1654
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redis，[数据库](index_split_027.html#filepos1518942)
- en: regional settings (Excel), [The Excel Object Model](index_split_024.html#filepos1254107)-[The
    Excel Object Model](index_split_024.html#filepos1255983)
  id: totrans-1655
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区域设置（Excel），[Excel 对象模型](index_split_024.html#filepos1254107)-[Excel 对象模型](index_split_024.html#filepos1255983)
- en: reindex method (pandas), [Index](index_split_015.html#filepos507287)
  id: totrans-1656
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新索引方法（pandas），[索引](index_split_015.html#filepos507287)
- en: relational databases, [Databases](index_split_027.html#filepos1515821)-[Databases](index_split_027.html#filepos1519443)
  id: totrans-1657
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关系数据库，[数据库](index_split_027.html#filepos1515821)-[数据库](index_split_027.html#filepos1519443)
- en: relative paths, [Anaconda Prompt](index_split_008.html#filepos112263), [Backend](index_split_027.html#filepos1638593)
  id: totrans-1658
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相对路径，[Anaconda 提示符](index_split_008.html#filepos112263)，[后端](index_split_027.html#filepos1638593)
- en: removing
  id: totrans-1659
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除
- en: duplicate data (pandas), [Duplicate Data](index_split_015.html#filepos609015)
  id: totrans-1660
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复数据（pandas），[重复数据](index_split_015.html#filepos609015)
- en: missing data rows (pandas), [Missing Data](index_split_015.html#filepos602631)
  id: totrans-1661
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失数据行（pandas），[缺失数据](index_split_015.html#filepos602631)
- en: renaming
  id: totrans-1662
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重命名
- en: columns (pandas), [Columns](index_split_015.html#filepos515814)
  id: totrans-1663
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列（pandas），[列](index_split_015.html#filepos515814)
- en: Jupyter notebooks, [Running Jupyter Notebooks](index_split_008.html#filepos134176)
  id: totrans-1664
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 笔记本，[运行 Jupyter 笔记本](index_split_008.html#filepos134176)
- en: reordering columns (pandas), [Columns](index_split_015.html#filepos521832)
  id: totrans-1665
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新排序列（pandas），[列](index_split_015.html#filepos521832)
- en: replace method (pandas), [Setting data by replacing values](index_split_015.html#filepos589430)
  id: totrans-1666
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 替换方法（pandas），[通过替换值设置数据](index_split_015.html#filepos589430)
- en: replacing values (pandas), setting data by, [Setting data by replacing values](index_split_015.html#filepos589332)
  id: totrans-1667
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 替换值（pandas），通过设置数据，[通过替换值设置数据](index_split_015.html#filepos589332)
- en: 'reporting case study (Excel), [Case Study: Excel Reporting](index_split_019.html#filepos864531)-[Case
    Study: Excel Reporting](index_split_019.html#filepos885516), [Case Study (Revisited):
    Excel Reporting](index_split_022.html#filepos1232433), [Case Study (Re-Revisited):
    Excel Reporting](index_split_025.html#filepos1400987)-[Case Study (Re-Revisited):
    Excel Reporting](index_split_025.html#filepos1409826)'
  id: totrans-1668
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 报告案例研究（Excel），[案例研究：Excel 报告](index_split_019.html#filepos864531)-[案例研究：Excel
    报告](index_split_019.html#filepos885516)，[案例研究（重访）：Excel 报告](index_split_022.html#filepos1232433)，[案例研究（再重访）：Excel
    报告](index_split_025.html#filepos1400987)-[案例研究（再重访）：Excel 报告](index_split_025.html#filepos1409826)
- en: representational state transfer (REST) API, [Web APIs](index_split_027.html#filepos1503021)
  id: totrans-1669
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表征状态传输（REST）API，[Web API](index_split_027.html#filepos1503021)
- en: Requests package, [Web APIs](index_split_027.html#filepos1506175)
  id: totrans-1670
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Requests 包，[Web API](index_split_027.html#filepos1506175)
- en: required arguments (for functions), [Defining functions](index_split_012.html#filepos364602)
  id: totrans-1671
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数必需的参数（参数），[定义函数](index_split_012.html#filepos364602)
- en: resample method (pandas), [Resampling](index_split_017.html#filepos847388)
  id: totrans-1672
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新采样方法（pandas），[重新采样](index_split_017.html#filepos847388)
- en: resampling in time series analysis, [Resampling](index_split_017.html#filepos847003)-[Resampling](index_split_017.html#filepos854741)
  id: totrans-1673
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析中的重采样，[重新采样](index_split_017.html#filepos847003)-[重新采样](index_split_017.html#filepos854741)
- en: resetting
  id: totrans-1674
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重置
- en: indices (pandas), [Index](index_split_015.html#filepos502052)
  id: totrans-1675
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引（pandas），[索引](index_split_015.html#filepos502052)
- en: MultiIndexes (pandas), [Selecting by using a MultiIndex](index_split_015.html#filepos573635)
  id: totrans-1676
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多索引（pandas），[通过多索引选择](index_split_015.html#filepos573635)
- en: reset_index method (pandas), [Index](index_split_015.html#filepos502052)
  id: totrans-1677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: reset_index 方法（pandas），[索引](index_split_015.html#filepos502052)
- en: reshape function (NumPy), [Useful Array Constructors](index_split_014.html#filepos471368)
  id: totrans-1678
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: reshape 函数（NumPy），[有用的数组构造函数](index_split_014.html#filepos471368)
- en: 'resolve method (Path class), [Case Study: Excel Reporting](index_split_019.html#filepos882885)'
  id: totrans-1679
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解析方法（Path 类），[案例研究：Excel 报告](index_split_019.html#filepos882885)
- en: REST (representational state transfer) API, [Web APIs](index_split_027.html#filepos1503021)
  id: totrans-1680
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: REST（表征状态传输）API，[Web API](index_split_027.html#filepos1503021)
- en: Restart button (VS Code debugger), [Debugger](index_split_030.html#filepos1824818)
  id: totrans-1681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重启按钮（VS Code 调试器），[调试器](index_split_030.html#filepos1824818)
- en: return decorators (xlwings), [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1709547),
    [The Sub Decorator](index_split_028.html#filepos1801826)
  id: totrans-1682
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回装饰器（xlwings），[与数据框和动态数组一起工作](index_split_028.html#filepos1709547)，[子装饰器](index_split_028.html#filepos1801826)
- en: return statement (for functions), [Defining functions](index_split_012.html#filepos365301)
  id: totrans-1683
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回语句（用于函数），[定义函数](index_split_012.html#filepos365301)
- en: revenues.py example, [Minimize cross-application calls](index_split_028.html#filepos1764661)
  id: totrans-1684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revenues.py` 示例，[最小化跨应用调用](index_split_028.html#filepos1764661)'
- en: 'rglob method (Path class), [Case Study: Excel Reporting](index_split_019.html#filepos884117)'
  id: totrans-1685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: rglob 方法（Path 类），[案例研究：Excel 报告](index_split_019.html#filepos884117)
- en: right joins, [Joining and Merging](index_split_016.html#filepos669071)
  id: totrans-1686
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右连接，[连接和合并](index_split_016.html#filepos669071)
- en: rolling method (pandas), [Rolling Windows](index_split_017.html#filepos855557)
  id: totrans-1687
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 中的 rolling 方法，[滚动窗口](index_split_017.html#filepos855557)
- en: rolling windows in time series analysis, [Rolling Windows](index_split_017.html#filepos855004)
  id: totrans-1688
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析中的滚动窗口，[滚动窗口](index_split_017.html#filepos855004)
- en: Run File button (VS Code), [Running a Python Script](index_split_009.html#filepos171481)
  id: totrans-1689
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行文件按钮（VS Code），[运行 Python 脚本](index_split_009.html#filepos171481)
- en: Run main button (xlwings), [Run Main](index_split_026.html#filepos1449910)-[Run
    Main](index_split_026.html#filepos1458891)
  id: totrans-1690
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主运行按钮（xlwings），[运行主程序](index_split_026.html#filepos1449910)-[运行主程序](index_split_026.html#filepos1458891)
- en: run order of Jupyter notebook cells, [Run Order Matters](index_split_009.html#filepos145168)
  id: totrans-1691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 笔记本单元格的运行顺序，[运行顺序重要](index_split_009.html#filepos145168)
- en: running
  id: totrans-1692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行
- en: Anaconda Prompt
  id: totrans-1693
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda Prompt
- en: in macOS, [Anaconda Prompt](index_split_008.html#filepos104346)
  id: totrans-1694
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 macOS 中，[Anaconda Prompt](index_split_008.html#filepos104346)
- en: in Windows, [Anaconda Prompt](index_split_008.html#filepos103402)
  id: totrans-1695
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 中，[Anaconda Prompt](index_split_008.html#filepos103402)
- en: code from text editor, [Visual Studio Code](index_split_009.html#filepos155991)
  id: totrans-1696
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本编辑器中的代码，[Visual Studio Code](index_split_009.html#filepos155991)
- en: Jupyter notebooks, [Running Jupyter Notebooks](index_split_008.html#filepos132444)-[Running
    Jupyter Notebooks](index_split_008.html#filepos134424), [Run Jupyter Notebooks](index_split_030.html#filepos1826689)-[Run
    Jupyter Notebooks](index_split_030.html#filepos1829065)
  id: totrans-1697
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 笔记本，[运行 Jupyter 笔记本](index_split_008.html#filepos132444)-[运行 Jupyter
    笔记本](index_split_008.html#filepos134424), [运行 Jupyter 笔记本](index_split_030.html#filepos1826689)-[运行
    Jupyter 笔记本](index_split_030.html#filepos1829065)
- en: macros (Excel), [RunPython Function](index_split_026.html#filepos1462470)
  id: totrans-1698
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 宏（Excel），[运行 Python 函数](index_split_026.html#filepos1462470)
- en: scripts
  id: totrans-1699
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本
- en: importing modules versus, [Backend](index_split_027.html#filepos1641594)
  id: totrans-1700
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入模块与，[后端](index_split_027.html#filepos1641594)
- en: in VS Code, [Running a Python Script](index_split_009.html#filepos165121)-[Running
    a Python Script](index_split_009.html#filepos172327)
  id: totrans-1701
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 VS Code 中，[运行 Python 脚本](index_split_009.html#filepos165121)-[运行 Python 脚本](index_split_009.html#filepos172327)
- en: VBA code in xlwings, [Running VBA Code](index_split_024.html#filepos1313318)-[Running
    VBA Code](index_split_025.html#filepos1322929)
  id: totrans-1702
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 中的 VBA 代码，[运行 VBA 代码](index_split_024.html#filepos1313318)-[运行 VBA 代码](index_split_025.html#filepos1322929)
- en: VS Code in Anaconda Prompt, [Running a Python Script](index_split_009.html#filepos165226)
  id: totrans-1703
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda Prompt 中的 VS Code，[运行 Python 脚本](index_split_009.html#filepos165226)
- en: RunPython function (xlwings), [RunPython Function](index_split_026.html#filepos1459375)-[RunPython
    without quickstart command](index_split_026.html#filepos1471460), [Settings](index_split_026.html#filepos1484138)
  id: totrans-1704
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 中的 RunPython 函数，[运行 Python 函数](index_split_026.html#filepos1459375)-[运行
    Python 无快速启动命令](index_split_026.html#filepos1471460), [设置](index_split_026.html#filepos1484138)
- en: S
  id: totrans-1705
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: S
- en: 'sales_report_openpyxl.py, [Case Study (Revisited): Excel Reporting](index_split_022.html#filepos1233238)'
  id: totrans-1706
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sales_report_openpyxl.py`，[案例研究（再访）：Excel 报告](index_split_022.html#filepos1233238)'
- en: 'sales_report_pandas.py example, [Case Study: Excel Reporting](index_split_019.html#filepos871006)-[Case
    Study: Excel Reporting](index_split_019.html#filepos884117)'
  id: totrans-1707
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sales_report_pandas.py` 示例，[案例研究：Excel 报告](index_split_019.html#filepos871006)-[案例研究：Excel
    报告](index_split_019.html#filepos884117)'
- en: 'sales_report_xlsxwriter.py, [Case Study (Revisited): Excel Reporting](index_split_022.html#filepos1233238)'
  id: totrans-1708
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sales_report_xlsxwriter.py`，[案例研究（再访）：Excel 报告](index_split_022.html#filepos1233238)'
- en: 'sales_report_xlwings.py example, [Case Study (Re-Revisited): Excel Reporting](index_split_025.html#filepos1403162)'
  id: totrans-1709
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sales_report_xlwings.py` 示例，[案例研究（再再访）：Excel 报告](index_split_025.html#filepos1403162)'
- en: sandboxed environments, [The Excel Object Model](index_split_024.html#filepos1253282),
    [The Excel Object Model](index_split_024.html#filepos1309403)
  id: totrans-1710
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 受限环境，[Excel 对象模型](index_split_024.html#filepos1253282), [Excel 对象模型](index_split_024.html#filepos1309403)
- en: saving
  id: totrans-1711
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存
- en: Jupyter notebooks in VS Code, [Run Jupyter Notebooks](index_split_030.html#filepos1828008)
  id: totrans-1712
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VS Code 中的 Jupyter 笔记本，[运行 Jupyter 笔记本](index_split_030.html#filepos1828008)
- en: Python files, [UDF Quickstart](index_split_028.html#filepos1674980)
  id: totrans-1713
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 文件，[UDF 快速入门](index_split_028.html#filepos1674980)
- en: scalars, [Vectorization and Broadcasting](index_split_014.html#filepos449798)
  id: totrans-1714
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标量，[向量化和广播](index_split_014.html#filepos449798)
- en: scientific computing in Python, [Scientific Computing](index_split_007.html#filepos76559)
  id: totrans-1715
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 中的科学计算，[科学计算](index_split_007.html#filepos76559)
- en: scripts
  id: totrans-1716
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本
- en: Jupyter notebook cells in, [Python Scripts with Code Cells](index_split_030.html#filepos1829327)
  id: totrans-1717
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 笔记本单元格中，[带代码单元格的 Python 脚本](index_split_030.html#filepos1829327)
- en: namespaces of, [Modules and the import Statement](index_split_012.html#filepos391305)
  id: totrans-1718
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命名空间，[模块和导入语句](index_split_012.html#filepos391305)
- en: naming, [Modules and the import Statement](index_split_012.html#filepos392387)
  id: totrans-1719
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命名，[模块和导入语句](index_split_012.html#filepos392387)
- en: running
  id: totrans-1720
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行
- en: importing modules versus, [Backend](index_split_027.html#filepos1641594)
  id: totrans-1721
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入模块与，[后端](index_split_027.html#filepos1641594)
- en: in VS Code, [Running a Python Script](index_split_009.html#filepos165121)-[Running
    a Python Script](index_split_009.html#filepos172327)
  id: totrans-1722
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 VS Code 中，[运行 Python 脚本](index_split_009.html#filepos165121)-[运行 Python 脚本](index_split_009.html#filepos172327)
- en: scrolling through command history, [Anaconda Prompt](index_split_008.html#filepos113245)
  id: totrans-1723
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览命令历史记录，[Anaconda 提示符](index_split_008.html#filepos113245)
- en: Seaborn, [Plotly](index_split_016.html#filepos738741)
  id: totrans-1724
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Seaborn，[Plotly](index_split_016.html#filepos738741)
- en: selecting
  id: totrans-1725
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择
- en: columns (pandas), [Selecting by label](index_split_015.html#filepos537621)
  id: totrans-1726
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列（pandas），[按标签选择](index_split_015.html#filepos537621)
- en: DataFrame data
  id: totrans-1727
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrame 数据
- en: by boolean indexing, [Selecting by boolean indexing](index_split_015.html#filepos549780)-[Selecting
    by boolean indexing](index_split_015.html#filepos567453)
  id: totrans-1728
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过布尔索引，[按布尔索引选择](index_split_015.html#filepos549780)-[按布尔索引选择](index_split_015.html#filepos567453)
- en: by label, [Selecting by label](index_split_015.html#filepos525461)
  id: totrans-1729
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过标签，[按标签选择](index_split_015.html#filepos525461)
- en: with MultiIndexes, [Selecting by using a MultiIndex](index_split_015.html#filepos567793)-[Selecting
    by using a MultiIndex](index_split_015.html#filepos575571)
  id: totrans-1730
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用多索引，[使用多索引进行选择](index_split_015.html#filepos567793)-[使用多索引进行选择](index_split_015.html#filepos575571)
- en: by position, [Selecting by position](index_split_015.html#filepos539083)-[Selecting
    by position](index_split_015.html#filepos549467)
  id: totrans-1731
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按位置，[按位置选择](index_split_015.html#filepos539083)-[按位置选择](index_split_015.html#filepos549467)
- en: self argument (classes), [Classes and Objects](index_split_031.html#filepos1837508)
  id: totrans-1732
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: self 参数（类），[类和对象](index_split_031.html#filepos1837508)
- en: separation of concerns, [Separation of concerns](index_split_007.html#filepos41610)-[Separation
    of concerns](index_split_007.html#filepos45911), [Application Structure](index_split_027.html#filepos1601989)
  id: totrans-1733
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 职责分离，[职责分离](index_split_007.html#filepos41610)-[职责分离](index_split_007.html#filepos45911)，[应用程序结构](index_split_027.html#filepos1601989)
- en: Series
  id: totrans-1734
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Series
- en: arithmetic operations, [Arithmetic Operations](index_split_015.html#filepos628066)
  id: totrans-1735
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 算术操作，[算术操作](index_split_015.html#filepos628066)
- en: DataFrames versus, [DataFrame and Series](index_split_015.html#filepos484520)-[DataFrame
    and Series](index_split_015.html#filepos485550), [Selecting by label](index_split_015.html#filepos536695)
  id: totrans-1736
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrames 与，[DataFrame 和 Series](index_split_015.html#filepos484520)-[DataFrame
    和 Series](index_split_015.html#filepos485550)，[按标签选择](index_split_015.html#filepos536695)
- en: descriptive statistics, [Descriptive Statistics](index_split_016.html#filepos691290)-[Descriptive
    Statistics](index_split_016.html#filepos695190)
  id: totrans-1737
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述性统计，[描述性统计](index_split_016.html#filepos691290)-[描述性统计](index_split_016.html#filepos695190)
- en: set comprehensions, [List, Dictionary, and Set Comprehensions](index_split_012.html#filepos358997)
  id: totrans-1738
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合理解，[列表、字典和集合理解](index_split_012.html#filepos358997)
- en: set constructor, [Sets](index_split_011.html#filepos291512)-[Sets](index_split_011.html#filepos302517)
  id: totrans-1739
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合构造函数，[集合](index_split_011.html#filepos291512)-[集合](index_split_011.html#filepos302517)
- en: set-based languages, [SQL queries](index_split_027.html#filepos1540168)
  id: totrans-1740
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于集合的语言，[SQL 查询](index_split_027.html#filepos1540168)
- en: sets, [Sets](index_split_011.html#filepos290624)-[Sets](index_split_011.html#filepos302517)
  id: totrans-1741
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合，[集合](index_split_011.html#filepos290624)-[集合](index_split_011.html#filepos302517)
- en: setting
  id: totrans-1742
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置
- en: array elements (NumPy), [Getting and Setting Array Elements](index_split_014.html#filepos463404)-[Getting
    and Setting Array Elements](index_split_014.html#filepos470575)
  id: totrans-1743
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数组元素（NumPy），[获取和设置数组元素](index_split_014.html#filepos463404)-[获取和设置数组元素](index_split_014.html#filepos470575)
- en: DataFrame data
  id: totrans-1744
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrame 数据
- en: by adding columns, [Setting data by adding a new column](index_split_015.html#filepos592331)
  id: totrans-1745
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过添加列，[通过添加新列设置数据](index_split_015.html#filepos592331)
- en: by boolean indexing, [Setting data by boolean indexing](index_split_015.html#filepos582259)-[Setting
    data by boolean indexing](index_split_015.html#filepos589159)
  id: totrans-1746
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过布尔索引，[通过布尔索引设置数据](index_split_015.html#filepos582259)-[通过布尔索引设置数据](index_split_015.html#filepos589159)
- en: by label, [Setting data by label or position](index_split_015.html#filepos576247)
  id: totrans-1747
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按标签，[按标签或位置设置数据](index_split_015.html#filepos576247)
- en: by position, [Setting data by label or position](index_split_015.html#filepos576247)
  id: totrans-1748
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按位置，[按标签或位置设置数据](index_split_015.html#filepos576247)
- en: by replacing values, [Setting data by replacing values](index_split_015.html#filepos589332)
  id: totrans-1749
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过替换值，[通过替换值设置数据](index_split_015.html#filepos589332)
- en: indices (pandas), [Index](index_split_015.html#filepos502052)
  id: totrans-1750
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引 (pandas)，[索引](index_split_015.html#filepos502052)
- en: settings for xlwings deployment, [Settings](index_split_026.html#filepos1480593)-[Settings](index_split_026.html#filepos1484138)
  id: totrans-1751
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 部署设置，[设置](index_split_026.html#filepos1480593)-[设置](index_split_026.html#filepos1484138)
- en: set_index method (pandas), [Index](index_split_015.html#filepos502108)
  id: totrans-1752
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: set_index 方法 (pandas)，[索引](index_split_015.html#filepos502108)
- en: shallow copies, [Mutable vs. Immutable Python Objects](index_split_031.html#filepos1881031)
  id: totrans-1753
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浅复制，[可变 vs 不可变的 Python 对象](index_split_031.html#filepos1881031)
- en: sheet object (xlwings), [The Excel Object Model](index_split_024.html#filepos1253502),
    [The Excel Object Model](index_split_024.html#filepos1281618)
  id: totrans-1754
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sheet 对象 (xlwings)，[Excel 对象模型](index_split_024.html#filepos1253502), [Excel
    对象模型](index_split_024.html#filepos1281618)
- en: sheets (see files)
  id: totrans-1755
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格（参见文件）
- en: shift method (pandas), [Shifting and Percentage Changes](index_split_017.html#filepos811119)
  id: totrans-1756
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: shift 方法 (pandas)，[偏移和百分比变化](index_split_017.html#filepos811119)
- en: shifting in time series analysis, [Shifting and Percentage Changes](index_split_017.html#filepos809588)-[Shifting
    and Percentage Changes](index_split_017.html#filepos821793)
  id: totrans-1757
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列分析中的时间偏移，[偏移和百分比变化](index_split_017.html#filepos809588)-[偏移和百分比变化](index_split_017.html#filepos821793)
- en: Show Console checkbox (xlwings add-in), [Debugging](index_split_027.html#filepos1650611)
  id: totrans-1758
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示控制台复选框 (xlwings 插件)，[调试](index_split_027.html#filepos1650611)
- en: shutting down Jupyter notebooks, [Shutting Down Jupyter Notebooks](index_split_009.html#filepos149871)
  id: totrans-1759
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关闭 Jupyter 笔记本，[关闭 Jupyter 笔记本](index_split_009.html#filepos149871)
- en: significant white space, [Code Blocks and the pass Statement](index_split_011.html#filepos304028)
  id: totrans-1760
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重要的空白，[代码块和 pass 语句](index_split_011.html#filepos304028)
- en: simple returns, [Shifting and Percentage Changes](index_split_017.html#filepos818833)
  id: totrans-1761
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单回报，[偏移和百分比变化](index_split_017.html#filepos818833)
- en: single-clicking in VS Code, [Running a Python Script](index_split_009.html#filepos172252)
  id: totrans-1762
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单击 VS Code，[运行 Python 脚本](index_split_009.html#filepos172252)
- en: slicing
  id: totrans-1763
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 切片
- en: arrays (NumPy), [Getting and Setting Array Elements](index_split_014.html#filepos463404)-[Getting
    and Setting Array Elements](index_split_014.html#filepos470575)
  id: totrans-1764
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数组 (NumPy)，[获取和设置数组元素](index_split_014.html#filepos463404)-[获取和设置数组元素](index_split_014.html#filepos470575)
- en: with labels (pandas), [Selecting by label](index_split_015.html#filepos531987)
  id: totrans-1765
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带标签的 (pandas)，[按标签选择](index_split_015.html#filepos531987)
- en: in Python, [Slicing](index_split_011.html#filepos233726)
  id: totrans-1766
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 中，[切片](index_split_011.html#filepos233726)
- en: range objects (xlwings), [The Excel Object Model](index_split_024.html#filepos1276198)
  id: totrans-1767
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围对象 (xlwings)，[Excel 对象模型](index_split_024.html#filepos1276198)
- en: sorting
  id: totrans-1768
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 排序
- en: indices (pandas), [Index](index_split_015.html#filepos509482)-[Index](index_split_015.html#filepos512499)
  id: totrans-1769
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引 (pandas)，[索引](index_split_015.html#filepos509482)-[索引](index_split_015.html#filepos512499)
- en: lists, [Lists](index_split_011.html#filepos262598)
  id: totrans-1770
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表，[列表](index_split_011.html#filepos262598)
- en: sort_index method (pandas), [Index](index_split_015.html#filepos509482)-[Index](index_split_015.html#filepos512499)
  id: totrans-1771
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sort_index 方法 (pandas)，[索引](index_split_015.html#filepos509482)-[索引](index_split_015.html#filepos512499)
- en: source control, [Version control](index_split_007.html#filepos51713)-[Version
    control](index_split_007.html#filepos57576)
  id: totrans-1772
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源控制，[版本控制](index_split_007.html#filepos51713)-[版本控制](index_split_007.html#filepos57576)
- en: spaghetti code, [Modern Language Features](index_split_007.html#filepos89417)
  id: totrans-1773
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 意大利面代码，[现代语言特性](index_split_007.html#filepos89417)
- en: spreadsheets (Excel), DataFrames versus, [DataFrame and Series](index_split_015.html#filepos485631)-[DataFrame
    and Series](index_split_015.html#filepos489337)
  id: totrans-1774
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子表格 (Excel)，DataFrame 与，[DataFrame 和 Series](index_split_015.html#filepos485631)-[DataFrame
    和 Series](index_split_015.html#filepos489337)
- en: Spyder, [Running a Python Script](index_split_009.html#filepos175133)
  id: totrans-1775
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spyder，[运行 Python 脚本](index_split_009.html#filepos175133)
- en: SQL injection, [SQL injection](index_split_027.html#filepos1563158)-[SQL injection](index_split_027.html#filepos1579942)
  id: totrans-1776
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 注入，[SQL 注入](index_split_027.html#filepos1563158)-[SQL 注入](index_split_027.html#filepos1579942)
- en: SQL queries, [SQL queries](index_split_027.html#filepos1538233)-[SQL queries](index_split_027.html#filepos1562882)
  id: totrans-1777
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 查询，[SQL 查询](index_split_027.html#filepos1538233)-[SQL 查询](index_split_027.html#filepos1562882)
- en: SQL Server, [Databases](index_split_027.html#filepos1516369)
  id: totrans-1778
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL Server，[数据库](index_split_027.html#filepos1516369)
- en: SQLAlchemy, [Database connections](index_split_027.html#filepos1529652)-[Database
    connections](index_split_027.html#filepos1537920)
  id: totrans-1779
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQLAlchemy，[数据库连接](index_split_027.html#filepos1529652)-[数据库连接](index_split_027.html#filepos1537920)
- en: enforcing foreign keys, [SQL queries](index_split_027.html#filepos1562373)
  id: totrans-1780
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强制外键，[SQL 查询](index_split_027.html#filepos1562373)
- en: SQL injection, [SQL injection](index_split_027.html#filepos1579180)
  id: totrans-1781
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 注入，[SQL 注入](index_split_027.html#filepos1579180)
- en: SQLite, [Databases](index_split_027.html#filepos1515821)-[Databases](index_split_027.html#filepos1519443)
  id: totrans-1782
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQLite，[数据库](index_split_027.html#filepos1515821)-[数据库](index_split_027.html#filepos1519443)
- en: foreign keys in, [SQL queries](index_split_027.html#filepos1562373)
  id: totrans-1783
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外键中，[SQL 查询](index_split_027.html#filepos1562373)
- en: replacing with PostgreSQL, [Backend](index_split_027.html#filepos1643404)
  id: totrans-1784
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 替换为 PostgreSQL，[后端](index_split_027.html#filepos1643404)
- en: VS Code extension, [The Package Tracker database](index_split_027.html#filepos1529158)
  id: totrans-1785
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VS Code 扩展，[包跟踪器数据库](index_split_027.html#filepos1529158)
- en: 'standalone workbooks (xlwings), [Standalone Workbooks: Getting Rid of the xlwings
    Add-in](index_split_026.html#filepos1475399)-[Standalone Workbooks: Getting Rid
    of the xlwings Add-in](index_split_026.html#filepos1477920)'
  id: totrans-1786
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 独立工作簿（xlwings），[独立工作簿：摆脱 xlwings 插件](index_split_026.html#filepos1475399)-[独立工作簿：摆脱
    xlwings 插件](index_split_026.html#filepos1477920)
- en: standard library (Python), [Standard Library and Package Manager](index_split_007.html#filepos71589)-[Standard
    Library and Package Manager](index_split_007.html#filepos76314)
  id: totrans-1787
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准库（Python），[标准库和包管理器](index_split_007.html#filepos71589)-[标准库和包管理器](index_split_007.html#filepos76314)
- en: 'starting interactive Python session, [Python REPL: An Interactive Python Session](index_split_008.html#filepos115018)-[Python
    REPL: An Interactive Python Session](index_split_008.html#filepos118983)'
  id: totrans-1788
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动交互式 Python 会话，[Python REPL：交互式 Python 会话](index_split_008.html#filepos115018)-[Python
    REPL：交互式 Python 会话](index_split_008.html#filepos118983)
- en: stateless resources, [Web APIs](index_split_027.html#filepos1503328)
  id: totrans-1789
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无状态资源，[Web API](index_split_027.html#filepos1503328)
- en: Status Bar (VS Code), [Installation and Configuration](index_split_009.html#filepos162761)
  id: totrans-1790
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 状态栏（VS Code），[安装和配置](index_split_009.html#filepos162761)
- en: Step Into button (VS Code debugger), [Debugger](index_split_030.html#filepos1824213)
  id: totrans-1791
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Step Into 按钮（VS Code 调试器），[调试器](index_split_030.html#filepos1824213)
- en: Step Out button (VS Code debugger), [Debugger](index_split_030.html#filepos1824584)
  id: totrans-1792
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Step Out 按钮（VS Code 调试器），[调试器](index_split_030.html#filepos1824584)
- en: Step Over button (VS Code debugger), [Debugger](index_split_030.html#filepos1823834)
  id: totrans-1793
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Step Over 按钮（VS Code 调试器），[调试器](index_split_030.html#filepos1823834)
- en: Stop button (VS Code debugger), [Debugger](index_split_030.html#filepos1825010)
  id: totrans-1794
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停止按钮（VS Code 调试器），[调试器](index_split_030.html#filepos1825010)
- en: storing VBA functions, [Running VBA Code](index_split_025.html#filepos1322194)
  id: totrans-1795
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储 VBA 函数，[运行 VBA 代码](index_split_025.html#filepos1322194)
- en: strftime method, [The datetime Class](index_split_012.html#filepos404852)
  id: totrans-1796
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: strftime 方法，[日期时间类](index_split_012.html#filepos404852)
- en: strings, [Strings](index_split_011.html#filepos217986)-[Strings](index_split_011.html#filepos227137)
  id: totrans-1797
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串，[字符串](index_split_011.html#filepos217986)-[字符串](index_split_011.html#filepos227137)
- en: converting to datetime data type, [Creating a DatetimeIndex](index_split_017.html#filepos783176)
  id: totrans-1798
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转换为日期时间数据类型，[创建日期时间索引](index_split_017.html#filepos783176)
- en: formatting in DataFrames, [Applying a Function](index_split_015.html#filepos641289)-[Applying
    a Function](index_split_015.html#filepos645020)
  id: totrans-1799
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrames 中的格式化，[应用函数](index_split_015.html#filepos641289)-[应用函数](index_split_015.html#filepos645020)
- en: methods in DataFrames, [Working with Text Columns](index_split_015.html#filepos634000)
  id: totrans-1800
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrames 中的方法，[处理文本列](index_split_015.html#filepos634000)
- en: raw strings, [Exporting CSV Files](index_split_016.html#filepos747454)
  id: totrans-1801
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始字符串，[导出 CSV 文件](index_split_016.html#filepos747454)
- en: strip method (pandas), [Working with Text Columns](index_split_015.html#filepos634575)
  id: totrans-1802
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: strip 方法（pandas），[处理文本列](index_split_015.html#filepos634575)
- en: strptime method, [The datetime Class](index_split_012.html#filepos404852)
  id: totrans-1803
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: strptime 方法，[日期时间类](index_split_012.html#filepos404852)
- en: style guide for Python (see PEP 8 style guide)
  id: totrans-1804
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 的风格指南（参见 PEP 8 风格指南）
- en: style property (DataFrames), [Formatting a DataFrame’s data part](index_split_022.html#filepos1221911)
  id: totrans-1805
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrames 的 style 属性，[格式化 DataFrame 的数据部分](index_split_022.html#filepos1221911)
- en: styleframe, [Formatting a DataFrame’s data part](index_split_022.html#filepos1231558)
  id: totrans-1806
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: styleframe，[格式化 DataFrame 的数据部分](index_split_022.html#filepos1231558)
- en: sub decorator (xlwings), [The Sub Decorator](index_split_028.html#filepos1795393)-[The
    Sub Decorator](index_split_028.html#filepos1804381)
  id: totrans-1807
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sub 装饰器（xlwings），[子装饰器](index_split_028.html#filepos1795393)-[子装饰器](index_split_028.html#filepos1804381)
- en: Sublime Text, [Running a Python Script](index_split_009.html#filepos173298)
  id: totrans-1808
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sublime Text，[运行 Python 脚本](index_split_009.html#filepos173298)
- en: sum universal function (NumPy), [Universal Functions (ufunc)](index_split_014.html#filepos460116)
  id: totrans-1809
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sum 通用函数（NumPy），[通用函数（ufunc）](index_split_014.html#filepos460116)
- en: switching reader/writer packages, [The excel.py Module](index_split_021.html#filepos973335)
  id: totrans-1810
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: syntax highlighting, [Notebook Cells](index_split_009.html#filepos136864), [Visual
    Studio Code](index_split_009.html#filepos155225)
  id: totrans-1811
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: T
  id: totrans-1812
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: table joins, [Databases](index_split_027.html#filepos1517665)
  id: totrans-1813
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tables in Python Package Tracker, [Frontend](index_split_027.html#filepos1613315)
  id: totrans-1814
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tail method (pandas), [Importing CSV Files](index_split_016.html#filepos750501)
  id: totrans-1815
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: temperature.py example, [Modules and the import Statement](index_split_012.html#filepos377100)
  id: totrans-1816
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terminal (macOS), [Anaconda Prompt](index_split_008.html#filepos102144)-[Anaconda
    Prompt](index_split_008.html#filepos104346)
  id: totrans-1817
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: disabling auto activation of Conda environment, [Disable Auto Activation](index_split_029.html#filepos1819954)
  id: totrans-1818
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ternary operators, [The if Statement and Conditional Expressions](index_split_012.html#filepos314525)
  id: totrans-1819
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: testing, [Testing](index_split_007.html#filepos48860)
  id: totrans-1820
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: text columns in DataFrames, [Working with Text Columns](index_split_015.html#filepos634000)
  id: totrans-1821
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: text editors
  id: totrans-1822
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: list of, [Running a Python Script](index_split_009.html#filepos172984)
  id: totrans-1823
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: VS Code (see VS Code)
  id: totrans-1824
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: text function (SQLAlchemy), [SQL injection](index_split_027.html#filepos1579180)
  id: totrans-1825
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '%%time cell magic, [Reading sheets in parallel](index_split_022.html#filepos1147874)'
  id: totrans-1826
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: time series analysis
  id: totrans-1827
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: correlation, [Rebasing and Correlation](index_split_017.html#filepos822133)-[Rebasing
    and Correlation](index_split_017.html#filepos846848)
  id: totrans-1828
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DatetimeIndex (pandas)
  id: totrans-1829
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: creating, [Creating a DatetimeIndex](index_split_017.html#filepos770795)-[Creating
    a DatetimeIndex](index_split_017.html#filepos794737)
  id: totrans-1830
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: filtering, [Filtering a DatetimeIndex](index_split_017.html#filepos794993)-[Filtering
    a DatetimeIndex](index_split_017.html#filepos798956)
  id: totrans-1831
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: time zones in, [Working with Time Zones](index_split_017.html#filepos799257)-[Working
    with Time Zones](index_split_017.html#filepos808759)
  id: totrans-1832
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Excel limitations, [Time Series Analysis with pandas](index_split_017.html#filepos768348)
  id: totrans-1833
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: percentage change, [Shifting and Percentage Changes](index_split_017.html#filepos809588)-[Shifting
    and Percentage Changes](index_split_017.html#filepos821793)
  id: totrans-1834
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: rebasing, [Rebasing and Correlation](index_split_017.html#filepos822133)-[Rebasing
    and Correlation](index_split_017.html#filepos846848)
  id: totrans-1835
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: resampling, [Resampling](index_split_017.html#filepos847003)-[Resampling](index_split_017.html#filepos854741)
  id: totrans-1836
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: rolling windows, [Rolling Windows](index_split_017.html#filepos855004)
  id: totrans-1837
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: shifting, [Shifting and Percentage Changes](index_split_017.html#filepos809588)-[Shifting
    and Percentage Changes](index_split_017.html#filepos821793)
  id: totrans-1838
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: time series, purpose of, [Time Series Analysis with pandas](index_split_017.html#filepos767771)
  id: totrans-1839
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: time zones
  id: totrans-1840
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: in DatetimeIndex (pandas), [Working with Time Zones](index_split_017.html#filepos799257)-[Working
    with Time Zones](index_split_017.html#filepos808759)
  id: totrans-1841
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: in Python, [Working with Time-Zone-Aware datetime Objects](index_split_031.html#filepos1848019)-[Working
    with Time-Zone-Aware datetime Objects](index_split_031.html#filepos1862968)
  id: totrans-1842
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 中，[使用时区感知的 datetime 对象](index_split_031.html#filepos1848019)-[使用时区感知的
    datetime 对象](index_split_031.html#filepos1862968)
- en: '%%timeit cell magic, [Reading sheets in parallel](index_split_022.html#filepos1148960)'
  id: totrans-1843
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '%%timeit 单元魔法，[并行读取工作表](index_split_022.html#filepos1148960)'
- en: timezone module, [Working with Time-Zone-Aware datetime Objects](index_split_031.html#filepos1862968)
  id: totrans-1844
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时区模块，[处理时区感知的 datetime 对象](index_split_031.html#filepos1862968)
- en: titles, adding to DataFrames, [Formatting DataFrames in Excel](index_split_022.html#filepos1162787)
  id: totrans-1845
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标题，添加到数据帧中，[在 Excel 中格式化数据帧](index_split_022.html#filepos1162787)
- en: to_datetime function (pandas), [Creating a DatetimeIndex](index_split_017.html#filepos783272)
  id: totrans-1846
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: to_datetime 函数（pandas），[创建 DatetimeIndex](index_split_017.html#filepos783272)
- en: to_excel method (pandas), [The to_excel Method and ExcelWriter Class](index_split_019.html#filepos935768)-[The
    to_excel Method and ExcelWriter Class](index_split_019.html#filepos953568), [When
    to Use Which Package](index_split_021.html#filepos971083)
  id: totrans-1847
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: to_excel 方法（pandas），[to_excel 方法和 ExcelWriter 类](index_split_019.html#filepos935768)-[to_excel
    方法和 ExcelWriter 类](index_split_019.html#filepos953568)，[何时使用哪个包](index_split_021.html#filepos971083)
- en: transposing DataFrames, [Columns](index_split_015.html#filepos520188)
  id: totrans-1848
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转置数据帧，[列](index_split_015.html#filepos520188)
- en: True boolean data type, [Booleans](index_split_011.html#filepos205063)-[Booleans](index_split_011.html#filepos217752)
  id: totrans-1849
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔数据类型，[布尔值](index_split_011.html#filepos205063)-[布尔值](index_split_011.html#filepos217752)
- en: try/except statements, [Exceptions](index_split_027.html#filepos1580257)-[Exceptions](index_split_027.html#filepos1601081)
  id: totrans-1850
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: try/except 语句，[异常](index_split_027.html#filepos1580257)-[异常](index_split_027.html#filepos1601081)
- en: tuple constructor, [Sets](index_split_011.html#filepos302517)
  id: totrans-1851
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组构造函数，[集合](index_split_011.html#filepos302517)
- en: tuples, [Tuples](index_split_011.html#filepos285858)
  id: totrans-1852
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 元组，[元组](index_split_011.html#filepos285858)
- en: two-dimensional NumPy arrays, [NumPy Array](index_split_014.html#filepos439635)
  id: totrans-1853
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 二维 NumPy 数组，[NumPy 数组](index_split_014.html#filepos439635)
- en: type annotations, [Type Hints](index_split_012.html#filepos427923)
  id: totrans-1854
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型注解，[类型提示](index_split_012.html#filepos427923)
- en: type hints, [Type Hints](index_split_012.html#filepos427923)
  id: totrans-1855
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型提示，[类型提示](index_split_012.html#filepos427923)
- en: tz_convert method (pandas), [Working with Time Zones](index_split_017.html#filepos805006)
  id: totrans-1856
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: tz_convert 方法（pandas），[处理时区](index_split_017.html#filepos805006)
- en: tz_localize method (pandas), [Working with Time Zones](index_split_017.html#filepos799539)
  id: totrans-1857
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: tz_localize 方法（pandas），[处理时区](index_split_017.html#filepos799539)
- en: U
  id: totrans-1858
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: U
- en: UDFs (user-defined functions)
  id: totrans-1859
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UDFs（用户定义函数）
- en: debugging, [Debugging UDFs](index_split_028.html#filepos1755260)-[Debugging
    UDFs](index_split_028.html#filepos1760605)
  id: totrans-1860
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试，[调试 UDFs](index_split_028.html#filepos1755260)-[调试 UDFs](index_split_028.html#filepos1760605)
- en: Google Trends case study
  id: totrans-1861
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google 趋势案例研究
- en: DataFrames and dynamic arrays, [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1682486)-[Working
    with DataFrames and Dynamic Arrays](index_split_028.html#filepos1714516)
  id: totrans-1862
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据帧和动态数组，[处理数据帧和动态数组](index_split_028.html#filepos1682486)-[处理数据帧和动态数组](index_split_028.html#filepos1714516)
- en: explanation of Google Trends, [Introduction to Google Trends](index_split_028.html#filepos1680082)-[Introduction
    to Google Trends](index_split_028.html#filepos1682295)
  id: totrans-1863
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google 趋势解释，[介绍 Google 趋势](index_split_028.html#filepos1680082)-[介绍 Google 趋势](index_split_028.html#filepos1682295)
- en: fetching data, [Fetching Data from Google Trends](index_split_028.html#filepos1714798)-[Fetching
    Data from Google Trends](index_split_028.html#filepos1741590)
  id: totrans-1864
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取数据，[从 Google 趋势获取数据](index_split_028.html#filepos1714798)-[从 Google 趋势获取数据](index_split_028.html#filepos1741590)
- en: plotting data, [Plotting with UDFs](index_split_028.html#filepos1741829)-[Plotting
    with UDFs](index_split_028.html#filepos1754939)
  id: totrans-1865
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绘制数据，[使用 UDFs 绘图](index_split_028.html#filepos1741829)-[使用 UDFs 绘图](index_split_028.html#filepos1754939)
- en: importing, [UDF Quickstart](index_split_028.html#filepos1657477)-[UDF Quickstart](index_split_028.html#filepos1679023)
  id: totrans-1866
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入，[UDF 快速入门](index_split_028.html#filepos1657477)-[UDF 快速入门](index_split_028.html#filepos1679023)
- en: performance optimization of
  id: totrans-1867
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能优化
- en: caching, [Caching](index_split_028.html#filepos1775539)-[Caching](index_split_028.html#filepos1794980)
  id: totrans-1868
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存，[缓存](index_split_028.html#filepos1775539)-[缓存](index_split_028.html#filepos1794980)
- en: minimizing cross-application calls (xlwings), [Minimize cross-application calls](index_split_028.html#filepos1762196)-[Minimize
    cross-application calls](index_split_028.html#filepos1770595)
  id: totrans-1869
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小化跨应用程序调用（xlwings），[最小化跨应用程序调用](index_split_028.html#filepos1762196)-[最小化跨应用程序调用](index_split_028.html#filepos1770595)
- en: raw values, [Using raw values](index_split_028.html#filepos1770837)
  id: totrans-1870
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始值，[使用原始值](index_split_028.html#filepos1770837)
- en: requirements for, [Getting Started with UDFs](index_split_028.html#filepos1655193)
  id: totrans-1871
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求，[UDFs 入门](index_split_028.html#filepos1655193)
- en: sub decorator, [The Sub Decorator](index_split_028.html#filepos1795393)-[The
    Sub Decorator](index_split_028.html#filepos1804381)
  id: totrans-1872
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子装饰器，[子装饰器](index_split_028.html#filepos1795393)-[子装饰器](index_split_028.html#filepos1804381)
- en: ufuncs (universal functions in NumPy), [Universal Functions (ufunc)](index_split_014.html#filepos454337)-[Universal
    Functions (ufunc)](index_split_014.html#filepos462582)
  id: totrans-1873
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NumPy 中的通用函数（ufuncs），[通用函数（ufunc）](index_split_014.html#filepos454337)-[通用函数（ufunc）](index_split_014.html#filepos462582)
- en: UIs (see frontends)
  id: totrans-1874
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户界面（参见前端）
- en: UNIQUE function (Excel), [Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1712408)
  id: totrans-1875
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UNIQUE 函数（Excel），[使用数据框和动态数组](index_split_028.html#filepos1712408)
- en: unit tests, [Testing](index_split_007.html#filepos48860)
  id: totrans-1876
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单元测试，[测试](index_split_007.html#filepos48860)
- en: universal functions (NumPy), [Universal Functions (ufunc)](index_split_014.html#filepos454337)-[Universal
    Functions (ufunc)](index_split_014.html#filepos462582)
  id: totrans-1877
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NumPy 中的通用函数，[通用函数（ufunc）](index_split_014.html#filepos454337)-[通用函数（ufunc）](index_split_014.html#filepos462582)
- en: unpacking dictionaries, [Dictionaries](index_split_011.html#filepos275528)
  id: totrans-1878
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解包字典，[字典](index_split_011.html#filepos275528)
- en: 'update method (xlwings), [Pictures: Matplotlib plots](index_split_025.html#filepos1385886)'
  id: totrans-1879
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 中的 update 方法，[图片：Matplotlib 图表](index_split_025.html#filepos1385886)
- en: updating xlwings, [Excel Add-in](index_split_026.html#filepos1443233)
  id: totrans-1880
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新 xlwings，[Excel 加载项](index_split_026.html#filepos1443233)
- en: uppercase, transforming to/from lowercase, [Strings](index_split_011.html#filepos224113)
  id: totrans-1881
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大小写转换，[字符串](index_split_011.html#filepos224113)
- en: upsampling, [Resampling](index_split_017.html#filepos847090)
  id: totrans-1882
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上采样，[重采样](index_split_017.html#filepos847090)
- en: URLs, reading files from, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos922687)
  id: totrans-1883
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: URL，从中读取文件，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos922687)
- en: used range, [Reading with xlrd](index_split_021.html#filepos1099306)
  id: totrans-1884
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用范围，[使用 xlrd 读取](index_split_021.html#filepos1099306)
- en: user interfaces (see frontends)
  id: totrans-1885
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户界面（见前端）
- en: user-defined functions (see UDFs)
  id: totrans-1886
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户定义的函数（见 UDFs）
- en: UTC (Coordinated Universal Time), [Working with Time Zones](index_split_017.html#filepos805006),
    [Working with Time-Zone-Aware datetime Objects](index_split_031.html#filepos1848164)
  id: totrans-1887
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协调世界时（Coordinated Universal Time，UTC），[处理时区](index_split_017.html#filepos805006)，[处理时区感知的
    datetime 对象](index_split_031.html#filepos1848164)
- en: V
  id: totrans-1888
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: V
- en: Vaex, [Limitations with pandas](index_split_017.html#filepos861209)
  id: totrans-1889
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vaex，[与 pandas 的限制](index_split_017.html#filepos861209)
- en: validating data in Python Package Tracker, [Frontend](index_split_027.html#filepos1614044)
  id: totrans-1890
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python Package Tracker 中验证数据，[前端](index_split_027.html#filepos1614044)
- en: values (pandas), setting data by replacing, [Setting data by replacing values](index_split_015.html#filepos589332)
  id: totrans-1891
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 中的数值，通过替换设置数据，[通过替换数值设置数据](index_split_015.html#filepos589332)
- en: Variable explorer (Jupyter notebooks), [Run Jupyter Notebooks](index_split_030.html#filepos1827392)
  id: totrans-1892
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量资源管理器（Jupyter 笔记本），[运行 Jupyter 笔记本](index_split_030.html#filepos1827392)
- en: variables, [Variables](index_split_010.html#filepos181374)
  id: totrans-1893
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量，[变量](index_split_010.html#filepos181374)
- en: VBA (Visual Basic for Applications), [Preface](index_split_003.html#filepos9501)
  id: totrans-1894
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VBA（Visual Basic for Applications），[前言](index_split_003.html#filepos9501)
- en: add-ins, [DRY principle](index_split_007.html#filepos47157)
  id: totrans-1895
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插件，[DRY 原则](index_split_007.html#filepos47157)
- en: ByRef and ByVal function arguments, [Calling Functions with Mutable Objects
    as Arguments](index_split_031.html#filepos1882872)-[Calling Functions with Mutable
    Objects as Arguments](index_split_031.html#filepos1887586)
  id: totrans-1896
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过引用（ByRef）和传值（ByVal）函数参数，[使用可变对象作为参数调用函数](index_split_031.html#filepos1882872)-[使用可变对象作为参数调用函数](index_split_031.html#filepos1887586)
- en: Case statement, [Dictionaries](index_split_011.html#filepos282660)
  id: totrans-1897
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Case 语句，[字典](index_split_011.html#filepos282660)
- en: code blocks, [Code Blocks and the pass Statement](index_split_011.html#filepos305198)
  id: totrans-1898
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码块，[代码块和 pass 语句](index_split_011.html#filepos305198)
- en: counter variables in loops, [The for and while Loops](index_split_012.html#filepos340077)
  id: totrans-1899
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 循环中的计数变量，[for 和 while 循环](index_split_012.html#filepos340077)
- en: data structures, [Data Structures](index_split_011.html#filepos242442)
  id: totrans-1900
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据结构，[数据结构](index_split_011.html#filepos242442)
- en: For Each statement, [The for and while Loops](index_split_012.html#filepos319389)
  id: totrans-1901
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: For Each 语句，[for 和 while 循环](index_split_012.html#filepos319389)
- en: functions, [DRY principle](index_split_007.html#filepos46886), [Running VBA
    Code](index_split_025.html#filepos1322194)
  id: totrans-1902
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数，[DRY 原则](index_split_007.html#filepos46886)，[运行 VBA 代码](index_split_025.html#filepos1322194)
- en: indexing, [Indexing](index_split_011.html#filepos228929)
  id: totrans-1903
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引，[索引](index_split_011.html#filepos228929)
- en: modern language features, [Modern Language Features](index_split_007.html#filepos80870)-[Modern
    Language Features](index_split_007.html#filepos89951)
  id: totrans-1904
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现代语言特性，[现代语言特性](index_split_007.html#filepos80870)-[现代语言特性](index_split_007.html#filepos89951)
- en: readability, [Readability and Maintainability](index_split_007.html#filepos64905)
  id: totrans-1905
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可读性，[可读性和可维护性](index_split_007.html#filepos64905)
- en: running in xlwings, [Running VBA Code](index_split_024.html#filepos1313318)-[Running
    VBA Code](index_split_025.html#filepos1322929)
  id: totrans-1906
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 xlwings 中运行，[运行 VBA 代码](index_split_024.html#filepos1313318)-[运行 VBA 代码](index_split_025.html#filepos1322929)
- en: RunPython function, [RunPython Function](index_split_026.html#filepos1459375)-[RunPython
    without quickstart command](index_split_026.html#filepos1471460), [Settings](index_split_026.html#filepos1484138)
  id: totrans-1907
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RunPython 函数，[RunPython 函数](index_split_026.html#filepos1459375)-[无快速启动命令的 RunPython](index_split_026.html#filepos1471460)，[设置](index_split_026.html#filepos1484138)
- en: Trust access to VBA project model setting, [Getting Started with UDFs](index_split_028.html#filepos1656916)
  id: totrans-1908
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 信任访问 VBA 项目模型设置，[UDF 快速入门](index_split_028.html#filepos1656916)
- en: variables, [Variables](index_split_010.html#filepos183010)
  id: totrans-1909
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量，[变量](index_split_010.html#filepos183010)
- en: With statement, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos910651)
  id: totrans-1910
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: With 语句，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos910651)
- en: wrapper functions, [UDF Quickstart](index_split_028.html#filepos1670563)
  id: totrans-1911
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包装函数，[UDF 快速入门](index_split_028.html#filepos1670563)
- en: xlwings range object versus, [The Excel Object Model](index_split_024.html#filepos1265312)-[The
    Excel Object Model](index_split_024.html#filepos1293849)
  id: totrans-1912
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 范围对象与，[Excel 对象模型](index_split_024.html#filepos1265312)-[Excel 对象模型](index_split_024.html#filepos1293849)
- en: VCS (version control system), [Version control](index_split_007.html#filepos51880)
  id: totrans-1913
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VCS（版本控制系统），[版本控制](index_split_007.html#filepos51880)
- en: vectorization, [Vectorization and Broadcasting](index_split_014.html#filepos448254)-[Vectorization
    and Broadcasting](index_split_014.html#filepos453983), [Data Analysis with pandas](index_split_015.html#filepos483705),
    [Arithmetic Operations](index_split_015.html#filepos617425)
  id: totrans-1914
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向量化，[向量化和广播](index_split_014.html#filepos448254)-[向量化和广播](index_split_014.html#filepos453983)，[使用
    pandas 进行数据分析](index_split_015.html#filepos483705)，[算术运算](index_split_015.html#filepos617425)
- en: version control, [Version control](index_split_007.html#filepos51713)-[Version
    control](index_split_007.html#filepos57576), [Visual Studio Code](index_split_009.html#filepos156579)
  id: totrans-1915
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制，[版本控制](index_split_007.html#filepos51713)-[版本控制](index_split_007.html#filepos57576)，[Visual
    Studio Code](index_split_009.html#filepos156579)
- en: versions
  id: totrans-1916
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本
- en: 'of packages, [Package Managers: Conda and pip](index_split_008.html#filepos126480)-[Conda
    Environments](index_split_008.html#filepos127438)'
  id: totrans-1917
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包的版本，[包管理器：Conda 和 pip](index_split_008.html#filepos126480)-[Conda 环境](index_split_008.html#filepos127438)
- en: of Windows, determining, [Installation](index_split_008.html#filepos100180)
  id: totrans-1918
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 上的确定，[安装](index_split_008.html#filepos100180)
- en: view function (xlwings), [Using Excel as Data Viewer](index_split_024.html#filepos1239513)-[Using
    Excel as Data Viewer](index_split_024.html#filepos1248699)
  id: totrans-1919
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视图函数（xlwings），[使用 Excel 作为数据查看器](index_split_024.html#filepos1239513)-[使用 Excel
    作为数据查看器](index_split_024.html#filepos1248699)
- en: viewing
  id: totrans-1920
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看
- en: current directory in macOS, [Anaconda Prompt](index_split_008.html#filepos105254)
  id: totrans-1921
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS 中的当前目录，[Anaconda 提示符](index_split_008.html#filepos105254)
- en: file extensions, [Anaconda Prompt](index_split_008.html#filepos113417)-[Anaconda
    Prompt](index_split_008.html#filepos114549)
  id: totrans-1922
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件扩展名，[Anaconda 提示符](index_split_008.html#filepos113417)-[Anaconda 提示符](index_split_008.html#filepos114549)
- en: views, copies versus, [View vs. Copy](index_split_014.html#filepos475259)-[View
    vs. Copy](index_split_014.html#filepos480562), [View vs. Copy](index_split_015.html#filepos649623)
  id: totrans-1923
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视图，副本与对比，[视图 vs. 副本](index_split_014.html#filepos475259)-[视图 vs. 副本](index_split_014.html#filepos480562)，[视图
    vs. 副本](index_split_015.html#filepos649623)
- en: Vim, [Running a Python Script](index_split_009.html#filepos174170)
  id: totrans-1924
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vim，[运行 Python 脚本](index_split_009.html#filepos174170)
- en: virtual environments, [Conda Environments](index_split_008.html#filepos128407)
  id: totrans-1925
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟环境，[Conda 环境](index_split_008.html#filepos128407)
- en: VisiCalc, [Why Python for Excel?](index_split_007.html#filepos33925)
  id: totrans-1926
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VisiCalc，[为什么选择 Python 处理 Excel？](index_split_007.html#filepos33925)
- en: Visual Basic for Applications (see VBA)
  id: totrans-1927
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Basic for Applications（参见 VBA）
- en: Visual Studio, [Visual Studio Code](index_split_009.html#filepos159079)
  id: totrans-1928
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio，[Visual Studio Code](index_split_009.html#filepos159079)
- en: volatile functions (Excel), [UDF Quickstart](index_split_028.html#filepos1673786)
  id: totrans-1929
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可变函数（Excel），[UDF 快速入门](index_split_028.html#filepos1673786)
- en: VS Code (Visual Studio Code)
  id: totrans-1930
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VS Code（Visual Studio Code）
- en: advantages, [Visual Studio Code](index_split_009.html#filepos153777)-[Visual
    Studio Code](index_split_009.html#filepos159324)
  id: totrans-1931
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优点，[Visual Studio Code](index_split_009.html#filepos153777)-[Visual Studio Code](index_split_009.html#filepos159324)
- en: comments, [Mathematical operators](index_split_011.html#filepos204466)
  id: totrans-1932
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注释，[数学运算符](index_split_011.html#filepos204466)
- en: components of, [Development Environment](index_split_008.html#filepos98339)
  id: totrans-1933
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件，[开发环境](index_split_008.html#filepos98339)
- en: configuring, [Installation and Configuration](index_split_009.html#filepos160636)-[Installation
    and Configuration](index_split_009.html#filepos164899)
  id: totrans-1934
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置，[安装和配置](index_split_009.html#filepos160636)-[安装和配置](index_split_009.html#filepos164899)
- en: debugging with, [Debugging](index_split_027.html#filepos1648684), [Debugging
    UDFs](index_split_028.html#filepos1758990), [Debugger](index_split_030.html#filepos1821433)-[Debugger](index_split_030.html#filepos1825904)
  id: totrans-1935
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试，[调试](index_split_027.html#filepos1648684), [调试 UDFs](index_split_028.html#filepos1758990),
    [调试器](index_split_030.html#filepos1821433)-[调试器](index_split_030.html#filepos1825904)
- en: installing, [Installation and Configuration](index_split_009.html#filepos159642)
  id: totrans-1936
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装，[安装和配置](index_split_009.html#filepos159642)
- en: Jupyter notebooks
  id: totrans-1937
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 笔记本
- en: running, [Run Jupyter Notebooks](index_split_030.html#filepos1826689)-[Run Jupyter
    Notebooks](index_split_030.html#filepos1829065)
  id: totrans-1938
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行，[运行 Jupyter 笔记本](index_split_030.html#filepos1826689)-[运行 Jupyter 笔记本](index_split_030.html#filepos1829065)
- en: saving, [Run Jupyter Notebooks](index_split_030.html#filepos1828008)
  id: totrans-1939
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存，[运行 Jupyter 笔记本](index_split_030.html#filepos1828008)
- en: linting, [PEP 8 and VS Code](index_split_012.html#filepos426221)
  id: totrans-1940
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码检查，[PEP 8 和 VS Code](index_split_012.html#filepos426221)
- en: purpose of, [Development Environment](index_split_008.html#filepos98029)
  id: totrans-1941
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[开发环境](index_split_008.html#filepos98029)
- en: Python scripts, running, [Running a Python Script](index_split_009.html#filepos165121)-[Running
    a Python Script](index_split_009.html#filepos172327)
  id: totrans-1942
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行 Python 脚本，[运行 Python 脚本](index_split_009.html#filepos165121)-[运行 Python 脚本](index_split_009.html#filepos172327)
- en: Run File button, [Running a Python Script](index_split_009.html#filepos171481)
  id: totrans-1943
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行文件按钮，[运行 Python 脚本](index_split_009.html#filepos171481)
- en: running in Anaconda Prompt, [Running a Python Script](index_split_009.html#filepos165226)
  id: totrans-1944
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Anaconda Prompt 中运行，[运行 Python 脚本](index_split_009.html#filepos165226)
- en: single-clicking in, [Running a Python Script](index_split_009.html#filepos172252)
  id: totrans-1945
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单击，在此处[运行 Python 脚本](index_split_009.html#filepos172252)
- en: SQLite extension, [The Package Tracker database](index_split_027.html#filepos1529158)
  id: totrans-1946
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQLite 扩展，[包追踪器数据库](index_split_027.html#filepos1529158)
- en: Visual Studio versus, [Visual Studio Code](index_split_009.html#filepos159079)
  id: totrans-1947
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Visual Studio 与，[Visual Studio Code](index_split_009.html#filepos159079)
- en: W
  id: totrans-1948
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: W
- en: wall time, [Reading sheets in parallel](index_split_022.html#filepos1148285)
  id: totrans-1949
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 墙时间，[并行读取工作表](index_split_022.html#filepos1148285)
- en: web APIs, [Web APIs](index_split_027.html#filepos1492808)-[Web APIs](index_split_027.html#filepos1515072)
  id: totrans-1950
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: web APIs，[Web APIs](index_split_027.html#filepos1492808)-[Web APIs](index_split_027.html#filepos1515072)
- en: while loops, [The for and while Loops](index_split_012.html#filepos343907)
  id: totrans-1951
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: while 循环，[for 和 while 循环](index_split_012.html#filepos343907)
- en: white space, [Code Blocks and the pass Statement](index_split_011.html#filepos304028)
  id: totrans-1952
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空格，[代码块和 pass 语句](index_split_011.html#filepos304028)
- en: Windows
  id: totrans-1953
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows
- en: ActiveX controls, [RunPython Function](index_split_026.html#filepos1464639)
  id: totrans-1954
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: ActiveX 控件，[RunPython 函数](index_split_026.html#filepos1464639)
- en: Anaconda Prompt, running, [Anaconda Prompt](index_split_008.html#filepos103402)
  id: totrans-1955
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anaconda Prompt，运行，[Anaconda Prompt](index_split_008.html#filepos103402)
- en: Command Prompt, [Anaconda Prompt](index_split_008.html#filepos102144)
  id: totrans-1956
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令提示符，[Anaconda Prompt](index_split_008.html#filepos102144)
- en: disabling auto activation of Conda environment, [Disable Auto Activation](index_split_029.html#filepos1818813)
  id: totrans-1957
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用自动激活 Conda 环境，[禁用自动激活](index_split_029.html#filepos1818813)
- en: current directory, listing files in, [Anaconda Prompt](index_split_008.html#filepos110263)
  id: totrans-1958
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前目录，列出文件，[Anaconda Prompt](index_split_008.html#filepos110263)
- en: extracting macro code (Xlsxwriter), [XlsxWriter](index_split_021.html#filepos1064950)
  id: totrans-1959
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提取宏代码（Xlsxwriter），[XlsxWriter](index_split_021.html#filepos1064950)
- en: file extensions, viewing, [Anaconda Prompt](index_split_008.html#filepos114224)
  id: totrans-1960
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件扩展名，查看，[Anaconda Prompt](index_split_008.html#filepos114224)
- en: file paths as raw strings, [Exporting CSV Files](index_split_016.html#filepos747454)
  id: totrans-1961
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件路径作为原始字符串，[导出 CSV 文件](index_split_016.html#filepos747454)
- en: Form Controls (Excel), [RunPython Function](index_split_026.html#filepos1464639)
  id: totrans-1962
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表单控件（Excel），[RunPython 函数](index_split_026.html#filepos1464639)
- en: frozen executables, [Python Dependency](index_split_026.html#filepos1475043)
  id: totrans-1963
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 冻结可执行文件，[Python 依赖](index_split_026.html#filepos1475043)
- en: list separators (Excel), changing, [The Excel Object Model](index_split_024.html#filepos1254821)
  id: totrans-1964
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列分隔符（Excel），更改，[Excel 对象模型](index_split_024.html#filepos1254821)
- en: Show Console checkbox (xlwings add-in), [Debugging](index_split_027.html#filepos1650611)
  id: totrans-1965
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示控制台复选框（xlwings 插件），[调试](index_split_027.html#filepos1650611)
- en: Use UDF Server, [Settings](index_split_026.html#filepos1484138)
  id: totrans-1966
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 UDF 服务器，[设置](index_split_026.html#filepos1484138)
- en: user-defined functions (see UDFs)
  id: totrans-1967
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户定义的函数（参见 UDFs）
- en: VS Code
  id: totrans-1968
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VS Code
- en: configuring, [Installation and Configuration](index_split_009.html#filepos164382)
  id: totrans-1969
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置，[安装和配置](index_split_009.html#filepos164382)
- en: installing, [Installation and Configuration](index_split_009.html#filepos160121)
  id: totrans-1970
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装，[安装和配置](index_split_009.html#filepos160121)
- en: xlwings dependencies, [xlwings Foundations](index_split_025.html#filepos1411455)
  id: totrans-1971
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings 依赖，[xlwings 基础](index_split_025.html#filepos1411455)
- en: zombie processes, [xlwings Foundations](index_split_025.html#filepos1412114)
  id: totrans-1972
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 僵尸进程，[xlwings 基础](index_split_025.html#filepos1412114)
- en: Wing Python IDE, [Running a Python Script](index_split_009.html#filepos175986)
  id: totrans-1973
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wing Python IDE，[运行 Python 脚本](index_split_009.html#filepos175986)
- en: WinPython, [Python Dependency](index_split_026.html#filepos1473728)
  id: totrans-1974
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinPython，[Python 依赖](index_split_026.html#filepos1473728)
- en: with statement, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos910651)
  id: totrans-1975
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: with 语句，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos910651)
- en: wrapper VBA functions, [UDF Quickstart](index_split_028.html#filepos1670563)
  id: totrans-1976
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VBA 函数包装器，[UDF 快速入门](index_split_028.html#filepos1670563)
- en: write function (excel.py), [The excel.py Module](index_split_021.html#filepos977466)
  id: totrans-1977
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写函数（excel.py），[excel.py 模块](index_split_021.html#filepos977466)
- en: writer packages (see reader/writer packages)
  id: totrans-1978
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入包（参见读取器/写入器包）
- en: writing
  id: totrans-1979
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入
- en: DataFrames to Excel with xlwings, [Working with DataFrames](index_split_025.html#filepos1324128)-[Working
    with DataFrames](index_split_025.html#filepos1340369)
  id: totrans-1980
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 xlwings 将 DataFrames 导出到 Excel，[处理 DataFrames](index_split_025.html#filepos1324128)-[处理
    DataFrames](index_split_025.html#filepos1340369)
- en: files (Excel)
  id: totrans-1981
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件（Excel）
- en: limitations in pandas, [Limitations When Using pandas with Excel Files](index_split_019.html#filepos957495)
  id: totrans-1982
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: pandas 的限制，[使用 pandas 处理 Excel 文件时的限制](index_split_019.html#filepos957495)
- en: with OpenPyXL, [Writing with OpenPyXL](index_split_021.html#filepos996317)-[Writing
    with OpenPyXL](index_split_021.html#filepos1032891), [Writing with OpenPyXL](index_split_022.html#filepos1126036)
  id: totrans-1983
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OpenPyXL，[使用 OpenPyXL 进行写入](index_split_021.html#filepos996317)-[使用 OpenPyXL
    进行写入](index_split_021.html#filepos1032891)，[使用 OpenPyXL 进行写入](index_split_022.html#filepos1126036)
- en: with pandas, [The to_excel Method and ExcelWriter Class](index_split_019.html#filepos935768)-[The
    to_excel Method and ExcelWriter Class](index_split_019.html#filepos953568)
  id: totrans-1984
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 pandas，[to_excel 方法和 ExcelWriter 类](index_split_019.html#filepos935768)-[to_excel
    方法和 ExcelWriter 类](index_split_019.html#filepos953568)
- en: programming Excel versus, [How This Book Is Organized](index_split_005.html#filepos18185)
  id: totrans-1985
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程 Excel 对比，[本书的组织结构](index_split_005.html#filepos18185)
- en: with XlsxWriter, [XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941),
    [Writing with XlsxWriter](index_split_022.html#filepos1130359)
  id: totrans-1986
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 XlsxWriter，[XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941)，[使用
    XlsxWriter 进行写入](index_split_022.html#filepos1130359)
- en: with xlwt, [Writing with xlwt](index_split_022.html#filepos1099995)-[Editing
    with xlutils](index_split_022.html#filepos1119593)
  id: totrans-1987
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 xlwt，[使用 xlwt 进行写入](index_split_022.html#filepos1099995)-[使用 xlutils 进行编辑](index_split_022.html#filepos1119593)
- en: X
  id: totrans-1988
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: X
- en: xlrd
  id: totrans-1989
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlrd
- en: parallelization, [Reading sheets in parallel](index_split_022.html#filepos1153795)
  id: totrans-1990
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并行化，[并行读取工作表](index_split_022.html#filepos1153795)
- en: reading files, [Reading with xlrd](index_split_021.html#filepos1085917)-[Reading
    with xlrd](index_split_021.html#filepos1099832), [Reading with xlrd](index_split_022.html#filepos1134915)
  id: totrans-1991
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取文件，[使用 xlrd 进行读取](index_split_021.html#filepos1085917)-[使用 xlrd 进行读取](index_split_021.html#filepos1099832)，[使用
    xlrd 进行读取](index_split_022.html#filepos1134915)
- en: when to use, [When to Use Which Package](index_split_020.html#filepos964224)
  id: totrans-1992
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用，[何时使用哪个包](index_split_020.html#filepos964224)
- en: xls files, reading/writing/editing, [xlrd, xlwt, and xlutils](index_split_021.html#filepos1085017)
  id: totrans-1993
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xls 文件，读取/写入/编辑，[xlrd, xlwt 和 xlutils](index_split_021.html#filepos1085017)
- en: xlsb files, reading, [The read_excel Function and ExcelFile Class](index_split_019.html#filepos925712),
    [pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
  id: totrans-1994
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlsb 文件，读取，[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos925712)，[pyxlsb](index_split_021.html#filepos1071930)-[pyxlsb](index_split_021.html#filepos1083611)
- en: xlsm files
  id: totrans-1995
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlsm 文件
- en: enabling macros, [RunPython Function](index_split_026.html#filepos1459885)
  id: totrans-1996
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用宏，[RunPython 函数](index_split_026.html#filepos1459885)
- en: extracting macro code (Xlsxwriter), [XlsxWriter](index_split_021.html#filepos1064438)-[XlsxWriter](index_split_021.html#filepos1066693)
  id: totrans-1997
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提取宏代码（Xlsxwriter），[XlsxWriter](index_split_021.html#filepos1064438)-[XlsxWriter](index_split_021.html#filepos1066693)
- en: XlsxWriter
  id: totrans-1998
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XlsxWriter
- en: formatting DataFrames
  id: totrans-1999
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 格式化 DataFrames
- en: data parts, [Formatting a DataFrame’s data part](index_split_022.html#filepos1215478)
  id: totrans-2000
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据部分，[格式化 DataFrame 的数据部分](index_split_022.html#filepos1215478)
- en: indices and headers, [Formatting a DataFrame’s index and headers](index_split_022.html#filepos1190749)
  id: totrans-2001
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引和标题，[格式化 DataFrame 的索引和标题](index_split_022.html#filepos1190749)
- en: OpenPyXL versus, [When to Use Which Package](index_split_020.html#filepos968476)
  id: totrans-2002
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenPyXL 对比，[何时使用哪个包](index_split_020.html#filepos968476)
- en: when to use, [When to Use Which Package](index_split_020.html#filepos964224)
  id: totrans-2003
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用，[何时使用哪个包](index_split_020.html#filepos964224)
- en: writing files, [XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941),
    [Writing with XlsxWriter](index_split_022.html#filepos1130359)
  id: totrans-2004
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入文件，[XlsxWriter](index_split_021.html#filepos1039708)-[XlsxWriter](index_split_021.html#filepos1066941),
    [使用 XlsxWriter 进行写入](index_split_022.html#filepos1130359)
- en: xltrail, [Version control](index_split_007.html#filepos56694)
  id: totrans-2005
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xltrail，[版本控制](index_split_007.html#filepos56694)
- en: xlutils
  id: totrans-2006
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlutils
- en: editing files, [Editing with xlutils](index_split_022.html#filepos1119688)
  id: totrans-2007
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑文件，[使用xlutils进行编辑](index_split_022.html#filepos1119688)
- en: 'installing, [Package Managers: Conda and pip](index_split_008.html#filepos125084),
    [xlrd, xlwt, and xlutils](index_split_021.html#filepos1085435)'
  id: totrans-2008
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装，[包管理器：Conda 和 pip](index_split_008.html#filepos125084), [xlrd, xlwt 和 xlutils](index_split_021.html#filepos1085435)
- en: when to use, [When to Use Which Package](index_split_020.html#filepos964224)
  id: totrans-2009
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用，[何时使用哪个包](index_split_020.html#filepos964224)
- en: xlwings
  id: totrans-2010
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings
- en: charts (Excel), creating, [Excel charts](index_split_025.html#filepos1368049)-[Excel
    charts](index_split_025.html#filepos1374395)
  id: totrans-2011
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图表（Excel），创建，[Excel 图表](index_split_025.html#filepos1368049)-[Excel 图表](index_split_025.html#filepos1374395)
- en: converters, [Converters and Options](index_split_025.html#filepos1340690)
  id: totrans-2012
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转换器，[转换器和选项](index_split_025.html#filepos1340690)
- en: DataFrames, reading/writing in Excel, [Working with DataFrames](index_split_025.html#filepos1324128)-[Working
    with DataFrames](index_split_025.html#filepos1340369)
  id: totrans-2013
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: DataFrames，在 Excel 中读取/写入，[使用 DataFrames](index_split_025.html#filepos1324128)-[使用
    DataFrames](index_split_025.html#filepos1340369)
- en: defined names (Excel), creating, [Defined names](index_split_025.html#filepos1390078)-[Defined
    names](index_split_025.html#filepos1400526)
  id: totrans-2014
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义名称（Excel），创建，[定义名称](index_split_025.html#filepos1390078)-[定义名称](index_split_025.html#filepos1400526)
- en: dependencies, [xlwings Foundations](index_split_025.html#filepos1410868)
  id: totrans-2015
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖项，[xlwings 基础](index_split_025.html#filepos1410868)
- en: deployment
  id: totrans-2016
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署
- en: configuration hierarchy, [Configuration Hierarchy](index_split_026.html#filepos1478189)
  id: totrans-2017
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置层次结构，[配置层次结构](index_split_026.html#filepos1478189)
- en: Python dependencies, [Python Dependency](index_split_026.html#filepos1472746)-[Python
    Dependency](index_split_026.html#filepos1475110)
  id: totrans-2018
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 依赖项，[Python 依赖](index_split_026.html#filepos1472746)-[Python 依赖](index_split_026.html#filepos1475110)
- en: settings, [Settings](index_split_026.html#filepos1480593)-[Settings](index_split_026.html#filepos1484138)
  id: totrans-2019
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置，[设置](index_split_026.html#filepos1480593)-[设置](index_split_026.html#filepos1484138)
- en: 'standalone workbooks, [Standalone Workbooks: Getting Rid of the xlwings Add-in](index_split_026.html#filepos1475399)-[Standalone
    Workbooks: Getting Rid of the xlwings Add-in](index_split_026.html#filepos1477920)'
  id: totrans-2020
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 独立工作簿，[独立工作簿：摆脱xlwings附加组件](index_split_026.html#filepos1475399)-[独立工作簿：摆脱xlwings附加组件](index_split_026.html#filepos1477920)
- en: Excel as data viewer, [Using Excel as Data Viewer](index_split_024.html#filepos1239513)-[Using
    Excel as Data Viewer](index_split_024.html#filepos1248699)
  id: totrans-2021
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为数据查看器的 Excel，[将 Excel 用作数据查看器](index_split_024.html#filepos1239513)-[将 Excel
    用作数据查看器](index_split_024.html#filepos1248699)
- en: Excel as frontend
  id: totrans-2022
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 作为前端
- en: installing xlwings add-in, [Excel Add-in](index_split_026.html#filepos1442113)-[Excel
    Add-in](index_split_026.html#filepos1447961)
  id: totrans-2023
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 xlwings 附加组件，[Excel 附加组件](index_split_026.html#filepos1442113)-[Excel 附加组件](index_split_026.html#filepos1447961)
- en: purpose of, [Using Excel as Frontend with xlwings](index_split_026.html#filepos1440971)
  id: totrans-2024
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[使用xlwings将 Excel 用作前端](index_split_026.html#filepos1440971)
- en: quickstart command, [Quickstart Command](index_split_026.html#filepos1448302)
  id: totrans-2025
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速启动命令，[快速启动命令](index_split_026.html#filepos1448302)
- en: Run main button, [Run Main](index_split_026.html#filepos1449910)-[Run Main](index_split_026.html#filepos1458891)
  id: totrans-2026
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行主按钮，[运行主按钮](index_split_026.html#filepos1449910)-[运行主按钮](index_split_026.html#filepos1458891)
- en: RunPython function, [RunPython Function](index_split_026.html#filepos1459375)-[RunPython
    without quickstart command](index_split_026.html#filepos1471460)
  id: totrans-2027
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: RunPython 函数，[RunPython 函数](index_split_026.html#filepos1459375)-[不使用快速启动命令的RunPython](index_split_026.html#filepos1471460)
- en: Excel dependency, [When to Use Which Package](index_split_021.html#filepos969891)
  id: totrans-2028
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 依赖项，[何时使用哪个包](index_split_021.html#filepos969891)
- en: Excel object model and, [The Excel Object Model](index_split_024.html#filepos1250235)-[The
    Excel Object Model](index_split_024.html#filepos1313152)
  id: totrans-2029
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Excel 对象模型和，[Excel 对象模型](index_split_024.html#filepos1250235)-[Excel 对象模型](index_split_024.html#filepos1313152)
- en: macOS permissions, [Using Excel as Data Viewer](index_split_024.html#filepos1249144)
  id: totrans-2030
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS 权限，[将 Excel 用作数据查看器](index_split_024.html#filepos1249144)
- en: missing functionality workarounds, [How to Work Around Missing Functionality](index_split_025.html#filepos1429624)-[How
    to Work Around Missing Functionality](index_split_025.html#filepos1435920)
  id: totrans-2031
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决缺失功能的方法，[如何解决缺失功能](index_split_025.html#filepos1429624)-[如何解决缺失功能](index_split_025.html#filepos1435920)
- en: performance optimization, [Improving Performance](index_split_025.html#filepos1416353)-[App
    properties](index_split_025.html#filepos1429357)
  id: totrans-2032
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能优化，[性能优化](index_split_025.html#filepos1416353)-[应用程序属性](index_split_025.html#filepos1429357)
- en: 'pictures (Excel), Matplotlib plots as, [Pictures: Matplotlib plots](index_split_025.html#filepos1374823)-[Pictures:
    Matplotlib plots](index_split_025.html#filepos1389691)'
  id: totrans-2033
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图片（Excel），Matplotlib 绘图，[图片：Matplotlib 绘图](index_split_025.html#filepos1374823)-[图片：Matplotlib
    绘图](index_split_025.html#filepos1389691)
- en: purpose of, [Excel Automation](index_split_024.html#filepos1236537)-[Getting
    Started with xlwings](index_split_024.html#filepos1238572)
  id: totrans-2034
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[Excel 自动化](index_split_024.html#filepos1236537)-[开始使用 xlwings](index_split_024.html#filepos1238572)
- en: Python Package Tracker (see Python Package Tracker)
  id: totrans-2035
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 包跟踪器（参见 Python 包跟踪器）
- en: range object options, [Converters and Options](index_split_025.html#filepos1345103)-[Converters
    and Options](index_split_025.html#filepos1366895)
  id: totrans-2036
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围对象选项，[转换器和选项](index_split_025.html#filepos1345103)-[转换器和选项](index_split_025.html#filepos1366895)
- en: Show Console checkbox, [Debugging](index_split_027.html#filepos1650611)
  id: totrans-2037
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示控制台复选框，[调试](index_split_027.html#filepos1650611)
- en: updating, [Excel Add-in](index_split_026.html#filepos1443233)
  id: totrans-2038
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新中，[Excel 插件](index_split_026.html#filepos1443233)
- en: user-defined functions (see UDFs)
  id: totrans-2039
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户定义函数（参见 UDFs）
- en: VBA code, running, [Running VBA Code](index_split_024.html#filepos1313318)-[Running
    VBA Code](index_split_025.html#filepos1322929)
  id: totrans-2040
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行 VBA 代码，[运行 VBA 代码](index_split_024.html#filepos1313318)-[运行 VBA 代码](index_split_025.html#filepos1322929)
- en: xlwings CLI
  id: totrans-2041
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings CLI
- en: addin install command, [Excel Add-in](index_split_026.html#filepos1442590)
  id: totrans-2042
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加插件安装命令，[Excel 插件](index_split_026.html#filepos1442590)
- en: purpose of, [Excel Add-in](index_split_026.html#filepos1444887)
  id: totrans-2043
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目的，[Excel 插件](index_split_026.html#filepos1444887)
- en: quickstart command, [Quickstart Command](index_split_026.html#filepos1448302)
  id: totrans-2044
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速启动命令，[快速启动命令](index_split_026.html#filepos1448302)
- en: xlwings PRO, [Settings](index_split_026.html#filepos1484297)
  id: totrans-2045
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwings PRO，[设置](index_split_026.html#filepos1484297)
- en: xlwt
  id: totrans-2046
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: xlwt
- en: when to use, [When to Use Which Package](index_split_020.html#filepos964224)
  id: totrans-2047
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 何时使用，[选择哪个包](index_split_020.html#filepos964224)
- en: writing files, [Writing with xlwt](index_split_022.html#filepos1099995)-[Editing
    with xlutils](index_split_022.html#filepos1119593)
  id: totrans-2048
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入文件，[使用 xlwt 进行写入](index_split_022.html#filepos1099995)-[使用 xlutils 进行编辑](index_split_022.html#filepos1119593)
- en: Z
  id: totrans-2049
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Z
- en: The Zen of Python, [Readability and Maintainability](index_split_007.html#filepos64658)
  id: totrans-2050
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 之禅，[可读性和可维护性](index_split_007.html#filepos64658)
- en: zero-based indexing, [The Excel Object Model](index_split_024.html#filepos1295706)
  id: totrans-2051
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从零开始的索引，[Excel 对象模型](index_split_024.html#filepos1295706)
- en: zeros, replacing NaN values with, [Arithmetic Operations](index_split_015.html#filepos624230)
  id: totrans-2052
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用零替换 NaN 值，[算术运算](index_split_015.html#filepos624230)
- en: zombie processes, [xlwings Foundations](index_split_025.html#filepos1412114)
  id: totrans-2053
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 僵尸进程，[xlwings 基础](index_split_025.html#filepos1412114)
- en: About the Author
  id: totrans-2054
  prefs: []
  type: TYPE_NORMAL
  zh: 关于作者
- en: Felix Zumstein is creator and maintainer of xlwings, a popular open source package
    that allows the automation of Excel with Python on Windows and macOS. He also
    organizes the xlwings meetups in London and NYC to promote a broad range of innovative
    solutions for Excel.
  id: totrans-2055
  prefs: []
  type: TYPE_NORMAL
  zh: Felix Zumstein 是 xlwings 的创始人和维护者，这是一个流行的开源包，允许在 Windows 和 macOS 上使用 Python
    自动化 Excel。他还组织了伦敦和纽约的 xlwings 社区聚会，促进了多种创新解决方案在 Excel 中的应用。
- en: As CEO of xltrail, a version control system for Excel files, he has talked to
    hundreds of users who use Excel for business critical tasks and has therefore
    gained deep insight into the typical uses cases and issues with Excel across various
    industries.
  id: totrans-2056
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Excel 文件版本控制系统 xltrail 的 CEO，他与数百名将 Excel 用于业务关键任务的用户进行过交流，因此深入了解了各个行业中 Excel
    的典型用途和问题。
- en: Colophon
  id: totrans-2057
  prefs: []
  type: TYPE_NORMAL
  zh: 后记
- en: The animal on the cover of Python for Excel is a false coral snake (Anilius
    scytale). This brightly colored snake, also known as the American pipe snake,
    is found in the Guianas region of South America, the Amazon rainforest, and Trinidad
    and Tobago.
  id: totrans-2058
  prefs: []
  type: TYPE_NORMAL
  zh: 《Python for Excel》封面上的动物是虚假珊瑚蛇（Anilius scytale）。这种色彩鲜艳的蛇，也被称为美洲管蛇，分布在南美的圭亚那地区、亚马逊雨林和特立尼达和多巴哥。
- en: The false coral snake grows up to around 70 cm in length and has bright red
    and black bands. Its banded appearance is similar to that of the coral snake,
    from whom it derives one of its common names; however, the false coral snake is
    missing the distinctive yellow bands of the “true” coral snake. Its body has roughly
    the same diameter for most of its length with a very short tail, giving it a tube-like
    appearance. It small eyes are covered by large head scales.
  id: totrans-2059
  prefs: []
  type: TYPE_NORMAL
  zh: 假珊瑚蛇长约 70 厘米，具有鲜红色和黑色条纹。它的带状外观类似于珊瑚蛇，因此得名；然而，假珊瑚蛇缺少“真正”珊瑚蛇特有的黄色条纹。其身体大部分长度的直径大致相同，尾部非常短，使其看起来像管状。它的小眼睛被大头鳞覆盖。
- en: This burrowing snake has been observed to be ovoviviparous. It feeds on beetles,
    amphibians, lizards, fish, and other small snakes. The false coral snake also
    retains spurs, or small protruding bits of bone near its vent, which are vestigial
    traces of hips and occasionally upper leg bones. This feature, along with the
    thick bones and distinctive shape of its skull, makes the false coral snake closely
    resemble snakes’ ancestral, lizard-like condition.
  id: totrans-2060
  prefs: []
  type: TYPE_NORMAL
  zh: 这种穴居蛇已被观察到是卵胎生的。它以甲虫、两栖动物、蜥蜴、鱼类和其他小蛇为食。假珊瑚蛇还保留了距肛门附近的小骨突，这些是臀部和偶尔上肢骨的遗传痕迹。这个特征以及它的厚骨骼和颅骨独特的形状使假珊瑚蛇与蛇的祖先，类似蜥蜴的状态密切相关。
- en: The conservation status of the false coral snake is “Data Deficient,” meaning
    that there is not yet enough information to judge the threat of its extinction.
    Many of the animals on O’Reilly covers are endangered; all of them are important
    to the world.
  id: totrans-2061
  prefs: []
  type: TYPE_NORMAL
  zh: 假珊瑚蛇的保护状态为“数据不足”，意味着尚无足够信息来评估其灭绝的威胁。O’Reilly 封面上的许多动物都濒危；它们对世界至关重要。
- en: The cover illustration is by Karen Montgomery, based on a black and white engraving
    from English Cyclopedia Natural History. The cover fonts are Gilroy Semibold and
    Guardian Sans. The text font is Adobe Minion Pro; the heading font is Adobe Myriad
    Condensed; and the code font is Dalton Maag’s Ubuntu Mono.
  id: totrans-2062
  prefs: []
  type: TYPE_NORMAL
  zh: 封面插图由 Karen Montgomery 创作，基于英国百科全书自然历史的黑白雕刻。封面字体为 Gilroy Semibold 和 Guardian
    Sans。正文字体为 Adobe Minion Pro；标题字体为 Adobe Myriad Condensed；代码字体为 Dalton Maag 的 Ubuntu
    Mono。
- en: '[Preface](index_split_003.html#filepos7451)'
  id: totrans-2063
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[前言](index_split_003.html#filepos7451)'
- en: '[Why I Wrote This Book](index_split_003.html#filepos10599)'
  id: totrans-2064
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[为什么写这本书](index_split_003.html#filepos10599)'
- en: '[Who This Book Is For](index_split_004.html#filepos12953)'
  id: totrans-2065
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[这本书适合谁](index_split_004.html#filepos12953)'
- en: '[How This Book Is Organized](index_split_005.html#filepos14647)'
  id: totrans-2066
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[本书组织结构](index_split_005.html#filepos14647)'
- en: '[Python and Excel Versions](index_split_005.html#filepos19282)'
  id: totrans-2067
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Python 和 Excel 版本](index_split_005.html#filepos19282)'
- en: '[Conventions Used in This Book](index_split_005.html#filepos20494)'
  id: totrans-2068
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[本书使用的约定](index_split_005.html#filepos20494)'
- en: '[Using Code Examples](index_split_005.html#filepos22519)'
  id: totrans-2069
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用代码示例](index_split_005.html#filepos22519)'
- en: '[O’Reilly Online Learning](index_split_005.html#filepos26099)'
  id: totrans-2070
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[O’Reilly 在线学习](index_split_005.html#filepos26099)'
- en: '[How to Contact Us](index_split_005.html#filepos27203)'
  id: totrans-2071
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[如何联系我们](index_split_005.html#filepos27203)'
- en: '[Acknowledgments](index_split_005.html#filepos29274)'
  id: totrans-2072
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[致谢](index_split_005.html#filepos29274)'
- en: '[I. Introduction to Python](index_split_006.html#filepos31953)'
  id: totrans-2073
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[I. Python 简介](index_split_006.html#filepos31953)'
- en: '[1\. Why Python for Excel?](index_split_007.html#filepos32075)'
  id: totrans-2074
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[1\. 为什么选择 Python 处理 Excel？](index_split_007.html#filepos32075)'
- en: '[Excel Is a Programming Language](index_split_007.html#filepos35568)'
  id: totrans-2075
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Excel 是一种编程语言](index_split_007.html#filepos35568)'
- en: '[Excel in the News](index_split_007.html#filepos38474)'
  id: totrans-2076
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Excel 在新闻中](index_split_007.html#filepos38474)'
- en: '[Programming Best Practices](index_split_007.html#filepos41058)'
  id: totrans-2077
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[编程最佳实践](index_split_007.html#filepos41058)'
- en: '[Modern Excel](index_split_007.html#filepos57974)'
  id: totrans-2078
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[现代 Excel](index_split_007.html#filepos57974)'
- en: '[Python for Excel](index_split_007.html#filepos62423)'
  id: totrans-2079
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Python 处理 Excel](index_split_007.html#filepos62423)'
- en: '[Readability and Maintainability](index_split_007.html#filepos64265)'
  id: totrans-2080
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[可读性和可维护性](index_split_007.html#filepos64265)'
- en: '[Standard Library and Package Manager](index_split_007.html#filepos71431)'
  id: totrans-2081
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[标准库和包管理器](index_split_007.html#filepos71431)'
- en: '[Scientific Computing](index_split_007.html#filepos76421)'
  id: totrans-2082
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[科学计算](index_split_007.html#filepos76421)'
- en: '[Modern Language Features](index_split_007.html#filepos80725)'
  id: totrans-2083
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[现代语言特性](index_split_007.html#filepos80725)'
- en: '[Cross-Platform Compatibility](index_split_007.html#filepos90194)'
  id: totrans-2084
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[跨平台兼容性](index_split_007.html#filepos90194)'
- en: '[Conclusion](index_split_007.html#filepos92569)'
  id: totrans-2085
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](index_split_007.html#filepos92569)'
- en: '[2\. Development Environment](index_split_008.html#filepos96824)'
  id: totrans-2086
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[2\. 开发环境](index_split_008.html#filepos96824)'
- en: '[The Anaconda Python Distribution](index_split_008.html#filepos98858)'
  id: totrans-2087
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Anaconda Python 发行版](index_split_008.html#filepos98858)'
- en: '[Installation](index_split_008.html#filepos99810)'
  id: totrans-2088
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[安装](index_split_008.html#filepos99810)'
- en: '[Anaconda Prompt](index_split_008.html#filepos101327)'
  id: totrans-2089
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Anaconda Prompt](index_split_008.html#filepos101327)'
- en: '[Python REPL: An Interactive Python Session](index_split_008.html#filepos114857)'
  id: totrans-2090
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Python REPL：交互式Python会话](index_split_008.html#filepos114857)'
- en: '[Package Managers: Conda and pip](index_split_008.html#filepos119195)'
  id: totrans-2091
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[包管理器：Conda和pip](index_split_008.html#filepos119195)'
- en: '[Conda Environments](index_split_008.html#filepos127301)'
  id: totrans-2092
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Conda环境](index_split_008.html#filepos127301)'
- en: '[Jupyter Notebooks](index_split_008.html#filepos129753)'
  id: totrans-2093
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Jupyter笔记本](index_split_008.html#filepos129753)'
- en: '[Running Jupyter Notebooks](index_split_008.html#filepos132302)'
  id: totrans-2094
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[运行Jupyter笔记本](index_split_008.html#filepos132302)'
- en: '[Notebook Cells](index_split_009.html#filepos134472)'
  id: totrans-2095
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[笔记本单元格](index_split_009.html#filepos134472)'
- en: '[Edit vs. Command Mode](index_split_009.html#filepos140089)'
  id: totrans-2096
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[编辑模式与命令模式](index_split_009.html#filepos140089)'
- en: '[Run Order Matters](index_split_009.html#filepos145029)'
  id: totrans-2097
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[运行顺序很重要](index_split_009.html#filepos145029)'
- en: '[Shutting Down Jupyter Notebooks](index_split_009.html#filepos149719)'
  id: totrans-2098
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[关闭Jupyter笔记本](index_split_009.html#filepos149719)'
- en: '[Visual Studio Code](index_split_009.html#filepos153612)'
  id: totrans-2099
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Visual Studio Code](index_split_009.html#filepos153612)'
- en: '[Installation and Configuration](index_split_009.html#filepos159489)'
  id: totrans-2100
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[安装和配置](index_split_009.html#filepos159489)'
- en: '[Running a Python Script](index_split_009.html#filepos164978)'
  id: totrans-2101
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[运行Python脚本](index_split_009.html#filepos164978)'
- en: '[Conclusion](index_split_009.html#filepos176641)'
  id: totrans-2102
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结束语](index_split_009.html#filepos176641)'
- en: '[3\. Getting Started with Python](index_split_010.html#filepos178328)'
  id: totrans-2103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[3\. Python入门](index_split_010.html#filepos178328)'
- en: '[Data Types](index_split_010.html#filepos180215)'
  id: totrans-2104
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[数据类型](index_split_010.html#filepos180215)'
- en: '[Objects](index_split_010.html#filepos180784)'
  id: totrans-2105
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[对象](index_split_010.html#filepos180784)'
- en: '[Numeric Types](index_split_011.html#filepos189029)'
  id: totrans-2106
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[数值类型](index_split_011.html#filepos189029)'
- en: '[Booleans](index_split_011.html#filepos204923)'
  id: totrans-2107
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[布尔值](index_split_011.html#filepos204923)'
- en: '[Strings](index_split_011.html#filepos217861)'
  id: totrans-2108
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[字符串](index_split_011.html#filepos217861)'
- en: '[Indexing and Slicing](index_split_011.html#filepos227429)'
  id: totrans-2109
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[索引和切片](index_split_011.html#filepos227429)'
- en: '[Indexing](index_split_011.html#filepos227867)'
  id: totrans-2110
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[索引](index_split_011.html#filepos227867)'
- en: '[Slicing](index_split_011.html#filepos233601)'
  id: totrans-2111
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[切片](index_split_011.html#filepos233601)'
- en: '[Data Structures](index_split_011.html#filepos242277)'
  id: totrans-2112
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[数据结构](index_split_011.html#filepos242277)'
- en: '[Lists](index_split_011.html#filepos243091)'
  id: totrans-2113
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[列表](index_split_011.html#filepos243091)'
- en: '[Dictionaries](index_split_011.html#filepos268746)'
  id: totrans-2114
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[字典](index_split_011.html#filepos268746)'
- en: '[Tuples](index_split_011.html#filepos285719)'
  id: totrans-2115
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[元组](index_split_011.html#filepos285719)'
- en: '[Sets](index_split_011.html#filepos290490)'
  id: totrans-2116
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[集合](index_split_011.html#filepos290490)'
- en: '[Control Flow](index_split_011.html#filepos302712)'
  id: totrans-2117
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[控制流](index_split_011.html#filepos302712)'
- en: '[Code Blocks and the pass Statement](index_split_011.html#filepos303492)'
  id: totrans-2118
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[代码块和`pass`语句](index_split_011.html#filepos303492)'
- en: '[The if Statement and Conditional Expressions](index_split_012.html#filepos306124)'
  id: totrans-2119
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[`if`语句和条件表达式](index_split_012.html#filepos306124)'
- en: '[The for and while Loops](index_split_012.html#filepos316543)'
  id: totrans-2120
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[`for`和`while`循环](index_split_012.html#filepos316543)'
- en: '[List, Dictionary, and Set Comprehensions](index_split_012.html#filepos346762)'
  id: totrans-2121
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[列表、字典和集合推导](index_split_012.html#filepos346762)'
- en: '[Code Organization](index_split_012.html#filepos361307)'
  id: totrans-2122
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[代码组织](index_split_012.html#filepos361307)'
- en: '[Functions](index_split_012.html#filepos361867)'
  id: totrans-2123
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[函数](index_split_012.html#filepos361867)'
- en: '[Modules and the import Statement](index_split_012.html#filepos376269)'
  id: totrans-2124
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[模块和`import`语句](index_split_012.html#filepos376269)'
- en: '[The datetime Class](index_split_012.html#filepos392743)'
  id: totrans-2125
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[`datetime`类](index_split_012.html#filepos392743)'
- en: '[PEP 8: Style Guide for Python Code](index_split_012.html#filepos408951)'
  id: totrans-2126
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[PEP 8：Python代码风格指南](index_split_012.html#filepos408951)'
- en: '[PEP 8 and VS Code](index_split_012.html#filepos426085)'
  id: totrans-2127
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[PEP 8和VS Code](index_split_012.html#filepos426085)'
- en: '[Type Hints](index_split_012.html#filepos427790)'
  id: totrans-2128
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[类型提示](index_split_012.html#filepos427790)'
- en: '[Conclusion](index_split_012.html#filepos431930)'
  id: totrans-2129
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结束语](index_split_012.html#filepos431930)'
- en: '[II. Introduction to pandas](index_split_013.html#filepos433190)'
  id: totrans-2130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[II. pandas简介](index_split_013.html#filepos433190)'
- en: '[4\. NumPy Foundations](index_split_014.html#filepos433313)'
  id: totrans-2131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[4\. NumPy基础](index_split_014.html#filepos433313)'
- en: '[Getting Started with NumPy](index_split_014.html#filepos434390)'
  id: totrans-2132
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[NumPy入门](index_split_014.html#filepos434390)'
- en: '[NumPy Array](index_split_014.html#filepos434752)'
  id: totrans-2133
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[NumPy数组](index_split_014.html#filepos434752)'
- en: '[Vectorization and Broadcasting](index_split_014.html#filepos448103)'
  id: totrans-2134
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[向量化和广播](index_split_014.html#filepos448103)'
- en: '[Universal Functions (ufunc)](index_split_014.html#filepos454160)'
  id: totrans-2135
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[通用函数（`ufunc`）](index_split_014.html#filepos454160)'
- en: '[Creating and Manipulating Arrays](index_split_014.html#filepos462749)'
  id: totrans-2136
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[创建和操作数组](index_split_014.html#filepos462749)'
- en: '[Getting and Setting Array Elements](index_split_014.html#filepos463249)'
  id: totrans-2137
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[获取和设置数组元素](index_split_014.html#filepos463249)'
- en: '[Useful Array Constructors](index_split_014.html#filepos470734)'
  id: totrans-2138
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[有用的数组构造器](index_split_014.html#filepos470734)'
- en: '[View vs. Copy](index_split_014.html#filepos475126)'
  id: totrans-2139
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[视图 vs. 复制](index_split_014.html#filepos475126)'
- en: '[Conclusion](index_split_014.html#filepos480583)'
  id: totrans-2140
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](index_split_014.html#filepos480583)'
- en: '[5\. Data Analysis with pandas](index_split_015.html#filepos482650)'
  id: totrans-2141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[5\. 使用 pandas 进行数据分析](index_split_015.html#filepos482650)'
- en: '[DataFrame and Series](index_split_015.html#filepos484346)'
  id: totrans-2142
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[DataFrame 和 Series](index_split_015.html#filepos484346)'
- en: '[Index](index_split_015.html#filepos498826)'
  id: totrans-2143
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[索引](index_split_015.html#filepos498826)'
- en: '[Columns](index_split_015.html#filepos512830)'
  id: totrans-2144
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[列操作](index_split_015.html#filepos512830)'
- en: '[Data Manipulation](index_split_015.html#filepos524268)'
  id: totrans-2145
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[数据操作](index_split_015.html#filepos524268)'
- en: '[Selecting Data](index_split_015.html#filepos525021)'
  id: totrans-2146
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[选择数据](index_split_015.html#filepos525021)'
- en: '[Setting Data](index_split_015.html#filepos575658)'
  id: totrans-2147
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[设置数据](index_split_015.html#filepos575658)'
- en: '[Missing Data](index_split_015.html#filepos598671)'
  id: totrans-2148
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[缺失数据](index_split_015.html#filepos598671)'
- en: '[Duplicate Data](index_split_015.html#filepos608764)'
  id: totrans-2149
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[重复数据](index_split_015.html#filepos608764)'
- en: '[Arithmetic Operations](index_split_015.html#filepos617229)'
  id: totrans-2150
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[算术操作](index_split_015.html#filepos617229)'
- en: '[Working with Text Columns](index_split_015.html#filepos633855)'
  id: totrans-2151
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[处理文本列](index_split_015.html#filepos633855)'
- en: '[Applying a Function](index_split_015.html#filepos640942)'
  id: totrans-2152
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[应用函数](index_split_015.html#filepos640942)'
- en: '[View vs. Copy](index_split_015.html#filepos649491)'
  id: totrans-2153
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[视图 vs. 复制](index_split_015.html#filepos649491)'
- en: '[Combining DataFrames](index_split_016.html#filepos652519)'
  id: totrans-2154
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[合并数据框](index_split_016.html#filepos652519)'
- en: '[Concatenating](index_split_016.html#filepos653446)'
  id: totrans-2155
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[连接操作](index_split_016.html#filepos653446)'
- en: '[Joining and Merging](index_split_016.html#filepos667627)'
  id: totrans-2156
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[连接和合并](index_split_016.html#filepos667627)'
- en: '[Descriptive Statistics and Data Aggregation](index_split_016.html#filepos690581)'
  id: totrans-2157
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[描述性统计和数据聚合](index_split_016.html#filepos690581)'
- en: '[Descriptive Statistics](index_split_016.html#filepos691116)'
  id: totrans-2158
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[描述性统计](index_split_016.html#filepos691116)'
- en: '[Grouping](index_split_016.html#filepos695376)'
  id: totrans-2159
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[分组](index_split_016.html#filepos695376)'
- en: '[Pivoting and Melting](index_split_016.html#filepos701398)'
  id: totrans-2160
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[透视表和融合](index_split_016.html#filepos701398)'
- en: '[Plotting](index_split_016.html#filepos716809)'
  id: totrans-2161
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[绘图](index_split_016.html#filepos716809)'
- en: '[Matplotlib](index_split_016.html#filepos717341)'
  id: totrans-2162
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Matplotlib](index_split_016.html#filepos717341)'
- en: '[Plotly](index_split_016.html#filepos727990)'
  id: totrans-2163
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Plotly](index_split_016.html#filepos727990)'
- en: '[Importing and Exporting DataFrames](index_split_016.html#filepos740294)'
  id: totrans-2164
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[导入和导出数据框](index_split_016.html#filepos740294)'
- en: '[Exporting CSV Files](index_split_016.html#filepos745685)'
  id: totrans-2165
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[导出 CSV 文件](index_split_016.html#filepos745685)'
- en: '[Importing CSV Files](index_split_016.html#filepos748485)'
  id: totrans-2166
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[导入 CSV 文件](index_split_016.html#filepos748485)'
- en: '[Conclusion](index_split_016.html#filepos765032)'
  id: totrans-2167
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](index_split_016.html#filepos765032)'
- en: '[6\. Time Series Analysis with pandas](index_split_017.html#filepos767560)'
  id: totrans-2168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[6\. 使用 pandas 进行时间序列分析](index_split_017.html#filepos767560)'
- en: '[DatetimeIndex](index_split_017.html#filepos770332)'
  id: totrans-2169
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[日期时间索引](index_split_017.html#filepos770332)'
- en: '[Creating a DatetimeIndex](index_split_017.html#filepos770653)'
  id: totrans-2170
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[创建日期时间索引](index_split_017.html#filepos770653)'
- en: '[Filtering a DatetimeIndex](index_split_017.html#filepos794850)'
  id: totrans-2171
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[过滤日期时间索引](index_split_017.html#filepos794850)'
- en: '[Working with Time Zones](index_split_017.html#filepos799109)'
  id: totrans-2172
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[处理时区](index_split_017.html#filepos799109)'
- en: '[Common Time Series Manipulations](index_split_017.html#filepos808936)'
  id: totrans-2173
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[常见时间序列操作](index_split_017.html#filepos808936)'
- en: '[Shifting and Percentage Changes](index_split_017.html#filepos809440)'
  id: totrans-2174
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[移动和百分比变化](index_split_017.html#filepos809440)'
- en: '[Rebasing and Correlation](index_split_017.html#filepos821988)'
  id: totrans-2175
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[重新基准化和相关性](index_split_017.html#filepos821988)'
- en: '[Resampling](index_split_017.html#filepos846876)'
  id: totrans-2176
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[重采样](index_split_017.html#filepos846876)'
- en: '[Rolling Windows](index_split_017.html#filepos854869)'
  id: totrans-2177
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[滚动窗口](index_split_017.html#filepos854869)'
- en: '[Limitations with pandas](index_split_017.html#filepos860113)'
  id: totrans-2178
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[pandas 的限制](index_split_017.html#filepos860113)'
- en: '[Conclusion](index_split_017.html#filepos861902)'
  id: totrans-2179
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](index_split_017.html#filepos861902)'
- en: '[III. Reading and Writing Excel Files Without Excel](index_split_018.html#filepos863198)'
  id: totrans-2180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[III. 无 Excel 读写 Excel 文件](index_split_018.html#filepos863198)'
- en: '[7\. Excel File Manipulation with pandas](index_split_019.html#filepos863345)'
  id: totrans-2181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[7\. 使用 pandas 进行 Excel 文件操作](index_split_019.html#filepos863345)'
- en: '[Case Study: Excel Reporting](index_split_019.html#filepos864355)'
  id: totrans-2182
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[案例研究：Excel 报告](index_split_019.html#filepos864355)'
- en: '[Reading and Writing Excel Files with pandas](index_split_019.html#filepos885558)'
  id: totrans-2183
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用 pandas 读写 Excel 文件](index_split_019.html#filepos885558)'
- en: '[The read_excel Function and ExcelFile Class](index_split_019.html#filepos886236)'
  id: totrans-2184
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[read_excel 函数和 ExcelFile 类](index_split_019.html#filepos886236)'
- en: '[The to_excel Method and ExcelWriter Class](index_split_019.html#filepos935608)'
  id: totrans-2185
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[to_excel 方法和 ExcelWriter 类](index_split_019.html#filepos935608)'
- en: '[Limitations When Using pandas with Excel Files](index_split_019.html#filepos957296)'
  id: totrans-2186
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用 pandas 与 Excel 文件时的限制](index_split_019.html#filepos957296)'
- en: '[Conclusion](index_split_019.html#filepos958961)'
  id: totrans-2187
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](index_split_019.html#filepos958961)'
- en: '[8\. Excel File Manipulation with Reader and Writer Packages](index_split_020.html#filepos959867)'
  id: totrans-2188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[8\. 使用读写包操作 Excel 文件](index_split_020.html#filepos959867)'
- en: '[The Reader and Writer Packages](index_split_020.html#filepos961261)'
  id: totrans-2189
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[读写包](index_split_020.html#filepos961261)'
- en: '[When to Use Which Package](index_split_020.html#filepos962240)'
  id: totrans-2190
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[何时使用哪个包](index_split_020.html#filepos962240)'
- en: '[The excel.py Module](index_split_021.html#filepos972482)'
  id: totrans-2191
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[excel.py 模块](index_split_021.html#filepos972482)'
- en: '[OpenPyXL](index_split_021.html#filepos981650)'
  id: totrans-2192
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[OpenPyXL](index_split_021.html#filepos981650)'
- en: '[XlsxWriter](index_split_021.html#filepos1039580)'
  id: totrans-2193
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[XlsxWriter](index_split_021.html#filepos1039580)'
- en: '[pyxlsb](index_split_021.html#filepos1071801)'
  id: totrans-2194
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[pyxlsb](index_split_021.html#filepos1071801)'
- en: '[xlrd, xlwt, and xlutils](index_split_021.html#filepos1084875)'
  id: totrans-2195
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[xlrd, xlwt 和 xlutils](index_split_021.html#filepos1084875)'
- en: '[Advanced Reader and Writer Topics](index_split_022.html#filepos1124258)'
  id: totrans-2196
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[高级读写主题](index_split_022.html#filepos1124258)'
- en: '[Working with Big Excel Files](index_split_022.html#filepos1125008)'
  id: totrans-2197
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[处理大型 Excel 文件](index_split_022.html#filepos1125008)'
- en: '[Formatting DataFrames in Excel](index_split_022.html#filepos1157601)'
  id: totrans-2198
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[在 Excel 中格式化数据框](index_split_022.html#filepos1157601)'
- en: '[Case Study (Revisited): Excel Reporting](index_split_022.html#filepos1232272)'
  id: totrans-2199
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[案例研究（再次审视）：Excel 报告](index_split_022.html#filepos1232272)'
- en: '[Conclusion](index_split_022.html#filepos1233979)'
  id: totrans-2200
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](index_split_022.html#filepos1233979)'
- en: '[IV. Programming the Excel Application with xlwings](index_split_023.html#filepos1235617)'
  id: totrans-2201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[IV. 使用 xlwings 编程 Excel 应用](index_split_023.html#filepos1235617)'
- en: '[9\. Excel Automation](index_split_024.html#filepos1235764)'
  id: totrans-2202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[9\. Excel 自动化](index_split_024.html#filepos1235764)'
- en: '[Getting Started with xlwings](index_split_024.html#filepos1238381)'
  id: totrans-2203
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[开始使用 xlwings](index_split_024.html#filepos1238381)'
- en: '[Using Excel as Data Viewer](index_split_024.html#filepos1239368)'
  id: totrans-2204
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[将 Excel 用作数据查看器](index_split_024.html#filepos1239368)'
- en: '[The Excel Object Model](index_split_024.html#filepos1250093)'
  id: totrans-2205
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Excel 对象模型](index_split_024.html#filepos1250093)'
- en: '[Running VBA Code](index_split_024.html#filepos1313184)'
  id: totrans-2206
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[运行 VBA 代码](index_split_024.html#filepos1313184)'
- en: '[Converters, Options, and Collections](index_split_025.html#filepos1323109)'
  id: totrans-2207
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[转换器、选项和集合](index_split_025.html#filepos1323109)'
- en: '[Working with DataFrames](index_split_025.html#filepos1323983)'
  id: totrans-2208
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[处理数据框](index_split_025.html#filepos1323983)'
- en: '[Converters and Options](index_split_025.html#filepos1340542)'
  id: totrans-2209
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[转换器和选项](index_split_025.html#filepos1340542)'
- en: '[Charts, Pictures, and Defined Names](index_split_025.html#filepos1367107)'
  id: totrans-2210
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[图表、图片和定义名称](index_split_025.html#filepos1367107)'
- en: '[Case Study (Re-Revisited): Excel Reporting](index_split_025.html#filepos1400825)'
  id: totrans-2211
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[案例研究（再次审视）：Excel 报告](index_split_025.html#filepos1400825)'
- en: '[Advanced xlwings Topics](index_split_025.html#filepos1410331)'
  id: totrans-2212
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[高级 xlwings 主题](index_split_025.html#filepos1410331)'
- en: '[xlwings Foundations](index_split_025.html#filepos1410727)'
  id: totrans-2213
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[xlwings 基础](index_split_025.html#filepos1410727)'
- en: '[Improving Performance](index_split_025.html#filepos1416214)'
  id: totrans-2214
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[提高性能](index_split_025.html#filepos1416214)'
- en: '[How to Work Around Missing Functionality](index_split_025.html#filepos1429461)'
  id: totrans-2215
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[如何处理缺失功能](index_split_025.html#filepos1429461)'
- en: '[Conclusion](index_split_025.html#filepos1435946)'
  id: totrans-2216
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](index_split_025.html#filepos1435946)'
- en: '[10\. Python-Powered Excel Tools](index_split_026.html#filepos1439732)'
  id: totrans-2217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[10\. 使用 Python 扩展 Excel 工具](index_split_026.html#filepos1439732)'
- en: '[Using Excel as Frontend with xlwings](index_split_026.html#filepos1440768)'
  id: totrans-2218
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用 xlwings 将 Excel 用作前端](index_split_026.html#filepos1440768)'
- en: '[Excel Add-in](index_split_026.html#filepos1441981)'
  id: totrans-2219
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Excel 加载项](index_split_026.html#filepos1441981)'
- en: '[Quickstart Command](index_split_026.html#filepos1448166)'
  id: totrans-2220
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[快速启动命令](index_split_026.html#filepos1448166)'
- en: '[Run Main](index_split_026.html#filepos1449780)'
  id: totrans-2221
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[运行主程序](index_split_026.html#filepos1449780)'
- en: '[RunPython Function](index_split_026.html#filepos1459239)'
  id: totrans-2222
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[RunPython 函数](index_split_026.html#filepos1459239)'
- en: '[Deployment](index_split_026.html#filepos1471908)'
  id: totrans-2223
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[部署](index_split_026.html#filepos1471908)'
- en: '[Python Dependency](index_split_026.html#filepos1472608)'
  id: totrans-2224
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Python 依赖](index_split_026.html#filepos1472608)'
- en: '[Standalone Workbooks: Getting Rid of the xlwings Add-in](index_split_026.html#filepos1475221)'
  id: totrans-2225
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[独立工作簿：摆脱 xlwings 加载项](index_split_026.html#filepos1475221)'
- en: '[Configuration Hierarchy](index_split_026.html#filepos1478036)'
  id: totrans-2226
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[配置层次结构](index_split_026.html#filepos1478036)'
- en: '[Settings](index_split_026.html#filepos1480462)'
  id: totrans-2227
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[设置](index_split_026.html#filepos1480462)'
- en: '[Conclusion](index_split_026.html#filepos1485980)'
  id: totrans-2228
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](index_split_026.html#filepos1485980)'
- en: '[11\. The Python Package Tracker](index_split_027.html#filepos1487255)'
  id: totrans-2229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[11\. Python 包跟踪器](index_split_027.html#filepos1487255)'
- en: '[What We Will Build](index_split_027.html#filepos1488972)'
  id: totrans-2230
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[我们将构建什么](index_split_027.html#filepos1488972)'
- en: '[Core Functionality](index_split_027.html#filepos1492209)'
  id: totrans-2231
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[核心功能](index_split_027.html#filepos1492209)'
- en: '[Web APIs](index_split_027.html#filepos1492676)'
  id: totrans-2232
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[Web API](index_split_027.html#filepos1492676)'
- en: '[Databases](index_split_027.html#filepos1515287)'
  id: totrans-2233
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[数据库](index_split_027.html#filepos1515287)'
- en: '[Exceptions](index_split_027.html#filepos1580121)'
  id: totrans-2234
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[异常](index_split_027.html#filepos1580121)'
- en: '[Application Structure](index_split_027.html#filepos1601250)'
  id: totrans-2235
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[应用程序结构](index_split_027.html#filepos1601250)'
- en: '[Frontend](index_split_027.html#filepos1606102)'
  id: totrans-2236
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[前端](index_split_027.html#filepos1606102)'
- en: '[Backend](index_split_027.html#filepos1619894)'
  id: totrans-2237
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[后端](index_split_027.html#filepos1619894)'
- en: '[Debugging](index_split_027.html#filepos1644529)'
  id: totrans-2238
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[调试](index_split_027.html#filepos1644529)'
- en: '[Conclusion](index_split_027.html#filepos1651491)'
  id: totrans-2239
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](index_split_027.html#filepos1651491)'
- en: '[12\. User-Defined Functions (UDFs)](index_split_028.html#filepos1653100)'
  id: totrans-2240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[12\. 用户定义函数 (UDFs)](index_split_028.html#filepos1653100)'
- en: '[Getting Started with UDFs](index_split_028.html#filepos1655019)'
  id: totrans-2241
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[UDF 入门](index_split_028.html#filepos1655019)'
- en: '[UDF Quickstart](index_split_028.html#filepos1657338)'
  id: totrans-2242
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[UDF 快速入门](index_split_028.html#filepos1657338)'
- en: '[Case Study: Google Trends](index_split_028.html#filepos1679203)'
  id: totrans-2243
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[案例研究：Google 趋势](index_split_028.html#filepos1679203)'
- en: '[Introduction to Google Trends](index_split_028.html#filepos1679853)'
  id: totrans-2244
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[介绍 Google 趋势](index_split_028.html#filepos1679853)'
- en: '[Working with DataFrames and Dynamic Arrays](index_split_028.html#filepos1682320)'
  id: totrans-2245
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[处理数据框和动态数组](index_split_028.html#filepos1682320)'
- en: '[Fetching Data from Google Trends](index_split_028.html#filepos1714648)'
  id: totrans-2246
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[从 Google 趋势获取数据](index_split_028.html#filepos1714648)'
- en: '[Plotting with UDFs](index_split_028.html#filepos1741693)'
  id: totrans-2247
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用 UDF 绘图](index_split_028.html#filepos1741693)'
- en: '[Debugging UDFs](index_split_028.html#filepos1755123)'
  id: totrans-2248
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[调试 UDF](index_split_028.html#filepos1755123)'
- en: '[Advanced UDF Topics](index_split_028.html#filepos1760894)'
  id: totrans-2249
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[高级 UDF 主题](index_split_028.html#filepos1760894)'
- en: '[Basic Performance Optimization](index_split_028.html#filepos1761747)'
  id: totrans-2250
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[基本性能优化](index_split_028.html#filepos1761747)'
- en: '[Caching](index_split_028.html#filepos1775412)'
  id: totrans-2251
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[缓存](index_split_028.html#filepos1775412)'
- en: '[The Sub Decorator](index_split_028.html#filepos1795188)'
  id: totrans-2252
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[子装饰器](index_split_028.html#filepos1795188)'
- en: '[Conclusion](index_split_028.html#filepos1804492)'
  id: totrans-2253
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[结论](index_split_028.html#filepos1804492)'
- en: '[A. Conda Environments](index_split_029.html#filepos1810552)'
  id: totrans-2254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[A. Conda 环境](index_split_029.html#filepos1810552)'
- en: '[Create a New Conda Environment](index_split_029.html#filepos1811963)'
  id: totrans-2255
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[创建新的 Conda 环境](index_split_029.html#filepos1811963)'
- en: '[Disable Auto Activation](index_split_029.html#filepos1817917)'
  id: totrans-2256
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[禁用自动激活](index_split_029.html#filepos1817917)'
- en: '[B. Advanced VS Code Functionality](index_split_030.html#filepos1820886)'
  id: totrans-2257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[B. 高级 VS Code 功能](index_split_030.html#filepos1820886)'
- en: '[Debugger](index_split_030.html#filepos1821278)'
  id: totrans-2258
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[调试器](index_split_030.html#filepos1821278)'
- en: '[Jupyter Notebooks in VS Code](index_split_030.html#filepos1825947)'
  id: totrans-2259
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[VS Code 中的 Jupyter 笔记本](index_split_030.html#filepos1825947)'
- en: '[Run Jupyter Notebooks](index_split_030.html#filepos1826547)'
  id: totrans-2260
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[运行 Jupyter 笔记本](index_split_030.html#filepos1826547)'
- en: '[Python Scripts with Code Cells](index_split_030.html#filepos1829180)'
  id: totrans-2261
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[带有代码单元的 Python 脚本](index_split_030.html#filepos1829180)'
- en: '[C. Advanced Python Concepts](index_split_031.html#filepos1832059)'
  id: totrans-2262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[C. 高级 Python 概念](index_split_031.html#filepos1832059)'
- en: '[Classes and Objects](index_split_031.html#filepos1832487)'
  id: totrans-2263
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[类和对象](index_split_031.html#filepos1832487)'
- en: '[Working with Time-Zone-Aware datetime Objects](index_split_031.html#filepos1847758)'
  id: totrans-2264
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[使用时区感知的 datetime 对象](index_split_031.html#filepos1847758)'
- en: '[Mutable vs. Immutable Python Objects](index_split_031.html#filepos1865329)'
  id: totrans-2265
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[可变 vs. 不可变 Python 对象](index_split_031.html#filepos1865329)'
- en: '[Calling Functions with Mutable Objects as Arguments](index_split_031.html#filepos1882626)'
  id: totrans-2266
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[调用具有可变对象作为参数的函数](index_split_031.html#filepos1882626)'
- en: '[Functions with Mutable Objects as Default Arguments](index_split_031.html#filepos1896621)'
  id: totrans-2267
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[具有可变对象作为默认参数的函数](index_split_031.html#filepos1896621)'
- en: '[Index](index_split_032.html#filepos1903642)'
  id: totrans-2268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[索引](index_split_032.html#filepos1903642)'
