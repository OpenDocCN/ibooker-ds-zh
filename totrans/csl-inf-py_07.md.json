["```py\nimport numpy as np\nimport pandas as pd\npd.set_option('precision', 3)\n\n# Data from Oreopoulos (2011)\npath = \"https://github.com/causal-methods/Data/raw/master/\" \ndf = pd.read_stata(path + \"oreopoulos.dta\")\ndf.head(5) \n```", "```py\n# Transform the variable of interest in % \ndf[\"callback\"] = 100*df[\"callback\"] \n```", "```py\n# Restrict data to April and August 2008\ndf0 = df[(df.fall_data == 0)] \n```", "```py\nmean = df0.groupby('name_ethnicity').agg([np.mean, np.size])\nmean[\"callback\"] \n```", "```py\nprop = pd.crosstab(index= df0['name_ethnicity'], columns=df0['female'], \n            values=df0['callback'], aggfunc='mean')\nprop \n```", "```py\n# Restrict data to February and September 2009\ndf2 = df[(df.fall_data == 2)] \n```", "```py\nmean = df2.groupby('name_ethnicity').agg([np.mean, np.size])\nmean[\"callback\"] \n```", "```py\nimport plotly.express as px\n\ny = mean[\"callback\"].values[:, 0]\nx = mean[\"callback\"].index\n\nfig = px.bar(df2, x, y, color = x,\n             title=\"Callback Rate for Interview by Name Ethnicity\",\n             labels={ \"y\": \"Callback Rate (%)\",\n                      \"x\": \"Name Ethnicity\",                 \n                      \"color\": \"\"} )\n\nfig.update_layout(font_size = 17)\nfig.show() \n```", "```py\nprop = pd.crosstab(index= df2['name_ethnicity'], columns=df2['female'], \n            values=df2['callback'], aggfunc='mean')\nprop \n```", "```py\nimport plotly.graph_objects as go\n\nethnicity = prop.index\nmale = prop.values[:,0]\nfemale = prop.values[:,1]\n\nfig = go.Figure(data=[\n         go.Bar(name='Male', x = ethnicity, y = male),\n         go.Bar(name='Female', x = ethnicity, y = female) ])\n\nfig.update_layout(barmode='group', font_size = 17,\n      title = \"Callback Rate for Interview by Gender\",\n      yaxis = dict(title='Callback Rate (%)'),\n      xaxis = dict(title='Name Ethnicity') )\n\nfig.show() \n```", "```py\ncontrol = ['additional_credential', 'ba_quality',\n           'extracurricular_skills', 'language_skills',\n           'certificate', 'ma', 'same_exp', 'exp_highquality',\n           'skillspeaking', 'skillsocialper', 'skillwriting']\n\ndf2.groupby('female').agg([np.mean])[control] \n```", "```py\ndf2.groupby(['female', 'name_ethnicity']).agg([np.mean])[control] \n```", "```py\nimport statsmodels.formula.api as smf\n\n# Sample Restriction based on name ethnicity\nCanada = df2.name_ethnicity == \"Canada\"\nIndian = df2[(Canada) | (df2.name_ethnicity == \"Indian\")]\nChinese = df2[(Canada) | (df2.name_ethnicity == \"Chinese\")]\nChn_Cdn = df2[(Canada) | (df2.name_ethnicity == \"Chn-Cdn\")]\nGreek = df2[(Canada) | (df2.name_ethnicity == \"Greek\")]\n\nsample = [Indian, Chinese, Chn_Cdn, Greek]\n\n#  Run the simple model for each ethnicity\n# and save the results\nmodel1 = \"callback ~ female + C(type)\"\n\nresult1 = []\nfor data in sample:\n   ols = smf.ols(model1, data).fit(cov_type='HC1')\n   result1.append(ols) \n```", "```py\nC:\\Anaconda\\envs\\textbook\\lib\\site-packages\\statsmodels\\tools\\_testing.py:19: FutureWarning:\n\npandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead. \n```", "```py\n#  Library to print professional publication\n# tables in Latex, HTML, etc.\n!pip install stargazer \n```", "```py\nRequirement already satisfied: stargazer in c:\\anaconda\\envs\\textbook\\lib\\site-packages (0.0.5) \n```", "```py\nWARNING: Error parsing requirements for numpy: [Errno 2] No such file or directory: 'c:\\\\anaconda\\\\envs\\\\textbook\\\\lib\\\\site-packages\\\\numpy-1.19.2.dist-info\\\\METADATA' \n```", "```py\n# Settings for a nice table\nfrom stargazer.stargazer import Stargazer\nstargazer = Stargazer(result1)\n\nstargazer.title('Table 1 - Callback Rates by Resume Type')\n\nnames = ['Indian', 'Chinese', 'Chn_Cdn', 'Greek']\nstargazer.custom_columns(names, [1, 1, 1, 1])\n\norder = ['female', 'Intercept', 'C(type)[T.1.0]',\n         'C(type)[T.2.0]', 'C(type)[T.3.0]',\n         'C(type)[T.4.0]']     \nstargazer.covariate_order(order)\n\ndict1 = {'C(type)[T.1.0]': '1) Foreign Name, Cdn Educ and Exp',\n         'C(type)[T.2.0]': '2) Foreign Name and Educ, Cdn exp',\n         'C(type)[T.3.0]': '3) Foreign Name and Educ, Mixed Exp',\n         'C(type)[T.4.0]': '4) All Foreign (Name, Educ, and Exp)',\n              'Intercept': '0) English Name, Cdn Educ and Exp',\n                 'female': 'Female'}\nstargazer.rename_covariates(dict1)\n\nstargazer \n```", "```py\nmodel2 = \"callback ~ female*C(type)\"\n\nresult2 = []\nfor data in sample:\n   ols = smf.ols(model2, data).fit(cov_type='HC1')\n   result2.append(ols) \n```", "```py\nstargazer = Stargazer(result2)\n\nstargazer.title('Table 2 - Callback Rates by Resume Type and Gender')\n\nstargazer.custom_columns(names, [1, 1, 1, 1])\n\ndict2 = {'female:C(type)[T.1.0]':'[Female]x[1]',\n         'female:C(type)[T.2.0]':'[Female]x[2]',\n         'female:C(type)[T.3.0]':'[Female]x[3]',\n         'female:C(type)[T.4.0]':'[Female]x[4]'}\n\nlist2 = list(dict2.keys())\n\ndict2.update(dict1)\nstargazer.rename_covariates(dict2)\n\nlist2 = order + list2\nstargazer.covariate_order(list2)\n\nstargazer \n```", "```py\ncontrol1 = \"+ ba_quality + extracurricular_skills + language_skills\"\ncontrol2 = \"+ ma + exp_highquality\"\nmodel3 = \"callback ~ female*C(type)\" + control1 + control2\n\nresult3 = []\nfor data in sample:\n   ols = smf.ols(model3, data).fit(cov_type='HC1')\n   result3.append(ols) \n```", "```py\nstargazer = Stargazer(result3)\n\nstargazer.title('Table 3 - Callback Rates and Robustness Checks')\n\nstargazer.custom_columns(names, [1, 1, 1, 1])\n\ndict3 = {'ba_quality':'Top 200 world ranking university',\n         'exp_highquality':'High quality work experience',\n         'extracurricular_skills'\t:'List extra-curricular activities',\n         'language_skills':'Fluent in French and other languages',\n         'ma':'Canadian master\u2019s degree'}\n\nlist3 = list(dict3.keys())\n\ndict3.update(dict2)\nstargazer.rename_covariates(dict3)\n\nlist3 = list2 + list3\nstargazer.covariate_order(list3)\n\nstargazer \n```", "```py\npd.crosstab(index= [df2['name_ethnicity'], df2['female'],\n                           df2['name']], columns=df2['type'], \n                         values=df2['callback'], aggfunc='mean') \n```", "```py\npd.crosstab(index= df2['occupation_type'],\n                   columns=[df2['name_ethnicity'], df2['female']], \n                   values=df2['callback'], aggfunc='mean') \n```", "```py\nFE = \"+ C(occupation_type) + C(city) + C(name)\"\nmodel4 = \"callback ~ female*C(type) \" + control1 + control2 + FE\n\nresult4 = []\nfor data in sample:\n   ols = smf.ols(model4, data).fit(cov_type='HC1')\n   result4.append(ols) \n```", "```py\nstargazer = Stargazer(result4)\n\nstargazer.title('Table 4 - Callback Rates and Fixed Effects')\nstargazer.custom_columns(names, [1, 1, 1, 1])\nstargazer.rename_covariates(dict3)\nstargazer.covariate_order(list3)\n\nstargazer.add_line('Fixed Effects', ['', '', '', ''])\nstargazer.add_line('Occupation', ['Yes', 'Yes', 'Yes', 'Yes'])\nstargazer.add_line('Name', ['Yes', 'Yes', 'Yes', 'Yes'])\nstargazer.add_line('City', ['Yes', 'Yes', 'Yes', 'Yes'])\n\nstargazer \n```", "```py\nC:\\Anaconda\\envs\\textbook\\lib\\site-packages\\statsmodels\\base\\model.py:1752: ValueWarning:\n\ncovariance of constraints does not have full rank. The number of constraints is 43, but rank is 1\n\nC:\\Anaconda\\envs\\textbook\\lib\\site-packages\\statsmodels\\base\\model.py:1752: ValueWarning:\n\ncovariance of constraints does not have full rank. The number of constraints is 41, but rank is 39\n\nC:\\Anaconda\\envs\\textbook\\lib\\site-packages\\statsmodels\\base\\model.py:1752: ValueWarning:\n\ncovariance of constraints does not have full rank. The number of constraints is 37, but rank is 35\n\nC:\\Anaconda\\envs\\textbook\\lib\\site-packages\\statsmodels\\base\\model.py:1752: ValueWarning:\n\ncovariance of constraints does not have full rank. The number of constraints is 31, but rank is 29 \n```"]