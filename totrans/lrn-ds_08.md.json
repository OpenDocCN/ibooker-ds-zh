["```py\n`import` `pandas` `as` `pd`\n\n```", "```py\n`baby` `=` `pd``.``read_csv``(``'``babynames.csv``'``)`\n`baby`\n\n```", "```py\n2020722 rows × 4 columns\n```", "```py\n`baby`\n\n```", "```py\n2020722 rows × 4 columns\n```", "```py\n`#        The first argument is the row label`\n`#        ↓`\n`baby``.``loc``[``1``,` `'``Name``'``]`\n`#            ↑`\n`#            The second argument is the column label`\n\n```", "```py\n'Noah'\n\n```", "```py\n`baby``.``loc``[``0``:``3``,` `'``Name``'``:``'``Count``'``]`\n\n```", "```py\n`baby``.``loc``[``:``,` `'``Count``'``]`\n\n```", "```py\n0          19659\n1          18252\n2          14147\n           ...  \n2020719        5\n2020720        5\n2020721        5\nName: Count, Length: 2020722, dtype: int64\n\n```", "```py\n`counts` `=` `baby``.``loc``[``:``,` `'``Count``'``]`\n`counts``.``__class__``.``__name__`\n\n```", "```py\n'Series'\n\n```", "```py\n`baby`\n\n```", "```py\n2020722 rows × 4 columns\n```", "```py\n`# And here's the dataframe with only Name and Year columns`\n`baby``.``loc``[``:``,` `[``'``Name``'``,` `'``Year``'``]``]`\n`#           └──────┬───────┘`\n`#         list of column labels`\n\n```", "```py\n2020722 rows × 2 columns\n```", "```py\n`# Shorthand for baby.loc[:, 'Name']`\n`baby``[``'``Name``'``]`\n\n```", "```py\n0            Liam\n1            Noah\n2          Oliver\n            ...  \n2020719    Verona\n2020720    Vertie\n2020721     Wilma\nName: Name, Length: 2020722, dtype: object\n\n```", "```py\n`# Shorthand for baby.loc[:, ['Name', 'Count']]`\n`baby``[``[``'``Name``'``,` `'``Count``'``]``]`\n\n```", "```py\n2020722 rows × 2 columns\n```", "```py\n`dogs` `=` `pd``.``read_csv``(``'``dogs.csv``'``,` `index_col``=``'``breed``'``)`\n`dogs`\n\n```", "```py\n`dogs``.``iloc``[``0``:``3``,` `0``:``2``]`\n\n```", "```py\n`dogs``.``loc``[``'``Labrador Retriever``'``:``'``Beagle``'``,` `'``grooming``'``:``'``food_cost``'``]`\n\n```", "```py\n`baby`\n\n```", "```py\n2020722 rows × 4 columns\n```", "```py\n`# Get a Series with the Year data`\n`baby``[``'``Year``'``]`\n\n```", "```py\n0          2020\n1          2020\n2          2020\n           ... \n2020719    1880\n2020720    1880\n2020721    1880\nName: Year, Length: 2020722, dtype: int64\n\n```", "```py\n`# Compare with 2020`\n`baby``[``'``Year``'``]` `==` `2020`\n\n```", "```py\n0           True\n1           True\n2           True\n           ...  \n2020719    False\n2020720    False\n2020721    False\nName: Year, Length: 2020722, dtype: bool\n\n```", "```py\n`is_2020` `=` `[``]`\n`for` `value` `in` `baby``[``'``Year``'``]``:`\n    `is_2020``.``append``(``value` `==` `2020``)`\n\n```", "```py\n`baby``.``loc``[``baby``[``'``Year``'``]` `==` `2020``,` `:``]`\n\n```", "```py\n31270 rows × 4 columns\n```", "```py\n`baby``[``baby``[``'``Year``'``]` `==` `2020``]`\n\n```", "```py\n31270 rows × 4 columns\n```", "```py\n`(``baby``[``baby``[``'``Year``'``]` `==` `2020``]`\n `.``sort_values``(``'``Count``'``,` `ascending``=``False``)`\n `.``head``(``7``)` `# take the first seven rows`\n`)`\n\n```", "```py\n`luna` `=` `baby``[``baby``[``'``Name``'``]` `==` `'``Luna``'``]` `# [1]`\n`luna` `=` `luna``[``luna``[``'``Sex``'``]` `==` `'``F``'``]`     `# [2]`\n`luna` `=` `luna``[``[``'``Count``'``,` `'``Year``'``]``]`      `# [3]`\n`luna`\n\n```", "```py\n128 rows × 2 columns\n```", "```py\n`px``.``line``(``luna``,` `x``=``'``Year``'``,` `y``=``'``Count``'``,` `width``=``350``,` `height``=``250``)`\n\n```", "```py\n`siri` `=` `(``baby``.``query``(``'``Name ==` `\"``Siri``\"``'``)`\n        `.``query``(``'``Sex ==` `\"``F``\"``'``)``)`\n`px``.``line``(``siri``,` `x``=``'``Year``'``,` `y``=``'``Count``'``,` `width``=``350``,` `height``=``250``)`\n\n```", "```py\n`fig` `=` `px``.``line``(``siri``,` `x``=``\"``Year``\"``,` `y``=``\"``Count``\"``,` `width``=``350``,` `height``=``250``)`\n`fig``.``add_vline``(`\n    `x``=``2011``,` `line_color``=``\"``red``\"``,` `line_dash``=``\"``dashdot``\"``,` `line_width``=``4``,` `opacity``=``0.7`\n`)`\n\n```", "```py\n`baby` `=` `pd``.``read_csv``(``'``babynames.csv``'``)`\n`baby`\n\n```", "```py\n2020722 rows × 4 columns\n```", "```py\n`baby``[``'``Count``'``]``.``sum``(``)`\n\n```", "```py\n352554503\n\n```", "```py\n`baby``.``groupby``(``'``Year``'``)``[``'``Count``'``]``.``sum``(``)`\n\n```", "```py\nYear\n1880     194419\n1881     185772\n1882     213385\n         ...   \n2018    3487193\n2019    3437438\n2020    3287724\nName: Count, Length: 141, dtype: int64\n\n```", "```py\n`counts_by_year` `=` `baby``.``groupby``(``'``Year``'``)``[``'``Count``'``]``.``sum``(``)``.``reset_index``(``)`\n`px``.``line``(``counts_by_year``,` `x``=``'``Year``'``,` `y``=``'``Count``'``,` `width``=``350``,` `height``=``250``)`\n\n```", "```py\n`(``baby`                `# the dataframe`\n `.``groupby``(``'``Year``'``)`    `# column(s) to group`\n `[``'``Count``'``]`           `# column(s) to aggregate`\n `.``sum``(``)`              `# how to aggregate`\n`)`\n\n```", "```py\n`classroom`\n\n```", "```py\n`(``classroom`\n `.``groupby``(``'``name``'``)`\n `[``'``name``'``]`\n `.``size``(``)`\n`)`\n\n```", "```py\nname\nEden      2\nLuke      1\nSachit    3\nName: name, dtype: int64\n\n```", "```py\n`classroom``[``'``name``'``]``.``value_counts``(``)`\n\n```", "```py\nname\nSachit    3\nEden      2\nLuke      1\nName: count, dtype: int64\n\n```", "```py\n`counts_by_year_and_sex` `=` `(``baby`\n `.``groupby``(``[``'``Year``'``,` `'``Sex``'``]``)` `# Arg to groupby is a list of column names`\n `[``'``Count``'``]`\n `.``sum``(``)`\n`)`\n`counts_by_year_and_sex` \n\n```", "```py\nYear  Sex\n1880  F        83929\n      M       110490\n1881  F        85034\n              ...   \n2019  M      1785527\n2020  F      1581301\n      M      1706423\nName: Count, Length: 282, dtype: int64\n\n```", "```py\n`counts_by_year_and_sex``.``to_frame``(``)`\n\n```", "```py\n282 rows × 1 columns\n```", "```py\n`counts_by_year_and_sex``.``reset_index``(``)`\n\n```", "```py\n282 rows × 3 columns\n```", "```py\n`(``baby`\n `.``groupby``(``'``Year``'``)`\n `[``'``Count``'``]`\n `.``sum``(``)` `# aggregate by summing`\n`)`\n\n```", "```py\nYear\n1880     194419\n1881     185772\n1882     213385\n         ...   \n2018    3487193\n2019    3437438\n2020    3287724\nName: Count, Length: 141, dtype: int64\n\n```", "```py\n`(``baby`\n `.``groupby``(``'``Year``'``)`\n `[``'``Count``'``]`\n `.``max``(``)` `# aggregate by taking the max within each group`\n`)`\n\n```", "```py\nYear\n1880     9655\n1881     8769\n1882     9557\n        ...  \n2018    19924\n2019    20555\n2020    19659\nName: Count, Length: 141, dtype: int64\n\n```", "```py\n`def` `data_range``(``counts``)``:`\n    `return` `counts``.``max``(``)` `-` `counts``.``min``(``)`\n\n`(``baby`\n `.``groupby``(``'``Year``'``)`\n `[``'``Count``'``]`\n `.``agg``(``data_range``)` `# aggregate using custom function`\n`)`\n\n```", "```py\nYear\n1880     9650\n1881     8764\n1882     9552\n        ...  \n2018    19919\n2019    20550\n2020    19654\nName: Count, Length: 141, dtype: int64\n\n```", "```py\n`def` `count_unique``(``s``)``:`\n    `return` `len``(``s``.``unique``(``)``)`\n\n`unique_names_by_year` `=` `(``baby`\n `.``groupby``(``'``Year``'``)`\n `[``'``Name``'``]`\n `.``agg``(``count_unique``)` `# aggregate using the custom count_unique function`\n`)`\n`unique_names_by_year`\n\n```", "```py\nYear\n1880     1889\n1881     1829\n1882     2012\n        ...  \n2018    29619\n2019    29417\n2020    28613\nName: Name, Length: 141, dtype: int64\n\n```", "```py\n`px``.``line``(``unique_names_by_year``.``reset_index``(``)``,`\n        `x``=``'``Year``'``,` `y``=``'``Name``'``,`\n        `labels``=``{``'``Name``'``:` `'``# unique names``'``}``,`\n        `width``=``350``,` `height``=``250``)`\n\n```", "```py\n`counts_by_year_and_sex` `=` `(``baby`\n `.``groupby``(``[``'``Year``'``,` `'``Sex``'``]``)` \n `[``'``Count``'``]`\n `.``sum``(``)`\n`)`\n`counts_by_year_and_sex``.``to_frame``(``)`\n\n```", "```py\n282 rows × 1 columns\n```", "```py\n`mf_pivot` `=` `pd``.``pivot_table``(`\n    `baby``,`\n    `index``=``'``Year``'``,`   `# Column to turn into new index`\n    `columns``=``'``Sex``'``,`  `# Column to turn into new columns`\n    `values``=``'``Count``'``,` `# Column to aggregate for values`\n    `aggfunc``=``sum``)`    `# Aggregation function`\n`mf_pivot`\n\n```", "```py\n141 rows × 2 columns\n```", "```py\n`fig` `=` `px``.``line``(``mf_pivot``,` `width``=``350``,` `height``=``250``)`\n`fig``.``update_traces``(``selector``=``1``,` `line_dash``=``'``dashdot``'``)`\n`fig``.``update_yaxes``(``title``=``'``Value``'``)`\n\n```", "```py\n`nyt` `=` `pd``.``read_csv``(``'``nyt_names.csv``'``)`\n`nyt`\n\n```", "```py\n23 rows × 2 columns\n```", "```py\n`baby` `=` `pd``.``read_csv``(``'``babynames.csv``'``)`\n`baby`\n\n```", "```py\n2020722 rows × 4 columns\n```", "```py\n`nyt_small`\n\n```", "```py\n`baby_small`\n\n```", "```py\n`baby_small``.``merge``(``nyt_small``,`\n                 `left_on``=``'``Name``'``,`        `# column in left table to match`\n                 `right_on``=``'``nyt_name``'``)`   `# column in right table to match`\n\n```", "```py\n`baby_small``.``merge``(``nyt_small``,`\n                 `left_on``=``'``Name``'``,`        \n                 `right_on``=``'``nyt_name``'``,`\n                 `how``=``'``left``'``)`           `# left join instead of inner`\n\n```", "```py\n`baby_small``.``merge``(``nyt_small``,`\n                 `left_on``=``'``Name``'``,`        \n                 `right_on``=``'``nyt_name``'``,`\n                 `how``=``'``right``'``)`\n\n```", "```py\n`baby_small``.``merge``(``nyt_small``,`\n                 `left_on``=``'``Name``'``,`        \n                 `right_on``=``'``nyt_name``'``,`\n                 `how``=``'``outer``'``)`\n\n```", "```py\n`baby``.``head``(``2``)`\n\n```", "```py\n`nyt``.``head``(``2``)`\n\n```", "```py\n`cate_counts` `=` `(`\n    `baby``.``merge``(``nyt``,` `left_on``=``'``Name``'``,` `right_on``=``'``nyt_name``'``)` `# [1]`\n    `.``groupby``(``[``'``category``'``,` `'``Year``'``]``)`                       `# [2]`\n    `[``'``Count``'``]`                                            `# [3]`\n    `.``sum``(``)`                                               `# [3]`\n    `.``reset_index``(``)`\n`)`\n`cate_counts`\n\n```", "```py\n650 rows × 3 columns\n```", "```py\n`baby` `=` `pd``.``read_csv``(``'``babynames.csv``'``)`\n`baby`\n\n```", "```py\n2020722 rows × 4 columns\n```", "```py\n`names` `=` `baby``[``'``Name``'``]`\n`names``.``apply``(``len``)`\n\n```", "```py\n0          4\n1          4\n2          6\n          ..\n2020719    6\n2020720    6\n2020721    5\nName: Name, Length: 2020722, dtype: int64\n\n```", "```py\n`def` `first_letter``(``string``)``:`\n    `return` `string``[``0``]`\n\n`names``.``apply``(``first_letter``)`\n\n```", "```py\n0          L\n1          N\n2          O\n          ..\n2020719    V\n2020720    V\n2020721    W\nName: Name, Length: 2020722, dtype: object\n\n```", "```py\n`result` `=` `[``]`\n`for` `name` `in` `names``:`\n    `result``.``append``(``first_letter``(``name``)``)`\n\n```", "```py\n`letters` `=` `baby``.``assign``(``Firsts``=``names``.``apply``(``first_letter``)``)`\n`letters`\n\n```", "```py\n2020722 rows × 5 columns\n```", "```py\n`baby``[``'``Firsts``'``]` `=` `names``.``apply``(``first_letter``)`\n\n```", "```py\n`letter_counts` `=` `(``letters`\n `.``groupby``(``[``'``Firsts``'``,` `'``Year``'``]``)`\n `[``'``Count``'``]`\n `.``sum``(``)`\n `.``reset_index``(``)`\n`)`\n`letter_counts`\n\n```", "```py\n3641 rows × 3 columns\n```", "```py\n`fig` `=` `px``.``line``(``letter_counts``.``loc``[``letter_counts``[``'``Firsts``'``]` `==` `'``L``'``]``,`\n              `x``=``'``Year``'``,` `y``=``'``Count``'``,` `title``=``'``Popularity of` `\"``L``\"` `names``'``,`\n              `width``=``350``,` `height``=``250``)`\n`fig``.``update_layout``(``margin``=``dict``(``t``=``30``)``)`\n\n```", "```py\n`fig` `=` `px``.``line``(``letter_counts``.``loc``[``letter_counts``[``'``Firsts``'``]` `==` `'``J``'``]``,`\n              `x``=``'``Year``'``,` `y``=``'``Count``'``,` `title``=``'``Popularity of` `\"``J``\"` `names``'``,`\n              `width``=``350``,` `height``=``250``)`\n`fig``.``update_layout``(``margin``=``dict``(``t``=``30``)``)`\n\n```", "```py\n`%``%``timeit`\n\n`# Calculate the decade using vectorized operators`\n`baby``[``'``Year``'``]` `/``/` `10` `*` `10`\n\n```", "```py\n9.66 ms ± 755 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n\n```", "```py\n`%``%``timeit`\n\n`def` `decade``(``yr``)``:`\n    `return` `yr` `/``/` `10` `*` `10`\n\n`# Calculate the decade using apply`\n`baby``[``'``Year``'``]``.``apply``(``decade``)`\n\n```", "```py\n658 ms ± 49.6 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n\n```"]