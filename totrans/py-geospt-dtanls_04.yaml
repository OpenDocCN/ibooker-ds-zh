- en: 'Chapter 4\. Geospatial Analytics in the Cloud: Google Earth Engine and Other
    Tools'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章。云中的地理空间分析：谷歌地球引擎及其他工具
- en: How do you access geospatial data? Although data professionals with enterprise
    accounts may not think about the limitations of personal computing and relying
    on open source data, the rest of us often work within limits. Geospatial analysis
    in the cloud has narrowed the divide, since that means we no longer need to store
    large volumes of data locally. Never before has the general public had open source
    access to geospatial data on such a global scale. This chapter will show you where
    to find data for exploration and learning.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如何访问地理空间数据？尽管拥有企业账户的数据专业人士可能不会考虑个人计算机的限制和依赖于开源数据，但我们其他人通常会在限制条件下工作。云中的地理空间分析已经缩小了这一差距，因为这意味着我们不再需要在本地存储大量数据。一般公众从未如此全球化地获得过开源地理空间数据。本章将向您展示如何找到用于探索和学习的数据。
- en: Space programs in the US and around the world have gathered data from satellites
    and sensors for decades, but only recently have we had the capacity to manipulate
    that data in real time for analysis. The USGS hosts [EarthExplorer](https://oreil.ly/OnxdN)
    (Landsat), and the [Copernicus Open Access Hub](https://oreil.ly/gnY7c) provides
    data from European Space Agency (ESA) Sentinel satellites. Landsat high-resolution
    satellite images enable us to evaluate and measure environmental change, understand
    the impact of climate science and agricultural practices, and respond to natural
    disasters across time and space, to name a few examples. The advent of free satellite
    images has enabled decision makers from economically challenged areas across the
    world to bring insights into view and focus on solutions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，美国及全球的空间计划一直从卫星和传感器中收集数据，但直到最近我们才有能力实时操作这些数据进行分析。美国地质调查局托管的[EarthExplorer](https://oreil.ly/OnxdN)（Landsat），以及[Copernicus开放获取中心](https://oreil.ly/gnY7c)，提供来自欧洲空间局（ESA）哨兵卫星的数据。Landsat高分辨率卫星图像使我们能够评估和测量环境变化，理解气候科学和农业实践的影响，并在时间和空间上应对自然灾害等等。免费卫星图像的出现使得全球经济挑战区域的决策者能够获得见解并专注于解决方案。
- en: '*Spatial analysis* includes methods and tools applied to location data, in
    which the results vary based on the location or frame analyzing the object. It
    is essentially “location-specific” analysis. This can be as simple as locating
    the nearest subway station or asking how many green spaces or parks are in a community,
    or as complex as revealing patterns in transportation accessibility or health
    outcomes. *Spatial algorithms* are a method of solving a problem by listing and
    executing sequential instructions integrated with geographic properties, used
    for analysis, modeling, and prediction.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*空间分析*包括应用于位置数据的方法和工具，其结果因位置或分析对象的框架而异。它本质上是“位置特定”的分析。这可以简单到查找最近的地铁站，或询问社区中有多少绿地或公园，也可以复杂到揭示交通可达性或健康结果中的模式。*空间算法*是通过列出和执行与地理属性集成的顺序指令来解决问题的方法，用于分析、建模和预测。'
- en: 'GIS solve spatial problems that rely on location information like latitude,
    longitude, and projection. Spatial information answers “where” questions: where
    on the Earth’s surface did something occur?'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: GIS解决依赖于位置信息（如纬度、经度和投影）的空间问题。空间信息回答“在地球表面的哪里发生了某事？”
- en: Imagine, for example, stepping out of your hotel on 41st and Madison Avenue
    in Manhattan. You search in your mapping app for where you might purchase a coat,
    since the weather is dramatically colder than you anticipated. Instantly, the
    locations of apparel stores populate your screen.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象一下，您走出曼哈顿的第41街和麦迪逊大道的酒店。由于天气比您预期的寒冷得多，您在地图应用中搜索可能购买外套的地方。瞬间，服装店的位置出现在您的屏幕上。
- en: 'Or on the marketing side, say you work for an outdoor provision company, producing
    top-of-the-line outerwear for the discerning customer. You could use geospatial
    information to answer questions like: Where do your potential customers live,
    visit, or travel? Would a potential retail location nearby be a profitable marketing
    decision? How far would potential customers travel? What is the mean income within
    each of the locations you are considering? These *where* components exist in retail
    and commercial environments, the military, climate science, and health care, to
    name a few examples.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 或者从市场营销的角度来说，比如您在一家户外用品公司工作，为高品质的户外服装制造商。您可以使用地理空间信息来回答诸如：您潜在客户居住在哪里，访问哪里或旅行到哪里？附近的潜在零售位置是否是盈利的营销决策？潜在客户愿意走多远？在您正在考虑的每个位置内的平均收入是多少？这些*何处*组成部分存在于零售和商业环境中，军事、气候科学和医疗保健等领域，仅举几例。
- en: Attributes are another important component of spatially referenced data. *Spatial
    attributes* are bounded in space; these could include a community boundary or
    infrastructure, such as a roadway or metro station, usually represented by a polygon.
    Spatially referenced data can also have nonspatial attributes, such as the income
    of residents in a certain location, and can provide context for the location intelligence.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 属性是空间参考数据的另一个重要组成部分。*空间属性*在空间上有界限；这些可以包括社区边界或基础设施，如道路或地铁站，通常用多边形表示。空间参考数据还可以具有非空间属性，例如特定位置居民的收入，并为位置智能提供背景。
- en: 'The *I* in GIS is increasingly being stored in the cloud. Today your laptop
    can access petabytes of information made available by geospatial analytics processing
    services in the cloud. This chapter will explore one of those services: [Google
    Earth Engine (GEE)](https://oreil.ly/ukyb0).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: GIS中的*I*越来越多地存储在云端。今天，您的笔记本可以访问由云端地理空间分析处理服务提供的宠字节信息。本章将探讨其中一种服务：[谷歌地球引擎（GEE）](https://oreil.ly/ukyb0)。
- en: 'In 2007, Jim Gray, a computer scientist at Microsoft until he was lost at sea
    later that year, was quite prescient when he said: “For data analysis, one possibility
    is to move the data to you, but the other possibility is to move your query to
    the data. You can either move your questions or the data. Often it turns out to
    be more efficient to move the questions than to move the data.” That’s the basic
    principle behind doing geospatial analytics in the cloud.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 2007年，微软计算机科学家Jim Gray，在同年失踪前曾发表过相当有远见的言论：“对于数据分析，一种可能是将数据移动到您的位置，但另一种可能性是将您的查询移动到数据。您可以移动您的问题，也可以移动数据。通常情况下，移动问题比移动数据更有效。”这是在云端进行地理空间分析的基本原则。
- en: 'In this chapter, you’ll use GEE to perform a variety of tasks associated with
    geographic properties in spatial environments. We’ll also take a quick look at
    another tool that integrates with Python: Leafmap. By the end of the chapter,
    you’ll have enough familiarity with these interfaces to follow along with later
    chapters and eventually launch your own independent project.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将使用GEE来执行与空间环境中地理属性相关的各种任务。我们还将简要介绍另一个与Python集成的工具：Leafmap。通过本章末尾，您将对这些接口有足够的熟悉度，以便跟随后续章节，并最终启动自己的独立项目。
- en: Google Earth Engine Setup
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谷歌地球引擎设置
- en: But first, you’ll need to create your work environments. The Jupyter Notebooks
    for this chapter are available on [GitHub](https://oreil.ly/SbS0R). You can open
    them up and follow along or experiment with the code and explore separately when
    time permits. The instructions for installing the necessary packages and resources
    will be covered as well.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但首先，您需要创建您的工作环境。本章的Jupyter笔记本可以在[GitHub](https://oreil.ly/SbS0R)上找到。您可以打开它们并跟随操作，或者在有空时分别进行代码实验和探索。安装必要的软件包和资源的说明也将涵盖在内。
- en: 'The GEE archive contains more than 60 *petabytes* of satellite imagery and
    remote sensing and geospatial data—all freely available, preprocessed, and easy
    to access. Imagine trying to download all that to your laptop! GEE’s algorithms
    allow the public to create interactive applications or data products in the cloud.
    You just need to apply for a free [Google Earth Engine account](https://oreil.ly/xVOCN)
    (which comes with 250 gigabytes of storage) and authenticate within either the
    terminal or notebook when you are granted access. Follow these steps:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: GEE 数据库包含超过 60 *拍字节* 的卫星图像和遥感以及地理空间数据，所有这些数据都是免费提供的，经过预处理，易于访问。想象一下试图将所有这些数据下载到您的笔记本电脑上！GEE
    的算法允许公众在云端创建交互式应用程序或数据产品。您只需申请一个免费的 [Google Earth Engine 账户](https://oreil.ly/xVOCN)（配备
    250 千兆字节的存储空间），并在获得访问权限后在终端或笔记本中进行身份验证。按照以下步骤进行：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: GEE will send you a unique link and verification code. Paste the code into the
    box and hit Enter.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: GEE 将向您发送一个唯一的链接和验证代码。将代码粘贴到框中并按 Enter 键。
- en: Using the GEE Console and geemap
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 GEE 控制台和 geemap
- en: 'The GEE console is a quick resource for locating images and running the code.
    But Python isn’t GEE’s native language: the GEE code editor is designed for writing
    and executing scripts in JavaScript. Its Javascript API has a robust IDE, extensive
    documentation, and interactive visualization functionality, and none of that is
    natively available for Python. To access the full spectrum of interactivity in
    a Python environment, you will need to use [geemap](https://geemap.org), a Python
    package for interacting with GEE created by [Dr. Qiusheng Wu](https://oreil.ly/bGQq1).'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: GEE 控制台是快速定位图像并运行代码的资源。但是 Python 并非 GEE 的本机语言：GEE 代码编辑器专为在 JavaScript 中编写和执行脚本而设计。其
    JavaScript API 具有强大的 IDE、广泛的文档和交互式可视化功能，而这些在 Python 环境中都不是本机可用的。要在 Python 环境中使用完整的交互性，您需要使用
    [geemap](https://geemap.org)，这是由 [吴秋生博士](https://oreil.ly/bGQq1) 创建的用于与 GEE 交互的
    Python 包。
- en: Fortunately, you can use the extensive GEE catalog to locate and visualize data
    with a single click, with limited or no JavaScript expertise. You can find your
    way around the interface and generate maps simply by scrolling through the Scripts
    tab. Each code script allows you to run JavaScript code and generate maps. But
    if you’re seeking autonomy to build your own maps and engage interactively, you’ll
    want to use geemap. The GEE catalog (pictured in [Figure 4-1](#the_gee_console))
    contains useful information you will need when deciding how to interact with data
    in geemap.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，您可以使用广泛的 GEE 目录，通过单击一个按钮快速定位和可视化数据，即使没有或只有有限的 JavaScript 专业知识。您可以通过浏览“脚本”选项卡轻松找到界面并生成地图。每个代码脚本都允许您运行
    JavaScript 代码并生成地图。但是，如果您希望自主构建自己的地图并进行交互操作，您将需要使用 geemap。GEE 目录（如 [图 4-1](#the_gee_console)
    所示）包含您在决定如何与 geemap 中的数据交互时所需的有用信息。
- en: '![The GEE console](assets/pgda_0401.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![GEE 控制台](assets/pgda_0401.png)'
- en: Figure 4-1\. The GEE catalog
  id: totrans-20
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-1\. GEE 目录
- en: Look through the Earth Engine Data Catalog, find a dataset [collection](https://oreil.ly/yAow0),
    and scroll down the page. At the bottom, you will notice that the JavaScript code
    is provided. Simply copy and paste it into the console, as shown in [Figure 4-2](#google_earth_engine_ide).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览 Earth Engine 数据目录，找到数据集 [集合](https://oreil.ly/yAow0)，并向下滚动页面。在页面底部，您会注意到提供了
    JavaScript 代码。只需将其复制并粘贴到控制台中，如 [图 4-2](#google_earth_engine_ide) 所示。
- en: '[Figure 4-2](#google_earth_engine_ide) shows what is generated when you paste
    the code into the console and select Run from the list of options in the center
    panel. For example, the data from [Figure 4-1](#the_gee_console) generates USGS
    Landsat 8 Level 2, Collection 2, Tier 1, identified as `ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")`.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 4-2](#google_earth_engine_ide) 展示了当您将代码粘贴到控制台并从中心面板的选项列表中选择“运行”时生成的内容。例如，来自
    [图 4-1](#the_gee_console) 的数据生成了 USGS Landsat 8 Level 2, Collection 2，被标识为 `ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")`。'
- en: '![Google Earth Engine IDE](assets/pgda_0402.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![Google Earth Engine IDE](assets/pgda_0402.png)'
- en: Figure 4-2\. Google Earth Engine IDE
  id: totrans-24
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-2\. Google Earth Engine IDE
- en: Let’s learn how to generate GEE images using Python scripts in a Jupyter Notebook.
    geemap even has a tool that will convert JavaScript code to Python right in your
    Jupyter Notebook.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何在 Jupyter Notebook 中使用 Python 脚本生成 GEE 图像。geemap 甚至有一个工具，可以直接在您的 Jupyter
    Notebook 中将 JavaScript 代码转换为 Python。
- en: Jupyter Notebook is a separate entity from your Python environments. It was
    originally named for its ability to to interact with three different coding languages,
    Julia, Python, and R, but it has expanded well beyond its original capabilities.
    You have to tell the system which version of Python you want. The *kernel* is
    how the Notebook and Python communicate.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 是独立于您的 Python 环境的实体。最初它是以其与三种不同编程语言 Julia、Python 和 R 交互的能力而命名的，但它已经远远超出了最初的能力范围。您必须告诉系统您想要使用的
    Python 版本。*内核* 是 Notebook 和 Python 之间通信的方式。
- en: Installing geemap will create a console in a Notebook environment similar to
    what you see in the GEE console but with the Python API instead of JavaScript.
    Once you set up a Conda environment, you will be able to interact with GEE within
    a Jupyter Notebook. First, you will need to download the required packages and
    libraries.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 geemap 将在 Notebook 环境中创建一个类似于 GEE 控制台的控制台，但使用的是 Python API 而不是 JavaScript。一旦您设置了
    Conda 环境，您就可以在 Jupyter Notebook 中与 GEE 进行交互。首先，您需要下载所需的软件包和库。
- en: Creating a Conda Environment
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Conda 环境
- en: '[Anaconda](https://www.anaconda.com) is a popular platform-agnostic distribution
    manager for Python and other programming languages that installs and manages Conda
    packages. You could think of Anaconda as storage for all of your data science
    tools. Conda manages your packages and tools, allowing you to upload new tools
    as needed and to customize your work environment.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[Anaconda](https://www.anaconda.com) 是一个流行的跨平台 Python 和其他编程语言的分发管理器，用于安装和管理
    Conda 软件包。您可以将 Anaconda 视为所有数据科学工具的存储库。Conda 管理您的软件包和工具，允许您根据需要上传新工具并自定义您的工作环境。'
- en: Conda packages are stored in the Anaconda repository or the cloud, so you don’t
    need additional tools for installation. Conda allows you to make as many environments
    as you need with your preferred version of Python. You also have the option of
    downloading a leaner version of Anaconda called [Miniconda](https://oreil.ly/nh0LE),
    which I prefer, regardless of your operating system. Both are straightforward
    installations. I recommend the Miniconda installation instructions in [this tutorial
    by Ted Petrou](https://oreil.ly/nPTlh).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Conda 软件包存储在 Anaconda 仓库或云中，因此您无需额外的工具进行安装。Conda 允许您根据需要使用您喜欢的 Python 版本创建任意数量的环境。您也可以选择下载一个更精简的
    Anaconda 版本，称为[Miniconda](https://oreil.ly/nh0LE)，无论您使用的是哪种操作系统，我都推荐它。两者都是简单的安装。我建议查看[Ted
    Petrou 的这篇教程](https://oreil.ly/nPTlh)中的 Miniconda 安装说明。
- en: Opening the Jupyter Notebook
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打开 Jupyter Notebook
- en: 'Jupyter Notebooks are open source, interactive, web-based tools. They run in
    your browser and don’t require any additional downloads. You can access the Jupyter
    Notebook for this chapter on [GitHub](https://oreil.ly/SbS0R): the filename is
    *4 Geospatial Analytics in the Cloud*. You can find and configure the installed
    *nbextensions* in the file menu of your Notebook. These are handy plug-ins that
    add more functionality to your Jupyter Notebook environment.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter Notebook 是开源的互动式 Web 工具。它们在您的浏览器中运行，不需要额外的下载。您可以在[GitHub](https://oreil.ly/SbS0R)上访问本章的
    Jupyter Notebook：文件名为*4 Geospatial Analytics in the Cloud*。您可以在 Notebook 的文件菜单中找到并配置已安装的*nbextensions*。这些是方便的插件，为您的
    Jupyter Notebook 环境增加更多功能。
- en: Installing geemap and Other Packages
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 geemap 和其他软件包
- en: 'Once you’ve installed your Conda environment, you can open your terminal or
    command prompt to install geemap. Execute the following code line by line to activate
    your work environment. Here, I’ve named my geospatial environment `gee`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成 Conda 环境后，您可以打开终端或命令提示符安装 geemap。逐行执行以下代码以激活您的工作环境。在这里，我将我的地理空间环境命名为`gee`：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Notice that I specified the version of Python to include in the environment.
    I’ve done this because there are still some dependencies that aren’t ready for
    the latest version of Python. That is one important reason why environments are
    useful: you will receive a warning if there are compatibility conflicts, and you
    can create an environment using the version that will avoid those conflicts.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我指定了要包含在环境中的 Python 版本。我这样做是因为仍有一些依赖项尚未准备好支持最新版本的 Python。这是环境很有用的一个重要原因：如果存在兼容性冲突，您将收到警告，并且可以使用避免这些冲突的版本创建环境。
- en: This install also includes Cartopy, a Python package for geospatial data processing;
    `jupyter_contrib_nbextensions`, a package for expanded functionality; and `contrib_nbextensions`,
    which will add styles to the Jupyter configuration.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这次安装还包括了 Cartopy，一个用于地理空间数据处理的 Python 包；`jupyter_contrib_nbextensions`，一个用于扩展功能的包；以及
    `contrib_nbextensions`，它将向 Jupyter 配置中添加样式。
- en: 'Now that you’ve installed the packages into your environment, whenever you
    open a new session, you will only need to run `import geemap` in a code cell.
    The environment is now visible when you activate, shown here as `(gee)`:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经将包安装到了你的环境中，每当你打开一个新的会话时，你只需要在一个代码单元中运行 `import geemap`。环境现在在你激活时可见，如下所示
    `(gee)`：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This environment will contain all of the associated packages as well as their
    dependencies. You can create different environments (abbreviated as `env`) that
    include the dependencies and packages unique to each project.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 此环境将包含所有相关的包以及它们的依赖关系。你可以创建不同的环境（简称为 `env`），其中包含每个项目特有的依赖关系和包。
- en: 'The `conda list` command will show you which packages are installed in the
    active environment. This following is a snippet of what loads for me when I execute
    the command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`conda list` 命令会显示当前环境中安装了哪些包。下面是我执行该命令时加载的部分内容：'
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This is helpful in case your code throws an error due to a missing dependency.
    Run `conda list`; you should see the versions listed as well. Running `conda env
    list` will display any environments you already have installed.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于你的代码由于缺少依赖而抛出错误很有帮助。运行 `conda list`；你应该也会看到列出的版本。运行 `conda env list` 将显示你已经安装的任何环境。
- en: 'I install a kernel (a part of the operating system running in your environment)
    for each environment that I activate:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我为每个激活的环境安装一个内核（运行在你的环境中的操作系统的一部分）：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now you can add the kernel to your environment—in this case, `*<your environment
    name>*` is `gee`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以将内核添加到你的环境中——在这种情况下，`*<你的环境名称>*` 是 `gee`：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Your local computer has to access files. The `import` statement will add the
    package as a Python *object* (that is, a collection of data and methods) into
    the currently running instance of the program.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你的本地计算机必须访问文件。`import` 语句将包添加为 Python *对象*（即，一组数据和方法）到当前正在运行的程序实例中。
- en: 'Open your Terminal and write `**jupyter notebook**` into the console. A Notebook
    should open in your browser. You will need to import the required libraries into
    the Notebook. You can see them listed in the code shell. Recall that `os` allows
    you to access the operating system where you are running Python, `ee` is the Earth
    Engine library, and `geemap` allows you to interface via Python. You’ll import
    these libraries using the `import` function:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 打开你的终端并在控制台中写入 `**jupyter notebook**`。一个 Notebook 应该会在你的浏览器中打开。你需要将所需的库导入到 Notebook
    中。你可以在代码 shell 中看到它们列出。请注意，`os` 允许你访问运行 Python 的操作系统，`ee` 是 Earth Engine 库，而 `geemap`
    允许你通过 Python 进行接口操作。你将使用 `import` 函数导入这些库：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The central component of a computer operating system is the *kernel*. The kernel
    is specific to each programming language, and the default kernel depends on what
    version of Python you are running in your Notebook.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机操作系统的中心组件是*内核*。内核针对每种编程语言具体化，并且默认内核取决于你在 Notebook 中运行的 Python 版本。
- en: You will need to restart the kernel for the update to take effect. Select Kernel
    from the menu and scroll to the option to rerun. You are now ready to begin working
    in the Notebook.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要重新启动内核以使更新生效。从菜单中选择 Kernel，滚动到重新运行选项。你现在可以开始在 Notebook 中工作了。
- en: 'Note the hash symbol (#) in the last line of the previous code block. In Python
    code, the hash symbol denotes a *comment*, or a line of the code that won’t run.
    When you want to run that line of code, delete the hash symbol. To make sure you
    are using an updated geemap package, *uncomment* that last line (that is, remove
    the # in the last row) before running the code. Once you update geemap, you can
    once again insert the hash, since you won’t need to update the package every time
    you run the code. You may also add commented text to include any clarifying details.
    You will see this practice in many of the code blocks in this book.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意上一个代码块的最后一行中的井号（#）。在 Python 代码中，井号表示*注释*，或者一行代码，不会运行。当你想要运行该行代码时，删除井号。为了确保你使用的是更新的
    geemap 包，*取消注释*最后一行（即，删除最后一行的井号）然后再运行代码。更新 geemap 后，你可以再次插入井号，因为你不需要每次运行代码时都更新该包。你还可以添加注释文本以包含任何澄清细节。你将在本书的许多代码块中看到这种做法。
- en: Navigating geemap
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航 geemap
- en: I mentioned objects earlier. Python focuses on objects, instead of what you
    may be familiar with as *functions* in other programming languages, so it’s known
    as an *object-oriented* programming language.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前提到了对象。Python专注于对象，而不是您在其他编程语言中熟悉的*函数*，因此被称为*面向对象*的编程语言。
- en: You may recall from earlier chapters that a *class* is like a blueprint of a
    building  The building is the object, but many buildings can be built from a set
    of blueprints, right? The object in a specific line of code is an *instance* of
    the class much in the same way that a building is an *instance* of those blueprints.
    Creating the object is called *instantiation*.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还记得早期章节中提到的*类*就像建筑物的蓝图一样。建筑物是对象，但是可以根据一套蓝图建造许多建筑物，对吧？代码中的对象是类的*实例*，就像建筑物是那些蓝图的*实例*一样。创建对象称为*实例化*。
- en: 'The next code block is declaring an object instance, which I’m calling `m``ap`,
    and defining the attributes and methods in `geemap.Map()`. You can set your variable
    to anything you would like, but be consistent. I suggest keeping it simple but
    informative and practical. You’ll access the attributes of objects using the object
    name `map`. geemap defaults to a world map (as of this writing). If you prefer
    to center your map in a specific place, you can indicate where using latitude/longitude
    (lat/lon) coordinates and a zoom level. The following will center your map on
    the US:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个代码块是声明一个对象实例，我称之为`m``ap`，并在`geemap.Map()`中定义属性和方法。您可以将您的变量设置为任何您喜欢的内容，但要保持一致。我建议保持简单但信息丰富和实用。您将使用对象名称`map`访问对象的属性。截至本文撰写时，geemap默认显示世界地图。如果您希望将地图中心定位到特定位置，可以使用纬度/经度（lat/lon）坐标和缩放级别来指定位置。以下将使您的地图以美国为中心：
- en: '[PRE7]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Layers and Tools
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图层与工具
- en: '[Figure 4-3](#the_layers_and_tools_menu) shows the Layers and Tools menu on
    the far right of the map. Each layer of a map is actually its own database that
    holds collections of geographic data. These might include roads, buildings, streams,
    or lakes, all represented as collections of points, lines, and/or polygons in
    vector data or imagery represented from raster data. The Layers icon will show
    you the different layers in your map. You can change their opacity, toggle layers
    on and off, and examine other attributes. Enter the following code to render a
    map in your notebook:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 4-3](#the_layers_and_tools_menu) 显示了地图右侧的图层和工具菜单。地图的每一层实际上都是自己的数据库，其中包含地理数据的集合。这些可能包括道路、建筑物、河流或湖泊，都以点、线和/或多边形的集合形式表示，可以是矢量数据或来自栅格数据的影像。图层图标将显示地图中的不同图层。您可以更改它们的透明度，切换图层的显示/隐藏，并检查其他属性。输入以下代码以在您的笔记本中渲染地图：'
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![The Layers and Tools menu](assets/pgda_0403.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图层与工具菜单](assets/pgda_0403.png)'
- en: Figure 4-3\. The Layers and Tools menu
  id: totrans-63
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-3\. 图层与工具菜单
- en: Click the different options to see how they customize the map.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 单击不同的选项以查看它们如何自定义地图。
- en: The globe icon (on the far left in [Figure 4-4](#searching_location_data_using_gee_asset))
    is the search location/data function. This is where you can find data to load
    onto your map by entering a name and address or a set of lat/lon coordinates or
    by searching and importing data. We will explore more of these options as we build
    a few map layers, and I’ll show you some shortcuts to help you navigate the mapping
    canvas.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 球形图标（在[图 4-4](#searching_location_data_using_gee_asset)中的最左侧）是搜索位置/数据功能。在这里，您可以通过输入名称和地址或一组纬度/经度坐标或搜索和导入数据来找到要加载到地图上的数据。随着我们构建几个地图图层，我们将探索更多这些选项，并向您展示一些快捷方式，帮助您浏览地图画布。
- en: '![Searching location data using GEE asset ID (Landsat/LC08/C01) in the import
    window](assets/pgda_0404.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![在导入窗口中使用GEE资产ID（Landsat/LC08/C01）搜索位置数据](assets/pgda_0404.png)'
- en: Figure 4-4\. Searching location data using GEE asset ID (Landsat/LC08/C01) in
    the import window
  id: totrans-67
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-4\. 使用GEE资产ID（Landsat/LC08/C01）在导入窗口中搜索位置数据
- en: You can access USGS Landsat maps by entering the search parameters in geemap.
    Select “data” and enter a few terms into the search bar. Again, exploring GEE
    may help to identify maps of interest. You can call them to your own project here
    by name. Once you select a Landsat collection and select the asset ID, click the
    import button (seen in blue in [Figure 4-4](#searching_location_data_using_gee_asset)).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在geemap中输入搜索参数来访问USGS Landsat地图。选择“数据”并在搜索栏中输入几个词条。再次探索GEE可能有助于识别感兴趣的地图。您可以按名称将它们调用到您自己的项目中。一旦选择了一个Landsat集合并选择了资产ID，点击导入按钮（在[图
    4-4](#searching_location_data_using_gee_asset)中显示为蓝色）。
- en: To see available arguments and additional customization options, place your
    cursor within the parentheses of `geemap.Map()` and hit Shift + Tab. The text
    below the map in [Figure 4-5](#a_basemap_in_gee_with_docstring) should now be
    visible. Here you can read information about available arguments and additional
    steps for further customization of the map.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看可用参数和其他自定义选项，请将光标置于`geemap.Map()`括号内，然后按Shift + Tab。现在可以在[Figue 4-5](#a_basemap_in_gee_with_docstring)下的地图下方看到文本。在这里，您可以阅读有关可用参数和进一步自定义地图的信息。
- en: '![A basemap in GEE with docstring](assets/pgda_0405.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![在GEE中带有文档字符串的底图](assets/pgda_0405.png)'
- en: Figure 4-5\. A basemap in GEE with docstring
  id: totrans-71
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图4-5\. 在GEE中带有文档字符串的底图
- en: Basemaps
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 底图
- en: 'Revisit [Figure 4-3](#the_layers_and_tools_menu) for a moment, and look on
    the far right for a dropdown menu. This menu contains a dictionary of available
    *basemaps*: basic maps that serve as the foundation for your data exploration.
    The Jupyter Notebook lets you scroll through available basemaps without writing
    code.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 请回顾[Figue 4-3](#the_layers_and_tools_menu)一刻，看看最右边的下拉菜单。此菜单包含可用*底图*的字典：这些基础地图是您数据探索的基础。Jupyter
    Notebook允许您在不编写代码的情况下滚动查看可用的底图。
- en: Depending on your data question or the nature of the data, you may want to show
    different geospatial information. For example, if you are interested in showing
    *hydrography* (the physical characteristics and navigability of bodies of water),
    you likely won’t select a basemap that depicts major roadways and highways. Basemaps
    are stored as raster or vector tiles for expediency and performance. The basemap
    dictionary interacts with a *TileLayer*, allowing connections with map services
    such as NASA’s [Global Imagery Browse Services (GIBS)](https://oreil.ly/AOwFm)
    and [OpenStreetMap](https://oreil.ly/1Ti4J).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的数据问题或数据的性质，您可能希望显示不同的地理空间信息。例如，如果您有兴趣显示*水文*（水体的物理特性和可航性），您可能不会选择展示主要道路和高速公路的底图。为了迅速和高效，底图存储为栅格或矢量瓦片。底图字典与*TileLayer*交互，允许与地图服务如NASA的[全球影像浏览服务（GIBS）](https://oreil.ly/AOwFm)和[OpenStreetMap](https://oreil.ly/1Ti4J)进行连接。
- en: 'The geemap package brings all the analytic functionality of GEE into *ipyleaflet,*
    an interactive library that brings mapping into your notebook, allowing the dynamic
    updates you see in the maps as you update locations and zoom levels. The default
    map in geemap is the Google Maps global view. You’re going to use OSM as your
    basemap next, so run:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: geemap软件包将GEE的所有分析功能带入*ipyleaflet*，这是一个交互式库，可以将地图引入到您的笔记本中，允许您在更新位置和缩放级别时看到地图的动态更新。geemap的默认地图是Google
    Maps的全球视图。接下来，您将使用OSM作为您的底图，请运行：
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Advanced users have the option of creating their own TileLayer, but a variety
    of other default basemaps are freely available in the [ipyleaflet map and basemaps](https://oreil.ly/HJJbT)
    resource.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 高级用户可以选择创建自己的TileLayer，但[ipyleaflet地图和底图](https://oreil.ly/HJJbT)资源中也提供多种默认底图。
- en: Now that you know how to load a map into your Notebook, let’s get brave and
    start experimenting. The goal is for you to get curious and feel comfortable navigating
    the Jupyter Notebook and selecting different tools.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您知道如何将地图加载到您的笔记本中，请大胆开始尝试吧。您的目标是让自己变得好奇，并且感到舒适地在Jupyter Notebook中导航和选择不同的工具。
- en: Exploring the Landsat 9 Image Collection
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索Landsat 9图像收集
- en: 'We have been working with Landsat data, so let’s look at the Landsat 9 data,
    which was first released in early 2022 and still rolling out as of this writing.
    To see how much of the dataset is available, run the following code:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一直在使用Landsat数据，所以让我们看看Landsat 9数据，它于2022年初首次发布，并且在本文撰写时仍在发布中。要查看数据集的可用部分，请运行以下代码：
- en: '[PRE10]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This outputs: `106919`.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这输出：`106919`。
- en: The collection includes 106,919 images—and is still increasing!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这一收藏包括106,919张图像，并且仍在增加中！
- en: 'For comparison, the Landsat/LC08/C02/T1_L2 collection contains 1,351,632 images.
    By the time this book is published, the number of Landsat 9 images will be vastly
    larger. You can calculate the median value of all matching bands to reduce the
    size of the image collection:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 作为比较，Landsat/LC08/C02/T1_L2收集包含1,351,632张图像。到本书出版时，Landsat 9的图像数量将大大增加。您可以计算所有匹配波段的中位值来减少图像收集的大小：
- en: '[PRE11]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Working with Spectral Bands
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用光谱带进行工作
- en: As you learned in [Chapter 1](ch01.xhtml#introduction_to_geospatial_analytics),
    *spectral bands* are like bins of different types of light. Reflected light is
    captured as bands of light energy in a range of different wavelengths or colors.
    Think of the electromagnetic spectrum. Each section of the spectrum is actually
    a band. The information about bands in this section is intended to highlight where
    to locate the data to enter into the code to access the correct information. The
    [bands](https://oreil.ly/NN6Eq) collected by Landsat 8 apply to Landsat 9\. You
    will need this data to apply *scaling factors*, or comparisons of linear distances
    that adjust for distortion of areas and angles based on the map projection (also
    covered in [Chapter 1](ch01.xhtml#introduction_to_geospatial_analytics)). Remember,
    the Earth is shaped as an ellipsoid, not a perfect sphere! We derive scaling factors
    from the Scale and the Offset, as shown in [Figure 4-6](#band_characteristics_of_landsat_eightso).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在[第1章](ch01.xhtml#introduction_to_geospatial_analytics)学到的，*光谱波段* 就像不同类型光的容器。反射光被捕捉为一系列不同波长或颜色的光能波段。想象电磁光谱。光谱的每个部分实际上是一个波段。本节中关于波段的信息旨在突出数据的位置，以便输入到代码中以访问正确的信息。Landsat
    8 收集的[波段](https://oreil.ly/NN6Eq)适用于 Landsat 9。您将需要这些数据来应用*缩放因子*，或线性距离的比较，以调整基于地图投影的面积和角度的扭曲（也在[第1章](ch01.xhtml#introduction_to_geospatial_analytics)中涵盖）。请记住，地球是椭圆形的，而不是完美的球体！我们从比例和偏移中推导出缩放因子，如[图4-6](#band_characteristics_of_landsat_eightso)所示。
- en: '![Band characteristics of Landsat 8/9 data](assets/pgda_0406.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![Landsat 8/9 数据的波段特征](assets/pgda_0406.png)'
- en: Figure 4-6\. Band characteristics of Landsat 8/9 data
  id: totrans-89
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图4-6。Landsat 8/9 数据的波段特征
- en: The USGS provides guidance on which spectral bands are best for different types
    of research. You can learn [more about the science](https://oreil.ly/vTrFF) and
    explore [common Landsat band combinations](https://oreil.ly/HdXC0).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: USGS 提供了关于哪些光谱波段最适合不同类型研究的指导。您可以了解[更多关于科学](https://oreil.ly/vTrFF)，并探索[常见的 Landsat
    波段组合](https://oreil.ly/HdXC0)。
- en: You’ll import *ee.ImageCollection* into your Jupyter Notebook and add it as
    a data layer to your map. You’ll then create a composite image from all of the
    images. This will yield the median value of the spectral bands.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在 Jupyter Notebook 中导入*ee.ImageCollection*并将其添加为数据层到您的地图中。然后，您将从所有图像创建一个复合图像。这将产生光谱波段的中位数值。
- en: 'In Python, we define functions by the keyword `def`. In the following code,
    the function name is `apply_scale_factors`, followed by the parameter `(image)`:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，我们使用关键字`def`定义函数。在下面的代码中，函数名为`apply_scale_factors`，参数为`(image)`：
- en: '[PRE12]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The asterisk (*) tells the function that you want to select multiple bands
    that meet the defined search requirements. Landsat’s sensors are the Operational
    Land Imager (OLI) and Thermal Infrared Sensor (TIRS). The OLI produces spectral
    bands 1 through 9, and TIRS consists of two thermal bands: SR_B and ST_B.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 星号（*）告诉函数您要选择满足定义的搜索要求的多个波段。Landsat 的传感器是操作陆地成像仪（OLI）和热红外传感器（TIRS）。OLI 产生光谱波段
    1 到 9，而 TIRS 包括两个热波段：SR_B 和 ST_B。
- en: 'The colon (:) signals where the function body begins. Inside the function body,
    which is indented, the `return` statement determines the value to be returned.
    After the function definition is complete, calling the function with an argument
    returns a value:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 冒号（:）标志着函数体的开始。在缩进的函数体内，`return` 语句确定要返回的值。函数定义完成后，使用参数调用函数将返回一个值：
- en: '[PRE13]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: To understand why you would want to pick and choose certain bands, think of
    them as having a spectral signature. Natural color bands use SR_B4 for red, SR_B3
    for green, and SR_B2 for blue. Green indicates healthy vegetation, brown is less
    healthy, whitish gray typically indicates urban features, and water will appear
    dark blue or black.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解为什么您会希望选择某些波段，请将它们视为具有光谱特征签名。自然彩色波段使用 SR_B4 代表红色，SR_B3 代表绿色，SR_B2 代表蓝色。绿色表示健康的植被，棕色表示不那么健康，白灰色通常表示城市特征，水域将显示为深蓝或黑色。
- en: 'The near-infrared (NIR) composite uses NIR (SR_B5), red (SR_B4), and green
    (SR_B3). Areas in red have better vegetation health, dark areas are water, and
    urban areas are white. So include these as your visualization parameters:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 近红外（NIR）复合物使用 NIR（SR_B5）、红色（SR_B4）和绿色（SR_B3）。红色区域具有更好的植被健康状况，暗区域是水域，城市区域是白色。因此，请包括这些作为您的可视化参数：
- en: '[PRE14]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now add them as data layers to your map:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将它们作为数据层添加到您的地图中：
- en: '[PRE15]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In [Figure 4-7](#different_band_combinations_of_landsat), I toggled the infrared
    layer off so you can see the other bands more clearly. There appears to be cloud
    cover as well. Landsat 9 resamples every 16 days, so it will look different when
    you view it.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [图 4-7](#different_band_combinations_of_landsat) 中，我将红外层关闭，这样您可以更清楚地看到其他波段。还似乎有云层存在。Landsat
    9 每 16 天重采样一次，因此在查看时会有所不同。
- en: '![Different band combinations of Landsat 8/9](assets/pgda_0407.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![Landsat 8/9 不同波段组合](assets/pgda_0407.png)'
- en: Figure 4-7\. Different band combinations of Landsat 8/9
  id: totrans-104
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-7\. Landsat 8/9 不同波段组合
- en: 'If you hover your cursor over the toolbar icon, you will see the Layers menu
    appear. You can change the opacity of any maps and deselect any layers you don’t
    want to view in the Layers menu. You can also click the gear icon to explore attributes.
    You can also specify the minimum and maximum values to display. Stretching the
    data spreads the pixel values, and you can experiment with different values. Your
    data will show the range of the bands, and you can decide which values you want
    to display:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将鼠标悬停在工具栏图标上，将会看到图层菜单出现。您可以更改任何地图的不透明度，并取消选择您不想在图层菜单中查看的图层。您还可以单击齿轮图标以探索属性。您还可以指定要显示的最小和最大值。拉伸数据会展开像素值，您可以尝试不同的值。您的数据将显示波段的范围，您可以决定要显示哪些值：
- en: '[PRE16]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'To add labels for these layers, create a list of labels:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要为这些图层添加标签，请创建标签列表：
- en: '[PRE17]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Then assign a label to each layer:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 然后为每一层分配一个标签：
- en: '[PRE18]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Examining two more parameters in [Figure 4-8](#landsat_band_combinations), you
    can also see shortwave infrared. Here, darker green indicates dense vegetation,
    urban areas are shown in blue, healthy vegetation is green, and bare earth is
    magenta.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [图 4-8](#landsat_band_combinations) 中检查另外两个参数，您还可以看到短波红外线。这里，深绿色表示密集植被，蓝色显示城市区域，健康植被为绿色，裸地为品红色。
- en: '![Landsat band combinations](assets/pgda_0408.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![Landsat 波段组合](assets/pgda_0408.png)'
- en: Figure 4-8\. Landsat band combinations
  id: totrans-113
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-8\. Landsat 波段组合
- en: Let’s apply your introduction to GEE and geemap to begin exploring.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将您对 GEE 和 geemap 的介绍应用到开始探索。
- en: The National Land Cover Database Basemap
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 国家土地覆盖数据库底图
- en: The [National Land Cover Database (NLCD)](https://oreil.ly/xNJul) tracks land
    cover in the US. It is freely available in the [Earth Engine Data Catalog](https://oreil.ly/1IuYF)
    and is updated every five years. *Land cover* data includes spatial reference
    and land surface characteristics, such as tree canopy cover (which we explored
    in the last chapter), impervious surfaces, and additional patterns of biodiversity
    and climate changes. *Impervious land cover* means nonnatural surfaces, such as
    asphalt, concrete, or other manmade layers, that limit the natural penetration
    of rainwater into soil. This information can help predict which areas may be more
    prone to flooding during heavy rains.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[National Land Cover Database (NLCD)](https://oreil.ly/xNJul) 跟踪美国的土地覆盖情况。它在
    [Earth Engine 数据目录](https://oreil.ly/1IuYF) 中免费提供，并每五年更新一次。*土地覆盖* 数据包括空间参考和地表特征，例如树冠覆盖（我们在上一章节中探索过的），不透水表面以及生物多样性和气候变化的额外模式。*不透水土地覆盖*
    意味着非自然表面，例如沥青、混凝土或其他人造层，限制雨水渗入土壤的自然能力。这些信息可以帮助预测在暴雨期间哪些区域可能更容易发生洪水。'
- en: In this section, you’ll use NLCD data to perform a Landsat-based examination
    of the imperviousness data layer (for urban classes) and of decision-tree classification
    (for the rest). We won’t be doing a full activity here, just a quick orientation,
    but I encourage you to explore more.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将使用 NLCD 数据对几个 Landsat 基础上的不透水数据层（用于城市类）和决策树分类（用于其他类）进行检查。我们不会在这里进行完整的活动，只是快速导向，但我鼓励您进一步探索。
- en: Accessing the Data
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问数据
- en: Navigate to the [Earth Engine Data Catalog](https://oreil.ly/oWZcr) and scroll
    to NLCD_Releases/2019_REL/NLCD or the National Land Cover Database, as shown in
    [Figure 4-9](#the_earth_engine_data_catalog). Earlier we noted that you can simply
    add this data to the map, but there are a few more options here that I want to
    show you. Copy the JavaScript code and place it on your clipboard.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 转到 [Earth Engine 数据目录](https://oreil.ly/oWZcr) 并滚动到 NLCD_Releases/2019_REL/NLCD
    或国家土地覆盖数据库，如 [图 4-9](#the_earth_engine_data_catalog) 所示。早些时候我们注意到，您只需将此数据添加到地图上，但这里还有几个选项我想向您展示。复制
    JavaScript 代码并将其放在剪贴板上。
- en: '![The Earth Engine Data Catalog](assets/pgda_0409.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![Earth Engine 数据目录](assets/pgda_0409.png)'
- en: Figure 4-9\. The Earth Engine Data Catalog
  id: totrans-121
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-9\. Earth Engine 数据目录
- en: The NLCD catalog provides a wealth of information, including date ranges for
    collection, the data source, an image snippet, a data description, information
    about the multispectral bands, and image properties.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: NLCD 目录提供了丰富的信息，包括采集的日期范围、数据源、图像片段、数据描述、多光谱波段信息和图像属性。
- en: 'In geemap, generate a default map of the world:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在 geemap 中，生成世界地图的默认设置：
- en: '[PRE19]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Next, select the convert JavaScript icon. The box shown in [Figure 4-9](#the_earth_engine_data_catalog)
    will pop up. Paste the JavaScript code from the catalog into the box. Follow the
    instructions in the code comments that populate in the pop-up shown in [Figure 4-10](#using_geemap_to_convert_a_script_from_j):'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，选择转换 JavaScript 图标。将显示 [图 4-9](#the_earth_engine_data_catalog) 中的框。将 JavaScript
    代码从目录粘贴到框中。按照弹出窗口中的代码注释中显示的说明，继续执行 [图 4-10](#using_geemap_to_convert_a_script_from_j)
    中显示的操作：
- en: '[PRE20]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Once you hit Convert, you will see the code update from JavaScript to Python,
    as shown in [Figure 4-10](#using_geemap_to_convert_a_script_from_j).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“转换”后，您将看到代码从 JavaScript 更新为 Python，如 [图 4-10](#using_geemap_to_convert_a_script_from_j)
    所示。
- en: '![Using geemap to convert a script from JavaScript to Python](assets/pgda_0410.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![使用 geemap 将脚本从 JavaScript 转换为 Python](assets/pgda_0410.png)'
- en: Figure 4-10\. Using geemap to convert a script from JavaScript to Python
  id: totrans-129
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-10\. 使用 geemap 将脚本从 JavaScript 转换为 Python
- en: If the code does not update into a new cell in your Jupyter Notebook, you can
    cut and paste it into a new cell and run the cell. The image will now appear as
    your map.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果代码没有更新到 Jupyter Notebook 的新单元格中，您可以剪切并粘贴到新单元格中运行该单元格。地图现在将显示为您的地图。
- en: 'Now let’s include the default NLCD legend. Select the landcover layer. To discover
    which legends are available as defaults, run the `builtin_legend` function:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们包括默认的 NLCD 图例。选择地表覆盖层。要发现可用作默认选项的图例，请运行 `builtin_legend` 函数：
- en: '[PRE21]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The NLCD’s legend will be listed as an option. Select it to add it to your map.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: NLCD 的图例将作为一个选项列出。选择它将其添加到您的地图中。
- en: Building a Custom Legend
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建自定义图例
- en: While the NLCD offers a built-in legend option, many datasets do not—and even
    when they do, these legends don’t always offer exactly what you need. Thus, it’s
    helpful to be able to create your own map legend. Let’s look at how to do that
    now.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 NLCD 提供了内置的图例选项，但许多数据集没有——即使有，这些图例也不总是完全符合您的需求。因此，能够创建自己的地图图例是很有帮助的。现在让我们看看如何做到这一点。
- en: The classes in a dataset usually correspond to the categories you’d want in
    a legend. Fortunately, you can convert a class table to a legend.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集中的类通常对应于您在图例中希望显示的类别。幸运的是，您可以将类表转换为图例。
- en: 'If your data is from the GEE data catalog, you can find a class table there.
    Then use the following code (or find this code cell in your Jupyter Notebook)
    and copy the text from the class table into it:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的数据来自 GEE 数据目录，您可以在那里找到一个类表。然后使用以下代码（或在 Jupyter Notebook 中找到此代码单元格）并将类表中的文本复制到其中：
- en: '[PRE22]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: You can find more info on building and customizing legends manually in the [geemap
    documentation](https://geemap.org).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 [geemap 文档](https://geemap.org) 中找到更多关于手动构建和自定义图例的信息。
- en: Now you can explore your map and dig deeper into your areas of interest. What
    questions do you want to ask of this map? Take some time to explore. There are
    many different ways to customize your maps with a broad selection of tools!
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以探索地图并深入研究您感兴趣的区域。您想要从这张地图中提出什么问题？花些时间来探索。有许多不同的工具可以用来自定义您的地图！
- en: The [GEE catalog](https://oreil.ly/3Q25Z) is extensive. As you explore different
    databases and datasets using the skills you’ve learned here, you will be able
    to work with raster and vector data as well as upload your own data sources. A
    list of handy additional functions in geemap is available on the [geemap GitHub
    page](https://geemap.org/usage). However, I’d also like to introduce you to an
    alternative to GEE.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[GEE 目录](https://oreil.ly/3Q25Z) 很广泛。当您在此学习到的技能探索不同的数据库和数据集时，您将能够处理栅格和矢量数据，并上传自己的数据源。有关在
    geemap 上的有用附加功能列表，请参见 [geemap GitHub 页面](https://geemap.org/usage)。不过，我也想向您介绍
    GEE 的一个替代方案。'
- en: 'Leafmap: An Alternative to Google Earth Engine'
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'Leafmap: Google Earth Engine 的替代方案'
- en: Visualizing geospatial data outside of GEE does not have to be limiting! If
    you don’t have access to a GEE account or aren’t interested in working with GEE,
    consider using Leafmap. Leafmap is a Python package that lets you visualize interactive
    geospatial data in your Jupyter Notebook environment. It is based on the geemap
    package you have already experienced, but as you will see in this section, Leafmap
    provides access to geospatial data outside the GEE platform. Its GUI reduces the
    amount of coding you need to do. It has a variety of open source packages at its
    core.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在不依赖于 GEE 的情况下可视化地理空间数据并不受限制！如果您没有访问 GEE 帐户或不感兴趣使用 GEE，可以考虑使用 Leafmap。Leafmap
    是一个 Python 包，允许您在 Jupyter Notebook 环境中可视化交互式地理空间数据。它基于您已经使用过的 geemap 包，但正如您在本节中将看到的，Leafmap
    提供了在 GEE 平台之外访问地理空间数据的功能。其图形用户界面减少了您需要编写的代码量。它的核心是各种开源包。
- en: Leafmap works with many different plotting backends*,* including ipyleaflet*.*
    (A *backend*, in this context, is internal code that runs on a server and receives
    client requests.) Users don’t see backends, but they are always operating nonetheless.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Leafmap 适用于许多不同的绘图后端，包括 ipyleaflet（在此上下文中，*后端* 是在服务器上运行并接收客户端请求的内部代码）。用户看不到后端，但它们仍在运行。
- en: You can access the Jupyter Notebook Leafmap with the [GitHub link](https://oreil.ly/9ADWy).
    Follow the [Leafmap documentation](https://oreil.ly/f2Ztx) for specific installation
    instructions depending on your version of Python. (If you aren’t sure what version
    you have, enter `**python**` in the terminal, and it will output the number of
    the version you have installed. This is important to remember in case you run
    into issues with your installation of packages.)
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过[GitHub 链接](https://oreil.ly/9ADWy)访问 Jupyter Notebook Leafmap。根据您的 Python
    版本，请参阅[Leafmap 文档](https://oreil.ly/f2Ztx)获取特定的安装说明。（如果您不确定您安装了哪个版本，请在终端输入`**python**`，它将输出您已安装的版本号。这对于遇到包安装问题时非常重要。）
- en: 'You can set up a new environment to work with Leafmap. I originally created
    the Conda environment shown in the following code with Python 3.8, but it is likely
    to work with later versions. I named this environment `geo` because it is running
    in a different version of Python:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 可以设置一个新的环境来使用 Leafmap。我最初使用 Python 3.8 创建了下面代码中显示的 Conda 环境，但后续版本也可能适用。我将这个环境命名为`geo`，因为它在不同版本的
    Python 中运行：
- en: '[PRE23]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'As before, to open the Notebook, type `**jupyter notebook**` and hit Enter.
    Now enter the following code into the Notebook to reveal something similar to
    [Figure 4-11](#installing_basemaps_in_leafmap):'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前一样，要打开 Notebook，请输入`**jupyter notebook**`并按 Enter 键。现在将以下代码输入到 Notebook 中，类似于显示在[图
    4-11](#installing_basemaps_in_leafmap)中的内容：
- en: '[PRE24]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![Installing basemaps in Leafmap](assets/pgda_0411.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![Leafmap 中安装底图](assets/pgda_0411.png)'
- en: Figure 4-11\. Installing basemaps in Leafmap
  id: totrans-151
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-11\. Leafmap 中安装底图
- en: Changing the basemap is as easy as placing your cursor inside the basemap parentheses
    and selecting Tab on the keyboard. [Figure 4-12](#changing_basemaps_in_leafmap)
    shows the options that become available. Esri is the selected basemap here, but
    you can scroll up and down until you find a suitable one. Be sure to explore.
    Once you type `**Esri**`, options will populate.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 更改底图就像将光标放在底图括号内并在键盘上选择 Tab 键一样简单。[图 4-12](#changing_basemaps_in_leafmap)展示了可用的选项。这里选择了
    Esri 作为底图，但您可以向上或向下滚动直到找到合适的选项。一定要探索。一旦输入`**Esri**`，选项将显示。
- en: '![Changing basemaps in Leafmap](assets/pgda_0412.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![Leafmap 中更改底图](assets/pgda_0412.png)'
- en: Figure 4-12\. Changing basemaps in Leafmap
  id: totrans-154
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-12\. Leafmap 中更改底图
- en: 'Another useful tool is the ability to preset your zoom levels. When you run
    the cell in your Notebook, you will have the option of sliding between different
    zoom levels:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有用的工具是能够预设您的缩放级别。当您在 Notebook 中运行单元格时，您将可以在不同的缩放级别之间滑动选择：
- en: '[PRE25]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[Figure 4-13](#zoom_levels_in_leafmap) shows the output.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 4-13](#zoom_levels_in_leafmap)显示了输出。'
- en: '![Zoom levels in Leafmap](assets/pgda_0413.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![Leafmap 中的缩放级别](assets/pgda_0413.png)'
- en: Figure 4-13\. Zoom levels in Leafmap
  id: totrans-159
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-13\. Leafmap 中的缩放级别
- en: 'You can also provide a reference by inserting a minimap into your larger map,
    as shown in [Figure 4-14](#a_map_within_a_map_the_minimap_function). To do so,
    enter the following code:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过将小地图插入到较大地图中提供参考，如[图 4-14](#a_map_within_a_map_the_minimap_function)所示。要执行此操作，请输入以下代码：
- en: '[PRE26]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The minimap shown in [Figure 4-14](#a_map_within_a_map_the_minimap_function)
    will appear, helping users stay oriented in a larger context.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 显示在[图 4-14](#a_map_within_a_map_the_minimap_function)中的小地图将帮助用户在更大的背景下保持方向感。
- en: '![A map within a map: the minimap function in Leafmap](assets/pgda_0414.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![地图中的地图：Leafmap 中的小地图功能](assets/pgda_0414.png)'
- en: 'Figure 4-14\. A map within a map: the minimap function in Leafmap'
  id: totrans-164
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-14\. 地图中的地图：Leafmap 中的小地图功能
- en: Summary
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter explored Google Earth Engine and some related tools, libraries,
    and packages that you can use to answer geospatial questions, and it introduced
    you to an alternative tool, Leafmap. This chapter and its associated Notebooks
    will be a handy reference for the projects you’ll do in the next chapter. You
    have rendered visualizations and created maps on the canvas. Next, you will begin
    analyzing these relationships and exploring tools to do some advanced analysis
    of your geospatial data.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 本章探讨了Google Earth Engine及其相关工具、库和包，这些工具可用于回答地理空间问题，并介绍了另一种工具Leafmap。这一章及其相关笔记本将成为你在下一章项目中的便捷参考。你已在画布上呈现了可视化效果并创建了地图。接下来，你将开始分析这些关系并探索工具，以进行地理空间数据的高级分析。
