["```py\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsurvey = pd.read_parquet(\"./data/survey.parquet.gz\")\nsurvey_ai_users = pd.read_parquet(\"./data/survey_ai_users.parquet.gz\")\n\nsurvey_ai_users[\"YearsCodePro\"].unique()\n```", "```py\nsurvey_ai_users[\"YearsCodePro\"] = (\n    survey_ai_users[\"YearsCodePro\"]\n    .replace({\n        'Less than 1 year': 0,\n        'More than 50 years': 50\n    })\n    .astype(float)\n)\n```", "```py\nsurvey_ai_users[\"YearsCodePro\"].hist(bins=20)\n```", "```py\nfig, axis = plt.subplots()\n\nsns.boxenplot(\n    data=survey_ai_users,\n    x=\"YearsCodePro\", y=\"AISent\",\n    color=\"gray\",\n    ax=axis\n)\n\naxis.set(\n    title=\"Distribution of years of experience across\n↪ answers to the favorability question\",\n    xlabel=\"Years of coding experience\",\n    ylabel=\"How favorably do you view AI tools?\"\n)\n\nplt.show()\n```", "```py\nfig, axis = plt.subplots()\n\nsns.boxenplot(\n    data=survey_ai_users,\n    x=\"YearsCodePro\", y=\"AIBen\",\n    color=\"gray\",\n    ax=axis\n)\n\naxis.set(\n    title=\"Distribution of years of experience across\n↪ answers to the trust question\",\n    xlabel=\"Years of coding experience\",\n    ylabel=\"How much do you trust the output of AI tools?\"\n)\n\nplt.show()\n```", "```py\nexp_bins = pd.cut(survey_ai_users[\"YearsCodePro\"],\n                  bins=[-1, 0, 2, 5, 10, 20, 50],\n                  labels=[\"0\", \"1-2 years\", \"3-5 years\",\n                          \"6-10 years\", \"11-20 years\",\n                          \"over 20 years\"]\n                 )\n\nsurvey_ai_users.groupby(exp_bins)[\"YearsCodePro\"].agg([\"min\", \"max\"])\n```", "```py\nfig, axis = plt.subplots()\n\n(\n    exp_bins\n    .value_counts()\n    .sort_index()\n    .plot\n    .bar(ax=axis)\n)\n\naxis.set(\n    title=\"Distribution of years of experience (binned)\",\n    xlabel=\"Years of experience\",\n    ylabel=\"Frequency\"\n)\n\nplt.show()\n```", "```py\nexp_vs_sent = pd.crosstab(\n    index=exp_bins,\n    columns=survey_ai_users[\"AISent\"],\n    normalize=\"index\"\n)\n\nexp_vs_sent\n```", "```py\nfig, axis = create_heatmap(   #1\n    exp_vs_sent.round(2)\n)\n\nfig.suptitle(\"How favorably do people with different\n↪ amounts of coding experience view AI?\")\n\naxis.set(\n    xlabel=None,\n    ylabel=\"Coding experience\"\n)\n\nplt.show()\n```", "```py\nexp_vs_trust = pd.crosstab(\n    index=exp_bins,\n    columns=survey_ai_users[\"AIBen\"],\n    normalize=\"index\"\n)\nfig, axis = create_heatmap(\n    exp_vs_trust.round(2)\n)\n\nfig.suptitle(\"How much do people with different\n↪ amounts of coding experience trust the output of an AI?\")\n\naxis.set(\n    xlabel=None,\n    ylabel=\"Coding experience\"\n)\n\nplt.show()\n```", "```py\ntrust_exp_data = (\n    survey_ai_users\n    .dropna(subset=[\"YearsCodePro\", \"AIBen\"], how=\"any\")\n    .loc[survey_ai_users[\"AIBen\"] != \"No answer given\", :]\n)\n\ntrust_rank = (\n    pd.Series(\n        trust_exp_data[\"AIBen\"]\n        .factorize(sort=True)[0]\n    )\n    .rank()\n)\n\nfrom scipy.stats import spearmanr, kendalltau\n\ncorrelation, p_value = spearmanr(\n    trust_exp_data[\"YearsCodePro\"],\n    trust_rank\n)\n\nprint(\"Spearman's\\n\", correlation, p_value)\n\ncorrelation, p_value = kendalltau(\n    trust_exp_data[\"YearsCodePro\"],\n    trust_rank\n)\n\nprint(\"Kendall's tau\\n\", correlation, p_value)\n```", "```py\nai_not_interested_indicators = (\n  survey.loc[survey[\"AISelect\"] == \"Yes\", \"AIToolNot interested in Using\"]\n  .str.get_dummies(sep=\";\")\n)\n\nfig, axis = plt.subplots()\n\n(\n    ai_not_interested_indicators\n    .mean()\n    .sort_values()\n    .plot\n    .barh(ax=axis)\n)\n\naxis.set(\n    title=\"What do AI users NOT want to use AI for?\",\n    xlabel=\"% of participants who ticked that option\"\n)\n\nplt.show()\n```", "```py\nai_users_not_int = (\n    pd.concat([survey, ai_not_interested_indicators], axis=1)\n    .dropna(subset=ai_not_interested_indicators.columns, how=\"any\")\n)\n\nai_users_not_int[\"job_category\"]\n↪ = ai_users_not_int[\"DevType\"].replace(devtype_map) #1\n\nnot_interested_job_dfs = []\n\nfor col in ai_not_interested_indicators.columns:      #2\n    option_df = (\n        ai_users_not_int[ai_users_not_int[col] == 1]\n        .dropna(subset=\"job_category\")\n        .groupby(\"job_category\")\n        .size()\n        .reset_index(name=\"count\")\n        .assign(option=col)\n    )\n    not_interested_job_dfs.append(option_df)\n\nnot_interested_options_vs_jobs = pd.concat(not_interested_job_dfs, \n↪axis=0, ignore_index=True)\n\njob_not_int_crosstab = (      #3\n    pd.crosstab(index=not_interested_options_vs_jobs[\"option\"],\n                columns=not_interested_options_vs_jobs[\"job_category\"],\n                values=not_interested_options_vs_jobs[\"count\"],\n                aggfunc=\"sum\",\n                normalize=\"columns\")\n    .transpose()\n)\n\nfig, axis = create_heatmap(      #4\n    job_not_int_crosstab.round(2),\n    square=False\n)\n\nfig.suptitle(\"What do different job roles NOT want to use AI for?\")\n\naxis.set(xlabel=None, ylabel=None)\n\nplt.show()\n```"]