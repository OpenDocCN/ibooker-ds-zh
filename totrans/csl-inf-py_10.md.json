["```py\nimport numpy as np\nimport pandas as pd\npd.set_option('precision', 3)\n\n# Data from Jha & Shayo (2019)\npath = \"https://github.com/causal-methods/Data/raw/master/\" \ndf = pd.read_stata(path + \"replicationdata.dta\")\ndf.head(5) \n```", "```py\nC:\\Anaconda\\envs\\textbook\\lib\\site-packages\\pandas\\io\\stata.py:1433: UnicodeWarning: \nOne or more strings in the dta file could not be decoded using utf-8, and\nso the fallback encoding of latin-1 is being used.  This can happen when a file\nhas been incorrectly encoded by Stata or some other software. You should verify\nthe string values returned are correct.\n  warnings.warn(msg, UnicodeWarning) \n```", "```py\n# Drop missing values\ndf = df.dropna(subset=['left_s3']) \n```", "```py\n# Data: Vote Share by year\nv2013 = df.groupby('assettreat')['left_2013', 'right_2013'].mean().T\nv2015 = df.groupby('assettreat')['left_s3', 'right_s3'].mean().T\nprop = v2013.append(v2015)\n\n# Plot Bar Chart\nimport plotly.graph_objects as go\nnode = ['Left 2013', 'Right 2013', 'Left 2015', 'Right 2015']\n\nfig = go.Figure(data=[             \n    go.Bar(name='Control', x=node, y = prop[0]),\n    go.Bar(name='Treatment', x=node, y = prop[1]) ])\n\nfig.update_layout(barmode='group',\n  title_text = 'Graphic 1 - Elections: 2013 vs 2015 ',\n  font=dict(size=18) )\n\nfig.update_yaxes(title_text = \"Vote Share\")\n\nfig.show() \n```", "```py\nC:\\Anaconda\\envs\\textbook\\lib\\site-packages\\ipykernel_launcher.py:2: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n\nC:\\Anaconda\\envs\\textbook\\lib\\site-packages\\ipykernel_launcher.py:3: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n  This is separate from the ipykernel package so we can avoid doing imports until \n```", "```py\ncontrol = ['right_2013', 'left_2013', 'p_index_s1', 'e_index_init',\n    'tradestock6all', 'male', 'age', 'postsecondary', 'BA_student',\n\t  'college_grad', 'married', 'r_sec',  'r_trad', 'r_relig', 'r_ultra', \n\t\t'g_jerusalem', 'g_north', 'g_haifa', 'g_center', 'g_telaviv', 'g_south',\n    'g_wb', 'faminc', 'willingrisk1to10', 'patient', 'plitscore'] \n```", "```py\nimport statsmodels.formula.api as smf\n\nresult = []\nfor var in control:\n    # OLS with 104 randomization strata fixed effects\n    reg = smf.ols(var + \"~ 1 + assettreat + C(block13)\", df)\n    # 104 is the last variable: the coefficient of assettreat\n    pvalue = reg.fit().pvalues[104]\n    result.append(pvalue) \n```", "```py\nC:\\Anaconda\\envs\\textbook\\lib\\site-packages\\statsmodels\\tools\\_testing.py:19: FutureWarning:\n\npandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead. \n```", "```py\ntable = df.groupby('assettreat')[control].mean().T  \ntable['p-value'] = result\ntable \n```", "```py\n#  Library to print professional publication\n# tables in Latex, HTML, etc.\n!pip install stargazer \n```", "```py\nRequirement already satisfied: stargazer in c:\\anaconda\\envs\\textbook\\lib\\site-packages (0.0.5) \n```", "```py\nWARNING: Error parsing requirements for numpy: [Errno 2] No such file or directory: 'c:\\\\anaconda\\\\envs\\\\textbook\\\\lib\\\\site-packages\\\\numpy-1.19.2.dist-info\\\\METADATA' \n```", "```py\nITT1 = smf.ols(\"left_s3 ~ 1 + assettreat\",\n                 df).fit()\n\nXs = ['right_2013', 'left_2013', 'male', 'age', 'age2',\n      'postsecondary', 'BA_student', 'college_grad',\n      'married', 'tradestock6all', 'r_trad', 'r_relig',\n      'r_ultra', 'g_jerusalem', 'g_north', 'g_haifa',\n      'g_telaviv', 'g_south', 'g_wb', 'C(newses)',\n      'willingrisk1to10', 'patient', 'plitscore']\n\ncontrols = \"\"\nfor X in Xs:\n    controls = controls + '+' + X      \n\nITT2 = smf.ols(\"left_s3 ~ 1 + assettreat\" + controls +\n                 \"+C(block13)\", df).fit()\n\nWLS = smf.wls(\"left_s3 ~ 1 + assettreat\" + controls +\n       \"+C(block13)\", df, weights=df['vote_wgt']).fit()\n\ntreatments = \"+ isrstock + palstock + cash\"    \nWLS2 = smf.wls(\"left_s3 ~ 1\" + treatments + controls +\n       \"+C(block13)\", df, weights=df['vote_wgt']).fit() \n```", "```py\n# Settings for a nice table\nfrom stargazer.stargazer import Stargazer\nstargazer = Stargazer([ITT1, ITT2, WLS, WLS2])\n\nstargazer.title('Table 1 - Intent to Treat Estimates of Stock'\n   + ' Exposure on Voting for a Left Party')\n\nnames = ['ITT', 'ITT', 'WLS', 'WLS']\nstargazer.custom_columns(names, [1, 1, 1, 1])\n\nstargazer.covariate_order(['assettreat', 'isrstock',\n                           'palstock', 'cash'])\n\nstargazer.add_line('Strata Fixed Effects', ['No', 'Yes',\n                                            'Yes', 'Yes'])\nstargazer.add_line('Covariates', ['No', 'Yes', 'Yes', 'Yes'])\n\nstargazer \n```", "```py\n# Fist Stage\nFS = smf.ols(\"asset_comp ~ 1 + assettreat\" + controls +\n                 \"+C(block13)\", df).fit()\n\n# Control Function Approach\ndf['resid'] = FS.resid\nCF = smf.ols(\"left_s3 ~ 1 + asset_comp + resid\" + controls +\n                 \"+C(block13)\", df).fit() \n```", "```py\n# Settings for a nice table\nstargazer = Stargazer([FS, CF])\n\nstargazer.title('Table 2 - Impact of Stock Exposure'\n ' on Voting for a Left Party')\n\nnames = ['First Stage', 'Control Function']\nstargazer.custom_columns(names, [1, 1])\n\nstargazer.covariate_order(['assettreat', 'asset_comp', 'resid'])\n\nstargazer.add_line('Strata Fixed Effects', ['Yes', 'Yes'])\nstargazer.add_line('Covariates', ['Yes', 'Yes'])\n\nstargazer \n```"]