- en: '11 Rapid prototyping: Creating the proof of concept'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11 快速原型设计：创建概念验证
- en: This chapter covers
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本章涵盖
- en: Identifying tools to create proofs of concept
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别创建概念验证的工具
- en: Producing a proof of concept to showcase the reality of ideas in action
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制作一个概念验证来展示想法在实际操作中的现实性
- en: In this chapter, we will build a proof of concept using data we explored and
    exported in the previous chapter. In chapter 10, we identified and explored Welsh
    property transactions, which will need to be presented as an interactive application
    to end users.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用我们在上一章中探索和导出的数据构建一个概念验证。在第10章中，我们确定了威尔士的物业交易，并将需要以交互式应用程序的形式呈现给最终用户。
- en: The data is available for you to attempt it yourself at [https://davidasboth.com/book-code](https://davidasboth.com/book-code).
    You will find the files you can use for the project, as well as the example solution
    in the form of a Jupyter notebook and Python scripts.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可在[https://davidasboth.com/book-code](https://davidasboth.com/book-code)处供您尝试。您将找到可用于项目的文件，以及以Jupyter笔记本和Python脚本形式提供的示例解决方案。
- en: We have explored the available data, corrected issues, and identified visualizations
    to go into the proof of concept. In this chapter, we will build the proof of concept
    itself. First, let’s recap the project brief.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经探索了可用的数据，纠正了问题，并确定了将纳入概念验证的可视化。在本章中，我们将构建概念验证本身。首先，让我们回顾一下项目概述。
- en: '11.1 Project 7 revisited: Building a proof of concept to investigate Welsh
    property prices'
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.1 项目7回顾：构建一个概念验证来调查威尔士的物业价格
- en: 'You’re working for CymruHomes Connect, a property company specializing in homes
    in Wales. They’re looking to expand their business with the help of data; they
    want to provide insights about the Welsh property market to customers in the form
    of a new app. This app would use historic property sales data to allow users to
    explore property prices in their area of interest. The stakeholders have some
    ideas they’d like to incorporate:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 您正在为CymruHomes Connect工作，这是一家专注于威尔士房屋的物业公司。他们希望通过数据来扩大业务；他们希望以新应用程序的形式向客户提供关于威尔士物业市场的见解。该应用程序将使用历史物业销售数据，使用户能够探索他们感兴趣地区的物业价格。利益相关者有一些想法希望融入：
- en: They are particularly interested in the analysis of property types, that is,
    whether a house is terraced or detached because they believe it strongly influences
    their customers when choosing a property.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们特别关注物业类型的分析，也就是说，一栋房子是联排还是独立式，因为他们坚信这会强烈影响客户在选择物业时的决策。
- en: They also believe users will be interested in comparing properties at the lowest
    level of granularity, so the ability to see street-level data is important.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们还认为用户会对在最低粒度级别比较物业感兴趣，因此查看街级数据的能力很重要。
- en: Let’s review the data we are working with and the work done so far.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下我们正在处理的数据以及到目前为止所做的工作。
- en: 11.1.1 Data dictionary
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1.1 数据字典
- en: Our stakeholders have discovered that the UK government’s Land Registry has
    a dataset called “Price Paid,” which contains publicly available historical sales
    data. They have extracted and made available a few years’ worth of this data.
    Table 11.1 shows the data dictionary, not of the original data, but the dataset
    we exported at the end of the previous chapter, which is what our proof of concept
    will use.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的利益相关者发现，英国政府的土地登记处有一个名为“成交价格”的数据集，其中包含公开的历史销售数据。他们提取并提供了几年的这些数据。表11.1显示了数据字典，不是原始数据，而是我们在上一章末导出的数据集，这是我们概念验证将使用的数据。
- en: NOTE  Original data comes from [https://mng.bz/yWvB](https://mng.bz/yWvB). It
    contains HM Land Registry data © Crown copyright and database right 2021\. This
    data is licensed under the Open Government Licence v3.0\. Thank you both to the
    Land Registry and Royal Mail for permission to use the house price and address
    data, respectively.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：原始数据来自[https://mng.bz/yWvB](https://mng.bz/yWvB)。它包含HM土地登记处的数据©皇家版权和数据库权利2021。此数据根据开放政府许可v3.0许可。感谢土地登记处和英国皇家邮政分别允许使用房价和地址数据。
- en: Table 11.1 Data dictionary of the modified Welsh property transaction data
  id: totrans-15
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 表11.1修改后的威尔士物业交易数据的数据字典
- en: '| Column | Definition |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 列 | 定义 |'
- en: '| --- | --- |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `transaction_id`  | A reference number generated automatically, recording
    each published sale. The number is unique and will change each time a sale is
    recorded.  |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| `transaction_id`  | 自动生成的参考编号，记录每次发布的销售。该编号是唯一的，每次记录销售时都会更改。  |'
- en: '| `sale_price`  | Sale price stated on the transfer deed.  |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| `sale_price`  | 转让文件上声明的销售价格。  |'
- en: '| `sale_date`  | Date when the sale was completed, as stated on the transfer
    deed.  |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| `sale_date`  | 销售完成日期，如转让文件上所述。  |'
- en: '| `postcode`  | Postal code of the address.  |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| `postcode`  | 地址的邮政编码。  |'
- en: '| `property_type`  | D = Detached, S = Semi-detached, T = Terraced, F = Flats/Maisonettes,
    O = Other  |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `property_type`  | D = 独立式，S = 半独立式，T = 连排式，F = 公寓/联排别墅，O = 其他  |'
- en: '| `old_new`  | Indicates the age of the property and applies to all Price Paid
    transactions, residential and nonresidential. Y = A newly built property, N =
    An established residential building  |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `old_new`  | 表示房产的年龄，并适用于所有已支付价格交易，包括住宅和非住宅。Y = 新建房产，N = 已建立的住宅建筑'
- en: '| `duration`  | Relates to the tenure: F = Freehold, L= Leasehold  |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| `duration`  | 与租期相关：F = 永久产权，L = 出租产权  |'
- en: '| `house_number_name`  | Typically house number/name (e.g., 42 or “Oak Cottage”).  |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| `house_number_name`  | 通常为房屋号码/名称（例如，42或“橡树小屋”）。  |'
- en: '|'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '| If there is a sub-building, for example, the building is divided into flats,
    there will be an SAON.  |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 如果存在子建筑，例如，建筑物被划分为公寓，将会有一个SAON。  |'
- en: '| `street`  | The street part of the address.  |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| `street`  | 地址的街道部分。  |'
- en: '| `locality`  | Additional detail about the location (e.g., a district in a
    city).  |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `locality`  | 关于位置的额外详细信息（例如，城市中的区域）。  |'
- en: '| `town_city`  | The town/city part of the address.  |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `town_city`  | 地址的城镇/城市部分。  |'
- en: '| `district`  | The district part of the address.  |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `district`  | 地址的区部分。  |'
- en: '| `county`  | The county part of the address.  |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `county`  | 地址的县部分。  |'
- en: '| `category_type`  | Indicates the type of Price Paid transaction. A = Standard
    Price Paid entry; includes single residential property sold for full market value.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '| `category_type`  | 表示已支付价格交易的类型。A = 标准已支付价格条目；包括以全市场价值出售的单个住宅物业。'
- en: B = Additional Price Paid entry; includes transfers under a power of sale/repossessions,
    buy-to-lets (where they can be identified by a mortgage) and transfers to nonprivate
    individuals.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: B = 额外已支付价格条目；包括在出售权/收回权下的转让、出租购房（如果可以通过抵押贷款识别）以及转让给非私人个人。
- en: '|'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| `record_status`  | Relevant to monthly files only. Indicates additions, changes,
    and deletions to the records. Yearly files contain latest versions of all records.  |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| `record_status`  | 仅与月度文件相关。表示记录的增加、更改和删除。年度文件包含所有记录的最新版本。'
- en: '| `country`  | The country of the transaction. It can be England or Wales,
    but will all be Wales for the exported subset of data.  |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `country`  | 交易的所在国家。可以是英格兰或威尔士，但导出的数据子集将全部为威尔士。'
- en: '| `year`  | The year of the transaction.  |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `year`  | 交易的年份。  |'
- en: 11.1.2 Desired outcomes
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1.2 预期成果
- en: Our stakeholders initially want recommendations about what kind of analyses
    we could include in a potential app with the available data. Recommendations about
    additional data sources to incorporate would also be useful. Finally, we have
    decided to build a proof of concept, partly to show the stakeholders what their
    potential app might look like but also to test whether the data is sufficient
    to build a useful product.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的利益相关者最初希望我们提供关于我们可以在潜在应用程序中包含哪些分析的建议。关于要纳入的额外数据源的建议也将很有用。最后，我们决定构建一个概念验证，部分是为了向利益相关者展示他们潜在应用程序可能的样子，同时也是为了测试数据是否足以构建一个有用的产品。
- en: Let’s review our progress in the previous chapter before continuing.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，让我们回顾一下上一章的进展。
- en: 11.1.3 Project summary so far
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1.3 到目前为止的项目总结
- en: In the previous chapter, we
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们
- en: Merged multiple years of property sales data
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合并了多年的房地产销售数据
- en: Investigated the quality of the data, including missing values and outliers
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查了数据的质量，包括缺失值和异常值
- en: Identified geographic data of interest
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定了感兴趣的地域数据
- en: Investigated the distribution and outliers of the sale price column
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查了销售价格列的分布和异常值
- en: Enhanced our geographic data with external government data to separate English
    property transactions from Welsh ones
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用外部政府数据增强了我们的地理数据，以区分英格兰和威尔士的房地产交易
- en: Identified appropriate visualizations for our proof of concept, including a
    ridgeplot
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定了适合我们概念验证的适当可视化，包括岭图
- en: Exported the relevant, cleaned Welsh property transactions, which our proof
    of concept will use
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出了相关的、清洗过的威尔士房地产交易数据，这些数据将用于我们的概念验证。
- en: Figure 11.1 shows the analysis process so far.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1显示了到目前为止的分析过程。
- en: '![figure](../Images/11-1.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-1.png)'
- en: Figure 11.1 The project progress so far
  id: totrans-54
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图11.1到目前为止的项目进度
- en: We can now take the exported dataset of Welsh property transactions and use
    it to build our proof of concept in this chapter.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用威尔士房地产交易的数据集来构建本章的概念验证。
- en: 11.2 Building a proof of concept
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.2 构建概念验证
- en: 'So far, we have investigated the available data, extracted the relevant part,
    and explored it to understand what aspects to include in our proof of concept.
    Our action plan for building the proof of concept is as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经调查了可用的数据，提取了相关部分，并对其进行了探索，以了解需要在我们的概念验证中包含哪些方面。我们构建概念验证的行动计划如下：
- en: '*Choose a rapid prototyping tool *—This choice will depend on what we are familiar
    with and what is available in our usual toolkit.'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*选择一个快速原型工具*—这个选择将取决于我们熟悉什么，以及在我们通常的工具包中有什么可用。'
- en: '*Design the app layout *—We need to plan what the app is going to look like
    and how it will work before we start writing the code. Focusing on the end result
    means we minimize the amount of experimentation we need to do in building the
    proof of concept.'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*设计应用程序布局*—在我们开始编写代码之前，我们需要计划应用程序的外观和它的工作方式。关注最终结果意味着我们最小化了在构建概念验证时需要进行的实验数量。'
- en: '*Write helper functions that extract and filter our data *—Abstracting away
    the data from the interactive part of the app will make it easier to change the
    frontend of the app if we need to, without having to rewrite the data access part.'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*编写辅助函数以提取和过滤我们的数据*—将数据从应用程序的交互部分抽象出来，将使得在需要时更改应用程序的前端更容易，而无需重写数据访问部分。'
- en: '*Build the proof of concept *—By this point, we will have the functionality
    to read and filter the data, as well as a plan for what the app will look like.
    The final step is to build the proof of concept with the tool we decided on in
    step 1\.'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*构建概念验证*—到这一点，我们将拥有读取和过滤数据的功能，以及应用程序外观的计划。最后一步是使用我们在第一步中决定的工具构建概念验证。'
- en: The first three steps are preparation for the final step of building the proof
    of concept.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 前三个步骤是为构建概念验证的最后一步做准备。
- en: 11.2.1 Preparing to build a proof of concept
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.2.1 准备构建概念验证
- en: Let’s tackle the first step, which is choosing a prototyping tool. If you have
    not built a working proof of concept or prototype before, this is a good point
    at which to explore some of the options in your existing toolkit.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们解决第一步，即选择一个原型工具。如果您之前没有构建过可工作的概念验证或原型，这是探索您现有工具包中一些选项的好时机。
- en: Deciding on a rapid prototyping tool
  id: totrans-65
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 选择一个快速原型工具
- en: 'If you are an R user, for example, you might explore Shiny’s capabilities.
    As a Python user, you also have a plethora of options available. This is another
    good opportunity to make use of a large language model to help you investigate
    the landscape. In this instance, I used Claude 3 Sonnet by Anthropic to show different
    options and not just ChatGPT. Here is the prompt I gave it:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您是R用户，您可能会探索Shiny的功能。作为Python用户，您也有许多选项可供选择。这是利用大型语言模型来帮助您调查该领域的好机会。在这种情况下，我使用了Anthropic的Claude
    3 Sonnet来展示不同的选项，而不仅仅是ChatGPT。以下是我给它提供的提示：
- en: '*I want to build an interactive proof of concept for a data-driven app in Python.
    Please suggest libraries that could help me build a web-based interactive proof
    of concept with the following features:*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*我想用Python构建一个数据驱动的应用程序的交互式概念验证。请建议一些可以帮助我构建具有以下功能的基于Web的交互式概念验证的库：*'
- en: '*The ability to display visualizations, ideally using existing code that produces
    matplotlib charts.*'
  id: totrans-68
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*能够显示可视化，理想情况下使用生成matplotlib图表的现有代码。*'
- en: '*Interactivity, i.e., dropdowns to filter the data, which will then refresh
    the page and all its visualizations.*'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*交互性，即下拉菜单来过滤数据，然后刷新页面及其所有可视化。*'
- en: '*The app needs to be web based so that users do not need to install any software
    to get it working.*'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*应用程序需要基于Web，这样用户就不需要安装任何软件来使其工作。*'
- en: '*I will use the pandas library for data manipulation and matplotlib to create
    the charts, but ideally all the other features should be covered by a single additional
    library. Please provide a bulleted list of possible options and 1–2 sentences
    explaining each option.*'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '*我将使用pandas库进行数据处理，并使用matplotlib创建图表，但理想情况下，所有其他功能都应该由一个额外的库来覆盖。请提供一个可能的选项列表，并解释每个选项的1-2句话。*'
- en: Claude listed several options as the response, as shown in figure 11.2.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Claude列出了几个选项作为响应，如图11.2所示。
- en: '![figure](../Images/11-2.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-2.png)'
- en: Figure 11.2 Claude 3 Sonnet’s suggestions for rapid prototyping tools in Python
  id: totrans-74
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图11.2 Claude 3 Sonnet对Python快速原型工具的建议
- en: These are all solid options within the Python ecosystem, and all of them would
    be suitable for our proof of concept. I chose `streamlit`, mostly because I was
    already familiar with it. Otherwise, I would have spent some time reading the
    documentation of each library and evaluating the example code snippets to see
    which library would allow me to build the proof of concept the quickest.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是在Python生态系统中的可靠选项，并且所有这些都适合我们的概念验证。我选择`streamlit`主要是因为我已经熟悉它。否则，我会花一些时间阅读每个库的文档，并评估示例代码片段，以确定哪个库能让我最快地构建概念验证。
- en: Let’s start tracking the progress of this part of the project. Figure 11.3 shows
    the first step that we have just taken.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始跟踪这个项目部分的进度。图11.3显示了我们刚刚采取的第一步。
- en: '![figure](../Images/11-3.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-3.png)'
- en: Figure 11.3 The first step toward building the proof of concept
  id: totrans-78
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图11.3 构建概念验证的第一步
- en: Now that we have chosen our tool, let’s think about the app’s layout. If we
    know exactly what elements we want to add and where, then we can work in a results-driven
    way. We will only read the necessary part of the tool’s documentation and only
    work with elements we’re actually going to use.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经选择了工具，让我们考虑应用程序的布局。如果我们确切知道我们想要添加哪些元素以及它们的位置，那么我们可以以结果驱动的方式进行工作。我们只会阅读工具文档的必要部分，并且只使用我们实际将要使用的元素。
- en: Designing an app layout
  id: totrans-80
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 设计应用程序布局
- en: 'In this part, we need to do two things: decide on what elements will go on
    the page and where they will go. We have more or less already decided on this,
    so let’s recap:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在这部分，我们需要做两件事：决定页面上将放置哪些元素以及它们将放置在哪里。我们或多或少已经决定了这一点，所以让我们回顾一下：
- en: There will be a ridgeplot showing price distribution by county for 2023\.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将会展示一个按县划分的价格分布脊图，用于2023年。
- en: There will be user filters for county, town, and street.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将会有用户筛选功能，包括县、镇和街道。
- en: We will show a line chart of transactions over time.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将展示随时间推移的交易折线图。
- en: There will be two bar charts showing frequency and median sale price by property
    type, respectively.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将会展示两个条形图，分别显示按物业类型划分的频率和销售中位数。
- en: 'Depending on the target audience, we might also want to show the raw data that
    powers the various charts and calculations. For internal tools, I would always
    consider doing this for two reasons: to build trust that the calculations are
    correct and allow stakeholders to export the underlying data to Excel, which they
    invariably end up wanting to do. For a customer-facing tool, this is perhaps not
    necessary, but since this is a proof of concept that will be evaluated by internal
    users, we’ll display the raw data as well.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据目标受众，我们可能还希望展示驱动各种图表和计算的基础数据。对于内部工具，我会始终考虑这样做，原因有两个：一是建立计算的准确性信任，二是允许利益相关者将底层数据导出到Excel，他们不可避免地会想要这样做。对于面向客户的工具，这可能不是必要的，但鉴于这是一个将由内部用户评估的概念验证，我们将显示原始数据。
- en: We might also decide to display some summary metrics about the subset of properties
    the user has selected.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还可能决定显示用户所选物业子集的一些摘要指标。
- en: The exact placement of these elements is mostly a personal choice, but we should
    at least order them logically from top to bottom. First, the user should see components
    they cannot change, such as the ridgeplot. Then, any subsequent elements will
    depend on user inputs, so the next item down the page should be the county, town,
    and street dropdowns. After that, we will display the summary metrics and the
    charts, finishing off with the raw data table at the bottom. Apart from some explanatory
    text, this is all we need for our proof of concept. Figure 11.4 shows a basic
    wireframe mockup of what we want to build.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这些元素的确切位置主要是个人的选择，但我们应该至少从上到下逻辑地排列它们。首先，用户应该看到他们无法更改的组件，例如脊图。然后，任何后续元素将取决于用户输入，因此页面下方的下一个项目应该是县、镇和街道下拉菜单。之后，我们将显示摘要指标和图表，最后以底部的原始数据表结束。除了一些解释性文本外，这就是我们概念验证所需的所有内容。图11.4显示了我们要构建的基本线框原型。
- en: '![figure](../Images/11-4.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-4.png)'
- en: Figure 11.4 A mockup of a possible app layout
  id: totrans-90
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图11.4 可能的应用程序布局原型
- en: Because this mockup includes some specific decisions we made, let’s add that
    to the diagram of this part of the project. The latest version is shown in figure
    11.5.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个原型包括我们做出的某些具体决策，让我们将其添加到这个项目部分的图表中。最新版本如图11.5所示。
- en: '![figure](../Images/11-5.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-5.png)'
- en: Figure 11.5 The latest progress of part 2 of the project
  id: totrans-93
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图11.5 项目第二部分的最新进度
- en: Now that we have our tool and an idea for the layout, let’s write the data access
    part of our code. This is the code that the app will use to read our data and
    get its filtered versions based on user input.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了我们的工具和布局的想法，让我们编写代码的数据访问部分。这是应用将用来读取我们的数据并根据用户输入获取其过滤版本的代码。
- en: Writing reusable helper functions
  id: totrans-95
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 编写可重用的辅助函数
- en: In software development, it is generally a good idea to separate data access
    components from the presentation layer. It is good practice to do this even for
    simple proofs of concept because if they develop into prototypes and working applications,
    we will have a reusable data access layer to use at all stages.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件开发中，通常将数据访问组件与表示层分离是一个好主意。即使是简单的概念验证，这也是一个好的实践，因为如果它们发展成为原型和实际应用，我们将有一个可重用的数据访问层，可以在所有阶段使用。
- en: Software development skills for analysts
  id: totrans-97
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 分析师所需的软件开发技能
- en: If you work with code, you will benefit from learning about software best practices.
    Analysts don’t need to be software developers, but there are elements of writing
    good software that are relevant to data professionals.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你与代码打交道，你会从学习软件最佳实践中受益。分析师不需要成为软件开发人员，但编写良好软件的某些元素与数据专业人员相关。
- en: Good software development practice means readability and reusability, first
    and foremost. Once you get into the habit of writing clean, reusable code, which
    is easy to change when the requirements inevitably change, you will find a marked
    improvement in productivity.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 良好的软件开发实践意味着可读性和可重用性，首先是可读性。一旦你养成了编写干净、可重用代码的习惯，这种代码在需求不可避免地发生变化时易于更改，你会发现生产力有显著提高。
- en: If you want to find out more about software skills for data people, one excellent
    resource is Laszlo Sragner’s “Code Quality for Data Science,” a Discord community
    dedicated to teaching all data scientists, regardless of skill level, to write
    better code, available at [https://cq4ds.com](https://cq4ds.com).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于数据人员的软件技能，一个极好的资源是Laszlo Sragner的《数据科学代码质量》，这是一个Discord社区，致力于教授所有数据科学家（无论技能水平如何）编写更好的代码，可在[https://cq4ds.com](https://cq4ds.com)找到。
- en: 'In our specific app, we will require functions for the following:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的特定应用中，我们将需要以下函数：
- en: Reading in our property data as a DataFrame.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将我们的属性数据作为DataFrame读取。
- en: Getting a list of counties, towns, and street names to populate the dropdowns
    from which the user will make their selections. These dropdowns should also depend
    on each other, meaning that, for example, when a user selects a county, the town/city
    dropdown should update to reflect only towns within that county.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取县、镇和街道名称的列表，以填充用户将从中进行选择的下拉菜单。这些下拉菜单也应该相互依赖，这意味着例如，当用户选择一个县时，镇/城市下拉菜单应该更新以反映该县内的城镇。
- en: Creating all necessary visualizations based on a filtered version of the data.
    These functions will return actual chart objects for the app to display.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据数据的过滤版本创建所有必要的可视化。这些函数将返回实际图表对象，供应用显示。
- en: 'Let’s walk through each of the functions in the example solution, which can
    be found in a file called `helpers.py`. First, here is a simple function to read
    the data we prepared and exported earlier:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐一查看示例解决方案中的每个函数，这些函数可以在名为`helpers.py`的文件中找到。首先，这是一个简单的函数，用于读取我们之前准备和导出的数据：
- en: '[PRE1]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This is what the app will run when it first starts. Then, we need functions
    to populate each dropdown. Here is a function to return all possible counties
    in the data:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是应用首次启动时将运行的内容。然后，我们需要函数来填充每个下拉菜单。以下是一个返回数据中所有可能县份的函数：
- en: '[PRE2]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Notice how this function doesn’t reference the Welsh properties directly; it
    simply returns all county values from any DataFrame it is given. That is because
    different components of the app should not depend on the specific implementation
    of the others. For example, the functionality to return a list of counties does
    not need to know where the underlying data came from. What follows is a list of
    towns based on a given county:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 注意这个函数并没有直接引用威尔士的属性；它只是返回任何DataFrame中所有的县值。这是因为应用的不同组件不应依赖于其他组件的具体实现。例如，返回县列表的功能不需要知道底层数据来自哪里。以下是根据给定县列出城镇的列表：
- en: '[PRE3]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This function takes in a null value as an additional parameter, which is a special
    value for when a dropdown is deselected. If a user has selected a county and then
    a town but wants to go back to viewing data at the entire county level, they can
    select this null value in the town dropdown to clear it. This null value will
    read something like “no town selected,” so it is obvious to the user that they
    have cleared the town dropdown.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数接受一个空值作为附加参数，这是一个特殊值，用于当下拉菜单未选择时。如果一个用户已经选择了一个县和一个镇，但想回到查看整个县的数据，他们可以在镇的下拉菜单中选择这个空值来清除它。这个空值将显示为“未选择城镇”，因此用户可以清楚地知道他们已经清除了城镇下拉菜单。
- en: 'The final dropdown will be a list of street names, which depend on both the
    county and the town/city:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个下拉菜单将是一个街道名称列表，这取决于县和镇/市：
- en: '[PRE4]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now we need some functions to draw our charts. First, here is the number of
    transactions per year, which will be similar to the chart in figure 10.25:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要一些函数来绘制我们的图表。首先，这是每年的交易数量，它将与图 10.25 中的图表类似：
- en: '[PRE5]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '#1 Calculates number of records per year, where “YS” means “start of year”'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '#1 计算每年记录数，其中“YS”表示“年初”'
- en: 'Next, we want to show the breakdown of property type. We want to show both
    the distribution of property types and the median price by property type. We could
    combine this information in a single chart, for example, by representing number
    of transactions as the length of a bar in bar chart and the median price by a
    color value. However, we want the app to be as easily understood as possible,
    so we will separate this information into two bar charts with the following two
    functions:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们想展示物业类型的细分。我们想展示物业类型的分布以及按物业类型的平均价格。我们可以通过将交易数量表示为条形图中的条形长度，将平均价格表示为颜色值来将此信息合并到单个图表中。然而，我们希望应用程序尽可能易于理解，因此我们将此信息分为两个条形图，以下两个函数如下：
- en: '[PRE6]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, we will include the ridgeplot we created in the previous chapter,
    so we need a helper function to create that as well. As we discovered, the ridgeplot
    requires data in a specific format, so we need a function to create that data
    and another to create the plot:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将包括上一章中创建的岭图，因此我们需要一个辅助函数来创建它。正如我们所发现的，岭图需要特定格式的数据，因此我们需要一个函数来创建这些数据，另一个函数来创建图表：
- en: '[PRE7]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: These functions will then be imported into the app, which can use them to filter
    our data, populate the dropdowns, and display the correct visualization based
    on user input. Let’s add the creation of helper functions to our diagram to document
    our progress. This is shown in figure 11.6.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数将被导入到应用程序中，应用程序可以使用它们来过滤我们的数据，填充下拉菜单，并根据用户输入显示正确的可视化。让我们将辅助函数的创建添加到我们的图中，以记录我们的进度。这如图
    11.6 所示。
- en: '![figure](../Images/11-6.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-6.png)'
- en: Figure 11.6 The latest progress in building the proof of concept
  id: totrans-123
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图 11.6 构建概念验证的最新进展
- en: Now, it’s finally time to build the app itself, using our chosen tool and the
    app layout and helper functions we created earlier.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，终于到了构建应用程序本身的时候了，使用我们选择的工具以及我们之前创建的应用程序布局和辅助函数。
- en: 11.2.2 Using streamlit to build a proof of concept
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.2.2 使用 streamlit 构建概念验证
- en: We have our tool of choice, `streamlit`, a desired layout, and helper functions
    to manage data access, filtering, and charts so we can build our proof of concept
    in a very targeted way. We need to figure out the basics of `streamlit` and only
    how to display text, dropdowns, charts, and tables. This means we will not be
    lost in a sea of tutorials and code samples—we will only take what we need.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有我们选择的好工具 `streamlit`，一个期望的布局，以及管理数据访问、过滤和图表的辅助函数，这样我们就可以非常针对性地构建我们的概念验证。我们需要弄清楚
    `streamlit` 的基础知识以及如何显示文本、下拉菜单、图表和表格。这意味着我们不会迷失在教程和代码示例的海洋中——我们只会取我们需要的。
- en: We will now walk through the individual components of the final app, the code
    for which can be found in the file called `house_price_app.py`. To see the example
    solution’s final app in action, open a terminal or command prompt, activate the
    poetry environment with the command `poetry` `shell`, and then run the `streamlit`
    `run` `house_` `price_app.py` command, which should look like the example in figure
    11.7\. For more information on setting up your Python environment to reproduce
    the example solutions, see the appendix.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将逐一介绍最终应用程序的各个组件，其代码可以在名为 `house_price_app.py` 的文件中找到。要查看示例解决方案的最终应用程序的实际运行情况，请打开终端或命令提示符，使用
    `poetry shell` 命令激活 poetry 环境，然后运行 `streamlit run house_price_app.py` 命令，该命令应类似于图
    11.7 中的示例。有关设置 Python 环境以重现示例解决方案的更多信息，请参阅附录。
- en: '![figure](../Images/11-7.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/11-7.png)'
- en: Figure 11.7 A command prompt window showing how to run the app in the example
    solution
  id: totrans-129
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图 11.7 展示了如何在示例解决方案中运行应用程序的命令提示符窗口
- en: To build the app, we first set up some `streamlit` options and read in our data.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建应用程序，我们首先设置一些 `streamlit` 选项并读取我们的数据。
- en: Reading data into streamlit
  id: totrans-131
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 将数据读入 `streamlit`
- en: 'First, we will import the necessary libraries and set up some `streamlit` options,
    namely, that we want the page to be full width, which isn’t the default option:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将导入必要的库并设置一些 `streamlit` 选项，即我们希望页面为全宽，这不是默认选项：
- en: '[PRE8]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '#1 helpers in this context is the code in helpers.py that we wrote earlier.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '#1 在此上下文中，helper 是我们之前在 helpers.py 中编写的代码。'
- en: 'Next, we read the property data as well as the data that will populate the
    county dropdown as that will not change dynamically. We can also read in the data
    that will power the ridgeplot since, again, that will not change. Optionally,
    we can also get `streamlit` to cache these datasets, which will mean they don’t
    get reloaded every time a user performs an action, such as changing a dropdown.
    We do this by wrapping the helper functions in small functions and annotating
    them with the `st.cache_data` decorator. The following is the code responsible
    for loading and caching the data:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们读取属性数据以及将填充县下拉菜单的数据，因为这些数据不会动态变化。我们还可以读取将提供脊图的数据，因为同样，这些数据也不会变化。可选地，我们还可以让
    `streamlit` 缓存这些数据集，这意味着它们在用户执行某些操作（如更改下拉菜单）时不会重新加载。我们通过将辅助函数包装在小函数中并用 `st.cache_data`
    装饰器注释它们来实现这一点。以下代码负责加载数据和缓存数据：
- en: '[PRE9]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Next, we define the layout of the app.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们定义应用程序的布局。
- en: Defining the app layout in streamlit
  id: totrans-138
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在 `streamlit` 中定义应用程序布局
- en: 'The apps will simply be `streamlit` elements defined in the order that we’d
    like the app to look from top to bottom—first, the title, brief explanation, and
    the ridgeplot. The following code builds these elements, and the relevant portion
    of the final app is shown in figure 11.8\. The full explanation is omitted from
    the code snippet for space reasons but is shown in the figure:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序将简单地是按照从上到下的顺序定义的 `streamlit` 元素——首先，标题，简要说明，以及脊图。以下代码构建了这些元素，并且最终应用程序的相关部分如图
    11.8 所示。由于篇幅原因，完整的解释省略了代码片段，但可以在图中看到：
- en: '[PRE10]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![figure](../Images/11-8.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/11-8.png)'
- en: Figure 11.8 The first elements in the house price app proof of concept
  id: totrans-142
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图 11.8 房价应用程序概念证明的第一元素
- en: 'Next, we will add interactivity consisting of the three dropdowns that drill
    into specific geographic areas. By default, adding elements to `streamlit` will
    add them below the previous one. Since we want the dropdowns to be on the same
    row, we can create some columns and add the dropdowns to them to avoid this. Each
    dropdown will be a `streamlit` `selectbox` that will be populated using our helper
    functions. The dropdowns that depend on others will reference the value of the
    other dropdowns. That is, selecting a list of towns will depend on the value selected
    in the county dropdown, and that value will be passed to the `get_towns` helper
    function. The following code creates the three dropdowns in a three-column format,
    and the relevant section of the app is shown in figure 11.9:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将添加交互性，包括三个下拉菜单，它们可以深入特定地理区域。默认情况下，将元素添加到 `streamlit` 将将其添加到上一个元素下方。由于我们希望下拉菜单在同一行，我们可以创建一些列并将下拉菜单添加到它们中，以避免这种情况。每个下拉菜单都将是一个
    `streamlit` `selectbox`，它将使用我们的辅助函数进行填充。依赖于其他下拉菜单的下拉菜单将引用其他下拉菜单的值。也就是说，选择城镇列表将取决于县下拉菜单中选择的值，该值将传递给
    `get_towns` 辅助函数。以下代码以三列格式创建了三个下拉菜单，并且应用程序的相关部分如图 11.9 所示：
- en: '[PRE11]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '#1 An example of the value the user selects if they want to clear a dropdown'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '#1 如果用户想要清除下拉菜单，可以选择的值示例'
- en: '#2 The currently selected county will be passed to the get_towns function.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '#2 当前选中的县将被传递给get_towns函数。'
- en: '![figure](../Images/11-9.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-9.png)'
- en: Figure 11.9 The initial state of the geographic dropdowns
  id: totrans-148
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图11.9 地域下拉菜单的初始状态
- en: Figure 11.9 shows the initial state of the dropdowns. The town and street are
    light grey, meaning they are currently disabled until the user selects a county.
    Figure 11.10 shows the state of the dropdowns when some values are selected, as
    well as the options for the street.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.9显示了下拉菜单的初始状态。城镇和街道是浅灰色，这意味着它们目前处于禁用状态，直到用户选择一个县。图11.10显示了当一些值被选中时下拉菜单的状态，以及街道的选项。
- en: '![figure](../Images/11-10.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-10.png)'
- en: '**Figure 11.10 The geographic dropdowns with some values selected and the available
    values shown for the street**'
  id: totrans-151
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: '**图11.10 地域下拉菜单中选中了一些值，并显示了街道的可用值**'
- en: Next, we need some code that will filter the raw data down to the correct geographic
    level based on the user’s selection.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要一些代码，它将根据用户的选择将原始数据过滤到正确的地域级别。
- en: Interactively filtering data in streamlit
  id: totrans-153
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在streamlit中交互式过滤数据
- en: 'Depending on your tool, this will look different, but here, we will utilize
    the `query` method in `pandas`, which lets us specify the filter to apply to our
    data as a single string. We can build up this query string based on how many dropdowns
    have a value selected. The more dropdowns the user has used, the longer the query
    string, the more specific the query, and the less data we will retrieve. The following
    code builds up this query string and applies it to the data. We also build up
    a message that will reflect the user’s choices:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的工具，这看起来可能会有所不同，但在这里，我们将利用`pandas`中的`query`方法，它允许我们以单个字符串的形式指定应用于我们数据的过滤器。我们可以根据有多少下拉菜单有选中的值来构建这个查询字符串。用户使用的下拉菜单越多，查询字符串越长，查询越具体，我们检索的数据就越少。以下代码构建了这个查询字符串并将其应用于数据。我们还构建了一个将反映用户选择的短信：
- en: '[PRE12]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next, based on this filtered data, we can start calculating the summary metrics
    and create the charts as per our wireframe in figure 11.4\. To calculate the summary
    metrics, we need to work out the median sale price in the filtered data, as well
    as count the number of records returned. The following code does this, and only
    if the user has selected at least a county. An example of the message we built
    previously, as well as the summary metrics, is shown in figure 11.11:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，基于这些过滤后的数据，我们可以开始计算汇总指标，并创建如图11.4所示的线框图中的图表。为了计算汇总指标，我们需要计算出过滤数据中的中位数售价，以及记录的数量。以下代码完成了这项工作，并且只有当用户至少选择了一个县时才会执行。之前构建的消息示例以及汇总指标如图11.11所示：
- en: '[PRE13]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '#1 Selecting a county is enough to trigger the widgets.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '#1 选择一个县就足以触发小部件。'
- en: '![figure](../Images/11-11.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-11.png)'
- en: Figure 11.11 A message showing geographic filters the user has applied and associated
    summary metrics
  id: totrans-160
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图11.11 显示用户应用的地域过滤器和相关汇总指标的消息
- en: Now, we can use our helper methods to create the relevant charts.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用我们的辅助方法来创建相关的图表。
- en: Creating charts in streamlit
  id: totrans-162
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在streamlit中创建图表
- en: 'The charts will be alongside each other, so they need to be in `streamlit`
    columns again. Finally, we display the filtered data as a table at the bottom
    of the page. The following code finishes off our app. Because the entire bottom
    section depends on the user having selected at least a county, I have included
    the entire code block, which contains the summary metrics seen previously:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图表将并排显示，因此它们需要再次放在`streamlit`列中。最后，我们在页面底部显示过滤后的数据作为表格。以下代码完成了我们的应用。因为整个底部部分依赖于用户至少选择了一个县，所以我包括了包含之前看到的汇总指标的整个代码块：
- en: '[PRE14]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Finally, let’s see the final part of the app, which contains the summary metrics,
    charts, and underlying data. The raw data is truncated on the figure but is shown
    in full in the app. This is illustrated in figure 11.12.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们看看应用的最后一部分，它包含汇总指标、图表和基础数据。原始数据在图中被截断，但在应用中完整显示。这如图11.12所示。
- en: '![figure](../Images/11-12.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-12.png)'
- en: Figure 11.12 The bottom part of the finished proof of concept app with the raw
    data table truncated
  id: totrans-167
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图11.12 完成概念验证应用的底部部分，其中原始数据表被截断
- en: Before we communicate our conclusions, let’s review everything we’ve done in
    this project. Figure 11.13 shows the process of exploring and cleaning the data,
    leading to the design and development of the proof of concept app.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们传达我们的结论之前，让我们回顾一下在这个项目中我们所做的一切。图11.13显示了探索和清理数据的过程，以及概念验证应用程序的设计和开发。
- en: '![figure](../Images/11-13.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![figure](../Images/11-13.png)'
- en: Figure 11.13 The entire process, from exploration and analysis to building a
    proof of concept
  id: totrans-170
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图11.13 从探索和分析到构建概念验证的整个过程
- en: We have successfully delivered our minimum viable answer. It’s time to reflect
    on what we found and what the next steps are from here.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功交付了我们的最小可行答案。现在是时候反思我们所发现的内容以及下一步该做什么了。
- en: 11.2.3 Project outcomes and next steps
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.2.3 项目成果和下一步计划
- en: We fulfilled the brief by investigating property types, where we found a disparity
    between what different property types sell for, and by investigating street-level
    data. We can confidently tell our stakeholders that the data is suitable for looking
    at both of those aspects. We then went above and beyond the brief by building
    a proof of concept to illustrate what their planned app might look like and whether
    it’s even feasible to build with the available data.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过调查物业类型来满足简报要求，我们发现不同物业类型的售价之间存在差异，并通过调查街道级数据。我们可以自信地向我们的利益相关者保证，这些数据适合查看这两个方面。然后，我们通过构建一个概念验证来展示他们计划中的应用程序可能的样子，以及是否可以使用现有数据进行构建，从而超越了简报的要求。
- en: 'There are a few points to address about our proof of concept:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 关于我们的概念验证，有几个要点需要解决：
- en: First, there are missing values in relevant address fields. To launch and possibly
    charge money for an app like this, the data would need to be complete. To that
    end, we would need to clean the data and fill in the missing address details,
    perhaps using a third-party geocoding service such as the Google Maps API.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，相关地址字段中存在缺失值。为了启动并可能为此类应用程序收费，数据需要完整。为此，我们需要清理数据并填写缺失的地址细节，可能使用第三方地理编码服务，如谷歌地图API。
- en: Second, the app shows the charts associated with a user’s choices, even if there
    are only a few available records, as illustrated by figure 11.12\. Depending on
    what we believe the user will use the summary metrics and charts for, we may wish
    to issue a disclaimer in the app if the sample size of properties returned is
    too small.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其次，即使只有少量可用记录，应用程序也会显示与用户选择相关的图表，如图11.12所示。根据我们认为用户将如何使用总结性指标和图表，如果返回的属性样本量太小，我们可能希望在应用程序中发布免责声明。
- en: Finally, if we iron some of these problems out and the proof of concept makes
    it to the prototype stage, we would need to user test it to make sure that users
    can find the relevant addresses. In this case, that would mean ensuring the values
    for county, town, and street are correctly categorized.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，如果我们能解决一些这些问题，并且概念验证达到了原型阶段，我们就需要用户测试以确保用户能够找到相关的地址。在这种情况下，这意味着确保县、镇和街道的值被正确分类。
- en: 'When presenting this app to our stakeholders, we may also want to suggest improvements
    for a final version. Here are some ideas:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 当向我们的利益相关者展示这个应用程序时，我们可能还希望提出对最终版本的改进建议。以下是一些想法：
- en: Users would probably want to investigate a property after seeing it on a property
    listing website, such as Rightmove or Zoopla. It might be useful to establish
    a link between those sites and our app. For example, a user might paste a link
    to a property on Rightmove into our app, which could then filter the data automatically
    based on that property’s address.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可能会在看到物业列表网站上的物业后进行调查，例如Rightmove或Zoopla。在这些网站和我们的应用程序之间建立链接可能很有用。例如，用户可能将Rightmove上的物业链接粘贴到我们的应用程序中，然后应用程序可以根据该物业的地址自动过滤数据。
- en: Other options for filtering the results automatically might be to simply enter
    an address or select it on an interactive map. This would save users time and
    make their experience smoother.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动过滤结果的另一种选项可能是简单地输入地址或在交互式地图上选择它。这将节省用户时间并使他们的体验更加流畅。
- en: We could enhance our address data with information about the local area that
    might affect property prices, such as crime rates or availability of utilities.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以通过添加可能影响物业价格的地方信息来增强我们的地址数据，例如犯罪率或公共设施的可用性。
- en: Whatever we choose to do next, it would start with a presentation to our stakeholders
    and a discussion about whether to take this project further into the prototype
    phase.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 无论我们接下来选择做什么，它都将从一个向我们的利益相关者展示的演示开始，并讨论是否将此项目进一步推进到原型阶段。
- en: 'Activity: Further project ideas with this data'
  id: totrans-183
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 活动：使用这些数据进一步的项目想法
- en: 'Think about other analyses you could do with this house price dataset. In particular,
    you might want to practice different approaches to building a proof of concept
    to develop your skills in this area. Here are some directions you may wish to
    go:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 想想你可以用这个房价数据集进行哪些其他分析。特别是，你可能想练习不同的构建概念验证的方法，以发展你在这一领域的技能。以下是一些你可能希望探索的方向：
- en: Geographic data like this is perfect for map-based visualizations. You could
    create an application to identify transaction hotspots, areas of the country where
    there is a lot of “turnover” of properties.
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这样的地理数据非常适合基于地图的视觉展示。你可以创建一个应用程序来识别交易热点，即国家中“周转”率很高的地区。
- en: Are there any seasonal patterns in property sales? Do these differ across different
    geographic areas?
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 房产销售中是否存在任何季节性模式？这些模式在不同地理区域之间是否有所不同？
- en: By enhancing the data with demographic information (e.g., population data),
    you could see if there are places around the country where there are more property
    sales than is typical for an area of that size.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过增强数据中的人口统计信息（例如，人口数据），你可以查看在全国范围内是否有比该地区典型规模更多的房产销售。
- en: 11.3 Closing thoughts on the rapid prototyping of ideas
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 11.3 关于快速原型化想法的结语
- en: As we saw in this project, it can be useful to extend an analysis by building
    a proof of concept from the available data. This is also true for building predictive
    models; rather than presenting accuracy metrics, these models can come alive if
    we can demonstrate how they would work in practice. Having a proof of concept
    and then a prototype also lets us identify problems with the data that would affect
    the building of a fully working product.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本项目中看到的，通过从可用数据构建概念验证来扩展分析是有用的。对于构建预测模型来说也是如此；而不是展示准确度指标，如果我们可以展示它们在实际中的工作方式，这些模型就会变得生动起来。拥有概念验证和原型还可以让我们识别出会影响构建完整工作产品的数据问题。
- en: 'To hone your skills specifically in this area, there are a number of approaches:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 要特别提高在这个领域的技能，有几种方法：
- en: The obvious one is to get familiar with a rapid prototyping tool. This could
    be building dashboards with a BI tool, such as Power BI or Tableau. It could be
    learning a library for your programming language, such as Shiny for R or `streamlit`
    for Python. Or, it could be learning about a “no code” platform, where you can
    make working applications without explicitly writing code.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显而易见的一个方法是熟悉快速原型化工具。这可能包括使用BI工具（如Power BI或Tableau）构建仪表板，或者学习你编程语言的库，例如R的Shiny或Python的`streamlit`。或者，你可以学习关于“无代码”平台的知识，在那里你可以不明确编写代码就制作出工作应用程序。
- en: Another skill that could help here, especially if you want to build working
    prototypes, is to learn about building for the web. Specifically, learning a bit
    of HTML, CSS, and JavaScript is useful to help craft bespoke web-based applications.
    Platforms such as the Web Design Playground ([https://www.manning.com/books/web-design-playground-second-edition](https://www.manning.com/books/web-design-playground-second-edition))
    are great for learning the basics.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一项可能有助于此的技能，尤其是如果你想要构建工作原型的话，就是学习关于网络构建的知识。具体来说，学习一点HTML、CSS和JavaScript对于制作定制的基于网络的程序很有帮助。例如，Web设计游乐场([https://www.manning.com/books/web-design-playground-second-edition](https://www.manning.com/books/web-design-playground-second-edition))是一个学习基础知识的绝佳平台。
- en: Learning design principles is also useful if you will be building proofs of
    concept and prototypes as part of your job. Knowing the fundamentals of UI and
    UX design principles, user flows, and storyboarding will help you build better
    prototypes.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你将在工作中构建概念验证和原型，学习设计原则也是有用的。了解UI和UX设计原则、用户流程和故事板的基础知识将帮助你构建更好的原型。
- en: Of course, the best way to learn this skill is by practicing it. Look for opportunities
    to build small, interactive applications to complement your analysis. They’ll
    be useful learning experiences both for you and the stakeholders you show them
    to.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，学习这项技能的最佳方式是通过实践。寻找机会构建小型交互式应用程序来补充你的分析。这将对你和展示给利益相关者的你都是有益的学习经历。
- en: 11.3.1 Skills for rapid prototyping for any project
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.3.1 任何项目快速原型化的技能
- en: To build an interactive proof of concept based on available data, the key skills,
    which can be applied to any similar project, include
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 要基于可用数据构建交互式概念验证，关键技能包括，这些技能可以应用于任何类似项目：
- en: Focusing on the features of the prototype when exploring the available data
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在探索可用数据时，关注原型的功能
- en: Verifying the quality of our data since it will be exposed to external customers
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证我们数据的质量，因为它将暴露给外部客户
- en: Enhancing the data from reputable sources (e.g., using official city names)
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从信誉良好的来源增强数据（例如，使用官方城市名称）
- en: Exploring interesting variations in our data to identify what to focus on in
    the proof of concept
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索我们数据中的有趣变化，以确定在概念验证中应关注什么
- en: Identifying visualizations appropriate for the prototype and the intended audience
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定适合原型和目标受众的视觉化方法
- en: Choosing an appropriate rapid prototyping tool with which to build a proof of
    concept
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择合适的快速原型工具来构建概念验证
- en: Designing the layout of the app as a wireframe before writing any code
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在编写任何代码之前，将应用布局设计为线框图
- en: Writing helper functions that the app can use but are not tightly coupled with
    the app code
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写应用程序可以使用但与应用程序代码紧密耦合的帮助函数
- en: Setting up a rapid prototyping tool such as `streamlit`
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置快速原型工具，如`streamlit`
- en: Implementing the desired layout in a prototyping tool
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在原型工具中实现所需的布局
- en: Displaying data and charts in your prototyping tool
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的原型工具中显示数据和图表
- en: Providing for user interaction with the presented data and visualizations
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为用户与展示的数据和可视化提供交互
- en: Summary
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: The journey from idea to working product should include the creation of proofs
    of concept and prototypes, both of which are areas where analysts can participate
    and are a useful addition to an analyst’s toolkit.
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从想法到工作产品的旅程应包括概念验证和原型的创建，这两个领域都是分析师可以参与的地方，并且是分析师工具箱的有用补充。
- en: Proofs of concept and prototypes are an effective way to bring an analysis to
    life for stakeholders.
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 概念验证和原型是使分析对利益相关者生动起来的有效方式。
- en: Choosing a tool for creating proofs of concept should depend on the existing
    tools available, how the audience will interact with the end product, and the
    speed at which a proof of concept can be created with the chosen tool.
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择用于创建概念验证的工具应取决于现有工具，目标受众如何与最终产品互动，以及使用所选工具创建概念验证的速度。
- en: Rapid prototyping also requires a results-driven approach to ensure only necessary
    functionality is built in initial versions.
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速原型设计也需要以结果为导向的方法，以确保仅在初始版本中构建必要的功能。
