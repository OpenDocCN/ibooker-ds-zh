- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why we wrote this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We want to show you why being more aware, informed, and deliberate about your
    tools is an optimal strategy for increased productivity. With this goal in mind,
    we didn’t write a bilingual dictionary (well, not *only*, you’ll find that handy
    resource in [Appendix A](app01.xhtml#ap01)). On-going discussions about Python
    vs. R (the so-called “language wars”) have long since ceased to be productive.
    It recalls, for us, Maslow’s hammer: “if all you have is a hammer, everything
    looks like a nail”. It’s a fantasy world-view set in absolutes, where tools offer
    all-encompassing solutions. Real-world situations are context-dependent, and a
    craftsperson knows that tools should be chosen appropriately. We aim to showcase
    a new way of working by taking advantage of all the great data science tools available.
    Thus we aim to develop both how the modern data scientist thinks and works.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We chose the word modern in the title not just to signify novelty in our approach.
    It allows us to take a more nuanced stance in how we discuss our tools. What do
    we mean by *modern data science*? Modern data science is:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Collective*. It does not exist in isolation. It’s integrated into wider networks,
    such as a team or organization. We avoid jargon when it creates barriers and embrace
    it when it builds bridges (see [“Technical interactions”](#tech_int), below).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Simple*. We aim to reduce unnecessary complexity in our methods, code & communications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Accessible*. It’s an open design process that can be evaluated, understood
    and optimized.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Generalizable*. Its fundamental tools and concepts are applicable to many
    domains.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Out-ward looking*. It incorporates, is informed and influenced by developments
    in other fields.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Ethical* and *honest*. It’s people-oriented. It takes best practices for ethical
    work, as well as a broader view of its consequences, for communities and society,
    into account. We avoid hype, fads, and trends that only serve short-term gains.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: However the actual job description of a *data scientist* evolves in the coming
    years, we can expect that these timeless principles will provide a strong foundation.
  prefs: []
  type: TYPE_NORMAL
- en: Technical interactions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Accepting that the world is more extensive, more diverse, and more complex than
    any single tool can serve presents a challenge that is best addressed directly
    and early.
  prefs: []
  type: TYPE_NORMAL
- en: This broadened perspective results in an increase in *technical interactions*.
    We must consider the programming language, packages, naming conventions, project
    file architecture, integrated development environments (IDEs), text editors, and
    on and on that will best suit the situation. Diversity gives rise to complexity
    and confusion.
  prefs: []
  type: TYPE_NORMAL
- en: The more diverse our ecosystem becomes, the more important it is to consider
    whether our choices act as *bridges* or *barriers*. We must always strive to make
    choices that *build bridges* with our colleagues and communities and avoid those
    that *build barriers* that isolate us and make us inflexible. There is plenty
    of room to contain all the diversity of choices we’ll encounter. The challenge
    in each situation is to make choices that balance personal preference and communal
    accessibility.
  prefs: []
  type: TYPE_NORMAL
- en: This challenge is found in all technical interactions. Aside from tool choice
    (a “hard” skill), it also includes communication (a “soft” skill). The content,
    style, and medium of communication, to name just a few considerations, also act
    as *bridges* or *barriers* to a specific audience.
  prefs: []
  type: TYPE_NORMAL
- en: Becoming bilingual in both Python and R is a step towards building bridges among
    members of the wider data science community.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book aims at data scientists at the intermediate stage of their careers.
    As such, it doesn’t attempt to *teach* data science. Nonetheless, early-career
    data scientists will also benefit from this book by learning what’s possible in
    a modern data science context before committing to any topic, tool, or language.
  prefs: []
  type: TYPE_NORMAL
- en: Our goal is to bridge the gap between the Python and R communities. We want
    to move away from a tribal, “us vs. them” mentality and towards a unified, productive
    community. Thus, this book is for those data scientists who see the benefit of
    expanding their skillset and thereby their perspectives and the value that their
    work can add to all variety of data science projects.
  prefs: []
  type: TYPE_NORMAL
- en: It’s negligent to ignore the powerful tools available to us. We strive to be
    open to new, productive ways of achieving our programming goals and encourage
    our colleagues to get out of their comfort zone.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, Part I and Appendix A also serve as a useful reference for those
    moments when you just need to quickly map something familiar in one language onto
    the other.
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To obtain the best value from this book, we assume the reader is familiar with
    at least one of the main programming languages in data science, Python and R.
    A reader with knowledge of a closely related one, such as Julia or Ruby, can also
    derive good value.
  prefs: []
  type: TYPE_NORMAL
- en: Basic familiarity with general areas of data science work, such as data munging,
    data visualization and machine learning is beneficial, but not necessary, to appreciate
    the examples, workflow scenarios and case study.
  prefs: []
  type: TYPE_NORMAL
- en: How this book is organized
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We’ve organized this book as if we’re learning a second spoken language as an
    adult.
  prefs: []
  type: TYPE_NORMAL
- en: In [Part I](part01.xhtml#p01) we begin by going back in time to the origins
    of the two languages and then showing how that has influenced the current state
    by covering key breakthroughs. If you want to get right into the languages, skip
    straight to [Part II](part02.xhtml#p02).
  prefs: []
  type: TYPE_NORMAL
- en: In our analogy with spoken languages this helps provide a bit of context as
    to why there are quirks such as irregular verbs and plural endings. Etymology^([1](preface01.xhtml#idm45127465667224))
    is interesting and helps you gain an appreciation of a language, like the seemingly
    endless forms of plural nouns in German, but it’s certainly not essential for
    speaking.
  prefs: []
  type: TYPE_NORMAL
- en: '[Part II](part02.xhtml#p02) provides a deeper dive into the dialects of both
    languages, by offering a mirrored perspective. First we will cover how a Python
    user should approach work with R, and then the other way around. Not only will
    this expand your skill set, but also your way of thinking as you appreciate how
    each language operates.'
  prefs: []
  type: TYPE_NORMAL
- en: In this part, we’ll treat each language separately as we start to become bilingual.
    Just like becoming bilingual in a spoken language, we need to resist two defeating
    urges. The first urge is to point out how much more straightforward, or more elegant,
    or in some way “better”, something is in our mother tongue. Congratulations to
    you, but that’s not the point of learning a new language, is it? We’re going to
    learn each language in its own right. Although we’ll point out comparisons as
    we go along, they’ll help us deal with our native-language baggage.
  prefs: []
  type: TYPE_NORMAL
- en: The second urge is to constantly try to interpret *literally* and *word-for-word*
    between two languages. This prevents us from *thinking* (or even *dreaming*) in
    the new language and sometimes it’s just not possible! Examples I like to use
    are phrasing such as *das schmeckt mir* in German, or *ho fame* in Italian which
    translate literally very poorly as *that tastes to me* (“That tastes good”) and
    *I have hunger* (“I’m hungry”). The point is, different languages allow for different
    constructs. This gives us new tools to work with and new ways to think, once we
    realize that we can’t map everything 1-to-1 onto our previous knowledge. Think
    of these chapters as our first step to mapping your knowledge of one language
    onto the other.
  prefs: []
  type: TYPE_NORMAL
- en: '[Part III](part03.xhtml#p03) covers the modern context of language applications.
    This includes a review of the broad ecosystem of open-source packages as well
    as the variety of workflow-specific methods. This part will demonstrate when one
    language is preferred and why, although they’ll still be separate languages at
    this point. This will help you to decide which language to use for parts of a
    large data science project.'
  prefs: []
  type: TYPE_NORMAL
- en: In spoken languages, *lost in translation* is a real thing. Some things just
    work better in one language. In German, *mir ist heiß* and *ich bin heiß* are
    both *I’m hot* in English; but a German-speaker will distinguish hotness from
    the weather versus physique. Other words like *Schadenfreude*, a compound word
    from “Schaden” (damage) and “Freude” (pleasure) meaning to take pleasure in someone’s
    difficulties, or *Kummerspeck*, a compound word from “Kummer” (greif) and “Speck”
    (bacon) referring to the weight gained due to emotional eating, are just so perfect
    there’s no use in translating them.
  prefs: []
  type: TYPE_NORMAL
- en: '[Part IV](part04.xhtml#p04) details the modern interfaces that exist between
    the languages. First, we became bilingual, using each language in isolation. Then,
    we identified how to choose one language over another. Now, we’ll explore tools
    that take us from separate and interconnected Python and R scripts to single scripts
    that weave the two languages together in a single workflow.'
  prefs: []
  type: TYPE_NORMAL
- en: The real fun starts when you’re not just bilingual, but working within a bilingual
    community. Not only can you communicate in each language independently, but you
    can also combine them in novel ways that only other bilingual speakers will appreciate
    and understand. Bilingualism doesn’t just provide access to a new community, but
    creates in itself a new community. For purists, this is pure torture, but I hope
    we’ve moved beyond that. Bilinguals can appreciate the warning “The *Ordnungsamt*
    is monitoring *Bergmannkiez* today”. Ideally you’re not substituting words because
    you’ve forgotten them, but because it’s the best choice for the situation. There’s
    no great translation of *Orgnungsamt* (regulatory agency?) and Bergmannkiez is
    a neighborhood in Berlin that shouldn’t be translated anyways. Sometimes words
    in one language more easily convey a message, like *Mundschutzpflicht*, the obligatory
    wearing of face masks during the Coronavirus pandemic.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, [Chapter 7](ch07.xhtml#ch08) consists of a case study that will outline
    how a modern data science project can be implemented based on the material covered
    in this book. Here, we’ll see all the previous sections come together in one workflow.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s talk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The field of data science is continuously evolving, and we hope that this book
    will help you navigate easily between Python & R. We’re excited to hear what you
    think, so let us know how your work has changed! You can contact us via the companion
    website for the book, [https://moderndata.design/](https://www.moderndata.design).
    There you’ll find updated extra content and a handy Python/R bilingual cheat sheet.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Constant width bold`**'
  prefs: []
  type: TYPE_NORMAL
- en: Shows commands or other text that should be typed literally by the user.
  prefs: []
  type: TYPE_NORMAL
- en: '*`Constant width italic`*'
  prefs: []
  type: TYPE_NORMAL
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: Using Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at [*https://github.com/moderndatadesign/PyR4MDS*](https://github.com/moderndatadesign/PyR4MDS).
  prefs: []
  type: TYPE_NORMAL
- en: If you have a technical question or a problem using the code examples, please
    send email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  prefs: []
  type: TYPE_NORMAL
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: "*Book Title* by
    Some Author (O’Reilly). Copyright 2012 Some Copyright Holder, 978-0-596-xxxx-x.”'
  prefs: []
  type: TYPE_NORMAL
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](http://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*http://oreilly.com*](http://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-998-9938 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0515 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*http://www.oreilly.com/catalog/catalogpage*](http://www.oreilly.com/catalog/catalogpage).
  prefs: []
  type: TYPE_NORMAL
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*http://oreilly.com*](http://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on Facebook: [*http://facebook.com/oreilly*](http://facebook.com/oreilly)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To my parents for giving me the best possible start in life. To my wife for
    being my rock. To my children, for having the brightest dreams of the future.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Boyan Angelov
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ^([1](preface01.xhtml#idm45127465667224-marker)) The study of word origins and
    meanings.
  prefs: []
  type: TYPE_NORMAL
