["```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<body>\n...\n    <div id=\"nobel-list\">\n      <h2>Selected winners</h2>\n      <table>\n        <thead>\n          <tr>\n            <th id='year'>Year</th>\n            <th id='category'>Category</th>\n            <th id='name'>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n        </tbody>\n      </table>\n    </div>\n...\n</body>\n```", "```py\n/* WINNERS LIST */\n#nobel-list { overflow: scroll; overflow-x: hidden; } ![1](assets/1.png)\n\n#nobel-list table{ font-size: 10px; }\n#nobel-list table th#year { width: 30px }\n#nobel-list table th#category { width: 120px }\n#nobel-list table th#name { width: 120px }\n\n#nobel-list h2 { font-size: 14px; margin: 4px;\ntext-align: center }\n```", "```py\n        ...\n        <tbody>\n          <tr>\n            <td>2014</td>\n            <td>Chemistry</td>\n            <td>Eric Betzig</td>\n          </tr>\n          ...\n        </tbody>\n        ...\n```", "```py\n// data =\n[{\n  name:\"C\\u00e9sar Milstein\",\n  category:\"Physiology or Medicine\",\n  gender:\"male\",\n  country:\"Argentina\",\n  year: 1984\n  _id: \"5693be6c26a7113f2cc0b3f4\"\n },\n ...\n]\n```", "```py\nlet updateList = function (data) {\n  let tableBody, rows, cells\n  // Sort the winners' data by year\n  data = data.sort(function (a, b) {\n    return +b.year - +a.year\n  })\n  // select table-body from index.xhtml\n  tableBody = d3.select('#nobel-list tbody')\n  // create place-holder rows bound to winners' data\n  rows = tableBody.selectAll('tr').data(data)\n\n  rows.join( ![1](assets/1.png)\n    (enter) => {\n      // create any new rows required\n      return enter.append('tr').on('click', function (event, d) { ![2](assets/2.png)\n        console.log('You clicked a row ' + JSON.stringify(d))\n        displayWinner(d)\n      })\n    },\n    (update) => update,\n    (exit) => {\n      return exit ![3](assets/3.png)\n        .transition()\n        .duration(nbviz.TRANS_DURATION)\n        .style('opacity', 0)\n        .remove()\n    }\n  )\n\n  cells = tableBody ![4](assets/4.png)\n    .selectAll('tr')\n    .selectAll('td')\n    .data(function (d) {\n      return [d.year, d.category, d.name]\n    })\n  // Append data cells, then set their text\n  cells.join('td').text(d => d) ![5](assets/5.png)\n  // Display a random winner if data is available\n  if (data.length) { ![6](assets/6.png)\n    displayWinner(data[Math.floor(Math.random() * data.length)])\n  }\n}\n```", "```py\n#nobel-list tr:hover{\n    cursor: pointer;\n    background: lightblue;\n}\n```", "```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<body>\n...\n    <div id=\"nobel-winner\">\n      <div id=\"picbox\"></div>\n      <div id='winner-title'></div>\n      <div id='infobox'>\n        <div class='property'>\n          <div class='label'>Category</div>\n          <span name='category'></span>\n        </div>\n        <div class='property'>\n          <div class='label'>Year</div>\n          <span name='year'></span>\n        </div>\n        <div class='property'>\n          <div class='label'>Country</div>\n          <span name='country'></span>\n        </div>\n      </div>\n      <div id='biobox'></div>\n      <div id='readmore'>\n        <a href='#'>Read more at Wikipedia</a></div>\n    </div>\n...\n</body>\n```", "```py\n/* WINNER INFOBOX */\n\n#nobel-winner {\n    font-size: 11px;\n    overflow: auto;\n    overflow-x: hidden;\n    border-top: 4px solid;\n}\n\n#nobel-winner #winner-title {\n    font-size: 12px;\n    text-align: center;\n    padding: 2px;\n    font-weight: bold;\n}\n\n#nobel-winner #infobox .label {\n    display: inline-block;\n    width: 60px;\n    font-weight: bold;\n}\n\n#nobel-winner #biobox { font-size: 11px; }\n#nobel-winner #biobox p { text-align: justify; }\n\n#nobel-winner #picbox {\n    float: right;\n    margin-left: 5px;\n}\n#nobel-winner #picbox img { width:100px; }\n\n#nobel-winner #readmore {\n    font-weight: bold;\n    text-align: center;\n}\n```", "```py\nlet displayWinner = function (wData) {\n  // store the winner's bio-box element\n  let nw = d3.select('#nobel-winner')\n\n  nw.select('#winner-title').text(wData.name)\n  nw.style('border-color', nbviz.categoryFill(wData.category)) ![1](assets/1.png)\n\n  nw.selectAll('.property span').text(function (d) { ![2](assets/2.png)\n    var property = d3.select(this).attr('name')\n    return wData[property]\n  })\n\n  nw.select('#biobox').html(wData.mini_bio)\n  // Add an image if available, otherwise remove the old one\n  if (wData.bio_image) { ![3](assets/3.png)\n    nw.select('#picbox img')\n      .attr('src', 'static/images/winners/' + wData.bio_image)\n      .style('display', 'inline')\n  } else {\n    nw.select('#picbox img').style('display', 'none')\n  }\n\n  nw.select('#readmore a').attr( ![4](assets/4.png)\n    'href',\n    'http://en.wikipedia.org/wiki/' + wData.name\n  )\n}\n```", "```py\nnbviz.callbacks.push(() => { ![1](assets/1.png)\n  let data = nbviz.countryDim.top(Infinity)\n  updateList(data)\n})\n```"]