- en: 'Chapter 9\. Capstone: R for Data Analytics'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。顶点：数据分析的R语言
- en: In this chapter, we’ll apply what we’ve learned about data analysis and visualization
    in R to explore and test relationships in the familiar *mpg* dataset. You’ll learn
    a couple of new R techniques here, including how to conduct a t-test and linear
    regression. We’ll begin by calling up the necessary packages, reading in *mpg.csv*
    from the *mpg* subfolder of the book repository’s *datasets* folder, and selecting
    the columns of interest. We’ve not used `tidymodels` so far in this book, so you
    may need to install it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将应用在R中学到的关于数据分析和可视化的知识来探索和测试*mpg*数据集中的关系。在这里，您将学习到几种新的R技术，包括如何进行t检验和线性回归。我们将从调用必要的包开始，从书籍存储库的*datasets*文件夹中读取*mpg.csv*，并选择感兴趣的列。迄今为止，我们还没有在本书中使用`tidymodels`，因此您可能需要安装它。
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Exploratory Data Analysis
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索性数据分析
- en: 'Descriptive statistics are a good place to start when exploring data. We’ll
    do so with the `describe()` function from `psych`:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 探索性数据分析是探索数据时的良好起点。我们将使用`psych`的`describe()`函数来做这件事：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Because *origin* is a categorical variable, we should be careful to interpret
    its descriptive statistics. (In fact, `psych` uses `*` to signal this warning.)
    We are, however, safe to analyze its one-way frequency table, which we’ll do using
    a new `dplyr` function, `count()`:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 因为*origin*是一个分类变量，我们应该谨慎解释其描述性统计。 （实际上，`psych`使用`*`来表示此警告。）然而，我们可以安全地分析其单向频率表，我们将使用一个新的`dplyr`函数`count()`来完成：
- en: '[PRE2]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We learn from the resulting count column *n* that while the majority of observations
    are American cars, the observations of Asian and European cars are still likely
    to be representative samples of their subpopulations.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从结果中的计数列*n*中得知，虽然大多数观察值都是美国汽车，但亚洲和欧洲汽车的观察值仍可能代表它们的子群体。
- en: 'Let’s further break these counts down by `cylinders` to derive a two-way frequency
    table. I will combine `count()` with `pivot_wider()` to display `cylinders` along
    the columns:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步通过`cylinders`来细分这些计数，以得出一个二维频率表。我将结合`count()`和`pivot_wider()`来将`cylinders`显示在列中：
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Remember that `NA` indicates a missing value in R, in this case because no observations
    were found for some of these cross-sections.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在R中，`NA`表示缺失值，这种情况是因为某些交叉部分没有观察到。
- en: Not many cars have three- or five-cylinder engines, and *only* American cars
    have eight cylinders. It’s common when analyzing data to have *imbalanced* datasets
    where there is a disproportionate number of observations in some levels. Special
    techniques are often needed to model such data. To learn more about working with
    imbalanced data, check out [*Practical Statistics for Data Scientists*](https://oreil.ly/jv8RS),
    2nd edition by Peter Bruce et al. (O’Reilly).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 并非许多汽车拥有三缸或五缸引擎，*只有*美国汽车拥有八缸引擎。在分析数据时，数据集*不平衡*是常见的，其中某些水平的观察数量不成比例。通常需要特殊技术来对这类数据进行建模。要了解更多关于处理不平衡数据的信息，请查看彼得·布鲁斯等人的[*《数据科学实用统计》*](https://oreil.ly/jv8RS)，第2版（O’Reilly）。
- en: 'We can also find the descriptive statistics for each level of *origin*. First,
    we’ll use `select()` to choose the variables of interest, then we can use `psych`’s
    `describeBy()` function, setting `groupBy` to `origin`:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以找出每个*origin*水平的描述性统计。首先，我们将使用`select()`选择感兴趣的变量，然后可以使用`psych`的`describeBy()`函数，将`groupBy`设置为`origin`：
- en: '[PRE4]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let’s learn more about the potential relationship between *origin* and *mpg*.
    We’ll get started by visualizing the distribution of *mpg* with a histogram, which
    is shown in [Figure 9-1](#mpg-hist):'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步了解*origin*和*mpg*之间的潜在关系。我们将从可视化*mpg*分布的直方图开始，如[图 9-1](#mpg-hist)所示：
- en: '[PRE5]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Histogram](assets/aina_0901.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![Histogram](assets/aina_0901.png)'
- en: Figure 9-1\. Distribution of *mpg*
  id: totrans-18
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-1。*mpg*的分布
- en: 'We can now hone in on visualizing the distribution of *mpg* by *origin*. Overlaying
    all three levels of *origin* on one histogram could get cluttered, so a boxplot
    like what’s shown in [Figure 9-2](#mpg-box) may be a better fit:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以集中于通过*origin*来可视化*mpg*的分布。将所有三个*origin*水平叠加在一个直方图上可能会显得杂乱，因此类似于[图 9-2](#mpg-box)所示的箱线图可能更合适：
- en: '[PRE6]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Boxplot](assets/aina_0902.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![Boxplot](assets/aina_0902.png)'
- en: Figure 9-2\. Distribution of *mpg* by *origin*
  id: totrans-22
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-2。*mpg*按*origin*分布
- en: 'If we’d rather visualize these as histograms, and not make a mess, we can do
    so in R with a *facet* plot. Use `facet_wrap()` to split the `ggplot2` plot into
    subplots, or *facets*. We’ll start with a `~`, or tilde operator, followed by
    the variable name. When you see the tilde used in R, think of it as the word “by.”
    For example, here we are faceting a histogram by `origin`, which results in the
    histograms shown in [Figure 9-3](#mpg-facet):'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们更喜欢将它们可视化为直方图，而不是搞乱，我们可以在 R 中使用 *facet* 图来实现。使用 `facet_wrap()` 将 `ggplot2`
    图分成子图或 *facet*。我们将从 `~` 或波浪号运算符开始，后面是变量名。当您在 R 中看到波浪号时，请将其视为“按照”的意思。例如，我们在这里按
    `origin` 进行分面直方图，结果显示在 [图 9-3](#mpg-facet) 中：
- en: '[PRE7]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Faceted histogram](assets/aina_0903.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![分面直方图](assets/aina_0903.png)'
- en: Figure 9-3\. Distribution of *mpg* by *origin*
  id: totrans-26
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-3\. *mpg* 按 *origin* 的分布
- en: Hypothesis Testing
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 假设检验
- en: You could continue to explore the data using these methods, but let’s move into
    hypothesis testing. In particular, I would like to know whether there is a significant
    difference in mileage between American and European cars. Let’s create a new data
    frame containing just these observations; we’ll use it to conduct a t-test.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以继续使用这些方法探索数据，但让我们进入假设检验。特别是，我想知道美国车和欧洲车之间的里程是否有显著差异。让我们创建一个包含这些观测值的新数据框架；我们将使用它进行
    t 检验。
- en: '[PRE8]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Independent Samples t-test
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 独立样本 t 检验
- en: 'R includes a `t.test()` function out of the box: we need to specify where our
    data comes from with the `data` argument, and we’ll also need to specify what
    *formula* to test. To do that, we’ll set the relationship between independent
    and dependent variables with the `~` operator. The dependent variable comes in
    front of the `~`, with independent variables following. Again, you interpret this
    notation as analyzing the effect of `mpg` “by” `origin`.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: R 包含了一个 `t.test()` 函数：我们需要用 `data` 参数指定数据的来源，并且还需要指定要测试的 *公式*。为此，我们将使用 `~` 运算符来设置独立和因变量之间的关系。因变量位于
    `~` 的前面，后面是独立变量。同样，您可以将此符号解释为分析 `mpg` 通过 `origin` 的效果。
- en: '[PRE9]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Isn’t it great that R even explicitly states what our alternative hypothesis
    is, *and* includes the confidence interval along with the p-value? (You can tell
    this program was built for statistical analysis.) Based on the p-value, we will
    reject the null; there does appear to be evidence of a difference in means.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: R 程序甚至明确说明了我们的备择假设是什么，并且在 p 值的同时还包括了置信区间（你可以看出这个程序是为统计分析而建立的）。根据 p 值，我们将拒绝原假设；似乎有证据表明均值存在差异。
- en: 'Let’s now turn our attention to relationships between continuous variables.
    First, we’ll use the `cor()` function from base R to print a correlation matrix.
    We’ll do this only for the continuous variables in *mpg*:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将注意力转向连续变量之间的关系。首先，我们将使用基本 R 中的 `cor()` 函数打印相关矩阵。我们仅针对 *mpg* 中的连续变量执行此操作：
- en: '[PRE10]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We can use `ggplot2` to visualize, for example, the relationship between weight
    and mileage, as in [Figure 9-4](#mpg-scatter):'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `ggplot2` 来可视化，例如体重和里程之间的关系，如 [图 9-4](#mpg-scatter) 所示：
- en: '[PRE11]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Scatterplot](assets/aina_0904.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![散点图](assets/aina_0904.png)'
- en: Figure 9-4\. Scatterplot of *weight* by *mpg*
  id: totrans-39
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-4\. *weight* 与 *mpg* 的散点图
- en: 'Alternatively, we could use the `pairs()` function from base R to produce a
    pairplot of all combinations of variables, laid out similarly to a correlation
    matrix. [Figure 9-5](#pairplot) is a pairplot of selected variables from *mpg*:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以使用基本 R 中的 `pairs()` 函数生成所有变量组合的成对图，类似于相关矩阵的布局。[图 9-5](#pairplot) 是 *mpg*
    中选定变量的成对图：
- en: '[PRE12]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Pairplot](assets/aina_0905.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![成对图](assets/aina_0905.png)'
- en: Figure 9-5\. Pairplot
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-5\. 成对图
- en: Linear Regression
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线性回归
- en: 'We’re ready now for linear regression, using base R’s `lm()` function (this
    is short for *linear model*). Similar to `t.test()`, we will specify a dataset
    and a formula. Linear regression returns a fair amount more output than a t-test,
    so it’s common to assign the results to a new object in R first, then explore
    its various elements separately. In particular, the `summary()` function provides
    a helpful overview of the regression model:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备进行线性回归，使用基本的 R `lm()` 函数（这是线性模型的缩写）。与 `t.test()` 类似，我们会指定数据集和一个公式。线性回归返回的输出比
    t 检验要多一些，因此通常先将结果分配给 R 中的一个新对象，然后分别探索其各个元素。特别是 `summary()` 函数提供了回归模型的有用概览：
- en: '[PRE13]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This output should look familiar. Here you’ll see the coefficients, p-values,
    and R-squared, among other figures. Again, there does appear to be a significant
    influence of weight on mileage.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 此输出应该看起来很熟悉。在这里，您将看到系数、p值和R平方等指标。再次强调，车重对里程的影响似乎是显著的。
- en: 'Last but not least, we can fit this regression line over the scatterplot by
    including `geom_smooth()` in our `ggplot()` function, setting `method` to `lm`.
    This results in [Figure 9-6](#mpg-fit-scatter):'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，我们可以在散点图上拟合这条回归线，方法是在我们的`ggplot()`函数中包含`geom_smooth()`，并将`method`设置为`lm`。这将生成[图9-6](#mpg-fit-scatter)：
- en: '[PRE14]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Fit scatterplot](assets/aina_0906.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![适合的散点图](assets/aina_0906.png)'
- en: Figure 9-6\. Scatterplot with fit regression line of *weight* by *mpg*
  id: totrans-51
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-6\. *mpg*数据集中*weight*与*mpg*的散点图及拟合回归线
- en: Train/Test Split and Validation
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练/测试拆分和验证
- en: '[Chapter 5](ch05.html#data-analytics-stack) briefly reviewed how machine learning
    relates to working with data more broadly. A technique popularized by machine
    learning that you may encounter in your data analytics work is the *train/test
    split*. The idea here is to *train* the model on a subset of your data, then *test*
    it on another subset. This provides assurance that the model doesn’t just work
    on one particular sampling of observations, but can generalize to the wider population.
    Data scientists are often especially interested in how well the model does at
    making predictions on the testing data.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html#data-analytics-stack)简要回顾了机器学习如何与更广泛的数据处理相关联。一种由机器学习推广的技术是您可能在数据分析工作中遇到的*训练/测试拆分*。其核心思想是在数据的子集上*训练*模型，然后在另一个子集上*测试*模型。这确保了模型不仅适用于特定抽样观测，而是能够推广到更广泛的人群。数据科学家通常特别关注模型在测试数据上进行预测的效果。'
- en: Let’s split our *mpg* dataset in R, train the linear regression model on part
    of the data, and then test it on the remainder. To do so, we’ll use the `tidymodels`
    package. While not part of the `tidyverse`, this package is built along the same
    principles and thus works well with it.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在R中将我们的*mpg*数据集拆分，对部分数据进行线性回归模型训练，然后在剩余数据上进行测试。为此，我们将使用`tidymodels`包。虽然不是`tidyverse`的一部分，但该包是基于相同原则构建的，因此与之兼容。
- en: 'You may remember in [Chapter 2](ch02.html#foundations-of-probability) that,
    because we were using random numbers, the results you saw in your workbook were
    different than what was documented in the book. Because we’ll again be splitting
    our dataset randomly here, we could encounter that same problem. To avoid that,
    we can set the *seed* of R’s random number generator, which results in the same
    series of random numbers being generated each time. This can be done with the
    `set.seed()` function. You can set it to any number; `1234` is common:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.html#foundations-of-probability)中，您可能还记得，由于我们使用的是随机数，您在工作簿中看到的结果与书中记录的不同。因为我们将再次随机拆分我们的数据集，我们可能会遇到同样的问题。为了避免这种情况，我们可以设置R的随机数发生器的*种子*，这样每次生成的随机数序列都是相同的。这可以通过`set.seed()`函数来实现。您可以将其设置为任何数字；通常使用`1234`：
- en: '[PRE15]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: To begin the split, we can use the aptly named `initial_split()` function; from
    there, we’ll subset our data into training and testing datasets with the `training()`
    and `testing()` functions, respectively.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始拆分，我们可以使用名为`initial_split()`的适当命名的函数；然后，我们将使用`training()`和`testing()`函数将数据子集分为训练和测试数据集。
- en: '[PRE16]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'By default, `tidymodels` splits the data’s observations into two groups at
    random: 75% of the observations went to the training group, the remainder to the
    test. We can confirm that with the `dim()` function from base R to get the number
    of rows and columns in each dataset, respectively:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`tidymodels`将数据的观测分成两组：75%的观测分配给训练组，其余分配给测试组。我们可以使用基本R中的`dim()`函数来确认每个数据集的行数和列数：
- en: '[PRE17]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: At 294 and 98 observations, our training and testing sample sizes should be
    sufficiently large for reflective statistical inference. While it’s not often
    a consideration for the massive datasets used in machine learning, adequate sample
    size can be a limitation when splitting data.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在294个和98个观测值中，我们的训练和测试样本大小应足够大，以进行反映性统计推断。虽然这在机器学习中使用的大数据集中很少考虑，但当拆分数据时，充足的样本量可能是一个限制因素。
- en: It’s possible to split the data into other proportions than 75/25, to use special
    techniques for splitting the data, and so forth. For more information, check the
    `tidymodels` documentation; until you become more comfortable with regression
    analysis, the defaults are fine.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将数据拆分为比例为75/25之外的其他比例，使用拆分数据的特殊技术等等。有关更多信息，请查阅`tidymodels`文档；在您对回归分析更加熟悉之前，这些默认值都是可以的。
- en: To build our training model, we’ll first *specify* what type of model it is
    with the `linear_reg()` function, then *fit* it. The inputs of the `fit()` function
    should look familiar to you, except this time we are using the training subset
    of *mpg* only.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建我们的训练模型，我们将首先使用`linear_reg()`函数*指定*模型的类型，然后*拟合*它。`fit()`函数的输入对您应该很熟悉，除了这一次我们仅使用了*mpg*的训练子集。
- en: '[PRE18]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You will see from your console output that the `lm()` function from base R,
    which you’ve used before, was used as the *engine* to fit the model.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您将从控制台输出中看到，来自基本R的`lm()`函数，您以前使用过的函数，被用作拟合模型的*引擎*。
- en: We can get the coefficients and p-values of our training model with the `tidy()`
    function, and its performance metrics (such as R-squared) with `glance()`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`tidy()`函数获取训练模型的系数和p值，并使用`glance()`获取其性能指标（如R平方）。
- en: '[PRE19]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This is great, but what we *really* want to know is how well this model performs
    when we apply it to a new dataset; this is where the test split comes in. To make
    predictions on `mpg_test`, we’ll use the `predict()` function. I will also use
    `bind_cols()` to add the column of predicted Y-values to the data frame. This
    column by default will be called `.pred`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好，但是我们*真正*想知道的是当我们将该模型应用于新数据集时，该模型的表现如何；这就是测试拆分的作用。要在`mpg_test`上进行预测，我们将使用`predict()`函数。我还将使用`bind_cols()`将预测的Y值列添加到数据框中。此列默认将被称为`.pred`。
- en: '[PRE20]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now that we’ve applied the model to this new data, let’s evaluate its performance.
    We can, for example, find its R-squared with the `rsq()` function. From our `mpg_results`
    data frame, we’ll need to specify which column contains the actual Y values with
    the `truth` argument, and which are predictions with the `estimate` column.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将模型应用于这些新数据，让我们评估一下它的性能。例如，我们可以使用`rsq()`函数找到它的R平方。从我们的`mpg_results`数据框中，我们需要使用`truth`参数指定包含实际Y值的列，以及使用`estimate`列指定预测值。
- en: '[PRE21]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: At an R-squared of 60.6%, the model derived from the training dataset explains
    a fair amount of variability in the testing data.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在R平方为60.6%时，从训练数据集得出的模型解释了测试数据中相当数量的变异。
- en: Another common evaluation metric is the root mean square error (RMSE). You learned
    about the concept of *residuals* in [Chapter 4](ch04.html#foundations-of-data-analytics)
    as the difference between actual and predicted values; RMSE is the standard deviation
    of the residuals and thus an estimate of how spread errors tend to be. The `rmse()`
    function returns the RMSE.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见的评估指标是均方根误差（RMSE）。您在[第4章](ch04.html#foundations-of-data-analytics)中了解到了*残差*的概念，即实际值与预测值之间的差异；RMSE是残差的标准偏差，因此是误差传播方式的估计值。`rmse()`函数返回RMSE。
- en: '[PRE22]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Because it’s relative to the scale of the dependent variable, there’s no one-size-fits-all
    way to evaluate RMSE, but between two competing models using the same data, a
    smaller RMSE is preferred.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 因为它相对于因变量的比例，没有一种适用于所有情况的方式来评估RMSE，但在使用相同数据的两个竞争模型之间，更小的RMSE是首选。
- en: '`tidymodels` makes numerous techniques available for fitting and evaluating
    models in R. We’ve looked at a regression model, which takes a continuous dependent
    variable, but it’s also possible to build *classification* models, where the dependent
    variable is categorical. This package is a relative newcomer to R, so there is
    somewhat less literature available, but expect more to come as the package grows
    in popularity.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`tidymodels`在R中提供了许多用于拟合和评估模型的技术。我们已经看过一个回归模型，它使用连续因变量，但也可以构建*分类*模型，其中因变量是分类的。这个包相对较新，所以可用的文献相对较少，但随着这个包的流行，预计会有更多的文献出现。'
- en: Conclusion
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: There is, of course, much more you could do to explore and test the relationships
    in this and other datasets, but the steps we’ve taken here serve as a solid opening.
    Earlier, you were able to conduct and interpret this work in Excel, and now you’ve
    leaped into doing it in R.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您可以进行更多的探索和测试来探索这些数据集和其他数据集之间的关系，但我们在这里所采取的步骤是一个坚实的开端。之前，您可以在Excel中进行这项工作并进行解释，现在您已经开始在R中进行了。
- en: Exercises
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: 'Take a moment to try your hand at analyzing a familiar dataset with familiar
    steps, now using R. At the end of [Chapter 4](ch04.html#foundations-of-data-analytics),
    you practiced analyzing data from the `ais` dataset in the [book repository](https://oreil.ly/egOx1).
    This data is available in the R package `DAAG`; try installing and loading it
    from there (it is available as the object `ais`). Do the following:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 请花点时间尝试使用R分析一个熟悉的数据集，采用熟悉的步骤。在[第四章](ch04.html#foundations-of-data-analytics)结束时，您曾练习在[书库](https://oreil.ly/egOx1)中的`ais`数据集的数据分析。该数据在R包`DAAG`中可用；尝试从那里安装和加载它（它作为对象`ais`可用）。请执行以下操作：
- en: Visualize the distribution of red blood cell count (*rcc*) by sex (*sex*).
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过性别（*sex*）可视化红细胞计数（*rcc*）的分布。
- en: Is there a significant difference in red blood cell count between the two groups
    of sex?
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两组性别之间的红细胞计数是否有显著差异？
- en: Produce a correlation matrix of the relevant variables in this dataset.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个数据集中产生相关变量的相关矩阵。
- en: Visualize the relationship of height (*ht*) and weight (*wt*).
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可视化身高（*ht*）和体重（*wt*）之间的关系。
- en: Regress *ht* on *wt*. Find the equation of the fit regression line. Is there
    a significant relationship? What percentage of the variance in *ht* is explained
    by *wt*?
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将*ht*回归到*wt*。找到拟合回归线的方程。是否存在显著关系？体重（*wt*）解释的身高（*ht*）变异百分比是多少？
- en: Split your regression model into training and testing subsets. What is the R-squared
    and RMSE on your test model?
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将回归模型分割成训练集和测试集。测试模型的R平方和RMSE是多少？
