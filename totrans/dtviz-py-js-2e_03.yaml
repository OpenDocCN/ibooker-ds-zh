- en: Chapter 1\. Development Setup
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一章\. 开发设置
- en: This chapter covers the downloads and software installations needed to use this
    book, and sketches out a recommended development environment. As you’ll see, this
    isn’t as onerous as it might once have been. I’ll cover Python and JavaScript
    dependencies separately and give a brief overview of cross-language IDEs.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了下载和安装本书所需的软件，并概述了推荐的开发环境。正如你将看到的，这并不像过去那样繁琐。我将分别介绍Python和JavaScript的依赖关系，并简要概述跨语言IDE。
- en: The Accompanying Code
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附带的代码
- en: 'There’s a GitHub repository for the bulk of the code covered in this book,
    including the full Nobel Prize visualization. To get hold of it, just perform
    a [git clone](https://git-scm.com/docs/git-clone) to a suitable local directory:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书涵盖的大部分代码都可以在GitHub仓库中找到，包括完整的诺贝尔奖可视化。要获取它，只需将其[git clone](https://git-scm.com/docs/git-clone)到合适的本地目录：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This should create a local *dataviz-with-python-and-js-v2* directory with the
    key source code covered by the book.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个名为*dataviz-with-python-and-js-v2*的本地目录，并包含书中涵盖的关键源代码。
- en: Python
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python
- en: The bulk of the libraries covered in the book are Python-based, but what might
    have been a challenging attempt to provide comprehensive installation instructions
    for the various operating systems and their quirks is made much easier by the
    existence of [Anaconda](https://www.anaconda.com), a Python platform that bundles
    together most of the popular analytics libraries in a convenient package. The
    book assumes you are using Python 3, which was released in 2008 and is now firmly
    established.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书涵盖的大部分库都是基于Python的，但是Anaconda的存在使得为各种操作系统及其怪癖提供全面安装说明的尝试变得更加容易，Anaconda是一个Python平台，它将大多数流行的分析库捆绑在一个方便的软件包中。本书假设您正在使用自2008年发布以来已经稳固确立的Python
    3。
- en: Anaconda
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Anaconda
- en: 'Installing some of the bigger Python libraries used to be a challenge all in
    itself, particularly those such as NumPy that depend on complex low-level C and
    Fortran packages. That’s a great deal easier now and most will happily install
    using Python’s `easy_install` with a `pip` command:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 曾经安装一些较大的Python库本身就是一个挑战，特别是那些依赖于复杂低级C和Fortran包的库，如NumPy。现在这变得简单得多，大多数可以使用Python的`easy_install`和`pip`命令轻松安装：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: But some big number-crunching libraries are still tricky to install. Dependency
    management and versioning (you might need to use different versions of Python
    on the same machine) can make things trickier still, and this is where Anaconda
    comes into its own. It does all the dependency checking and binary installs so
    you don’t have to. It’s also a very convenient resource for a book like this.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 但是某些大数据处理库仍然难以安装。依赖管理和版本控制（您可能需要在同一台机器上使用不同版本的Python）可能会使事情变得更加复杂，这正是Anaconda发挥作用的地方。它执行所有的依赖检查和二进制安装，使您免于烦恼。对于像这样的书籍资源来说，这也非常方便。
- en: 'To get your free Anaconda install, just navigate your browser to the [Anaconda
    site](https://oreil.ly/4FkCT), choose the version for your operating system (ideally
    at least Python 3.5), and follow the instructions. Windows and OS X get a graphical
    installer (just download and double-click), whereas Linux requires you to run
    a little bash script:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取免费的Anaconda安装，请只需将浏览器导航到[Anaconda网站](https://oreil.ly/4FkCT)，选择适合您操作系统版本（理想情况下至少是Python
    3.5），然后按照说明操作。Windows和OS X有图形安装程序（只需下载并双击），而Linux需要您运行一个小的bash脚本：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here’s the latest installing instructions:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最新的安装说明：
- en: '[For Windows](https://oreil.ly/KErTO)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[对于Windows](https://oreil.ly/KErTO)'
- en: '[For macOS](https://oreil.ly/5cVfC)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[对于macOS](https://oreil.ly/5cVfC)'
- en: '[For Linux](https://oreil.ly/tIQT5)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[对于Linux](https://oreil.ly/tIQT5)'
- en: I recommend sticking to defaults when installing Anaconda.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议在安装Anaconda时保持默认设置。
- en: The official check guide can be found at the [Anaconda site](https://oreil.ly/tL7c9).
    Windows and macOS users can use the Anaconda’s Navigator GUI or, along with Linux
    users, use the Conda command-line interface.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在[Anaconda网站](https://oreil.ly/tL7c9)找到官方检查指南。Windows和macOS用户可以使用Anaconda的Navigator
    GUI，或者与Linux用户一起使用Conda命令行界面。
- en: Installing Extra Libraries
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装额外的库
- en: 'Anaconda contains almost all the Python libraries covered in this book (see
    [the Anaconda documentation](https://oreil.ly/c2vRS) for the full list of Anaconda
    library packages). Where we need a non-Anaconda library, we can use [`pip`](https://oreil.ly/b0Eni)
    (short for Pip Installs Python), the de facto standard for installing Python libraries.
    Using `pip` to install is as easy as can be. Just call `pip install` followed
    by the name of the package from the command line and it should be installed or,
    with any luck, give a sensible error:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda包含了本书涵盖的几乎所有Python库（详见[Anaconda文档](https://oreil.ly/c2vRS)中的完整Anaconda库包列表）。在我们需要非Anaconda库时，可以使用[`pip`](https://oreil.ly/b0Eni)（Pip
    Installs Python的简称），这是安装Python库的事实标准。使用`pip`安装非常简单。只需在命令行中调用`pip install`，然后跟上包的名称，它就会被安装，或者出现一个合理的错误信息：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Virtual Environments
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 虚拟环境
- en: '[Virtual environments](https://oreil.ly/x7Uq5) provide a way of creating a
    sandboxed development environment with a particular Python version and/or set
    of third-party libraries. Using these virtual environments avoids polluting your
    global Python with these installs and gives you a lot more flexibility (you can
    play with different package versions or change your Python version if need be).
    The use of virtual environments is becoming a best practice in Python development,
    and I strongly suggest that you follow it.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[虚拟环境](https://oreil.ly/x7Uq5)提供了一种使用特定的Python版本和/或第三方库集创建沙盒式开发环境的方式。使用这些虚拟环境可以避免在全局Python环境中安装这些软件包，并且给你更多的灵活性（你可以尝试不同的包版本或者改变Python版本）。在Python开发中，使用虚拟环境已经成为一种最佳实践，我强烈建议你遵循这个做法。'
- en: 'Anaconda comes with a `conda` system command that makes creating and using
    virtual environments easy. Let’s create a special one for this book, based on
    the full Anaconda package:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Anaconda附带一个`conda`系统命令，使得创建和使用虚拟环境变得简单。让我们为本书创建一个特别的虚拟环境，基于完整的Anaconda包：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As the final message says, to use this virtual environment you need only `source
    activate` it (for Windows machines, you can leave out the `source`):'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 正如最后的消息所说，要使用这个虚拟环境，你只需`source activate`它（对于Windows机器，可以省略`source`）：
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note that you get a helpful cue at the command line to let you know which virtual
    environment you’re using.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在命令行中会得到一个有用的提示，让你知道正在使用哪个虚拟环境。
- en: The `conda` command can do a lot more than just facilitate virtual environments,
    combining the functionality of Python’s `pip` installer and `virtualenv` command,
    among other things. You can get a full rundown [in the Anaconda documentation](https://oreil.ly/KN0ZL).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`conda`命令不仅仅能够简化虚拟环境的使用，还结合了Python的`pip`安装器和`virtualenv`命令的功能等。你可以在[Anaconda文档](https://oreil.ly/KN0ZL)中获得完整的介绍。'
- en: 'If you’re confident with standard Python virtual environments, these have been
    made a lot easier to work with by their incorporation in Python’s Standard Library.
    To create a virtual environment from the command line:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对标准的Python虚拟环境感到自信，它们已经通过将其整合到Python标准库中而变得更加易于使用。要从命令行创建一个虚拟环境：
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This creates a `python-js-viz` directory containing the various elements of
    the virtual environment. This includes some activation scripts. To activate the
    virtual environment with macOS or Linux, run the activate script:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个`python-js-viz`目录，其中包含虚拟环境的各种元素。这包括一些激活脚本。要在macOS或Linux上激活虚拟环境，运行激活脚本：
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'On Windows machines, run the *.bat* file:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows机器上，运行*.bat*文件：
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can then use `pip` to install Python libraries to the virtual environment,
    avoiding polluting your global Python distribution:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你可以使用`pip`来安装Python库到虚拟环境，避免污染全局Python分布：
- en: '[PRE9]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To install all the libraries required by this book, you can use the *requirements.txt*
    file in the book’s [GitHub repo](https://github.com/Kyrand/dataviz-with-python-and-js-ed-2):'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装本书所需的所有库，可以使用书的[GitHub存储库](https://github.com/Kyrand/dataviz-with-python-and-js-ed-2)中的*requirements.txt*文件：
- en: '[PRE10]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: You can find information on the virtual environment [in the Python documentation](https://oreil.ly/dhCvZ).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Python文档的[虚拟环境](https://oreil.ly/dhCvZ)部分找到相关信息。
- en: JavaScript
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript
- en: The good news is that you don’t need much JavaScript software at all. The only
    must-have is the Chrome/Chromium web browser, which is used in this book. It offers
    the most powerful set of developer tools of any current browser and is cross-platform.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，你几乎不需要任何JavaScript软件。唯一必须的是在本书中使用的Chrome/Chromium Web浏览器。它提供了任何当前浏览器中最强大的一套开发工具，并且跨平台。
- en: To download Chrome, just go to [the home page](https://oreil.ly/jNTUl) and download
    the version for your operating system. This should be automatically detected.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载Chrome，只需访问[主页](https://oreil.ly/jNTUl)，然后下载适合您操作系统版本的程序。这应该会自动检测到。
- en: All the JavaScript libraries used in this book can be found in the accompanying
    [GitHub repo](https://github.com/Kyrand/dataviz-with-python-and-js-ed-2), but
    there are generally two ways to deliver them to the browser. You can use a content
    delivery network (CDN), which efficiently caches a copy of the library retrieved
    from the delivery network. Alternatively, you can use a local copy of the library
    served to the browser. Both of these methods use the `script` tag in an HTML document.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用的所有JavaScript库都可以在附带的[GitHub仓库](https://github.com/Kyrand/dataviz-with-python-and-js-ed-2)中找到，但通常有两种方法将它们传递到浏览器。您可以使用内容交付网络（CDN），它有效地缓存从交付网络检索到的库的副本。或者，您可以使用本地库的副本传递到浏览器。这两种方法都使用HTML文档中的`script`标签。
- en: Content Delivery Networks
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内容交付网络
- en: With CDNs, rather than having the libraries installed on your local machine,
    the JavaScript is retrieved by the browser over the web, from the closest available
    server. This should make things very fast—faster than if you served the content
    yourself.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CDN，而不是在本地机器上安装库，浏览器从最近的可用服务器上获取JavaScript，从而使事情变得非常快速——比您自己提供内容更快。
- en: 'To include a library via CDN, you use the usual `<script>` tag, typically placed
    at the bottom of your HTML page. For example, the following call adds a current
    version of D3:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过CDN包含库，您使用通常放置在HTML页面底部的常规`<script>`标签。例如，以下调用会添加当前版本的D3：
- en: '[PRE11]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Installing Libraries Locally
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在本地安装库
- en: If you need to install JavaScript libraries locally, because, for example, you
    anticipate doing some offline development work or can’t guarantee an internet
    connection, there are a number of fairly simple ways to do so.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要在本地安装JavaScript库，例如预期进行离线开发工作或无法保证网络连接，则有许多非常简单的方法可以实现。
- en: 'You can just download the separate libraries and put them in your local server’s
    static folder. This is a typical folder structure. Third-party libraries go in
    the *static/libs* directory off root, like so:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您只需下载单独的库并将其放入本地服务器的静态文件夹中即可。这是典型的文件夹结构。第三方库放在根目录下的*static/libs*目录中，如下所示：
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'If you organize things this way, to use D3 in your scripts now requires a local
    file reference with the `<script>` tag:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您以这种方式组织事务，现在使用D3在您的脚本中需要使用`<script>`标签引用本地文件：
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Databases
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库
- en: The recommended database for small to medium-sized dataviz projects is the brilliant,
    serverless, file-based, SQL-based [SQLite](https://www.sqlite.org). This database
    is used throughout the dataviz toolchain demonstrated in the book and is the only
    database you really need.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐用于中小型数据可视化项目的建议数据库是非常出色的、无服务器、基于文件的SQL数据库[SQLite](https://www.sqlite.org)。该数据库在书中展示的数据可视化工具链中被广泛使用，是您真正需要的唯一数据库。
- en: 'The book also covers basic Python interactions with [MongoDB](https://www.mongodb.org),
    the most popular nonrelational, or [NoSQL database](https://oreil.ly/uvX4e):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书还涵盖了基本的Python与最受欢迎的非关系型数据库[MongoDB](https://www.mongodb.org)的交互。
- en: SQLite
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite
- en: SQLite should come as standard with macOS and Linux machines. For Windows, follow
    [this guide](https://oreil.ly/Ck6qR).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: SQLite应该作为macOS和Linux机器的标准配备。对于Windows，请参阅[此指南](https://oreil.ly/Ck6qR)。
- en: MongoDB
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB
- en: You can find installation instructions for the various operating systems [in
    the MongoDB documentation](https://oreil.ly/JIt8R).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在MongoDB文档中的各种操作系统的安装说明中找到[安装说明](https://oreil.ly/JIt8R)。
- en: Note that we’ll be using Python’s [SQLAlchemy](https://www.sqlalchemy.org) SQL
    library either directly or through libraries that build on it. This means we can
    convert any SQLite examples to another SQL backend (e.g., [MySQL](https://www.mysql.com)
    or [PostgreSQL](https://www.postgresql.org)) by changing a configuration line
    or two.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们将直接或通过依赖它的库（例如[SQLAlchemy](https://www.sqlalchemy.org) SQL库）使用Python。这意味着我们可以通过更改一两行配置来将任何SQLite示例转换为其他SQL后端（例如[MySQL](https://www.mysql.com)或[PostgreSQL](https://www.postgresql.org)）。
- en: Getting MongoDB Up and Running
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动和运行MongoDB
- en: 'MongoDB can be a little trickier to install than some databases. As mentioned,
    you can follow this book perfectly well without going through the hassle of installing
    the server-based MongoDB, but if you want to try it out or find yourself needing
    to use it at work, here are some installation notes:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 的安装可能比某些数据库复杂一些。正如提到的那样，你可以完全不安装基于服务器的 MongoDB 而完美地使用本书，但如果你想尝试或者在工作中需要使用它，这里有一些安装注意事项：
- en: For OS X users, check out [the official docs](https://oreil.ly/zTEH5) for MongoDB
    installation instructions.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 OS X 用户，请查阅[官方文档](https://oreil.ly/zTEH5)获取 MongoDB 安装指南。
- en: This [Windows-specific guide](https://oreil.ly/OI5gB) from the official docs
    should get your MongoDB server up and running. You will probably need to use administrator
    privileges to create the necessary data directories and so on.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇来自官方文档的[针对 Windows 的特定指南](https://oreil.ly/OI5gB)应该能帮助你启动 MongoDB 服务器。你可能需要使用管理员权限来创建必要的数据目录等。
- en: More often than not these days, you’ll be installing MongoDB to a Linux-based
    server, most commonly an Ubuntu variant, which uses the [deb](https://oreil.ly/rRQrG)
    file format to deliver its packages. The [official MongoDB docs](https://oreil.ly/SrRzJ)
    do a good job covering an Ubuntu install.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，你更可能将 MongoDB 安装到基于 Linux 的服务器上，最常见的是 Ubuntu 变种，它使用[deb](https://oreil.ly/rRQrG)文件格式来提供其软件包。[官方
    MongoDB 文档](https://oreil.ly/SrRzJ)在涵盖 Ubuntu 安装方面做得很好。
- en: 'MongoDB uses a *data* directory to store to and, depending how you install
    it, you may need to create this yourself. On OS X and Linux boxes, the default
    is a *data* directory off the root directory, which you can create using `mkdir`
    as a superuser (`sudo`):'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 使用一个*数据*目录来存储数据，并且，根据你的安装方式，你可能需要自己创建这个目录。在 OS X 和 Linux 系统上，默认是在根目录下的一个*数据*目录，你可以使用`mkdir`命令作为超级用户（`sudo`）创建它：
- en: '[PRE14]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You’ll then want to set ownership to yourself:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你需要设置所有权为自己：
- en: '[PRE15]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'With Windows, installing the [MongoDB Community Edition](https://oreil.ly/3Vtft),
    you can create the necessary *data* directory with the following command:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，安装[MongoDB 社区版](https://oreil.ly/3Vtft)后，你可以使用以下命令创建必要的*数据*目录：
- en: '[PRE16]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The MongoDB server will often be started by default on Linux boxes; otherwise,
    on Linux and OS X the following command will start a server instance:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 服务器通常会在 Linux 系统上默认启动；否则，在 Linux 和 OS X 上，可以使用以下命令启动服务器实例：
- en: '[PRE17]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'On Windows Community Edition, the following, run from a command prompt, will
    start a server instance:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 社区版上，从命令提示符运行以下命令将启动一个服务器实例：
- en: '[PRE18]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Easy MongoDB with Docker
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Docker 轻松安装 MongoDB
- en: 'MongoDB can be tricky to install. For example, current Ubuntu variants (> version
    22.04) have [incompatible SSL libs](https://oreil.ly/ShOjF). If you have [Docker
    installed](https://oreil.ly/ZF5Uf), a working development DB on the default port
    27017 is only a single command away:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 的安装可能有些棘手。例如，当前的 Ubuntu 变种（> 版本 22.04）存在[不兼容的 SSL 库](https://oreil.ly/ShOjF)。如果你已经安装了[Docker](https://oreil.ly/ZF5Uf)，一个工作的开发数据库在默认端口
    27017 上只需一个命令即可：
- en: '[PRE19]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This nicely side-steps local library incompatibilities and the like.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好地避开了本地库不兼容性等问题。
- en: Integrated Development Environments
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成开发环境
- en: As I explain in [“The Myth of IDEs, Frameworks, and Tools”](ch04.xhtml#myth_ides),
    you don’t need an IDE to program in Python or JavaScript. The development tools
    provided by modern browsers, Chrome in particular, mean you only really need a
    good code editor to have pretty much the optimal setup.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我在[《IDE、框架和工具的神话》](ch04.xhtml#myth_ides)中所解释的，你并不需要一个 IDE 来编写 Python 或 JavaScript。现代浏览器（尤其是
    Chrome）提供的开发工具意味着你实际上只需要一个好的代码编辑器就能拥有几乎最佳的设置。
- en: One caveat here is that these days intermediate to advanced JavaScript tends
    to involve frameworks like React, Vue, and Svelte that do benefit from the bells
    and whistles provided by a decent IDE, particularly handling multiformat files
    (where HTML, CSS, and JS are all embedded together). The good news is that the
    freely available [Visual Studio Code](https://code.visualstudio.com) (VSCode)
    has become the de facto standard for modern web development. It’s got plug-ins
    for pretty much everything and a very large and active community, so questions
    tend to be answered and bugs hunted down fast.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的一个注意是，如今，中级到高级的 JavaScript 开发通常涉及到像 React、Vue 和 Svelte 这样的框架，这些框架受益于一个体面的
    IDE 提供的各种功能，特别是处理多格式文件（其中 HTML、CSS 和 JS 都混合在一起）。好消息是，免费的[Visual Studio Code](https://code.visualstudio.com)（VSCode）已成为现代
    Web 开发的事实标准。它有几乎所有插件，并且拥有庞大且活跃的社区，因此问题通常能够迅速得到解答和缺陷被解决。
- en: For Python, I have tried a few dedicated IDEs but they’ve never stuck. The main
    itch I was trying to scratch was finding a decent debugging system. Setting breakpoints
    in Python with a text editor isn’t particularly elegant, and using the command-line
    debugger `pdb` feels a little too old school sometimes. Nevertheless, Python does
    have a pretty good logging system included, which takes the edge off its rather
    clunky default debugging. VSCode is pretty good for Python programming, but there
    are some Python-specific IDEs that are arguably a little smoother.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python，我尝试过几个专用的IDE，但它们从未让我满意。我试图解决的主要问题是找到一个像样的调试系统。在Python中使用文本编辑器设置断点并不是特别优雅，使用命令行调试器`pdb`有时感觉有点老派。尽管如此，Python确实包含了一个相当不错的日志系统，可以稍微减轻其默认调试器的笨拙。VSCode对于Python编程来说相当不错，但还有一些专门的Python
    IDE可能更为流畅。
- en: 'In no particular order, here are a few that I’ve tried and not disliked:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我尝试过的几个，并且不是很讨厌的：
- en: '[PyCharm](https://www.jetbrains.com/pycharm)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyCharm](https://www.jetbrains.com/pycharm)'
- en: This option offers solid code assistance and good debugging and would probably
    top a favorite IDE poll of seasoned Pythonistas.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这个选项提供了强大的代码辅助和良好的调试功能，可能会成为经验丰富的Python程序员最喜欢的IDE之一。
- en: '[PyDev](https://pydev.org)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[PyDev](https://pydev.org)'
- en: If you like Eclipse and can tolerate its rather large footprint, this might
    well be for you.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢Eclipse并且可以容忍其相当大的占用空间，这可能非常适合你。
- en: '[Wing Python IDE](https://www.wingware.com)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[Wing Python IDE](https://www.wingware.com)'
- en: This is a solid bet, with a great debugger and incremental improvements over
    a decade-and-a-half’s worth of development.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个可靠的选择，具有出色的调试器，并在十五年开发中逐步改进。
- en: Summary
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: With free, packaged Python distributions such as Anaconda, and the inclusion
    of sophisticated JavaScript development tools in freely available web browsers,
    the necessary Python and JavaScript elements of your development environment are
    a couple of clicks away. Add a favorite editor and a database of choice,^([1](ch01.xhtml#idm45607814876176))
    and you are pretty much good to go. There are additional libraries, such as *node.js*,
    that can be useful but don’t count as essential. Now that we’ve established our
    programming environment, the next chapters will teach the preliminaries needed
    to start our journey of data transformation along the toolchain, starting with
    a language bridge between Python and JavaScript.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 通过免费的打包Python发行版，如Anaconda，以及在免费可用的Web浏览器中包含的复杂JavaScript开发工具，您所需的Python和JavaScript元素就只是几个点击之遥。再加上一个喜欢的编辑器和一个选择的数据库^([1](ch01.xhtml#idm45607814876176-marker))，您基本上就可以开始了。还有一些附加库，比如*node.js*，可能会很有用，但不算必要。既然我们已经建立了我们的编程环境，接下来的章节将教授启动我们的数据转换之旅所需的基础知识，从Python和JavaScript之间的语言桥梁开始，沿着工具链逐步推进。
- en: ^([1](ch01.xhtml#idm45607814876176-marker)) SQLite is great for development
    purposes and doesn’t need a server running on your machine.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch01.xhtml#idm45607814876176-marker)) SQLite非常适合开发目的，而且不需要在您的机器上运行服务器。
