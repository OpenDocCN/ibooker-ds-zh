["```py\n$ python -m http.server 8080\nServing HTTP on 0.0.0.0 port 8080 (http://0.0.0.0:8080/) ...\n```", "```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<body>\n    <!-- page content -->\n</body>\n```", "```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<style>\n/* CSS */\n</style>\n<body>\n    <!-- page content -->\n    <script>\n    // JavaScript...\n    </script>\n</body>\n```", "```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<link rel=\"stylesheet\" href=\"style.css\" />\n<body>\n    <!-- page content -->\n    <script type=\"text/javascript\" src=\"script.js\"></script>\n</body>\n```", "```py\n<div id=\"my-chart-wrapper\" class=\"chart-holder dev\">\n    <div id=\"my-chart\" class=\"bar chart\">\n         this is a placeholder, with parent #my-chart-wrapper\n    </div>\n</div>\n```", "```py\n<h2>A Level-2 Header</h2>\n<p>A paragraph of body text with a line break here..</br>\nand a second paragraph...</p>\n```", "```py\n<div id=\"inline-examples\">\n    <img src=\"path/to/image.png\" id=\"prettypic\"> ![1](assets/1.png)\n    <p>This is a <a href=\"link-url\">link</a> to <span class=\"url\">link-url</span></p> ![2](assets/2.png)\n</div>\n```", "```py\n<div style=\"display: flex; gap: 50px\"> ![1](assets/1.png)\n  <div>\n    <h3>Ordered (ol) list</h3>\n    <ol>\n      <li>First Item</li>\n      <li>Second Item</li>\n    </ol>\n  </div>\n  <div>\n    <h3>Unordered (ul) list</h3>\n    <ul>\n      <li>First Item</li>\n      <li>Second Item</li>\n    </ul>\n  </div>\n</div>\n```", "```py\n <table id=\"chart-data\">\n  <tr> ![1](assets/1.png)\n    <th>Name</th>\n    <th>Category</th>\n    <th>Country</th>\n  </tr>\n  <tr> ![2](assets/2.png)\n    <td>Albert Einstein</td>\n    <td>Physics</td>\n    <td>Switzerland</td>\n  </tr>\n</table>\n```", "```py\n<span class=\"alert\" id=\"special-alert\">\nsomething to be alerted to</span>\n```", "```py\n.alert { font-weight:bold; color:red }\n```", "```py\n#special-alert {background: yellow; color:black}\n```", "```py\n.alert { font-weight:bold; color:red !important }\n```", "```py\n<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" />\n<link rel=\"stylesheet\" href=\"style2.css\" type=\"text/css\" />\n```", "```py\n.alert { font-weight:normal }\n```", "```py\n{\n  \"firstName\": \"Groucho\",\n  \"lastName\": \"Marx\",\n  \"siblings\": [\"Harpo\", \"Chico\", \"Gummo\", \"Zeppo\"],\n  \"nationality\": \"American\",\n  \"yearOfBirth\": 1890\n}\n```", "```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" />\n\n<body>\n\n  <div id=\"chart-holder\" class=\"dev\">\n    <div id=\"header\">\n      <h2>A Catchy Title Coming Soon...</h2>\n      <p>Some body text describing what this visualization is all\n      about and why you should care.</p>\n    </div>\n    <div id=\"chart-components\">\n      <div id=\"main\">\n        A placeholder for the main chart.\n      </div><div id=\"sidebar\">\n        <p>Some useful information about the chart,\n          probably changing with user interaction.</p>\n      </div>\n    </div>\n  </div>\n\n  <script src=\"script.js\"></script>\n</body>\n```", "```py\nbody {\n    background: #ccc;\n    font-family: Sans-serif;\n}\n\ndiv.dev { ![1](assets/1.png)\n    border: solid 1px red;\n}\n\ndiv.dev div {\n    border: dashed 1px green;\n}\n\ndiv#chart-holder {\n    width: 600px;\n    background :white;\n    margin: auto;\n    font-size :16px;\n}\n\ndiv#chart-components {\n    height :400px;\n    position :relative; ![2](assets/2.png)\n}\n\ndiv#main, div#sidebar {\n    position: absolute; ![3](assets/3.png)\n}\n\ndiv#main {\n    width: 75%;\n    height: 100%;\n    background: #eee;\n}\n\ndiv#sidebar {\n    right: 0; ![4](assets/4.png)\n    width: 25%;\n    height: 100%;\n}\n```", "```py\n$ python -m http.server 8000\nServing HTTP on 0.0.0.0 port 8000 ...\n```", "```py\n<div class=\"container\" id=\"top-container\">\n  <div class=\"box\" id=\"box1\">box 1</div>\n  <div class=\"box\" id=\"box2\">box 2</div>\n  <div class=\"box\" id=\"box3\">box 3</div>\n</div>\n```", "```py\n.container {\n  display: flex;\n  width: 600px;\n  height: 400px;\n  border: 2px solid red;\n}\n\n.box {\n  border: 2px solid green;\n  font-size: 28px;\n  padding: 10px;\n  width: 80px;\n  height: 80px;\n}\n```", "```py\n.box {\n  /* ... */\n  flex: 1;\n}\n```", "```py\n.container {\n  /* ... */\n  flex-direction: column;\n}\n```", "```py\n.box {\n  /* ... */\n  /* width: 80px;\n height: 80px; */\n  flex: 1;\n}\n```", "```py\n.container {\n  /* ... */\n  flex-direction: column-reverse;\n}\n```", "```py\n#box1 {\n  flex: 2;\n}\n```", "```py\n.box {\n  width: 80px;\n  height: 80px;\n  /* flex: 1; */\n}\n\n#box1 {\n  /* flex: 2; */\n}\n```", "```py\n.container {\n  /* ... */\n  flex-direction: row;\n  justify-content: space-between;\n}\n```", "```py\n.container {\n  /* ... */\n  justify-content: space-around;\n}\n```", "```py\n.container {\n  /* ... */\n    gap: 20px;\n    justify-content: center;\n    align-items: center;\n}\n```", "```py\n  <div class=\"main-container\">\n\n    <div class=\"container\" id=\"top-container\">\n      <div class=\"box\" id=\"box1\">box 1</div>\n      <div class=\"box\" id=\"box2\">box 2</div>\n    </div>\n\n    <div class=\"container\" id=\"middle-container\">\n      <div class=\"box\" id=\"box3\">box 3</div>\n    </div>\n\n    <div class=\"container\" id=\"bottom-container\">\n      <div class=\"box\" id=\"box4\">box 4</div>\n      <div class=\"box\" id=\"box5\">\n        <div class=\"box\" id=\"box6\">box 6</div>\n        <div class=\"box\" id=\"box7\">box 7</div>\n      </div>\n    </div>\n\n  </div>\n```", "```py\n.main-container {\n  height: 800px;\n  padding: 10px;\n  border: 2px solid green;\n  display: flex;\n  flex-direction: column;\n}\n\n.container {\n  flex: 1;\n  display: flex;\n}\n\n.box {\n  flex: 1;\n  border: 2px solid red;\n  padding: 10px;\n  font-size: 30px;\n}\n\n#middle-container {\n  justify-content: center;\n}\n\n#box3 {\n  width: 66%;\n  flex: initial;\n}\n\n#bottom-container {\n  flex: 2;\n}\n\n#box5 {\n  display: flex;\n  flex-direction: column;\n}\n```", "```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<!-- A few CSS style rules -->\n<style>\n  svg#chart {\n  background: lightgray;\n  }\n</style>\n\n<svg id=\"chart\" width=\"300\" height=\"225\">\n</svg>\n\n<!-- Third-party libraries and our JS script. -->\n<script src=\"http://d3js.org/d3.v7.min.js\"></script>\n<script src=\"script.js\"></script>\n```", "```py\n<svg id=\"chart\" width=\"300\" height=\"225\">\n  <circle r=\"15\" cx=\"100\" cy=\"50\"></circle>\n</svg>\n```", "```py\n#chart circle{ fill: lightblue }\n```", "```py\n#chart circle{ fill: lightblue }\n```", "```py\n#chart line#total {\n    stroke: green;\n    stroke-width: 3px;\n    opacity: 0.5;\n}\n```", "```py\n<svg>\n  <circle r=\"15\" cx=\"100\" cy=\"50\" fill=\"lightblue\"></circle>\n</svg>\n```", "```py\n<svg>\n  <line x1=\"20\" y1=\"20\" x2=\"20\" y2=\"130\"></line>\n  <line x1=\"20\" y1=\"130\" x2=\"280\" y2=\"130\"></line>\n</svg>\n```", "```py\n<svg>\n  <rect x=\"240\" y=\"5\" width=\"55\" height=\"30\"></rect>\n</svg>\n```", "```py\n<svg>\n  <polygon points=\"210,100, 230,100, 220,80\"></polygon>\n</svg>\n```", "```py\n#chart circle {fill: lightblue}\n#chart line {stroke: #555555; stroke-width: 2}\n#chart rect {stroke: red; fill: white}\n#chart polygon {fill: green}\n```", "```py\n<svg>\n  <text id=\"title\" text-anchor=\"middle\" x=\"150\" y=\"20\">\n    A Dummy Chart\n  </text>\n</svg>\n```", "```py\n<svg>\n  <text x=\"20\" y=\"20\" transform=\"rotate(-90,20,20)\"\n      text-anchor=\"end\" dy=\"0.71em\">y axis label</text>\n</svg>\n```", "```py\n#chart {\nbackground: #eee;\nfont-family: sans-serif;\n}\n#chart text{ font-size: 16px }\n#chart text#title{ font-size: 18px }\n```", "```py\n<svg>\n  <path d=\"M20 130L60 70L110 100L160 45\"></path>\n</svg>\n```", "```py\n#chart path {stroke: red; fill: none}\n```", "```py\n<svg id=\"chart\" width=\"300\" height=\"150\">\n  <path d=\"M40 40\n           A30 40 ![1](assets/1.png) 0 0 1 ![2](assets/2.png) 80 80\n           A50 50  0 0 1  160  80\n           A30 30  0 0 1  190  80\n\">\n</svg>\n```", "```py\n<svg id=\"chart\" width=\"300\" height=\"150\">\n  <path d=\"M40 80\n A30 40  0 0 1  80 80\n A30 40  0 0 0  120  80\n A30 40  0 1 0  160  80\n A30 40  0 1 1  200  80\n\">\n</svg>\n```", "```py\n<svg id=\"chart\" width=\"300\" height=\"150\">\n  <rect width=\"20\" height=\"40\" transform=\"translate(60, 55)\"\n        fill=\"blue\"/>\n  <rect width=\"20\" height=\"40\" transform=\"translate(120, 55),\n rotate(45)\" fill=\"blue\"/>\n  <rect width=\"20\" height=\"40\" transform=\"translate(180, 55),\n scale(0.5)\" fill=\"blue\"/>\n  <rect width=\"20\" height=\"40\" transform=\"translate(240, 55),\n rotate(45),scale(0.5)\" fill=\"blue\"/>\n</svg>\n```", "```py\n<svg id=\"chart\" width=\"300\" height=\"150\">\n  <g id=\"shapes\" transform=\"translate(150,75)\">\n    <circle cx=\"50\" cy=\"0\" r=\"25\" fill=\"red\" />\n    <rect x=\"30\" y=\"10\" width=\"40\" height=\"20\" fill=\"blue\" />\n    <path d=\"M-20 -10L50 -10L10 60Z\" fill=\"green\" />\n    <circle r=\"10\" fill=\"yellow\">\n  </g>\n</svg>\n```", "```py\n<svg id=\"chart\" width=\"300\" height=\"150\">\n  <g id=\"shapes\",\n     transform = \"translate(150,75),scale(0.5),rotate(90)\">\n     ...\n</svg>\n```", "```py\n<style>\n  #chart circle { opacity: 0.33 }\n</style>\n\n<svg id=\"chart\" width=\"300\" height=\"150\">\n  <g transform=\"translate(150, 75)\">\n    <circle cx=\"0\" cy=\"-20\" r=\"30\" fill=\"red\"/>\n    <circle cx=\"17.3\" cy=\"10\" r=\"30\" fill=\"green\"/>\n    <circle cx=\"-17.3\" cy=\"10\" r=\"30\" fill=\"blue\"/>\n  </g>\n</svg>\n```", "```py\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n\n<style>\n  #chart { background: lightgray; }\n  #chart circle {fill: red}\n</style>\n\n<body>\n  <svg id=\"chart\"></svg>\n\n  <script src=\"http://d3js.org/d3.v7.min.js\"></script>\n  <script src=\"script.js\"></script>\n</body>\n```", "```py\n// script.js \nvar chartCircles = function(data) {\n\n    var chart = d3.select('#chart');\n    // Set the chart height and width from data\n    chart.attr('height', data.height).attr('width', data.width);\n    // Create some circles using the data\n    chart.selectAll('circle').data(data.circles)\n        .enter()\n        .append('circle')\n        .attr('cx', function(d) { return d.x })\n        .attr('cy', d => d.y) ![1](assets/1.png)\n        .attr('r', d => d.r);\n};\n\nvar data = {\n    width: 300, height: 150,\n    circles: [\n        {'x': 50, 'y': 30, 'r': 20},\n        {'x': 70, 'y': 80, 'r': 10},\n        {'x': 160, 'y': 60, 'r': 10},\n        {'x': 200, 'y': 100, 'r': 5},\n    ]\n};\n\nchartCircles(data);\n```"]