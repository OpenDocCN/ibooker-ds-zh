["```py\nimport pandas as pd\ncustomers = pd.read_csv(\"./data/addresses.csv\")\nprint(customers.shape)\n```", "```py\ncustomers.isnull().sum()\n```", "```py\ncustomers = customers.dropna(subset=[\"address\"])\n```", "```py\ncustomers[\"total_spend\"].describe()\n```", "```py\nfor address in customers[\"address\"].head():\n    print(address, \"\\n\")\n```", "```py\ncustomers[\"address_clean\"] = customers[\"address\"].str.upper()\n```", "```py\nlen(customers[customers[\"address_clean\"].str.contains(\"LONDON\")])\nlen(customers[customers[\"address_clean\"].str.contains(\"LONDON,\")])\n```", "```py\ncustomers[\"address_lines\"] = (\n    customers[\"address_clean\"]\n    .str.split(\",\\n\")                     #1\n    .apply(len)                       #2\n)\ncustomers[\"address_lines\"].value_counts().sort_index()    #3\n```", "```py\nprint(customers.loc[customers[\"address_lines\"] == 1, \"address_clean\"])\nprint((\n    customers[customers[\"address_lines\"] == 2]\n    .sample(5, random_state=42)                  #1\n    [\"address_clean\"])\n)\n```", "```py\ncities = pd.read_csv(\"./data/cities.csv\", header=None, names=[\"city\"])\ncities.head()\n```", "```py\ncountries_to_remove = [\"England\", \"Scotland\", \"Wales\", \"Northern Ireland\"]\n\nprint(len(cities))\ncities_to_remove = cities[cities[\"city\"].isin(countries_to_remove)].index\ncities = cities.drop(index=cities_to_remove)\nprint(len(cities))\n\ncities[\"city\"] = cities[\"city\"].str.replace(\"*\", \"\", regex=False)\n\ncities[\"city\"] = cities[\"city\"].str.upper()\ncities.head()\n```", "```py\nfor city in cities[\"city\"].values:\n    customers.loc[customers[\"address_clean\"].str.contains(f\"\\n{city},\"),\n↪ \"city\"] = city\n\ncustomers[\"city\"] = customers[\"city\"].fillna(\"OTHER\")\n\ncustomers.head()\n```", "```py\ncustomers[\"city\"].value_counts().head(20)\n```", "```py\nsample_other = customers[customers[\"city\"] == \"OTHER\"]\n↪ .sample(5, random_state=42)\nfor address in sample_other[\"address_clean\"].values:\n    print(address, \"\\n\")\n```", "```py\nset(cities[\"city\"]) - set(customers[\"city\"])     #1\n```", "```py\ncustomers[customers[\"address_clean\"].str.contains(\"\\nHULL,\")]\n```", "```py\ncustomers.loc[customers[\"address_clean\"].str.contains(\"\\nHULL,\"),\n↪ \"city\"] = \"HULL\"\n```", "```py\nfrom matplotlib.ticker import FuncFormatter\nimport matplotlib.pyplot as plt\n\ndef millions(x, pos):                #1\n    return '£%1.1fM' % (x * 1e-6)\n\nformatter = FuncFormatter(millions)\n\nfig, axis = plt.subplots()\n\ntop_20_spend = (\n    customers\n    .groupby(\"city\")\n    [\"total_spend\"].sum()\n    .sort_values(ascending=False)      #2\n    .head(20)\n    .sort_values(ascending=True)      #3\n)\n\ntop_20_spend.plot.barh(ax=axis)\n\naxis.xaxis.set_major_formatter(formatter)\naxis.set(\n    title=\"Total customer spend by city\",\n    xlabel=\"Total spend\"\n)\n\nplt.show()\n```", "```py\nprint(\"Total spend for all customers:\")\nprint(customers[\"total_spend\"].sum())\n\nprint(\"Total spend for London customers:\")\nprint(customers.loc[customers[\"city\"] == \"LONDON\", \"total_spend\"].sum())\n\nprint(\"Total spend outside London:\")\nprint(customers.loc[customers[\"city\"] != \"LONDON\", \"total_spend\"].sum())\n\nprint(\"Total spend outside London (excluding OTHER):\")\nprint(customers.loc[customers[\"city\"].isin([\"LONDON\", \"OTHER\"]) == False,\n↪ \"total_spend\"].sum())\n```"]