- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 序言
- en: The chief ambition of this book is to describe a data visualization (dataviz)
    toolchain that, in the era of the internet, is starting to predominate. The guiding
    principle of this toolchain is that whatever insightful nuggets you have managed
    to mine from your data deserve a home on the web browser. Being on the web means
    you can easily choose to distribute your dataviz to a select few (using authentication
    or restricting to a local network) or the whole world. This is the big idea of
    the internet and one that dataviz is embracing at a rapid pace. And that means
    that the future of dataviz involves JavaScript, the only first-class language
    of the web browser. But JavaScript does not yet have the data-processing stack
    needed to refine raw data, which means data visualization is inevitably a multilanguage
    affair. I hope this book provides support for my belief that Python is the natural
    complementary language to JavaScript’s monopoly of browser visualizations.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的首要目标是描述一种数据可视化（dataviz）工具链，在互联网时代开始主导。这个工具链的指导原则是，无论您从数据中挖掘出多少见解，都应该在Web浏览器上找到它们的家园。在Web上意味着您可以轻松选择将您的dataviz分发给少数人（使用身份验证或限制在本地网络）或整个世界。这是互联网的重大理念，也是dataviz正在快速接受的理念。这意味着dataviz的未来涉及JavaScript，这是Web浏览器唯一的一级语言。但JavaScript尚未具备处理原始数据所需的数据处理堆栈，这意味着数据可视化不可避免地是多语言的事务。我希望本书能够支持我的观点，即Python是JavaScript在浏览器可视化中的自然补充语言的支持者。
- en: Although this book is a big one (that fact is felt most keenly by the author
    right now), it has had to be very selective, leaving out a lot of really cool
    Python and JavaScript dataviz tools and focusing on the ones that provide the
    best building blocks. The number of helpful libraries I couldn’t cover reflects
    the enormous vitality of the Python and JavaScript data science ecosystems. Even
    while the book was being written, brilliant new Python and JavaScript libraries
    were being introduced, and the pace continues.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这本书很庞大（这一事实现在作者最为深切地感受到），但它必须非常选择性地撰写，留出了许多真正酷炫的Python和JavaScript数据可视化工具，重点是那些提供最佳构建模块的工具。我未能覆盖的有用库的数量反映了Python和JavaScript数据科学生态系统的巨大活力。即使在书写过程中，也在不断推出出色的新Python和JavaScript库，并且这个步伐还在继续。
- en: All data visualization is essentially transformative, and showing the journey
    from one reflection of a dataset (HTML tables and lists) to a more modern, engaging,
    interactive, and, fundamentally, browser-based one provides a good way to introduce
    key data visualization tools in a working context. The challenge is to transform
    a basic Wikipedia list of Nobel Prize winners into a modern, interactive, browser-based
    visualization. Thus, the same dataset is presented in a more accessible, engaging
    form.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的数据可视化本质上都是转变的，展示从数据集的一种反映（HTML 表格和列表）到更现代、引人入胜、互动性更强、基本上是基于浏览器的方式，为工作环境中介绍关键数据可视化工具提供了一个很好的方式。挑战在于将基本的维基百科诺贝尔奖获奖者列表转化为现代、互动式、基于浏览器的可视化。因此，同样的数据集以更易访问、引人入胜的形式呈现。
- en: The journey from unprocessed data to a fairly rich, user-driven visualization
    informs the choice of best-of-breed tools. First, we need to get our dataset.
    Often this is provided by a colleague or client, but to increase the challenge
    and learn some pretty vital dataviz skills along the way, we learn how to *scrape*
    the dataset from the web (Wikipedia’s Nobel Prize pages) using Python’s powerful
    Scrapy library. This unprocessed dataset then needs to be refined and explored,
    and there isn’t a much better ecosystem for this than Python’s pandas. Along with
    Matplotlib in support and driven by a Jupyter notebook, pandas is becoming the
    gold standard for this kind of forensic data work. With clean data stored (to
    SQL with SQLAlchemy and SQLLite) and explored, the cherry-picked data stories
    can be visualized. I cover the use of Matplotlib and Plotly to embed static and
    dynamic charts from Python to a web page. But for something more ambitious, the
    supreme dataviz library for the web is the JavaScript-based D3\. We cover the
    essentials of D3 while using them to produce our showpiece Nobel data visualization.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 从未加工的数据到相当丰富的用户驱动可视化的旅程，决定了选择最佳工具的方式。首先，我们需要获取我们的数据集。通常这是由同事或客户提供的，但为了增加挑战并学习一些非常重要的数据可视化技能，我们学习如何使用Python强大的Scrapy库从网络（维基百科的诺贝尔奖页面）*抓取*数据集。然后需要对这些未加工的数据集进行精炼和探索，而Python的pandas生态系统是最好的选择之一。连同Matplotlib的支持，并通过Jupyter笔记本驱动，pandas正成为这种法庭数据工作的黄金标准。随着干净的数据被存储（使用SQLAlchemy和SQLLite）和探索，可以将精心挑选的数据故事可视化。我介绍了使用Matplotlib和Plotly将Python生成的静态和动态图表嵌入网页的方法。但是对于更雄心勃勃的项目，基于JavaScript的D3是网页的终极数据可视化库。我们在使用D3的同时，探索了如何制作我们的招牌诺贝尔数据可视化作品。
- en: This book is a collection of tools forming a chain, with the creation of the
    Nobel visualization providing a guiding narrative. You should be able to dip into
    relevant chapters when and if the need arises; the different parts of the book
    are self-contained so you can quickly review what you’ve learned when required.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是一个工具集合的集合，以创建诺贝尔奖可视化作品为引导叙事。如果需要时，您应该能够随时查阅相关章节；本书的不同部分都是独立的，因此您可以在需要时快速复习您学到的内容。
- en: This book is divided into five parts. The first part introduces a basic Python
    and JavaScript dataviz toolkit, while the next four show how to retrieve raw data,
    clean it, explore it, and finally transform it into a modern web visualization.
    Let’s summarize the key lessons of each part now.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书分为五个部分。第一部分介绍了基础的Python和JavaScript数据可视化工具包，而接下来的四部分展示了如何检索原始数据、清理数据、探索数据，最终将其转换为现代网络可视化。现在让我们总结每个部分的关键教训。
- en: 'Part I: Basic Toolkit'
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一部分：基础工具包
- en: 'Our basic toolkit consists of:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的基础工具包包括：
- en: A language-learning bridge between Python and JavaScript. This is designed to
    smooth the transition between the two languages, highlighting their many similarities
    and setting the scene for the bilingual process of modern dataviz. With the advent
    of the latest JavaScript,^([1](preface01.xhtml#idm45607823284352)) Python and
    JavaScript have even more in common, making switching between them that much less
    stressful.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种连接Python和JavaScript的语言学习桥梁。这旨在平滑两种语言之间的过渡，突出它们的许多相似之处，并为现代数据可视化的双语过程铺平道路。随着最新JavaScript的出现^([1](preface01.xhtml#idm45607823284352))，Python和JavaScript之间有更多共同之处，使得在它们之间切换变得更少压力。
- en: Being able to read from and write to the key data formats (e.g., JSON and CSV)
    and databases (both SQL and NoSQL) with ease is one of Python’s great strengths.
    We see how easy it is to pass data around in Python, translating formats and changing
    databases as we go. This fluid movement of data is the main lubricant of any dataviz
    toolchain.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够轻松读取和写入关键数据格式（例如JSON和CSV）和数据库（包括SQL和NoSQL）是Python的一大优势。我们看到在Python中传递数据的简易程度，可以在进行格式转换和数据库更改的同时移动数据。这种数据的流动是任何数据可视化工具链的主要润滑剂。
- en: We cover the basic web development (webdev) skills needed to start producing
    modern, interactive, browser-based dataviz. By focusing on the concept of the
    [single-page application](https://oreil.ly/yqv6C) rather than building whole websites,
    we minimize conventional webdev and place the emphasis on programming your visual
    creations in JavaScript. An introduction to Scalable Vector Graphics (SVG), the
    chief building block of D3 visualizations, sets the scene for the creation of
    our Nobel Prize visualization in [Part V](part05.xhtml#part_viz).
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们涵盖了开始制作现代、交互式、基于浏览器的数据可视化所需的基本网页开发（webdev）技能。通过专注于[单页应用程序](https://oreil.ly/yqv6C)的概念而不是构建整个网站，我们将传统的网页开发最小化，并将重点放在使用JavaScript编程您的可视化创作上。对可扩展矢量图形（SVG）的介绍，这是D3可视化的主要构建块，为我们在[第五部分](part05.xhtml#part_viz)中创建诺贝尔奖可视化做好了准备。
- en: 'Part II: Getting Your Data'
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二部分：获取您的数据
- en: 'In this part of the book, we look at how to get data from the web using Python,
    assuming a nice, clean data file hasn’t been provided to the data visualizer:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的这一部分中，我们将看看如何使用Python从Web获取数据，假设数据可视化者没有提供一个好的、干净的数据文件：
- en: If you’re lucky, a clean file in an easily usable data format (i.e., JSON or
    CSV) is at an open URL, a simple HTTP request away. Alternatively, there may be
    a dedicated web API for your dataset, with any luck a RESTful one. As an example,
    we look at using the Twitter API (via Python’s Tweepy library). We also see how
    to use Google spreadsheets, a widely used data-sharing resource in dataviz.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你幸运的话，一个干净的文件以易于使用的数据格式（即JSON或CSV）出现在一个开放的URL上，只需简单的HTTP请求即可获得。或者，可能有一个专用的web
    API 用于您的数据集，有幸是一个符合REST原则的API。作为示例，我们将介绍如何使用Twitter API（通过Python的Tweepy库）。我们还将看到如何使用Google表格，这是数据可视化中广泛使用的数据共享资源。
- en: Things get more involved when the data of interest is present on the web in
    human-readable form, often in HTML tables, lists, or hierarchical content blocks.
    In this case, you have to resort to *scraping*, getting the raw HTML content and
    then using a parser to make its embedded content available. We see how to use
    Python’s lightweight Beautiful Soup scraping library and the much more featureful
    and heavyweight Scrapy, the biggest star in the Python scraping firmament.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当感兴趣的数据以人类可读形式出现在Web上时，情况就会变得更加复杂，通常以HTML表格、列表或分层内容块的形式存在。在这种情况下，您必须诉诸于*抓取*，获取原始HTML内容，然后使用解析器使其嵌入内容可用。我们将看到如何使用Python的轻量级Beautiful
    Soup抓取库以及功能更丰富、更重量级的Scrapy，这是Python抓取界的最大明星。
- en: 'Part III: Cleaning and Exploring Data with pandas'
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第三部分：使用pandas清理和探索数据
- en: 'In this part, we turn the big guns of pandas, Python’s powerful programmatic
    spreadsheet, onto the problem of cleaning and then exploring datasets. We first
    see how pandas is part of Python’s NumPy ecosystem, which leverages the power
    of very fast, powerful low-level array processing libraries, while making them
    accessible. The focus is on using pandas to clean and then explore our Nobel Prize
    dataset:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分中，我们将把pandas，Python强大的程序化电子表格，用于清理和探索数据集的问题。我们首先看到pandas是Python的NumPy生态系统的一部分，它利用了非常快速、功能强大的低级数组处理库的强大功能，同时使其易于访问。重点是使用pandas清理然后探索我们的诺贝尔奖数据集：
- en: Most data, even that which comes from official web APIs, is dirty. And making
    it clean and usable will occupy far more of your time as a data visualizer than
    you probably anticipated. Taking the Nobel dataset as an example, we progressively
    clean it, searching for dodgy dates, anomalous datatypes, missing fields, and
    all the common grime that needs cleaning before you can start to explore and then
    transform your data into a visualization.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数数据，即使来自官方的Web API，也是脏的。使其变得干净和可用将占据您作为数据可视化者的时间，这可能比您预期的要多得多。以诺贝尔数据集为例，我们逐步清理它，寻找可疑的日期、异常的数据类型、缺失的字段以及所有需要在您开始探索和转换数据为可视化之前清理的常见污垢。
- en: With our clean (as we can make it) Nobel Prize dataset in hand, we see how easy
    it is to use pandas and Matplotlib to interactively explore data, easily creating
    inline charts, slicing the data every which way, and generally getting a feel
    for it, while looking for those interesting nuggets you want to deliver with visualization.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有了我们手头的干净（尽可能的）诺贝尔奖数据集，我们看到使用pandas和Matplotlib交互式地探索数据是多么容易，轻松创建内联图表，以各种方式切片数据，并一般地了解数据，同时寻找您想通过可视化呈现的那些有趣的信息。
- en: 'Part IV: Delivering the Data'
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第四部分：交付数据
- en: 'In this part, we see how easy it is to create a minimal data API using Flask,
    to deliver data both statically and dynamically to the web browser:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这部分中，我们看到使用Flask创建最小数据API是多么简单，以便静态地和动态地将数据传递到Web浏览器：
- en: First, we see how to use Flask to serve static files and then how to roll your
    own basic data API, serving data from a local database. Flask’s minimalism allows
    you to create a very thin data-serving layer between the fruits of your Python
    data processing and their eventual visualization on the browser.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们看到如何使用Flask提供静态文件，然后如何自己制作基本数据API，从本地数据库中提供数据。Flask的简洁性使您能够在Python数据处理结果和它们最终在浏览器上可视化之间创建一个非常薄的数据服务层。
- en: The glory of open source software is that you can often find robust, easy-to-use
    libraries that solve your problem better than you could. In the second chapter
    of this part, we see how easy it is to use best-of-breed Python (Flask) libraries
    to craft a robust, flexible RESTful API, ready to serve your data online. We also
    cover the easy online deployment of this data server using Heroku, a favorite
    of Pythonistas.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 开源软件的优点在于，你通常可以找到比你自己解决问题更好的、易于使用的库。在本部分的第二章中，我们看到如何使用Python的最佳库（如Flask）轻松创建强大、灵活的RESTful
    API，准备好在网上提供你的数据。我们还介绍了如何使用Python爱好者喜爱的Heroku轻松在线部署这个数据服务器。
- en: 'Part V: Visualizing Your Data with D3 and Plotly'
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第五部分：使用D3和Plotly可视化您的数据
- en: In the first chapter of this part, we see how to take the fruits of your pandas-driven
    exploration, in the form of charts or maps, and put them on the web, where they
    belong. Matplotlib can produce publication-standard static charts while Plotly
    brings user controls and dynamic charts to the table. We see how to take a Plotly
    chart directly from a Jupyter notebook and put it in a web page.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分的第一章中，我们看到如何将你通过pandas驱动的探索所得的成果（如图表或地图）放在它们应该呆的地方——网页上。Matplotlib可以生成符合出版标准的静态图表，而Plotly则为用户提供了控制和动态图表的功能。我们看到如何直接从Jupyter笔记本中获取Plotly图表并将其放入网页中。
- en: The part of the book that covers D3 is some of the most challenging, but you
    may well end up being employed to construct the kind of multielement visualizations
    it produces. One of the joys of D3 is the [huge number of examples](https://oreil.ly/AIWkI)
    that can easily be found online, but most of them demonstrate a single technique
    and there are few showing how to orchestrate multiple visual elements. In these
    D3 chapters, we see how to synchronize the update of a timeline (featuring all
    the Nobel Prizes), a map, a bar chart, and a list as the user filters the Nobel
    Prize dataset or changes the prize-winning metric (absolute or per capita).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本书涵盖D3的部分是最具挑战性的，但你很可能最终会被雇佣来构建它所产生的多元素可视化。D3的乐趣之一在于可以轻松在网上找到[大量示例](https://oreil.ly/AIWkI)，但其中大多数示范了单一技术，很少展示如何编排多个视觉元素。在这些D3章节中，我们看到如何在用户过滤诺贝尔奖数据集或更改获奖指标（绝对或人均）时，同步更新时间线（显示所有诺贝尔奖）、地图、条形图和列表。
- en: Mastery of the core themes demonstrated in these chapters should allow you to
    let loose your imagination and learn by doing. I’d recommend choosing some data
    close to your heart and designing a D3 creation around it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 掌握这些章节中展示的核心主题应该能让你释放想象力，并通过实践学习。我建议选择一些与你心中有关的数据，并围绕它设计一个D3的作品。
- en: The Second Edition
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二版
- en: I was a little reluctant when O’Reilly offered me the opportunity of writing
    a second edition of this book. The first edition ended up larger than anticipated,
    and updating and augmenting it was potentially a lot of work. However, after reviewing
    the status of the libraries covered and changes to the Python and JavaScript dataviz
    ecosystem, it was clear that most of the libraries used (e.g., Scrapy, NumPy,
    pandas) were still solid choices and needed fairly small updates.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当O’Reilly给我提供了撰写本书第二版的机会时，我有些犹豫。第一版的规模超出了预期，更新和扩展它可能需要大量工作。然而，经过审视所涉及的库的现状以及Python和JavaScript数据可视化生态系统的变化后，明显大部分使用的库（如Scrapy、NumPy、pandas）仍然是可靠的选择，只需要进行较小的更新。
- en: D3 was the library that had changed the most, but these changes had made D3
    both easier to use and easier to teach. JavaScript modules were also solidly in
    place, making the code cleaner and more familiar to a Pythonista.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: D3是变化最大的库，但这些变化使D3更易于使用和教学。JavaScript模块也牢固地存在，使代码更清晰，更符合Python爱好者的习惯。
- en: A few Python libraries no longer seemed like solid choices and a couple had
    been deprecated. The first edition dealt fairly extensively with MongoDB, a NoSQL
    database. I now think that good old-fashioned SQL is a better fit for dataviz
    work and that the minimal file-based, serverless SQLite represents a dataviz sweet
    spot if a database is required.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个Python库似乎不再是可靠的选择，其中一些已被弃用。第一版书中对MongoDB，一个NoSQL数据库进行了相当广泛的处理。我现在认为，传统的SQL更适合数据可视化工作，而最小的基于文件的、无服务器的SQLite如果需要数据库，则代表了数据可视化的一个甜蜜点。
- en: Rather than replace the deprecated RESTful data server with another Python library,
    I thought it would be particularly instructive to build a simple one from scratch,
    demonstrating the use of some brilliant Python libraries, such as marshmallow,
    which are useful in many dataviz scenarios.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 不打算用另一个Python库替换已弃用的RESTful数据服务器，我认为从头开始构建一个简单的服务器会更有教育意义，演示一些出色的Python库的使用，比如marshmallow，这些库在许多数据可视化场景中非常有用。
- en: With the time available for updating the book, I made the decision to use the
    first book’s dataset for demonstrating exploration and analysis with Matplotlib
    and pandas, focusing on updating all the libraries to their current (as of mid-2022)
    versions. This allowed time to be spent on new material, chief of which is a chapter
    dedicated to Python’s Plotly library, which allows you to easily transfer exploratory
    work from a Jupyter notebook to a web presentation with user interactions. A particular
    strength of this approach is the availability of Mapbox maps, a rich mapping ecosystem.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 利用更新书籍的时间，我决定使用第一版书中的数据集，演示如何使用Matplotlib和pandas进行探索和分析，并专注于将所有库更新到它们当前（截至2022年中）的版本。这使得有时间专注于新材料，其中最重要的是一章专门介绍Python的Plotly库，该库允许您轻松将探索性工作从Jupyter笔记本转移到具有用户交互的Web演示中。这种方法的一个特别优势是Mapbox地图的可用性，这是一个丰富的地图生态系统。
- en: 'The main thrust of the second edition was:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 第二版的主要目标是：
- en: To bring all the libraries up to date.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使所有库保持最新。
- en: To remove and/or replace libraries that hadn’t stood the test of time.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以删除和/或替换未经时间考验的库。
- en: To add some new material suggested by changes in the fast-developing world of
    Python and JavaScript dataviz.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Python和JavaScript数据可视化快速发展的世界中的变化建议添加一些新材料。
- en: The metaphor of the dataviz toolchain still holds good, I think, and the transformative
    pipeline, from raw, unprocessed web data through exploratory dataviz-driven analysis
    to polished web visualization, remains a good way to learn the key tools of the
    job.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为数据可视化工具链的隐喻仍然适用，并且从未处理的原始网络数据到探索性数据可视化驱动的分析再到精美的网络可视化的转换流水线，仍然是学习这项工作的关键工具的良好方式。
- en: Conventions Used in This Book
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书使用的约定
- en: 'The following typographical conventions are used in this book:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用以下排版约定：
- en: '*Italic*'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*斜体*'
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 指示新术语、网址、电子邮件地址、文件名和文件扩展名。
- en: '`Constant width`'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`Constant width`'
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, datatypes, environment
    variables, statements, and keywords.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 用于程序列表，以及段落内引用程序元素，如变量或函数名、数据库、数据类型、环境变量、语句和关键字。
- en: '**`Constant width bold`**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**`Constant width bold`**'
- en: Shows commands or other text that should be typed literally by the user.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 显示用户应按字面意义输入的命令或其他文本。
- en: '*`Constant width italic`*'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*`Constant width italic`*'
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 显示应由用户提供的值或由上下文确定的值替换的文本。
- en: Tip
  id: totrans-49
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: This element signifies a tip or suggestion.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示提示或建议。
- en: Note
  id: totrans-51
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This element signifies a general note.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示一般说明。
- en: Warning
  id: totrans-53
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: This element indicates a warning or caution.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 此元素表示警告或注意。
- en: Using Code Examples
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代码示例
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at [*https://github.com/Kyrand/dataviz-with-python-and-js-ed-2*](https://github.com/Kyrand/dataviz-with-python-and-js-ed-2).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 补充材料（代码示例、练习等）可从[*https://github.com/Kyrand/dataviz-with-python-and-js-ed-2*](https://github.com/Kyrand/dataviz-with-python-and-js-ed-2)下载。
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing a CD-ROM
    of examples from O’Reilly books does require permission. Answering a question
    by citing this book and quoting example code does not require permission. Incorporating
    a significant amount of example code from this book into your product’s documentation
    does require permission.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书旨在帮助您完成工作。一般来说，如果此书提供示例代码，您可以在自己的程序和文档中使用它。除非您复制了大部分代码，否则无需征得我们的许可。例如，编写一个使用此书中多个代码片段的程序不需要许可。售卖或分发包含O'Reilly书籍示例的CD-ROM需要许可。引用本书并引用示例代码回答问题不需要许可。将此书的大量示例代码整合到您产品的文档中需要许可。
- en: 'We appreciate, but do not require, attribution. An attribution usually includes
    the title, author, publisher, and ISBN. For example: “*Data Visualization with
    Python and JavaScript*, second edition, by Kyran Dale (O’Reilly). Copyright 2023
    Kyran Dale Limited, 978-1-098-11187-8.”'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您的赞誉，但并不要求署名。典型的署名通常包括标题、作者、出版商和ISBN。例如：“*使用Python和JavaScript进行数据可视化*，第二版，作者Kyran
    Dale（O'Reilly出版）。版权所有2023年Kyran Dale Limited，978-1-098-11187-8。”
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您认为您使用的示例代码超出了合理使用或上述许可，请随时联系我们[*permissions@oreilly.com*](mailto:permissions@oreilly.com)。
- en: O’Reilly Online Learning
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: O'Reilly在线学习
- en: Note
  id: totrans-61
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: For more than 40 years, [*O’Reilly Media*](https://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 40多年来，[*O'Reilly Media*](https://oreilly.com)提供技术和商业培训、知识和见解，帮助公司取得成功。
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*https://oreilly.com*](https://oreilly.com).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们独特的专家和创新者网络通过书籍、文章以及我们的在线学习平台分享他们的知识和专长。O'Reilly的在线学习平台为您提供按需访问的现场培训课程、深入学习路径、交互式编码环境，以及来自O'Reilly和200多个其他出版商的大量文本和视频。有关更多信息，请访问[*https://oreilly.com*](https://oreilly.com)。
- en: How to Contact Us
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何联系我们
- en: 'Please address comments and questions concerning this book to the publisher:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 请将有关此书的评论和问题发送至出版商：
- en: O’Reilly Media, Inc.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: O'Reilly Media, Inc.
- en: 1005 Gravenstein Highway North
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1005 Gravenstein Highway North
- en: Sebastopol, CA 95472
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sebastopol, CA 95472
- en: 800-998-9938 (in the United States or Canada)
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 800-998-9938（美国或加拿大）
- en: 707-829-0515 (international or local)
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0515（国际或本地）
- en: 707-829-0104 (fax)
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0104（传真）
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/dvpj_2e*](https://oreil.ly/dvpj_2e).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为这本书创建了一个网页，列出勘误、示例和任何额外信息。您可以访问[*https://oreil.ly/dvpj_2e*](https://oreil.ly/dvpj_2e)。
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 发送电子邮件至[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com)，以评论或询问有关本书的技术问题。
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 有关我们的书籍和课程的新闻和信息，请访问[*https://oreilly.com*](https://oreilly.com)。
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在LinkedIn上找到我们：[*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在Twitter上关注我们：[*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia)
- en: 'Watch us on YouTube: [*https://www.youtube.com/oreillymedia*](https://www.youtube.com/oreillymedia)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在YouTube上观看我们：[*https://www.youtube.com/oreillymedia*](https://www.youtube.com/oreillymedia)
- en: Acknowledgments
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢
- en: 'Thanks first to Meghan Blanchette, who set the ball rolling and steered that
    ball through its first very rough chapters. Dawn Schanafelt then took the helm
    and did the bulk of the very necessary editing. Kristen Brown did a brilliant
    job taking the book through production, aided by Gillian McGarvey’s impressively
    tenacious copyediting. Working with such talented, dedicated professionals has
    been an honor and a privilege—and an education: the book would have been so much
    easier to write if I’d known then what I know now. Isn’t that always the way?'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要感谢Meghan Blanchette，她开始推动这本书的进展，并在最初的艰难章节中起到了重要作用。接下来是Dawn Schanafelt掌舵并完成了大部分必要的编辑工作。Kristen
    Brown在出版过程中表现出色，得益于Gillian McGarvey顽强的剪辑工作。与如此才华横溢、敬业的专业人士一起工作是一种荣誉和特权——也是一种教育：如果当时我知道现在所知道的，写这本书就会容易得多。这不是一直都这样吗？
- en: Many thanks to Amy Zielinski for making the author look better than he deserves.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 非常感谢Amy Zielinski使作者看起来比他应得的更好。
- en: The book benefited from some very helpful feedback. So many thanks to Christophe
    Viau, Tom Parslow, Peter Cook, Ian Macinnes, and Ian Ozsvald.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 本书受益于一些非常有帮助的反馈。非常感谢Christophe Viau、Tom Parslow、Peter Cook、Ian Macinnes和Ian
    Ozsvald。
- en: I’d also like to thank the valiant bug hunters who answered my appeal during
    this book’s early release. At time of writing, these are Douglas Kelley, Pavel
    Suk, Brigham Hausman, Marco Hemken, Noble Kennamer, Manfredi Biasutti, Matthew
    Maldonado, and Geert Bauwens.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书初期发布时，我还要感谢那些勇敢的缺陷猎手们。截至目前，他们是Douglas Kelley、Pavel Suk、Brigham Hausman、Marco
    Hemken、Noble Kennamer、Manfredi Biasutti、Matthew Maldonado和Geert Bauwens。
- en: Second Edition
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二版
- en: Primary thanks must go to Shira Evans for shepherding the book from conception
    to realization. Gregory Hyman did a great job keeping me abreast of early releases
    and providing feedback. Once again, I was lucky to have Kristen Brown bring the
    book through production.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的感谢必须归功于Shira Evans，她从构思到实现都给予了本书极大的帮助。Gregory Hyman在及早发布时给予了我及时的反馈和帮助。再次，我很幸运有Kristen
    Brown完成本书的出版工作。
- en: I’d also like to thank my tech reviewers Jordan Goldmeier, Drew Winstel, and
    Jess Males for great advice.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我也要感谢我的技术审阅者Jordan Goldmeier、Drew Winstel和Jess Males提供的宝贵建议。
- en: ^([1](preface01.xhtml#idm45607823284352-marker)) There are many versions of
    JavaScript based on [ECMAScript](https://oreil.ly/0uwuN), but the most significant
    version, which provides the bulk of new functionality, is [ECMAScript 6](https://oreil.ly/owrsZ).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](preface01.xhtml#idm45607823284352-marker)) 基于[ECMAScript](https://oreil.ly/0uwuN)有许多JavaScript版本，但最重要的版本是[ECMAScript
    6](https://oreil.ly/owrsZ)，它提供了大部分新功能。
