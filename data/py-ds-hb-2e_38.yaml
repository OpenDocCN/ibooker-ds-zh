- en: 'Chapter 34\. Customizing Matplotlib: Configurations and Stylesheets'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 34 章\. 自定义 Matplotlib：配置和样式表
- en: While many of the topics covered in previous chapters involve adjusting the
    style of plot elements one by one, Matplotlib also offers mechanisms to adjust
    the overall style of a chart all at once. In this chapter we’ll walk through some
    of Matplotlib’s runtime configuration (*rc*) options, and take a look at the *stylesheets*
    feature, which contains some nice sets of default configurations.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然前面章节涵盖的许多主题都涉及逐个调整绘图元素的样式，但 Matplotlib 也提供了机制来一次性调整图表的整体样式。在本章中，我们将介绍一些 Matplotlib
    的运行时配置（*rc*）选项，并查看包含一些漂亮的默认配置集的 *stylesheets* 功能。
- en: Plot Customization by Hand
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动绘图定制
- en: Throughout this part of the book, you’ve seen how it is possible to tweak individual
    plot settings to end up with something that looks a little nicer than the default.
    It’s also possible to do these customizations for each individual plot. For example,
    here is a fairly drab default histogram, shown in [Figure 34-1](#fig_0411-settings-and-stylesheets_files_in_output_4_0).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的这一部分中，你已经看到如何调整单个绘图设置，使其看起来比默认设置更好看一些。也可以为每个单独的图进行这些自定义。例如，这里是一个相当沉闷的默认直方图，如图
    [34-1](#fig_0411-settings-and-stylesheets_files_in_output_4_0) 所示。
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![output 4 0](assets/output_4_0.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![output 4 0](assets/output_4_0.png)'
- en: Figure 34-1\. A histogram in Matplotlib’s default style
  id: totrans-7
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 34-1\. Matplotlib 默认样式下的直方图
- en: We can adjust this by hand to make it a much more visually pleasing plot, as
    you can see in [Figure 34-2](#fig_0411-settings-and-stylesheets_files_in_output_6_0).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以手动调整它，使其成为一个视觉上更加愉悦的图，如你可以在图 [34-2](#fig_0411-settings-and-stylesheets_files_in_output_6_0)
    中看到的那样。
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![output 6 0](assets/output_6_0.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![output 6 0](assets/output_6_0.png)'
- en: Figure 34-2\. A histogram with manual customizations
  id: totrans-11
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 34-2\. 带有手动自定义的直方图
- en: This looks better, and you may recognize the look as inspired by that of the
    R language’s `ggplot` visualization package. But this took a whole lot of effort!
    We definitely do not want to have to do all that tweaking each time we create
    a plot. Fortunately, there is a way to adjust these defaults once in a way that
    will work for all plots.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来更好，你可能会认出其灵感来自 R 语言的 `ggplot` 可视化包。但这需要大量的工作！我们绝对不希望每次创建图表时都进行这些调整。幸运的是，有一种方法可以一次性调整这些默认设置，适用于所有图表。
- en: 'Changing the Defaults: rcParams'
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改默认设置：rcParams
- en: Each time Matplotlib loads, it defines a runtime configuration containing the
    default styles for every plot element you create. This configuration can be adjusted
    at any time using the `plt.rc` convenience routine. Let’s see how we can modify
    the rc parameters so that our default plot will look similar to what we did before.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 每次 Matplotlib 加载时，它定义一个运行时配置，包含您创建的每个绘图元素的默认样式。可以随时使用 `plt.rc` 方便函数调整此配置。让我们看看如何修改
    rc 参数，以便我们的默认图表看起来与之前类似。
- en: 'We can use the `plt.rc` function to change some of these settings:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `plt.rc` 函数来更改其中一些设置：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: With these settings defined, we can now create a plot and see our settings in
    action (see [Figure 34-3](#fig_0411-settings-and-stylesheets_files_in_output_11_0)).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些设置定义，现在我们可以创建一个图表，并看到我们的设置如何生效（参见图 [34-3](#fig_0411-settings-and-stylesheets_files_in_output_11_0)）。
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![output 11 0](assets/output_11_0.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![output 11 0](assets/output_11_0.png)'
- en: Figure 34-3\. A customized histogram using rc settings
  id: totrans-20
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 34-3\. 使用 rc 设置的自定义直方图
- en: Let’s see what simple line plots look like with these rc parameters (see [Figure 34-4](#fig_0411-settings-and-stylesheets_files_in_output_13_0)).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看使用这些 rc 参数的简单线图的外观（参见图 [34-4](#fig_0411-settings-and-stylesheets_files_in_output_13_0)）。
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![output 13 0](assets/output_13_0.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![output 13 0](assets/output_13_0.png)'
- en: Figure 34-4\. A line plot with customized styles
  id: totrans-24
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 34-4\. 具有自定义样式的线图
- en: For charts viewed onscreen rather than printed, I find this much more aesthetically
    pleasing than the default styling. If you disagree with my aesthetic sense, the
    good news is that you can adjust the rc parameters to suit your own tastes! Optionally,
    these settings can be saved in a *.matplotlibrc* file, which you can read about
    in the [Matplotlib documentation](https://oreil.ly/UwM2u).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于在屏幕上查看而不是打印的图表，我发现这比默认样式更具美感。如果你对我的审美感觉不同，好消息是你可以调整 rc 参数以适应自己的喜好！可选地，这些设置可以保存在
    *.matplotlibrc* 文件中，你可以在 [Matplotlib 文档](https://oreil.ly/UwM2u) 中了解更多。
- en: Stylesheets
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 样式表
- en: A newer mechanism for adjusting overall chart styles is via Matplotlib’s `style`
    module, which includes a number of default stylesheets, as well as the ability
    to create and package your own styles. These stylesheets are formatted similarly
    to the *.matplotlibrc* files mentioned earlier, but must be named with a *.mplstyle*
    extension.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 调整整体图表样式的较新机制是通过 Matplotlib 的 `style` 模块，其中包括一些默认样式表，以及创建和打包自己的样式的功能。这些样式表的格式类似于之前提到的
    *.matplotlibrc* 文件，但必须以 *.mplstyle* 扩展名命名。
- en: 'Even if you don’t go as far as creating your own style, you may find what you’re
    looking for in the built-in stylesheets. `plt.style.available` contains a list
    of the available styles—here I’ll list only the first five for brevity:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 即使您不打算创建自己的样式，您可能会在内置样式表中找到所需的内容。`plt.style.available` 包含可用样式的列表——为简洁起见，这里我只列出前五个：
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The standard way to switch to a stylesheet is to call `style.use`:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 切换样式表的标准方法是调用 `style.use`：
- en: '[PRE7]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'But keep in mind that this will change the style for the rest of the Python
    session! Alternatively, you can use the style context manager, which sets a style
    temporarily:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 但请记住，这将改变 Python 会话的剩余部分的样式！或者，您可以使用样式上下文管理器，临时设置样式：
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To demonstrate these styles, let’s create a function that will make two basic
    types of plot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示这些样式，让我们创建一个函数，用于制作两种基本类型的图表：
- en: '[PRE9]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We’ll use this to explore how these plots look using the various built-in styles.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用这些样式来探索使用各种内置样式的图表外观。
- en: Note
  id: totrans-37
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Full-color figures are available in the [supplemental materials on GitHub](https://oreil.ly/PDSH_GitHub).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 全彩色图像可在 [GitHub 上的补充材料](https://oreil.ly/PDSH_GitHub) 中找到。
- en: Default Style
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 默认风格
- en: Matplotlib’s `default` style was updated in the version 2.0 release; let’s look
    at this first (see [Figure 34-5](#fig_0411-settings-and-stylesheets_files_in_output_22_0)).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 的 `default` 风格在 2.0 版本中有更新；我们先来看看这个（见 [Figure 34-5](#fig_0411-settings-and-stylesheets_files_in_output_22_0)）。
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![output 22 0](assets/output_22_0.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![output 22 0](assets/output_22_0.png)'
- en: Figure 34-5\. Matplotlib’s `default` style
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 34-5\. Matplotlib 的 `default` 风格
- en: FiveThiryEight Style
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**FiveThiryEight 风格**'
- en: 'The `fivethirtyeight` style mimics the graphics found on the popular [FiveThirtyEight
    website](https://fivethirtyeight.com). As you can see in [Figure 34-6](#fig_0411-settings-and-stylesheets_files_in_output_24_0),
    it is typified by bold colors, thick lines, and transparent axes:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`fivethirtyeight` 风格模仿了流行的 [FiveThirtyEight 网站](https://fivethirtyeight.com)
    上的图形。正如您在 [Figure 34-6](#fig_0411-settings-and-stylesheets_files_in_output_24_0)
    中看到的那样，它以鲜明的颜色、粗线条和透明的坐标轴为特征：'
- en: '[PRE11]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![output 24 0](assets/output_24_0.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![output 24 0](assets/output_24_0.png)'
- en: Figure 34-6\. The `fivethirtyeight` style
  id: totrans-48
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 34-6\. `fivethirtyeight` 风格
- en: ggplot Style
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ggplot 风格
- en: The `ggplot` package in the R language is a popular visualization tool among
    data scientists. Matplotlib’s `ggplot` style mimics the default styles from that
    package (see [Figure 34-7](#fig_0411-settings-and-stylesheets_files_in_output_26_0)).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: R 语言中的 `ggplot` 包是数据科学家中流行的可视化工具。Matplotlib 的 `ggplot` 风格模仿了该包的默认样式（见 [Figure 34-7](#fig_0411-settings-and-stylesheets_files_in_output_26_0)）。
- en: '[PRE12]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![output 26 0](assets/output_26_0.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![output 26 0](assets/output_26_0.png)'
- en: Figure 34-7\. The `ggplot` style
  id: totrans-53
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 34-7\. `ggplot` 风格
- en: Bayesian Methods for Hackers Style
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 贝叶斯方法为黑客风格
- en: There is a neat short online book called [*Probabilistic Programming and Bayesian
    Methods for Hackers*](https://oreil.ly/9JIb7) by Cameron Davidson-Pilon that features
    figures created with Matplotlib, and uses a nice set of rc parameters to create
    a consistent and visually appealing style throughout the book. This style is reproduced
    in the `bmh` stylesheet (see [Figure 34-8](#fig_0411-settings-and-stylesheets_files_in_output_28_0)).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 有一本名为 [*Probabilistic Programming and Bayesian Methods for Hackers*](https://oreil.ly/9JIb7)
    的简短在线书籍，由 Cameron Davidson-Pilon 撰写，其中使用 Matplotlib 创建的图表，并使用一组漂亮的 rc 参数创建了一致且视觉上吸引人的风格。这种风格在
    `bmh` 样式表中得以再现（见 [Figure 34-8](#fig_0411-settings-and-stylesheets_files_in_output_28_0)）。
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![output 28 0](assets/output_28_0.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![output 28 0](assets/output_28_0.png)'
- en: Figure 34-8\. The `bmh` style
  id: totrans-58
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 34-8\. `bmh` 风格
- en: Dark Background Style
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**Dark Background 风格**'
- en: For figures used within presentations, it is often useful to have a dark rather
    than light background. The `dark_background` style provides this (see [Figure 34-9](#fig_0411-settings-and-stylesheets_files_in_output_30_0)).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对于在演示中使用的图像，与其使用浅色背景，不如使用深色背景更为有用。`dark_background` 风格提供了这种选择（见 [Figure 34-9](#fig_0411-settings-and-stylesheets_files_in_output_30_0)）。
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![output 30 0](assets/output_30_0.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![output 30 0](assets/output_30_0.png)'
- en: Figure 34-9\. The `dark_background` style
  id: totrans-63
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 34-9\. `dark_background` 风格
- en: Grayscale Style
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 灰度风格
- en: You might find yourself preparing figures for a print publication that does
    not accept color figures. For this, the `grayscale` style (see [Figure 34-10](#fig_0411-settings-and-stylesheets_files_in_output_32_0))
    can be useful.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会发现自己正在为不接受彩色图的印刷出版物准备图表。对此，`grayscale` 风格（见[图 34-10](#fig_0411-settings-and-stylesheets_files_in_output_32_0)）可能会很有用。
- en: '[PRE15]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![output 32 0](assets/output_32_0.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![output 32 0](assets/output_32_0.png)'
- en: Figure 34-10\. The `grayscale` style
  id: totrans-68
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 34-10\. `grayscale` 风格
- en: Seaborn Style
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Seaborn 风格
- en: Matplotlib also has several stylesheets inspired by the Seaborn library (discussed
    more fully in [Chapter 36](ch36.xhtml#section-0414-visualization-with-seaborn)).
    I’ve found these settings to be very nice, and tend to use them as defaults in
    my own data exploration (see [Figure 34-11](#fig_0411-settings-and-stylesheets_files_in_output_34_0)).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 也有几种受 Seaborn 库启发的样式表（详见[第36章](ch36.xhtml#section-0414-visualization-with-seaborn)）。我发现这些设置非常不错，通常将它们作为自己数据探索的默认设置（见[图
    34-11](#fig_0411-settings-and-stylesheets_files_in_output_34_0)）。
- en: '[PRE16]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![output 34 0](assets/output_34_0.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![output 34 0](assets/output_34_0.png)'
- en: Figure 34-11\. The `seaborn` plotting style
  id: totrans-73
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 34-11\. `seaborn` 绘图风格
- en: Take some time to explore the built-in options and find one that appeals to
    you! Throughout this book, I will generally use one or more of these style conventions
    when creating plots.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 请花些时间探索内置选项，并找到一个适合你的风格！在本书中，当创建图表时，我通常会使用其中一种或多种风格约定。
