- en: 'Chapter 7\. Aggregations: min, max, and Everything in Between'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章 聚合：最小值、最大值以及其他
- en: A first step in exploring any dataset is often to compute various summary statistics.
    Perhaps the most common summary statistics are the mean and standard deviation,
    which allow you to summarize the “typical” values in a dataset, but other aggregations
    are useful as well (the sum, product, median, minimum and maximum, quantiles,
    etc.).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 探索任何数据集的第一步通常是计算各种摘要统计信息。也许最常见的摘要统计信息是均值和标准差，它们帮助你总结数据集中的“典型”值，但其他聚合也很有用（总和、乘积、中位数、最小值和最大值、分位数等）。
- en: NumPy has fast built-in aggregation functions for working on arrays; we’ll discuss
    and try out some of them here.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 具有用于处理数组的快速内置聚合函数；我们将在这里讨论并尝试其中一些。
- en: Summing the Values in an Array
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对数组中的值求和
- en: 'As a quick example, consider computing the sum of all values in an array. Python
    itself can do this using the built-in `sum` function:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 举个快速的例子，考虑计算数组中所有值的总和。Python 本身可以使用内置的`sum`函数来完成这个操作：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The syntax is quite similar to that of NumPy’s `sum` function, and the result
    is the same in the simplest case:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 语法与 NumPy 的`sum`函数非常相似，在最简单的情况下结果是相同的：
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'However, because it executes the operation in compiled code, NumPy’s version
    of the operation is computed much more quickly:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于它在编译代码中执行操作，NumPy 版本的操作速度要快得多：
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Be careful, though: the `sum` function and the `np.sum` function are not identical,
    which can sometimes lead to confusion! In particular, their optional arguments
    have different meanings (`sum(x, 1)` initializes the sum at `1`, while `np.sum(x,
    1)` sums along axis `1`), and `np.sum` is aware of multiple array dimensions,
    as we will see in the following section.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 不过要小心：`sum`函数和`np.sum`函数并不相同，这有时可能会导致混淆！特别是，它们的可选参数具有不同的含义（`sum(x, 1)`将总和初始化为`1`，而`np.sum(x,
    1)`沿着轴`1`求和），而`np.sum`能够识别多个数组维度，正如我们将在接下来的部分看到的。
- en: Minimum and Maximum
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最小值和最大值
- en: 'Similarly, Python has built-in `min` and `max` functions, used to find the
    minimum value and maximum value of any given array:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，Python 内置了`min`和`max`函数，用于找到任意给定数组的最小值和最大值：
- en: '[PRE4]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'NumPy’s corresponding functions have similar syntax, and again operate much
    more quickly:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 的相应函数具有类似的语法，并且在操作上也更快：
- en: '[PRE5]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For `min`, `max`, `sum`, and several other NumPy aggregates, a shorter syntax
    is to use methods of the array object itself:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`min`、`max`、`sum`以及其他几个 NumPy 聚合函数，使用数组对象本身的方法可以简化语法：
- en: '[PRE7]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Whenever possible, make sure that you are using the NumPy version of these aggregates
    when operating on NumPy arrays!
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在操作 NumPy 数组时，尽可能确保使用 NumPy 版本的这些聚合函数！
- en: Multidimensional Aggregates
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多维度聚合
- en: 'One common type of aggregation operation is an aggregate along a row or column.
    Say you have some data stored in a two-dimensional array:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一种常见的聚合操作类型是沿着行或列进行聚合。假设你有一些数据存储在二维数组中：
- en: '[PRE8]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'NumPy aggregations will apply across all elements of a multidimensional array:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 的聚合函数将应用于多维数组的所有元素：
- en: '[PRE9]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Aggregation functions take an additional argument specifying the *axis* along
    which the aggregate is computed. For example, we can find the minimum value within
    each column by specifying `axis=0`:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合函数接受一个额外的参数，指定沿着哪个*轴*进行聚合计算。例如，我们可以通过指定`axis=0`找到每列中的最小值：
- en: '[PRE10]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The function returns four values, corresponding to the four columns of numbers.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数返回四个值，对应于四列数字。
- en: 'Similarly, we can find the maximum value within each row:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们可以找到每行中的最大值：
- en: '[PRE11]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The way the axis is specified here can be confusing to users coming from other
    languages. The `axis` keyword specifies the dimension of the array that will be
    *collapsed*, rather than the dimension that will be returned. So, specifying `axis=0`
    means that axis 0 will be collapsed: for two-dimensional arrays, values within
    each column will be aggregated.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 此处指定轴的方式可能会令从其他语言转过来的用户感到困惑。`axis`关键字指定将要*折叠*的数组维度，而不是将要返回的维度。因此，指定`axis=0`意味着将折叠轴
    0：对于二维数组，将在每列内进行聚合。
- en: Other Aggregation Functions
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他聚合函数
- en: NumPy provides several other aggregation functions with a similar API, and additionally
    most have a `NaN`-safe counterpart that computes the result while ignoring missing
    values, which are marked by the special IEEE floating-point `NaN` value (see [Chapter 16](ch16.xhtml#section-0304-missing-values)).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy提供了几个其他具有类似API的聚合函数，此外大多数函数还有一个`NaN`安全的对应版本，用于在计算结果时忽略缺失值，这些值由特殊的IEEE浮点`NaN`值标记（参见[第16章](ch16.xhtml#section-0304-missing-values)）。
- en: '[Table 7-1](#table-7-1) provides a list of useful aggregation functions available
    in NumPy.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[表7-1](#table-7-1)提供了NumPy中可用的一些有用的聚合函数列表。'
- en: Table 7-1\. Aggregation functions available in NumPy
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 表7-1\. NumPy中可用的聚合函数
- en: '| Function name | NaN-safe version | Description |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 函数名 | NaN安全版本 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `np.sum` | `np.nansum` | Compute sum of elements |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| `np.sum` | `np.nansum` | 计算元素的总和 |'
- en: '| `np.prod` | `np.nanprod` | Compute product of elements |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `np.prod` | `np.nanprod` | 计算元素的乘积 |'
- en: '| `np.mean` | `np.nanmean` | Compute mean of elements |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `np.mean` | `np.nanmean` | 计算元素的均值 |'
- en: '| `np.std` | `np.nanstd` | Compute standard deviation |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `np.std` | `np.nanstd` | 计算标准差 |'
- en: '| `np.var` | `np.nanvar` | Compute variance |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `np.var` | `np.nanvar` | 计算方差 |'
- en: '| `np.min` | `np.nanmin` | Find minimum value |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `np.min` | `np.nanmin` | 查找最小值 |'
- en: '| `np.max` | `np.nanmax` | Find maximum value |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `np.max` | `np.nanmax` | 查找最大值 |'
- en: '| `np.argmin` | `np.nanargmin` | Find index of minimum value |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `np.argmin` | `np.nanargmin` | 查找最小值的索引 |'
- en: '| `np.argmax` | `np.nanargmax` | Find index of maximum value |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `np.argmax` | `np.nanargmax` | 查找最大值的索引 |'
- en: '| `np.median` | `np.nanmedian` | Compute median of elements |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| `np.median` | `np.nanmedian` | 计算元素的中位数 |'
- en: '| `np.percentile` | `np.nanpercentile` | Compute rank-based statistics of elements
    |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| `np.percentile` | `np.nanpercentile` | 计算元素的基于排名的统计信息 |'
- en: '| `np.any` | N/A | Evaluate whether any elements are true |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| `np.any` | N/A | 评估是否有任何元素为真 |'
- en: '| `np.all` | N/A | Evaluate whether all elements are true |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| `np.all` | N/A | 评估所有元素是否为真 |'
- en: You will see these aggregates often throughout the rest of the book.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你将经常看到这些汇总统计信息在本书的其余部分中。
- en: 'Example: What Is the Average Height of US Presidents?'
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例：美国总统的平均身高是多少？
- en: 'Aggregates available in NumPy can act as summary statistics for a set of values.
    As a small example, let’s consider the heights of all US presidents. This data
    is available in the file *president_heights.csv*, which is a comma-separated list
    of labels and values:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy中可用的聚合函数可以作为一组值的汇总统计信息。作为一个小例子，让我们考虑所有美国总统的身高。这些数据包含在文件*president_heights.csv*中，这是一个标签和值的逗号分隔列表：
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We’ll use the Pandas package, which we’ll explore more fully in [Part III](part03.xhtml#section-0300-introduction-to-pandas),
    to read the file and extract this information (note that the heights are measured
    in centimeters):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Pandas包，在[第III部分](part03.xhtml#section-0300-introduction-to-pandas)中更全面地探讨，读取文件并提取这些信息（注意，身高以厘米为单位）：
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now that we have this data array, we can compute a variety of summary statistics:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了这个数据数组，我们可以计算各种汇总统计信息：
- en: '[PRE14]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Note that in each case, the aggregation operation reduced the entire array
    to a single summarizing value, which gives us information about the distribution
    of values. We may also wish to compute quantiles:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在每种情况下，聚合操作将整个数组减少为一个单一的汇总值，这为我们提供了关于值分布的信息。我们可能还希望计算分位数：
- en: '[PRE15]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: We see that the median height of US presidents is 182 cm, or just shy of six
    feet.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到美国总统的中位身高为182厘米，几乎等于六英尺。
- en: 'Of course, sometimes it’s more useful to see a visual representation of this
    data, which we can accomplish using tools in Matplotlib (we’ll discuss Matplotlib
    more fully in [Part IV](part04.xhtml#section-0400-introduction-to-matplotlib)).
    For example, this code generates [Figure 7-1](#fig_0204-computation-on-arrays-aggregates_files_in_output_39_0):'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，有时更有用的是查看这些数据的视觉表示，我们可以使用Matplotlib工具来实现这一目标（我们将在[第IV部分](part04.xhtml#section-0400-introduction-to-matplotlib)中更全面地讨论Matplotlib）。例如，以下代码生成[图7-1](#fig_0204-computation-on-arrays-aggregates_files_in_output_39_0)：
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![output 39 0](assets/output_39_0.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![output 39 0](assets/output_39_0.png)'
- en: Figure 7-1\. Histogram of presidential heights
  id: totrans-66
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7-1\. 美国总统身高的直方图
