- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: Data science is an exciting discipline that allows you to transform raw data
    into understanding, insight, and knowledge. The goals of *R for Data Science*
    are to help you learn the most important tools in R that will allow you to do
    data science efficiently and reproducibly and to have some fun along the way!
    After reading this book, you’ll have the tools to tackle a wide variety of data
    science challenges using the best parts of R.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学是一门激动人心的学科，它让你能够将原始数据转化为理解、洞察和知识。《R数据科学》的目标是帮助你学习R语言中最重要的工具，以便你能够高效和可重复地进行数据科学工作，并在学习过程中享受乐趣！阅读本书后，你将掌握处理各种数据科学挑战所需的工具，使用R语言的最佳部分。
- en: Preface to the Second Edition
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二版序言
- en: 'Welcome to the second edition of *R for Data Science (R4DS)*! This is a major
    reworking of the first edition, removing material we no longer think is useful,
    adding material we wish we included in the first edition, and generally updating
    the text and code to reflect changes in best practices. We’re also very excited
    to welcome a new co-author: Mine Çetinkaya-Rundel, a noted data science educator
    and one of our colleagues at Posit (the company formerly known as RStudio).'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎阅读《*R数据科学*（R4DS）》第二版！这是第一版的重大改编，我们删除了我们认为不再有用的内容，添加了我们希望在第一版中包括的内容，并总体上更新了文本和代码以反映最佳实践的变化。我们也非常高兴地欢迎新的合著者：Mine
    Çetinkaya-Rundel，一位著名的数据科学教育家，也是我们在Posit（以前被称为RStudio的公司）的同事之一。
- en: 'A brief summary of the biggest changes follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是最大变化的简要总结：
- en: The first part of the book has been renamed to “Whole Game.” The goal of this
    section is to give you the rough details of the “whole game” of data science before
    we dive into the details.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书籍的第一部分已更名为“整体游戏”。本节的目标是在深入细节之前为你提供数据科学的整体概述。
- en: The second part of the book is “Visualize.” This part gives data visualization
    tools and best practices a more thorough coverage compared to the first edition.
    The best place to get all the details is still the [ggplot2 book](https://oreil.ly/HNIie),
    but now R4DS covers more of the most important techniques.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书籍的第二部分是“可视化”。与第一版相比，本部分对数据可视化工具和最佳实践进行了更全面的覆盖。获取所有细节的最佳地点仍然是[ggplot2书籍](https://oreil.ly/HNIie)，但现在《R4DS》覆盖了更多最重要的技术。
- en: The third part of the book is now called “Transform” and gains new chapters
    on numbers, logical vectors, and missing values. These were previously parts of
    the data transformation chapter but needed much more room to cover all the details.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书籍的第三部分现在被称为“变换”，并增加了关于数字、逻辑向量和缺失值的新章节。这些内容以前是数据转换章节的一部分，但需要更多的空间来涵盖所有细节。
- en: The fourth part of the book is called “Import.” It’s a new set of chapters that
    goes beyond reading flat text files to working with spreadsheets, getting data
    out of databases, working with big data, rectangling hierarchical data, and scraping
    data from websites.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书籍的第四部分称为“导入”。这是一套新的章节，不仅涵盖了从平面文本文件读取数据的方法，还包括了与电子表格的工作、从数据库中获取数据、处理大数据、整理层次化数据以及从网站抓取数据的方法。
- en: The “Program” part remains but has been rewritten from top to bottom to focus
    on the most important parts of function writing and iteration. Function writing
    now includes details on how to wrap tidyverse functions (dealing with the challenges
    of tidy evaluation), since this has become much easier and more important over
    the last few years. We’ve added a new chapter on important base R functions that
    you’re likely to see in wild-caught R code.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “程序”部分保留了下来，但已从头到尾重写，重点放在函数编写和迭代的最重要部分上。函数编写现在包括如何包装tidyverse函数的详细信息（处理tidy评估的挑战），因为这在过去几年变得更加容易和重要。我们新增了一章介绍了基本R函数的重要内容，这些函数在你可能遇到的R代码中也常见。
- en: The “Modeling” part has been removed. We never had enough room to fully do modeling
    justice, and there are now much better resources available. We generally recommend
    using the [tidymodels packages](https://oreil.ly/0giAa) and reading [*Tidy Modeling
    with R*](https://oreil.ly/9Op9s) by Max Kuhn and Julia Silge (O’Reilly).
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “建模”部分已被移除。我们以前没有足够的空间来全面展示建模的全部，而现在有更好的资源可用。我们一般建议使用[tidymodels packages](https://oreil.ly/0giAa)并阅读《[*Tidy
    Modeling with R*](https://oreil.ly/9Op9s)》（Max Kuhn和Julia Silge著，O’Reilly）。
- en: The “Communicate” part remains but has been thoroughly updated to feature [Quarto](https://oreil.ly/_6LNH)
    instead of R Markdown. This edition of the book has been written in Quarto, and
    it’s clearly the tool of the future.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “沟通”部分保留了下来，但已彻底更新，使用[Quarto](https://oreil.ly/_6LNH)代替R Markdown。本书的这一版已经使用Quarto编写，显然这是未来的工具。
- en: What You Will Learn
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你将学到什么
- en: Data science is a vast field, and there’s no way you can master it all by reading
    a single book. This book aims to give you a solid foundation in the most important
    tools and enough knowledge to find the resources to learn more when necessary.
    Our model of the steps of a typical data science project looks something like
    [Figure I-1](#fig-ds-diagram).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学是一个广阔的领域，通过阅读一本书是无法掌握所有内容的。本书旨在为您提供最重要工具的坚实基础，并在必要时提供足够的知识来寻找更多学习资源。我们的典型数据科学项目步骤模型类似于[图I-1](#fig-ds-diagram)。
- en: '![A diagram displaying the data science cycle: Import -> Tidy -> Understand
    (which has the phases Transform -> Visualize -> Model in a cycle) -> Communicate.
    Surrounding all of these is Communicate. ](assets/rds2_0001.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![展示数据科学循环的图表：导入 -> 整理 -> 理解（其中包括阶段变换 -> 可视化 -> 建模循环） -> 交流。这些都围绕着交流。](assets/rds2_0001.png)'
- en: Figure I-1\. In our model of the data science process, you start with data import
    and tidying. Next, you understand your data with an iterative cycle of transforming,
    visualizing, and modeling. You finish the process by communicating your results
    to other humans.
  id: totrans-15
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图I-1\. 在我们的数据科学过程模型中，您从数据导入和整理开始。接下来，通过转换、可视化和建模的迭代循环理解您的数据。最后，通过向其他人交流您的结果来完成整个过程。
- en: First, you must *import* your data into R. This typically means that you take
    data stored in a file, database, or web application programming interface (API)
    and load it into a data frame in R. If you can’t get your data into R, you can’t
    do data science on it!
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您必须将数据导入到R中。这通常意味着您从文件、数据库或Web应用程序编程接口（API）中获取数据，并将其加载到R中的数据框中。如果您无法将数据导入R，则无法对其进行数据科学分析！
- en: Once you’ve imported your data, it is a good idea to *tidy* it. Tidying your
    data means storing it in a consistent form that matches the semantics of the dataset
    with how it is stored. In brief, when your data is tidy, each column is a variable
    and each row is an observation. Tidy data is important because the consistent
    structure lets you focus your efforts on answering questions about the data, not
    fighting to get the data into the right form for different functions.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您导入了数据，将其*整理*是一个好主意。整理数据意味着将其存储在与数据集语义匹配的一致形式中。简而言之，当数据整洁时，每列都是一个变量，每行都是一个观察结果。整洁的数据很重要，因为一致的结构使您能够集中精力回答关于数据的问题，而不是为了不同功能而争取将数据放入正确的形式。
- en: Once you have tidy data, a common next step is to *transform* it. Transformation
    includes narrowing in on observations of interest (such as all people in one city
    or all data from the last year), creating new variables that are functions of
    existing variables (such as computing speed from distance and time), and calculating
    a set of summary statistics (such as counts or means). Together, tidying and transforming
    are called *wrangling* because getting your data in a form that’s natural to work
    with often feels like a fight!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您有了整洁的数据，常见的下一步是对其进行*转换*。转换包括关注感兴趣的观察结果（例如一个城市的所有人或去年的所有数据）、创建新变量作为现有变量的函数（例如从距离和时间计算速度）、以及计算一组汇总统计数据（例如计数或均值）。整理和转换一起被称为*整理*，因为将数据整理成自然工作的形式通常感觉像是一场斗争！
- en: 'Once you have tidy data with the variables you need, there are two main engines
    of knowledge generation: visualization and modeling. They have complementary strengths
    and weaknesses, so any real data analysis will iterate between them many times.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您有了需要的变量的整洁数据，知识生成的两个主要引擎是可视化和建模。它们具有互补的优势和劣势，因此任何真实的数据分析将在它们之间进行多次迭代。
- en: '*Visualization* is a fundamentally human activity. A good visualization will
    show you things you did not expect or raise new questions about the data. A good
    visualization might also hint that you’re asking the wrong question or that you
    need to collect different data. Visualizations can surprise you, but they don’t
    scale particularly well because they require a human to interpret them.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*可视化*是一种根本上的人类活动。一个好的可视化将展示出你意想不到的事情，或者对数据提出新的问题。一个好的可视化也可能暗示你正在问错误的问题，或者需要收集不同的数据。可视化可能会让你感到惊讶，但它们并不特别适合扩展，因为它们需要人类来解释。'
- en: '*Models* are complementary tools to visualization. Once you have made your
    questions sufficiently precise, you can use a model to answer them. Models are
    fundamentally mathematical or computational tools, so they generally scale well.
    Even when they don’t, it’s usually cheaper to buy more computers than it is to
    buy more brains! But every model makes assumptions, and by its very nature a model
    cannot question its own assumptions. That means a model cannot fundamentally surprise
    you.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*模型*是可视化的补充工具。一旦你的问题变得足够精确，你可以使用模型来回答它们。模型基本上是数学或计算工具，所以它们通常可以很好地扩展。即使它们不能，买更多的计算机通常比买更多的大脑便宜！但每个模型都有假设，根据其本质，模型无法质疑自己的假设。这意味着模型基本上不会让你感到惊讶。'
- en: The last step of data science is *communication*, an absolutely critical part
    of any data analysis project. It doesn’t matter how well your models and visualization
    have led you to understand the data unless you can also communicate your results
    to others.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学的最后一步是*沟通*，这是任何数据分析项目中绝对关键的部分。除非你能将结果有效地传达给他人，否则你对数据的理解，无论多么深入，都是无用的。
- en: Surrounding all these tools is *programming*. Programming is a cross-cutting
    tool that you use in nearly every part of a data science project. You don’t need
    to be an expert programmer to be a successful data scientist, but learning more
    about programming pays off because becoming a better programmer allows you to
    automate common tasks and solve new problems with greater ease.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 包围所有这些工具的是*编程*。编程是你几乎在数据科学项目的每个部分都会用到的横切工具。你不需要成为一个专业程序员才能成为一名成功的数据科学家，但学习更多关于编程的知识会带来回报，因为成为更好的程序员可以让你更轻松地自动化常见任务并解决新问题。
- en: 'You’ll use these tools in every data science project, but they’re not enough
    for most projects. There’s a rough 80/20 rule at play: you can tackle about 80%
    of every project using the tools you’ll learn in this book, but you’ll need other
    tools to tackle the remaining 20%. Throughout this book, we’ll point you to resources
    where you can learn more.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你会在每一个数据科学项目中使用这些工具，但对于大多数项目来说，它们并不足够。这里有一个粗略的80/20法则：你可以使用本书中学到的工具解决大约80%的每个项目，但你需要其他工具来解决剩余的20%。在本书中，我们会指引你去了解更多资源。
- en: How This Book Is Organized
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何组织本书
- en: The previous description of the tools of data science is organized roughly according
    to the order in which you use them in an analysis (although, of course, you’ll
    iterate through them multiple times). In our experience, however, learning data
    importing and tidying first is suboptimal because, 80% of the time, it’s routine
    and boring, and the other 20% of the time, it’s weird and frustrating. That’s
    a bad place to start learning a new subject! Instead, we’ll start with visualization
    and transformation of data that’s already been imported and tidied. That way,
    when you ingest and tidy your own data, your motivation will stay high because
    you know the pain is worth the effort.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 关于数据科学工具的前一描述大致按照在分析中使用它们的顺序进行组织（当然，你会多次迭代使用它们）。然而根据我们的经验，先学习数据导入和整理是次优的，因为80%的时间是例行公事和无聊的，另外20%的时间则是奇怪和令人沮丧的。这不是学习新科目的好起点！相反，我们将从已经导入和整理过的数据的可视化和转换开始。这样，当你处理自己的数据时，你的动力会保持高涨，因为你知道付出的努力是值得的。
- en: 'Within each chapter, we try to adhere to a consistent pattern: start with some
    motivating examples so you can see the bigger picture and then dive into the details.
    Each section of the book is paired with exercises to help you practice what you’ve
    learned. Although it can be tempting to skip the exercises, there’s no better
    way to learn than by practicing on real problems.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 每一章内部，我们都力求保持一致的模式：从一些激励性的例子开始，让你看到整体图景，然后深入细节。本书的每个部分都配有练习，帮助你实践所学。虽然跳过练习可能很诱人，但没有比在真实问题上实践更好的学习方法。
- en: What You Won’t Learn
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你不会学到的内容
- en: There are several important topics that this book doesn’t cover. We believe
    it’s important to stay ruthlessly focused on the essentials so you can get up
    and running as quickly as possible. That means this book can’t cover every important
    topic.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本书没有涵盖几个重要的主题。我们认为保持无情地专注于基本内容非常重要，这样你就能尽快投入使用。这意味着本书无法涵盖每一个重要主题。
- en: Modeling
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 建模
- en: Modeling is super important for data science, but it’s a big topic, and unfortunately,
    we just don’t have the space to give it the coverage it deserves here. To learn
    more about modeling, we highly recommend [*Tidy Modeling with R*](https://oreil.ly/9Op9s)
    by our colleagues Max Kuhn and Julia Silge (O’Reilly). This book will teach you
    the tidymodels family of packages, which, as you might guess from the name, share
    many conventions with the tidyverse packages we use in this book.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 建模对于数据科学非常重要，但它是一个庞大的主题，不幸的是，我们在这里无法为它提供应有的覆盖面。想要了解更多关于建模的内容，我们强烈推荐[*Tidy Modeling
    with R*](https://oreil.ly/9Op9s)，这本书由我们的同事Max Kuhn和Julia Silge（O’Reilly）撰写。这本书将教你tidymodels系列的包，顾名思义，它们与我们在本书中使用的tidyverse包共享许多约定。
- en: Big Data
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 大数据
- en: This book proudly and primarily focuses on small, in-memory datasets. This is
    the right place to start because you can’t tackle big data unless you have experience
    with small data. The tools you learn in the majority of this book will easily
    handle hundreds of megabytes of data, and with a bit of care, you can typically
    use them to work with a few gigabytes of data. We’ll also show you how to get
    data out of databases and parquet files, both of which are often used to store
    big data. You won’t necessarily be able to work with the entire dataset, but that’s
    not a problem because you need only a subset or subsample to answer the question
    you’re interested in.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书自豪地并主要关注小型内存数据集。这是开始的正确地方，因为除非你有小数据的经验，否则无法处理大数据。你在本书的大部分内容中学到的工具将轻松处理数百兆字节的数据，并且通过一些小心的处理，你通常可以使用它们处理几吉字节的数据。我们还会向你展示如何从数据库和Parquet文件中获取数据，这两者通常用于存储大数据。你不一定能够处理整个数据集，但这并不是问题，因为你只需处理感兴趣问题的子集或子样本。
- en: If you’re routinely working with larger data (10–100 GB, say), we recommend
    learning more about [data.table](https://oreil.ly/GG4Et). We don’t teach it here
    because it uses a different interface than the tidyverse and requires you to learn
    some different conventions. However, it is incredibly faster, and the performance
    payoff is worth investing some time in learning it if you’re working with large
    data.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你经常处理较大的数据（例如 10–100 GB），我们建议你了解更多关于[data.table](https://oreil.ly/GG4Et)的信息。我们在这里不教授它，因为它使用的界面与tidyverse不同，并需要你学习一些不同的约定。然而，它的运行速度非常快，性能回报值得你投入一些时间去学习，特别是在处理大数据时。
- en: Python, Julia, and Friends
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python、Julia和朋友们
- en: In this book, you won’t learn anything about Python, Julia, or any other programming
    language useful for data science. This isn’t because we think these tools are
    bad. They’re not! And in practice, most data science teams use a mix of languages,
    often at least R and Python. But we strongly believe that it’s best to master
    one tool at a time, and R is a great place to start.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，你不会学习任何关于Python、Julia或其他对数据科学有用的编程语言的内容。这并不是因为我们认为这些工具不好。它们并不差！实际上，大多数数据科学团队都同时使用多种语言，通常至少包括R和Python。但我们坚信，最好一次只精通一种工具，而R是一个很好的起点。
- en: Prerequisites
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 先决条件
- en: We’ve made a few assumptions about what you already know to get the most out
    of this book. You should be generally numerically literate, and it’s helpful if
    you have some basic programming experience already. If you’ve never programmed
    before, you might find [Hands-On Programming with R](https://oreil.ly/8uiH5) by
    Garrett Grolemund (O’Reilly) to be a valuable adjunct to this book.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们做了一些关于你已经掌握的知识的假设，以便你能从本书中获取最大收益。你应该具备一般的数字素养，如果你已经有一些基本的编程经验会更有帮助。如果你以前从未编程过，你可能会发现[Hands-On
    Programming with R](https://oreil.ly/8uiH5)（O'Reilly）由Garrett Grolemund编写，对本书是一个有价值的补充。
- en: 'You need four things to run the code in this book: R, RStudio, a collection
    of R packages called the *tidyverse*, and a handful of other packages. Packages
    are the fundamental units of reproducible R code. They include reusable functions,
    documentation that describes how to use them, and sample data.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在本书中运行代码，你需要四样东西：R，RStudio，一个名为*tidyverse*的R包集合，以及少数其他包。包是可重复使用的R代码的基本单元。它们包括可重复使用的函数、描述如何使用它们的文档以及示例数据。
- en: R
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: R
- en: To download R, go to [CRAN](https://oreil.ly/p3_RG), the *c*omprehensive *R*
    *a*rchive *n*etwork. A new major version of R comes out once a year, and there
    are two to three minor releases each year. It’s a good idea to update regularly.
    Upgrading can be a bit of a hassle, especially for major versions that require
    you to re-install all your packages, but putting it off only makes it worse. We
    recommend R 4.2.0 or later for this book.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载 R，请访问 [CRAN](https://oreil.ly/p3_RG)，*c*omprehensive *R* *a*rchive *n*etwork。R
    每年发布一个新的主要版本，每年还会发布两到三个次要版本。定期更新是个好主意。升级可能有点麻烦，特别是对于需要重新安装所有包的主要版本来说，但拖延只会让情况变得更糟。我们建议使用本书的
    R 4.2.0 或更高版本。
- en: RStudio
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RStudio
- en: RStudio is an integrated development environment (IDE) for R programming, which
    you can download from [the RStudio download page](https://oreil.ly/pxF-k). RStudio
    is updated a couple of times a year, and it will automatically let you know when
    a new version is out, so there’s no need to check back. It’s a good idea to upgrade
    regularly to take advantage of the latest and greatest features. For this book,
    make sure you have at least RStudio 2022.02.0.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: RStudio 是一个用于 R 编程的集成开发环境（IDE），你可以从 [RStudio 下载页面](https://oreil.ly/pxF-k) 下载。RStudio
    每年更新几次，并且会在新版本发布时自动通知你，所以无需经常检查。定期升级以利用最新和最好的功能是个好主意。确保至少安装了 RStudio 2022.02.0。
- en: 'When you start RStudio, [Figure I-2](#fig-rstudio-console), you’ll see two
    key regions in the interface: the console pane and the output pane. For now, all
    you need to know is that you type the R code in the console pane and press Enter
    to run it. You’ll learn more as we go along!^([1](introduction01.xhtml#idm44771332141712))'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当你启动 RStudio，[图 I-2](#fig-rstudio-console)，你会看到界面中的两个关键区域：控制台窗格和输出窗格。目前，你只需知道在控制台窗格中输入
    R 代码并按 Enter 键运行即可。随着我们的学习，你会了解更多！^([1](introduction01.xhtml#idm44771332141712))
- en: '![The RStudio IDE with the panes Console and Output highlighted.](assets/rds2_0002.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![带有窗格控制台和输出窗格的 RStudio IDE。](assets/rds2_0002.png)'
- en: 'Figure I-2\. The RStudio IDE has two key regions: type R code in the console
    pane on the left, and look for plots in the output pane on the right.'
  id: totrans-46
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 I-2\. RStudio IDE 有两个关键区域：左侧的控制台窗格输入 R 代码，右侧的输出窗格查看图形。
- en: The Tidyverse
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Tidyverse
- en: You’ll also need to install some R packages. An R package is a collection of
    functions, data, and documentation that extends the capabilities of base R. Using
    packages is key to the successful use of R. The majority of the packages that
    you will learn in this book are part of the so-called tidyverse. All packages
    in the tidyverse share a common philosophy of data and R programming and are designed
    to work together.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要安装一些 R 包。R 包是扩展基本 R 能力的函数、数据和文档的集合。使用包对成功使用 R 是至关重要的。你将在本书中学习的大多数包都属于所谓的
    tidyverse。tidyverse 中的所有包都共享一种数据和 R 编程的共同理念，并且设计成可以共同工作。
- en: 'You can install the complete tidyverse with a single line of code:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用一行代码安装完整的 tidyverse：
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: On your computer, type that line of code in the console, and then press Enter
    to run it. R will download the packages from CRAN and install them on your computer.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的电脑上，在控制台中键入该行代码，然后按 Enter 键运行。R 将从 CRAN 下载这些包并安装到你的电脑上。
- en: 'You will not be able to use the functions, objects, or help files in a package
    until you load it. Once you have installed a package, you can load it using the
    [`library()`](https://rdrr.io/r/base/library.xhtml) function:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在加载包之前，你将无法使用包中的函数、对象或帮助文件。安装完包后，可以使用 [`library()`](https://rdrr.io/r/base/library.xhtml)
    函数加载它：
- en: '[PRE1]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This tells you that tidyverse loads nine packages: dplyr, forcats, ggplot2,
    lubridate, purrr, readr, stringr, tibble, and tidyr. These are considered the
    *core* of the tidyverse because you’ll use them in almost every analysis.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉你 tidyverse 加载了九个包：dplyr, forcats, ggplot2, lubridate, purrr, readr, stringr,
    tibble 和 tidyr。这些被认为是 tidyverse 的*核心*，因为你几乎在每次分析中都会使用它们。
- en: Packages in the tidyverse change fairly frequently. You can see if updates are
    available by running [`tidyverse_update()`](https://tidyverse.tidyverse.org/reference/tidyverse_update.xhtml).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: tidyverse 中的包经常变化。你可以通过运行 [`tidyverse_update()`](https://tidyverse.tidyverse.org/reference/tidyverse_update.xhtml)
    查看是否有更新。
- en: Other Packages
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他包
- en: There are many other excellent packages that are not part of the tidyverse because
    they solve problems in a different domain or are designed with a different set
    of underlying principles. This doesn’t make them better or worse; it just makes
    them different. In other words, the complement to the tidyverse is not the messyverse
    but many other universes of interrelated packages. As you tackle more data science
    projects with R, you’ll learn new packages and new ways of thinking about data.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多其他优秀的包不属于 tidyverse，因为它们解决的问题领域不同，或者设计原则不同。这并不意味着它们更好或更差；这只是使它们不同。换句话说，与
    tidyverse 相对应的不是 messyverse，而是许多其他互相关联的包的宇宙。随着您使用 R 处理更多数据科学项目，您将学习到新的包和处理数据的新方法。
- en: 'We’ll use many packages from outside the tidyverse in this book. For example,
    we’ll use the following packages because they provide interesting data sets for
    us to work with in the process of learning R:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将使用许多 tidyverse 之外的包。例如，我们将使用以下包，因为它们为我们提供了在学习 R 过程中使用的有趣数据集：
- en: '[PRE2]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We’ll also use a selection of other packages for one-off examples. You don’t
    need to install them now, just remember that whenever you see an error like this:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用一些其他包作为临时示例。您现在不需要安装它们，只需记住，无论何时看到像这样的错误：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: it means you need to run `install.packages("ggrepel")` to install the package.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着您需要运行 `install.packages("ggrepel")` 来安装该包。
- en: Running R Code
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行 R 代码
- en: 'The previous section showed you several examples of running R code. The code
    in the book looks like this:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 前一节向您展示了运行 R 代码的几个示例。书中的代码看起来像这样：
- en: '[PRE4]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you run the same code in your local console, it will look like this:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在本地控制台中运行相同的代码，它将如下所示：
- en: '[PRE5]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: There are two main differences. In your console, you type after the `>`, called
    the *prompt*; we don’t show the prompt in the book. In the book, the output is
    commented out with `#>`; in your console, it appears directly after your code.
    These two differences mean that if you’re working with an electronic version of
    the book, you can easily copy code out of the book and paste it into the console.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 主要有两个区别。在控制台中，您在`>`后面输入，称为*提示*；我们在书中不显示提示。在书中，输出用`#>`注释掉；在控制台中，它直接出现在您的代码之后。这两个差异意味着，如果您使用电子版书籍，您可以轻松地从书中复制代码并粘贴到控制台中。
- en: 'Throughout the book, we use a consistent set of conventions to refer to code:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中，我们使用一致的约定来引用代码：
- en: Functions are displayed in a code font and followed by parentheses, like [`sum()`](https://rdrr.io/r/base/sum.xhtml)
    or [`mean()`](https://rdrr.io/r/base/mean.xhtml).
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数显示为代码字体，并带括号，例如[`sum()`](https://rdrr.io/r/base/sum.xhtml)或[`mean()`](https://rdrr.io/r/base/mean.xhtml)。
- en: Other R objects (such as data or function arguments) are in a code font, without
    parentheses, like `flights` or `x`.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他 R 对象（例如数据或函数参数）以代码字体显示，不带括号，如`flights`或`x`。
- en: Sometimes, to make it clear which package an object comes from, we’ll use the
    package name followed by two colons, like [`dplyr::mutate()`](https://dplyr.tidyverse.org/reference/mutate.xhtml)
    or [`nycflights13::flights`](https://rdrr.io/pkg/nycflights13/man/flights.xhtml).
    This is also valid R code.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时为了明确对象来自哪个包，我们会使用包名后跟两个冒号，例如[`dplyr::mutate()`](https://dplyr.tidyverse.org/reference/mutate.xhtml)或[`nycflights13::flights`](https://rdrr.io/pkg/nycflights13/man/flights.xhtml)。这也是有效的
    R 代码。
- en: Other Conventions Used in This Book
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书中使用的其他约定。
- en: 'The following typographical conventions are used in this book:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用以下排版约定：
- en: '*Italic*'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*斜体*'
- en: Indicates URLs and email addresses.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 指示网址和电子邮件地址。
- en: '`Constant width`'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`常宽`'
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, keywords, and filenames.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 用于程序列表，以及段落中用于引用变量或函数名称、数据库、数据类型、环境变量、语句、关键字和文件名等程序元素的文本。
- en: '**`Constant width bold`**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**`常宽粗体`**'
- en: Shows commands or other text that should be typed literally by the user.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 显示用户应按照字面意思输入的命令或其他文本。
- en: '*`Constant width italic`*'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '*`常宽斜体`*'
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 显示应替换为用户提供的值或由上下文确定的值的文本。
- en: Note
  id: totrans-83
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This element signifies a general note.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这个元素表示一般注释。
- en: Warning
  id: totrans-85
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: This element indicates a warning or caution.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这个元素表示一个警告或注意。
- en: O’Reilly Online Learning
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: O’Reilly 在线学习
- en: Note
  id: totrans-88
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: For more than 40 years, [*O’Reilly Media*](https://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 超过40年来，[*O’Reilly Media*](https://oreilly.com) 提供技术和商业培训、知识和洞察，帮助公司取得成功。
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*https://oreilly.com*](https://oreilly.com).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们独特的专家和创新者网络通过书籍、文章和我们的在线学习平台分享他们的知识和专长。O’Reilly 的在线学习平台为您提供按需访问的现场培训课程、深入学习路径、互动编码环境，以及来自
    O’Reilly 和其他200多家出版商的大量文本和视频。更多信息，请访问[*https://oreilly.com*](https://oreilly.com)。
- en: How to Contact Us
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何联系我们
- en: 'Please address comments and questions concerning this book to the publisher:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 有关本书的评论和问题，请联系出版商：
- en: O’Reilly Media, Inc.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: O’Reilly Media, Inc.
- en: 1005 Gravenstein Highway North
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1005 Gravenstein Highway North
- en: Sebastopol, CA 95472
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sebastopol, CA 95472
- en: 800-889-8969 (in the United States or Canada)
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 800-889-8969（美国或加拿大）
- en: 707-829-7019 (international or local)
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-7019（国际或本地）
- en: 707-829-0104 (fax)
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0104（传真）
- en: '[*support@oreilly.com*](mailto:support@oreilly.com)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*support@oreilly.com*](mailto:support@oreilly.com)'
- en: '[*https://www.oreilly.com/about/contact.xhtml*](https://www.oreilly.com/about/contact.xhtml)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*https://www.oreilly.com/about/contact.xhtml*](https://www.oreilly.com/about/contact.xhtml)'
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/r-for-data-science-2e*](https://oreil.ly/r-for-data-science-2e).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为本书设有网页，列出勘误、示例和任何额外信息。您可以访问此页面：[*https://oreil.ly/r-for-data-science-2e*](https://oreil.ly/r-for-data-science-2e)。
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 获取有关我们的书籍和课程的新闻和信息，请访问[*https://oreilly.com*](https://oreilly.com)。
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在 LinkedIn 上找到我们：[*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Twitter 上关注我们：[*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia)
- en: 'Watch us on YouTube: [*https://www.youtube.com/oreillymedia*](https://www.youtube.com/oreillymedia)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在 YouTube 上关注我们：[*https://www.youtube.com/oreillymedia*](https://www.youtube.com/oreillymedia)
- en: Acknowledgments
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢
- en: This book isn’t just the product of Hadley, Mine, and Garrett but is the result
    of many conversations (in person and online) that we’ve had with many people in
    the R community. We’re incredibly grateful for all the conversations we’ve had
    with y’all; thank you so much!
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 本书不仅仅是 Hadley、Mine 和 Garrett 的产品，而是与 R 社区许多人（面对面和在线）进行的许多对话的结果。我们非常感激与大家的每一次交流；非常感谢！
- en: We’d like to thank our technical reviewers for their valuable feedback: Ben
    Baumer, Lorna Barclay, Richard Cotton, Emma Rand, and Kelly Bodwin.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要感谢我们的技术审阅者们提供的宝贵反馈：Ben Baumer、Lorna Barclay、Richard Cotton、Emma Rand 和 Kelly
    Bodwin。
- en: 'This book was written in the open, and many people contributed via pull requests.
    A special thanks to all 259 of you who contributed improvements via GitHub pull
    requests (in alphabetical order by username): @a-rosenberg, Tim Becker (@a2800276),
    Abinash Satapathy (@Abinashbunty), Adam Gruer (@adam-gruer), adi pradhan (@adidoit),
    A. s. (@Adrianzo), Aep Hidyatuloh (@aephidayatuloh), Andrea Gilardi (@agila5),
    Ajay Deonarine (@ajay-d), @AlanFeder, Daihe Sui (@alansuidaihe), @alberto-agudo,
    @AlbertRapp, @aleloi, pete (@alonzi), Alex (@ALShum), Andrew M. (@amacfarland),
    Andrew Landgraf (@andland), @andyhuynh92, Angela Li (@angela-li), Antti Rask (@AnttiRask),
    LOU Xun (@aquarhead), @ariespirgel, @august-18, Michael Henry (@aviast), Azza
    Ahmed (@azzaea), Steven Moran (@bambooforest), Brian G. Barkley (@BarkleyBG),
    Mara Averick (@batpigandme), Oluwafemi OYEDELE (@BB1464), Brent Brewington (@bbrewington),
    Bill Behrman (@behrman), Ben Herbertson (@benherbertson), Ben Marwick (@benmarwick),
    Ben Steinberg (@bensteinberg), Benjamin Yeh (@bentyeh), Betul Turkoglu (@betulturkoglu),
    Brandon Greenwell (@bgreenwell), Bianca Peterson (@BinxiePeterson), Birger Niklas
    (@BirgerNi), Brett Klamer (@bklamer), @boardtc, Christian (@c-hoh), Caddy (@caddycarine),
    Camille V Leonard (@camillevleonard), @canovasjm, Cedric Batailler (@cedricbatailler),
    Christina Wei (@christina-wei), Christian Mongeau (@chrMongeau), Cooper Morris
    (@coopermor), Colin Gillespie (@csgillespie), Rademeyer Vermaak (@csrvermaak),
    Chloe Thierstein (@cthierst), Chris Saunders (@ctsa), Abhinav Singh (@curious-abhinav),
    Curtis Alexander (@curtisalexander), Christian G. Warden (@cwarden), Charlotte
    Wickham (@cwickham), Kenny Darrell (@darrkj), David Kane (@davidkane9), David
    (@davidrsch), David Rubinger (@davidrubinger), David Clark (@DDClark), Derwin
    McGeary (@derwinmcgeary), Daniel Gromer (@dgromer), @Divider85, @djbirke, Danielle
    Navarro (@djnavarro), Russell Shean (@DOH-RPS1303), Zhuoer Dong (@dongzhuoer),
    Devin Pastoor (@dpastoor), @DSGeoff, Devarshi Thakkar (@dthakkar09), Julian During
    (@duju211), Dylan Cashman (@dylancashman), Dirk Eddelbuettel (@eddelbuettel),
    Edwin Thoen (@EdwinTh), Ahmed El-Gabbas (@elgabbas), Henry Webel (@enryH), Ercan
    Karadas (@ercan7), Eric Kitaif (@EricKit), Eric Watt (@ericwatt), Erik Erhardt
    (@erikerhardt), Etienne B. Racine (@etiennebr), Everett Robinson (@evjrob), @fellennert,
    Flemming Miguel (@flemmingmiguel), Floris Vanderhaeghe (@florisvdh), @funkybluehen,
    @gabrivera, Garrick Aden-Buie (@gadenbuie), Peter Ganong (@ganong123), Gerome
    Meyer (@GeroVanMi), Gleb Ebert (@gl-eb), Josh Goldberg (@GoldbergData), bahadir
    cankardes (@gridgrad), Gustav W Delius (@gustavdelius), Hao Chen (@hao-trivago),
    Harris McGehee (@harrismcgehee), @hendrikweisser, Hengni Cai (@hengnicai), Iain
    (@Iain-S), Ian Sealy (@iansealy), Ian Lyttle (@ijlyttle), Ivan Krukov (@ivan-krukov),
    Jacob Kaplan (@jacobkap), Jazz Weisman (@jazzlw), John Blischak (@jdblischak),
    John D. Storey (@jdstorey), Gregory Jefferis (@jefferis), Jeffrey Stevens (@JeffreyRStevens),
    蒋雨蒙 (@JeldorPKU), Jennifer (Jenny) Bryan (@jennybc), Jen Ren (@jenren), Jeroen
    Janssens (@jeroenjanssens), @jeromecholewa, Janet Wesner (@jilmun), Jim Hester
    (@jimhester), JJ Chen (@jjchern), Jacek Kolacz (@jkolacz), Joanne Jang (@joannejang),
    @johannes4998, John Sears (@johnsears), @jonathanflint, Jon Calder (@jonmcalder),
    Jonathan Page (@jonpage), Jon Harmon (@jonthegeek), JooYoung Seo (@jooyoungseo),
    Justinas Petuchovas (@jpetuchovas), Jordan (@jrdnbradford), Jeffrey Arnold (@jrnold),
    Jose Roberto Ayala Solares (@jroberayalas), Joyce Robbins (@jtr13), @juandering,
    Julia Stewart Lowndes (@jules32), Sonja (@kaetschap), Kara Woo (@karawoo), Katrin
    Leinweber (@katrinleinweber), Karandeep Singh (@kdpsingh), Kevin Perese (@kevinxperese),
    Kevin Ferris (@kferris10), Kirill Sevastyanenko (@kirillseva), Jonathan Kitt (@KittJonathan),
    @koalabearski, Kirill Müller (@krlmlr), Rafał Kucharski (@kucharsky), Kevin Wright
    (@kwstat), Noah Landesberg (@landesbergn), Lawrence Wu (@lawwu), @lindbrook, Luke
    W Johnston (@lwjohnst86), Kara de la Marck (@MarckK), Kunal Marwaha (@marwahaha),
    Matan Hakim (@matanhakim), Matthias Liew (@MatthiasLiew), Matt Wittbrodt (@MattWittbrodt),
    Mauro Lepore (@maurolepore), Mark Beveridge (@mbeveridge), @mcewenkhundi, mcsnowface,
    PhD (@mcsnowface), Matt Herman (@mfherman), Michael Boerman (@michaelboerman),
    Mitsuo Shiota (@mitsuoxv), Matthew Hendrickson (@mjhendrickson), @MJMarshall,
    Misty Knight-Finley (@mkfin7), Mohammed Hamdy (@mmhamdy), Maxim Nazarov (@mnazarov),
    Maria Paula Caldas (@mpaulacaldas), Mustafa Ascha (@mustafaascha), Nelson Areal
    (@nareal), Nate Olson (@nate-d-olson), Nathanael (@nateaff), @nattalides, Ned
    Western (@NedJWestern), Nick Clark (@nickclark1000), @nickelas, Nirmal Patel (@nirmalpatel),
    Nischal Shrestha (@nischalshrestha), Nicholas Tierney (@njtierney), Jakub Nowosad
    (@Nowosad), Nick Pullen (@nstjhp), @olivier6088, Olivier Cailloux (@oliviercailloux),
    Robin Penfold (@p0bs), Pablo E. Garcia (@pabloedug), Paul Adamson (@padamson),
    Penelope Y (@penelopeysm), Peter Hurford (@peterhurford), Peter Baumgartner (@petzi53),
    Patrick Kennedy (@pkq), Pooya Taherkhani (@pooyataher), Y. Yu (@PursuitOfDataScience),
    Radu Grosu (@radugrosu), Ranae Dietzel (@Ranae), Ralph Straumann (@rastrau), Rayna
    M Harris (@raynamharris), @ReeceGoding, Robin Gertenbach (@rgertenbach), Jajo
    (@RIngyao), Riva Quiroga (@rivaquiroga), Richard Knight (@RJHKnight), Richard
    Zijdeman (@rlzijdeman), @robertchu03, Robin Kohrs (@RobinKohrs), Robin (@Robinlovelace),
    Emily Robinson (@robinsones), Rob Tenorio (@robtenorio), Rod Mazloomi (@RodAli),
    Rohan Alexander (@RohanAlexander), Romero Morais (@RomeroBarata), Albert Y. Kim
    (@rudeboybert), Saghir (@saghirb), Hojjat Salmasian (@salmasian), Jonas (@sauercrowd),
    Vebash Naidoo (@sciencificity), Seamus McKinsey (@seamus-mckinsey), @seanpwilliams,
    Luke Smith (@seasmith), Matthew Sedaghatfar (@sedaghatfar), Sebastian Kraus (@sekR4),
    Sam Firke (@sfirke), Shannon Ellis (@ShanEllis), @shoili, Christian Heinrich (@Shurakai),
    S’busiso Mkhondwane (@sibusiso16), SM Raiyyan (@sm-raiyyan), Jakob Krigovsky (@sonicdoe),
    Stephan Koenig (@stephan-koenig), Stephen Balogun (@stephenbalogun), Steven M.
    Mortimer (@StevenMMortimer), Stéphane Guillou (@stragu), Sulgi Kim (@sulgik),
    Sergiusz Bleja (@svenski), Tal Galili (@talgalili), Alec Fisher (@Taurenamo),
    Todd Gerarden (@tgerarden), Tom Godfrey (@thomasggodfrey), Tim Broderick (@timbroderick),
    Tim Waterhouse (@timwaterhouse), TJ Mahr (@tjmahr), Thomas Klebel (@tklebel),
    Tom Prior (@tomjamesprior), Terence Teo (@tteo), @twgardner2, Ulrik Lyngs (@ulyngs),
    Shinya Uryu (@uribo), Martin Van der Linden (@vanderlindenma), Walter Somerville
    (@waltersom), @werkstattcodes, Will Beasley (@wibeasley), Yihui Xie (@yihui),
    Yiming (Paul) Li (@yimingli), @yingxingwu, Hiroaki Yutani (@yutannihilation),
    Yu Yu Aung (@yuyu-aung), Zach Bogart (@zachbogart), @zeal626, and Zeki Akyol (@zekiakyol).'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是在公开平台上编写的，许多人通过拉取请求做出了贡献。特别感谢所有 259 位通过 GitHub 拉取请求进行改进的人（按用户名字母顺序排列）：@a-rosenberg，Tim
    Becker（@a2800276），Abinash Satapathy（@Abinashbunty），Adam Gruer（@adam-gruer），adi
    pradhan（@adidoit），A. s.（@Adrianzo），Aep Hidyatuloh（@aephidayatuloh），Andrea Gilardi（@agila5），Ajay
    Deonarine（@ajay-d），@AlanFeder，Daihe Sui（@alansuidaihe），@alberto-agudo，@AlbertRapp，@aleloi，pete（@alonzi），Alex（@ALShum），Andrew
    M.（@amacfarland），Andrew Landgraf（@andland），@andyhuynh92，Angela Li（@angela-li），Antti
    Rask（@AnttiRask），LOU Xun（@aquarhead），@ariespirgel，@august-18，Michael Henry（@aviast），Azza
    Ahmed（@azzaea），Steven Moran（@bambooforest），Brian G. Barkley（@BarkleyBG），Mara Averick（@batpigandme），Oluwafemi
    OYEDELE（@BB1464），Brent Brewington（@bbrewington），Bill Behrman（@behrman），Ben Herbertson（@benherbertson），Ben
    Marwick（@benmarwick），Ben Steinberg（@bensteinberg），Benjamin Yeh（@bentyeh），Betul
    Turkoglu（@betulturkoglu），Brandon Greenwell（@bgreenwell），Bianca Peterson（@BinxiePeterson），Birger
    Niklas（@BirgerNi），Brett Klamer（@bklamer），@boardtc，Christian（@c-hoh），Caddy（@caddycarine），Camille
    V Leonard（@camillevleonard），@canovasjm，Cedric Batailler（@cedricbatailler），Christina
    Wei（@christina-wei），Christian Mongeau（@chrMongeau），Cooper Morris（@coopermor），Colin
    Gillespie（@csgillespie），Rademeyer Vermaak（@csrvermaak），Chloe Thierstein（@cthierst），Chris
    Saunders（@ctsa），Abhinav Singh（@curious-abhinav），Curtis Alexander（@curtisalexander），Christian
    G. Warden（@cwarden），Charlotte Wickham（@cwickham），Kenny Darrell（@darrkj），David
    Kane（@davidkane9），David（@davidrsch），David Rubinger（@davidrubinger），David Clark（@DDClark），Derwin
    McGeary（@derwinmcgeary），Daniel Gromer（@dgromer），@Divider85，@djbirke，Danielle Navarro（@djnavarro），Russell
    Shean（@DOH-RPS1303），Zhuoer Dong（@dongzhuoer），Devin Pastoor（@dpastoor），@DSGeoff，Devarshi
    Thakkar（@dthakkar09），Julian During（@duju211），Dylan Cashman（@dylancashman），Dirk
    Eddelbuettel（@eddelbuettel），Edwin Thoen（@EdwinTh），Ahmed El-Gabbas（@elgabbas），Henry
    Webel（@enryH），Ercan Karadas（@ercan7），Eric Kitaif（@EricKit），Eric Watt（@ericwatt），Erik
    Erhardt（@erikerhardt），Etienne B. Racine（@etiennebr），Everett Robinson（@evjrob），@fellennert，Flemming
    Miguel（@flemmingmiguel），Floris Vanderhaeghe（@florisvdh），@funkybluehen，@gabrivera，Garrick
    Aden-Buie（@gadenbuie），Peter Ganong（@ganong123），Gerome Meyer（@GeroVanMi），Gleb Ebert（@gl-eb），Josh
    Goldberg（@GoldbergData），bahadir cankardes（@gridgrad），Gustav W Delius（@gustavdelius），Hao
    Chen（@hao-trivago），Harris McGehee（@harrismcgehee），@hendrikweisser，Hengni Cai（@hengnicai），Iain（@Iain-S），Ian
    Sealy（@iansealy），Ian Lyttle（@ijlyttle），Ivan Krukov（@ivan-krukov），Jacob Kaplan（@jacobkap），Jazz
    Weisman（@jazzlw），John Blischak（@jdblischak），John D. Storey（@jdstorey），Gregory
    Jefferis（@jefferis），Jeffrey Stevens（@JeffreyRStevens），蒋雨蒙（@JeldorPKU），Jennifer（Jenny）Bryan（@jennybc），Jen
    Ren（@jenren），Jeroen Janssens（@jeroenjanssens），@jeromecholewa，Janet Wesner（@jilmun），Jim
    Hester（@jimhester），JJ Chen（@jjchern），Jacek Kolacz（@jkolacz），Joanne Jang（@joannejang），@johannes4998，John
    Sears（@johnsears），@jonathanflint，Jon Calder（@jonmcalder），Jonathan Page（@jonpage），Jon
    Harmon（@jonthegeek），JooYoung Seo（@jooyoungseo），Justinas Petuchovas（@jpetuchovas），Jordan（@jrdnbradford），Jeffrey
    Arnold（@jrnold），Jose Roberto Ayala Solares（@jroberayalas），Joyce Robbins（@jtr13），@juandering，Julia
    Stewart Lowndes（@jules32），Sonja（@kaetschap），Kara Woo（@karawoo），Katrin Leinweber（@katrinleinweber），Karandeep
    Singh（@kdpsingh），Kevin Perese（@kevinxperese），Kevin Ferris（@kferris10），Kirill Sevastyanenko（@kirillseva），Jonathan
    Kitt（@KittJonathan），@koalabearski，Kirill Müller（@krlmlr），Rafał Kucharski（@kucharsky），Kevin
    Wright（@kwstat），Noah Landesberg（@landesbergn），Lawrence Wu（@lawwu），@lindbrook，Luke
    W Johnston（@lwjohnst86），Kara de la Marck（@MarckK），Kunal Marwaha（@marwahaha），Matan
    Hakim（@matanhakim），Matthias Liew（@MatthiasLiew），Matt Wittbrodt（@MattWittbrodt），Mauro
    Lepore（@maurolepore），Mark Beveridge（@mbeveridge），@mcewenkhundi，mcsnowface，PhD（@mcsnowface），Matt
    Herman（@mfherman），Michael Boerman（@michaelboerman），Mitsuo Shiota（@mitsuoxv），Matthew
    Hendrickson（@mjhendrickson），@MJMarshall，Misty Knight-Finley（@mkfin7），Mohammed
    Hamdy（@mmhamdy），Maxim Nazarov（@mnazarov），Maria Paula Caldas（@mpaulacaldas），Mustafa
    Ascha（@mustafaascha），Nelson Areal（@nareal），Nate Olson（@nate-d-olson），Nathanael（@nateaff），@nattalides，Ned
    Western（@NedJWestern），Nick Clark（@nickclark1000），@nickelas，Nirmal Patel（@nirmalpatel），Nischal
    Shrestha（@nischalshrestha），Nicholas Tierney（@njtierney），Jakub Nowosad（@Nowosad），Nick
    Pullen（@nstjhp），@olivier6088，Olivier Cailloux（@oliviercailloux），Robin Penfold（@p0bs），Pablo
    E. Garcia（@pabloedug），Paul Adamson（@padamson），Penelope Y（@penelopeysm），Peter Hurford（@peterhurford），Peter
    Baumgartner（@petzi53），Patrick Kennedy（@pkq），Pooya Taherkhani（@pooyataher），Y. Yu（@PursuitOfDataScience），Radu
    Grosu（@radugrosu），Ranae Dietzel（@Ranae），Ralph Straumann（@rastrau），Rayna M Harris（@raynamharris），@ReeceGoding，
- en: Online Edition
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在线版本
- en: An online version of this book is available at the book’s [GitHub repository](https://oreil.ly/8GLe7).
    It will continue to evolve in between reprints of the physical book. The source
    of the book is available at [*https://oreil.ly/Q8z_O*](https://oreil.ly/Q8z_O).
    The book is powered by [Quarto](https://oreil.ly/_6LNH), which makes it easy to
    write books that combine text and executable code.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的在线版本可以在书的[GitHub仓库](https://oreil.ly/8GLe7)找到。在实体书重印之间，它将继续更新。书的源代码可以在[*https://oreil.ly/Q8z_O*](https://oreil.ly/Q8z_O)找到。这本书是由[Quarto](https://oreil.ly/_6LNH)驱动的，它使得编写结合文本和可执行代码的书籍变得简单。
- en: ^([1](introduction01.xhtml#idm44771332141712-marker)) If you’d like a comprehensive
    overview of all of RStudio’s features, see the [RStudio User Guide](https://oreil.ly/pRhEK).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](introduction01.xhtml#idm44771332141712-marker)) 如果您想全面了解RStudio的所有功能，请参阅[RStudio用户指南](https://oreil.ly/pRhEK)。
