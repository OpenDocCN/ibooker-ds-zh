- en: Chapter 8\. Generating and Selecting Features for a Time Series
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '-   第八章。为时间序列生成和选择特征'
- en: In the previous two chapters we examined methods of time series analysis that
    rely on using all the data points in a time series to fit a model. However, in
    preparation for the next chapter’s discussion of the application of machine learning
    to time series analysis, in this chapter we will study feature generation and
    selection for time series. If you are unfamiliar with the concept of feature generation,
    you will not remain so for long. It’s an intuitive process and one that enables
    a creative side to data analysis.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前两章中，我们探讨了依赖于使用时间序列中所有数据点来拟合模型的时间序列分析方法。然而，在为下一章讨论机器学习应用于时间序列分析做准备时，在本章中我们将学习时间序列的特征生成和选择。如果您对特征生成的概念不熟悉，那么很快就会了解了。这是一个直观的过程，使数据分析能够发挥创造性。
- en: Feature generation is the process of finding a quantitative way to encapsulate
    the most important traits of time series data into just a few numeric values and
    categorical labels. You are compressing the raw times series data into a shorter
    representation via a set of features to describe that time series (we’ll work
    through a quick example momentarily). For example, a very simple feature generation
    could describe every time series with its mean value and the number of time steps
    in the series. This would be one way of describing that time series without going
    through all the raw data step by step.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 特征生成是将时间序列数据的最重要特征量化为几个数字值和分类标签的过程。通过一组特征来压缩原始时间序列数据，以描述该时间序列（我们稍后会通过一个快速示例来解释）。例如，一个非常简单的特征生成可以用平均值和时间序列中的时间步数来描述每个时间序列。这是一种在不逐步处理所有原始数据的情况下描述时间序列的方法。
- en: The purpose of feature generation is to compress as much information about the
    full time series as possible into a few metrics or, alternately, to use those
    metrics to identify the most important information about the time series and discard
    the rest. This is important for machine learning methods, most of which were developed
    on nontemporal data but which can be fruitfully applied to time series problems,
    provided we can digest a time series into a properly formatted input. In this
    chapter we will focus particularly on packages that allow us to automatically
    generate commonly used time series features so there will be no need for us to
    reinvent or handcode them.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 特征生成的目的是尽可能多地压缩关于完整时间序列的信息到几个度量值中，或者用这些度量值来识别时间序列的最重要信息并丢弃其余部分。这对于机器学习方法非常重要，大多数机器学习方法是在非时间数据上开发的，但可以有效地应用于时间序列问题，前提是我们能将时间序列消化成适当格式的输入。在本章中，我们将特别关注允许我们自动生成常用时间序列特征的软件包，因此我们无需重新发明或手工编码它们。
- en: Once we have generated some putatively useful features, we must ensure that
    they are indeed useful. While you are unlikely to craft too many unhelpful features
    by hand, this is a problem you will run into when you use code that automatically
    generates a large number of features of a time series for downstream use in machine
    learning. For this reason, we must inspect the features, once generated, to see
    which can be discarded in subsequent analyses.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们生成了一些有用的特征，我们必须确保它们确实有用。虽然手工制作过多无用的特征的可能性不大，但当您使用自动生成大量时间序列特征的代码时，就会遇到这个问题。因此，一旦生成了特征，我们必须检查它们，看看哪些可以在后续分析中丢弃。
- en: Traditional machine learning models were not originally developed with time
    series in mind, and so they do not automatically lend themselves to time series
    analytical applications. However, one way to make these models work with temporal
    data is feature generation. For example, by describing a univariate time series
    not with a series of numbers detailing the step-by-step outputs of a process but
    rather by describing it with a set of features, we can access methods designed
    for cross-sectional data.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的机器学习模型最初并未考虑时间序列，因此它们并不自动适用于时间序列分析应用。然而，使这些模型能够处理时间数据的一种方法是特征生成。例如，通过不是用一系列详细描述过程逐步输出的数字来描述单变量时间序列，而是用一组特征来描述它，我们可以访问为横截面数据设计的方法。
- en: In this chapter we will first work through a very simple example of feature
    generation for a short time series. We will then review feature generation packages
    for time series, both in R and Python. Finally, we’ll work through an example
    of automated feature generation and feature selection. After reading this chapter
    you will have all the skills needed to preprocess a time series data set for downstream
    machine learning applications in [Chapter 9](ch09.html#ml_for_time_series_chapter).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将首先通过一个非常简单的时间序列特征生成示例来工作。然后，我们将审查时间序列的特征生成包，无论是在R还是Python中。最后，我们将通过一个自动特征生成和特征选择示例来工作。阅读完本章后，您将掌握为下游机器学习应用程序预处理时间序列数据集所需的所有技能，在[第9章](ch09.html#ml_for_time_series_chapter)中介绍。
- en: Introductory Example
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍性示例
- en: Imagine the past week’s morning, midday, and evening temperatures were as shown
    in [Table 8-1](#table-8-1).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下过去一周的早晨、中午和晚上的温度如[表8-1](#table-8-1)所示。
- en: Table 8-1\. Temperatures for the past week
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 表8-1\. 过去一周的温度
- en: '| Time | Temperature (°F) |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| 时间 | 温度（°F） |'
- en: '| --- | --- |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Monday morning | 35 |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 星期一早晨 | 35 |'
- en: '| Monday midday | 52 |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 星期一中午 | 52 |'
- en: '| Monday evening | 15 |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 星期一晚上 | 15 |'
- en: '| Tuesday morning | 37 |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 星期二早晨 | 37 |'
- en: '| Tuesday midday | 52 |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 星期二中午 | 52 |'
- en: '| Tuesday evening | 15 |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 星期二晚上 | 15 |'
- en: '| Wednesday morning | 37 |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 星期三早晨 | 37 |'
- en: '| Wednesday midday | 54 |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 星期三中午 | 54 |'
- en: '| Wednesday evening | 16 |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 星期三晚上 | 16 |'
- en: '| Thursday morning | 39 |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 星期四早晨 | 39 |'
- en: '| Thursday midday | 51 |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 星期四中午 | 51 |'
- en: '| Thursday evening | 12 |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 星期四晚上 | 12 |'
- en: '| Friday morning | 41 |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 星期五早晨 | 41 |'
- en: '| Friday midday | 55 |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 星期五中午 | 55 |'
- en: '| Friday evening | 20 |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 星期五晚上 | 20 |'
- en: '| Saturday morning | 43 |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 星期六早晨 | 43 |'
- en: '| Saturday midday | 58 |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 星期六中午 | 58 |'
- en: '| Saturday evening | 22 |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 星期六晚上 | 22 |'
- en: '| Sunday morning | 46 |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 星期日早晨 | 46 |'
- en: '| Sunday midday | 61 |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 星期日中午 | 61 |'
- en: '| Sunday evening | 35 |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 星期日晚上 | 35 |'
- en: 'You could plot this data and you’d see elements of periodicity (a daily cycle)
    and also a trend of overall increasing temperatures. But we can’t store an image
    of a plot in a database, and most methods that accept a picture as an input are
    data-intensive and seek to strip down the picture into summary metrics. So we
    should do the summary metrics ourselves. Instead of describing the 21 numbers
    in [Table 8-1](#table-8-1) as a time series, we could describe the series with
    a few words and numbers:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以绘制这些数据，您会看到周期性（每日循环）的元素，以及总体温度上升的趋势。但我们不能将绘图图像存储在数据库中，大多数接受图像作为输入的方法都是数据密集型的，并试图将图像剥离为摘要度量。因此，我们应该自己做摘要度量。与其将[表8-1](#table-8-1)中的21个数字描述为时间序列，我们可以用几个词和数字来描述这个系列：
- en: Daily/periodic
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日常/周期性
- en: Increasing trend; we could make this more quantitative by computing a slope
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 递增趋势；通过计算斜率可以使这一趋势更加量化
- en: Mean values for each of morning, midday, and evening
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 早晨、中午和晚上的均值
- en: By doing so, we’d summarize the 21-point time series with 2 to 5 numbers—quite
    a bit of data compression without losing too much detail. This is a simple case
    of feature generation. Then, feature *selection* would entail paring away any
    features that were not descriptive enough to justify inclusion. What justifies
    inclusion will depend on our downstream use of the features.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，我们可以用2到5个数字来总结这个21点时间序列——这是一种在不丢失太多细节的情况下进行的数据压缩。这是特征生成的一个简单案例。然后，特征*选择*将涉及剔除任何不能充分描述以证明其包含必要性的特征。决定包含什么将取决于我们对特征的下游使用。
- en: General Considerations When Computing Features
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算特征时的一般注意事项
- en: As with any aspect of analysis, when you are computing time series features
    for a time series data set, you will want to think through whether your analysis
    makes sense and whether the effort you put into generating features is more likely
    to lead to overfitting from a surfeit of features than it is to lead to meaningful
    insights.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 就分析的任何方面而言，在计算时间序列数据集的时间序列特征时，您将希望思考您的分析是否合理，以及您投入生成特征的努力是否更可能因特征过多而导致过拟合，而不是产生有意义的见解。
- en: The best approach is to develop a set of potentially useful features as you
    run through time series exploration and cleaning. As you visualize data and think
    about what distinguishes different time series in the same data set or different
    time periods in the same time series, you will develop ideas about what kinds
    of measurements would be useful for labeling or predicting a time series. You
    can also draw useful assistance from any background knowledge you have about a
    system or even a working hypotheses you’d like to test with subsequent analysis.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳方法是在进行时间序列探索和清洗时开发一组潜在有用的特征。当您可视化数据并考虑什么区分了同一数据集中的不同时间序列或同一时间序列中的不同时间段时，您会得出关于哪种测量方法对于标记或预测时间序列有用的想法。您还可以从您对系统的任何背景知识或甚至您想通过后续分析测试的工作假设中获得有用的帮助。
- en: Next we discuss a few distinct concerns you should keep in mind when generating
    time series features.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论在生成时间序列特征时需要牢记的几个不同考虑因素。
- en: The Nature of the Time Series
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间序列的本质
- en: As you decide what time series features to generate, you need to keep in mind
    the underlying attributes of your time series, which you determined during data
    exploration and cleaning.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当您决定生成时间序列特征时，需要牢记您在数据探索和清洗过程中确定的时间序列的基本属性。
- en: Stationarity
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 平稳性
- en: Stationarity is one consideration. Many time series features assume stationarity
    and are useless unless the underlying data is stationary or at least ergodic.
    For example, using the mean of a time series as a feature is practical only where
    the time series is stationary so that the idea of a mean makes sense. This value
    is not very meaningful where we have a nonstationary time series, as the value
    measured as the mean in that case is more or less an accident, a result of too
    many entangled processes, such as a trend or a seasonal cycle.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 平稳性是一个考虑因素。许多时间序列特征假设平稳性，并且在底层数据不平稳或至少不遍历时是无用的。例如，只有在时间序列是平稳的情况下，使用时间序列的平均值作为特征才是实际的，以便平均值的概念有意义。在我们有一个非平稳时间序列的情况下，这个值作为平均值测量的意义不大，因为这种情况下的值更多或少是一个偶然事件，是太多交织在一起的过程（如趋势或季节循环）的结果。
- en: Stationary Versus Ergodic Time Series
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 平稳时间序列与遍历时间序列
- en: An *ergodic* time series is one in which every (reasonably large) subsample
    is equally representative of the series. This is a weaker label than stationarity,
    which requires that these subsamples have equal mean and variance. Ergodicity
    requires that each slice in time is “equal” in containing information about the
    time series, but not necessarily equal in its statistical measurements (mean and
    variance). You can find a helpful discussion on [StackExchange](https://perma.cc/5GW4-ZENE).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*遍历* 时间序列是一个在每个（相当大的）子样本都平等代表序列的序列。这是一个比平稳性更弱的标签，需要这些子样本具有相等的均值和方差。遍历性要求时间中的每个切片都“相等”，包含有关时间序列信息，但其统计测量（均值和方差）不一定相等。您可以在[StackExchange](https://perma.cc/5GW4-ZENE)找到有关此的有益讨论。'
- en: Length of time series
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间序列的长度
- en: Another consideration for feature generation is the length of the time series.
    Some features may be sensible for a stationary time series but become unstable
    as the length of the time series increases, such as the minimum and maximum value
    of the series. For the same underlying process, a longer time series will likely
    measure more extreme maximum and minimum values than a shorter time series produced
    by the same process, simply because there were more opportunities for data collection.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 特征生成的另一个考虑因素是时间序列的长度。对于平稳时间序列而言，某些特征可能是合理的，但随着时间序列长度的增加，这些特征可能变得不稳定，例如时间序列的最小值和最大值。对于相同的基础过程，较长的时间序列可能会测量比由同一过程产生的较短时间序列更极端的最大和最小值，仅仅因为有更多的数据收集机会。
- en: Domain Knowledge
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 领域知识
- en: Domain knowledge should be key for time series feature generation where you
    are lucky enough to have some insights. Some examples of how domain knowledge
    is applied to generate specific time series features are provided later in this
    chapter, but for now we’ll focus on the more general point.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 领域知识应该是时间序列特征生成的关键，如果您有幸有一些见解的话。如何应用领域知识生成特定的时间序列特征的一些示例将在本章后面提供，但现在我们将专注于更一般的观点。
- en: For example, if you are working with a physics time series, you should quantify
    features that make sense on the timescale of the system you are studying, as well
    as make sure that the features you select would not be unduly influenced by the
    characteristics of, say, the error of a sensor rather than the characters of an
    underlying system.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你正在处理物理时间序列，你应该量化在你研究的系统时间尺度上有意义的特征，同时确保你选择的特征不会过度受传感器误差的特征影响而非底层系统的特征影响。
- en: As another example, imagine you are working with data from a specific financial
    market. To ensure financial stability, this market imposes maximum price changes
    in a given day. If the price changes too much, the market shuts down. You might
    consider whether, in this context, to generate a feature indicating the maximum
    price seen on a given day.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，假设你正在处理来自特定金融市场的数据。为了确保金融稳定，该市场规定了一天内的最大价格变动。如果价格变动过大，市场将关闭。在这种情况下，你可以考虑生成一个特征，指示某一天的最高价格。
- en: External Considerations
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 外部考虑因素
- en: The extent of your computational resources and associated storage resources
    is also important. Likewise, your motivation for generating features matters.
    Are you generating features that will be stored so that you can throw out voluminous
    raw data? Or are you merely computing the features for a single analysis and planning
    to keep only the raw data?
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你的计算资源及相关存储资源的范围同样重要。同样重要的是你生成特征的动机。你是生成用于存储以便能够丢弃大量原始数据的特征吗？还是仅仅计算单个分析的特征并计划仅保留原始数据？
- en: The purpose of your time series feature generation may influence how many features
    you decide to compute and whether you should contemplate particularly computationally
    demanding features. This may also depend on the overall size of the data set you
    are analyzing. For a small data set all these decisions will be low stakes, but
    in the case of extremely large time series data sets, you may risk embarking on
    a feature generation task that will be left half-done, wasting computational energy
    and coding.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你的时间序列特征生成的目的可能会影响你决定计算多少特征以及是否应考虑特别计算密集的特征。这也可能取决于你正在分析的数据集的整体大小。对于小数据集，所有这些决策都将风险较低，但对于极大的时间序列数据集，你可能会冒着开始一项特征生成任务但未完成的风险，浪费计算能量和编码。
- en: After considering all these factors, try putting together a list of features
    and running them on a small data set to get an idea of how fast or slow they run.
    If the small set runs too slowly, you should pare down your time series substantially
    before continuing your analysis. Likewise, you might consider exploring the usefulness
    of computationally taxing features on a subset of your data before undertaking
    an analysis with the full data set.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑了所有这些因素之后，尝试将特征列表组合在一起，并在一个小数据集上运行它们，以了解它们的运行速度。如果小数据集运行速度太慢，你应该在继续分析之前大幅减少你的时间序列。同样地，你可能需要在数据子集上探索计算负担特征的实用性，然后再使用完整数据集进行分析。
- en: A Catalog of Places to Find Features for Inspiration
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个灵感来源目录，以寻找特征的地方
- en: 'Time series feature generation is limited only by your data, your imagination,
    your coding skill, and your domain knowledge. So long as you can think of a reasonably
    general and well-defined way to quantify the behavior of a time series, you can
    generate a feature. Some simple and oft-used time series features amount to the
    same summary statistical functions you will have used in other applications, such
    as:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列特征生成仅受你的数据、想象力、编码技能和领域知识的限制。只要你能想出一个合理一般且定义明确的方法来量化时间序列的行为，你就可以生成一个特征。一些简单且经常使用的时间序列特征等同于你在其他应用中使用过的同样的汇总统计函数，例如：
- en: Mean and variance
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 均值和方差
- en: Maximum and minimum
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大值和最小值
- en: Difference between last and first values
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后值与第一个值之间的差异
- en: 'You will also visually identify other features that are more computationally
    challenging to compute but are often useful. Some examples include:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你还将直观地识别其他更具有挑战性的特征，虽然它们在计算上更具有挑战性，但通常是有用的。一些例子包括：
- en: Number of local maxima and minima
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 局部极大值和极小值的数量
- en: Smoothness of the time series
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列的平滑性
- en: Periodicity and autocorrelation of the time series
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列的周期性和自相关
- en: In such cases, you will need to make some implementation definitions, as there
    are different ways to identify these commonly used features. It will help to keep
    your own personal library of feature generation code available, but you may also
    want to look into feature generation libraries for time series data, particularly
    as you become interested in the more computationally demanding features. In such
    cases, you should look for an excellent implementation such that the code is both
    reliable and efficient.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，您需要对实现定义进行一些定义，因为有不同的方法来识别这些常用特征。保持自己的特征生成代码库可用会很有帮助，但您可能还希望查看时间序列数据特征生成库，特别是在您对更具计算要求的特征感兴趣时。在这种情况下，您应该寻找一个优秀的实现，以确保代码既可靠又高效。
- en: Now we’ll turn to the use of time series feature generation libraries, paying
    particular attention to the wide range of features you can benefit from via automatic
    feature generation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将转向使用时间序列特征生成库，特别关注通过自动特征生成可以获益的广泛特征范围。
- en: Open Source Time Series Feature Generation Libraries
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开源时间序列特征生成库
- en: There have been many efforts to automate the creation of time series features
    because they tend to be interesting, descriptive, and even predictive across domains.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 曾有多次尝试自动化生成时间序列特征，因为它们往往在各个领域中具有趣味性、描述性，甚至预测性。
- en: The tsfresh Python module
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: tsfresh Python 模块
- en: 'One particularly compelling example of automatic feature generation in Python
    is the `tsfresh` module, which implements a large and general set of features.
    We can get a sense of the breadth of [implemented features](https://perma.cc/2RCC-DJLR)
    by considering some of the general categories of features that are available.
    These include:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Python 中自动特征生成的一个特别引人注目的例子是 `tsfresh` 模块，它实现了大量通用特征。通过考虑一些可用的一般特征类别，我们可以了解到
    [实现的特征](https://perma.cc/2RCC-DJLR) 的广度。这些包括：
- en: Descriptive statistics
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 描述性统计
- en: 'These are driven by the traditional statistical time series methodologies we
    studied in [Chapter 6](ch06.html#statistical_model_for_time_series), including:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这些驱动了我们在 [第 6 章](ch06.html#statistical_model_for_time_series) 中学习的传统统计时间序列方法，包括：
- en: An Augmented Dickey–Fuller test value
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增广的迪基-富勒检验值
- en: An AR(k) coefficient
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AR(k) 系数
- en: The autocorrelation for a lag, *k*
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滞后为 *k* 的自相关
- en: Physics-inspired indicators of nonlinearity and complexity
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 物理启发的非线性和复杂性指标
- en: 'This category includes:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 该类别包括：
- en: The function `c3()`, which is a proxy for calculating the expected value of
    <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><msup><mi>L</mi> <mn>2</mn></msup>
    <mrow><mo>(</mo> <msup><mi>X</mi> <mn>2</mn></msup> <mo>)</mo></mrow> <mo>×</mo>
    <mi>L</mi> <mrow><mo>(</mo> <mi>X</mi> <mo>)</mo></mrow> <mo>×</mo> <mi>X</mi></mrow></math>
    ( <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>L</mi></math> is the lag
    operator). This has been proposed as a measure of *nonlinearity* in a time series.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数`c3()`是计算 <math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><msup><mi>L</mi>
    <mn>2</mn></msup> <mrow><mo>(</mo> <msup><mi>X</mi> <mn>2</mn></msup> <mo>)</mo></mrow>
    <mo>×</mo> <mi>L</mi> <mrow><mo>(</mo> <mi>X</mi> <mo>)</mo></mrow> <mo>×</mo>
    <mi>X</mi></mrow></math>（其中 <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>L</mi></math>
    是滞后算子）期望值的代理。这被提议作为时间序列中 *非线性* 的一种度量。
- en: The function `cid_ce()`, which calculates the square root of the sum from 0
    to n – 2 × lag of (*x[i] – x[i] + 1*)². This has been proposed as a measure of
    the *complexity* of a time series.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数`cid_ce()`计算从 0 到 n – 2 × 滞后的和的平方根，即 (*x[i] – x[i+1]*)²。这被提议作为时间序列 *复杂性* 的一种度量。
- en: The function `friedrich_coefficients()`, returns coefficients of a model fitted
    to describe complex nonlinear motion.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数`friedrich_coefficients()`返回拟合模型描述复杂非线性运动的系数。
- en: History-compressing counts
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 历史压缩计数
- en: 'This category comprises features such as:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 该类别包括诸如：
- en: The sum of the values in a time series that occur more than once
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 出现多次的时间序列值之和
- en: The length of the longest consecutive subsequence that is above or below the
    mean
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最长连续子序列的长度，该子序列高于或低于均值
- en: The earliest occurrence within the time series of the minimum or maximum value
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列中最小值或最大值的最早出现
- en: 'A module like `tsfresh` can help you save time and choose efficient implementations
    for feature selection. It can also educate you about ways of describing data that
    could be relevant but that you might not have come across in your own research.
    There are numerous other benefits to using a module, as there always are when
    you combine your analysis with open source, well-vetted tools, including:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于`tsfresh`的模块可以帮助您节省时间并选择有效的特征选择实现。它还可以教育您描述数据的方式，这可能与您自己的研究不同但相关。使用模块还有许多其他好处，特别是当您将分析与开源、经过充分验证的工具结合使用时。
- en: There is no need to reinvent the wheel when you are computing standard features.
    By using a shared library, you have the assurance of some accuracy checking by
    other users, rather than doubting your own code and having to verify it.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在计算标准特征时，没有必要重新发明轮子。通过使用共享库，您可以确保其他用户进行了一些准确性检查，而不是怀疑自己的代码并需要验证它。
- en: A library such as this one provides a framework for calculating features, not
    just a laundry list of features. For example, `tsfresh` has a feature calculator
    class, which you can use to extend this library for your own purposes but with
    the benefits of a systematic framework.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此类库提供了计算特征的框架，而不仅仅是特征列表。例如，`tsfresh`具有特征计算器类，您可以使用它来为自己的目的扩展此库，同时享受系统化框架的好处。
- en: This library is designed to hook up with downstream consumers of features, most
    importantly with `sklearn`, so that your features can easily be passed to machine
    learning models.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此库设计用于与特征的下游消费者连接，最重要的是与`sklearn`连接，以便您的特征可以轻松传递给机器学习模型。
- en: The `tsfresh` library has a particularly technical flavor in that many of the
    features are derived from ideas about analyzing scientific experimental data.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`tsfresh`库在技术上具有特别的风格，其中许多特征源于对科学实验数据分析思想的理解。'
- en: The Cesium time series analysis platform
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Cesium时间序列分析平台
- en: 'A more approachable but equally extensive catalog of generated features is
    the list implemented in the [Cesium](http://cesium-ml.org/docs/index.html) library.
    The current list is available in its [documentation](http://cesium-ml.org/docs/feature_table.html),
    and next we pick out a few interesting features for discussion and inspection.
    The general categories are broken down in the [source code](https://perma.cc/8HX4-MXBU),
    but we break them down further here:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更易接近但同样广泛的生成特征目录是[Cesium](http://cesium-ml.org/docs/index.html)库中实现的列表。当前列表在其[文档](http://cesium-ml.org/docs/feature_table.html)中可用，并且接下来我们选择一些有趣的特征进行讨论和检查。一般类别在[源代码](https://perma.cc/8HX4-MXBU)中分解，但我们在此进一步细分：
- en: 'Features that describe the overall distribution of the data values, without
    regard to its temporal relationships. This category can include a diverse set
    of features that are all nonetheless time-agnostic:'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述数据值的整体分布的特征，而不考虑其时间关系。此类别可以包括多种特征，尽管它们都是时间无关的：
- en: How many local peaks there are in a histogram of the data?
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据直方图中有多少个局部峰值？
- en: What percentage of the data points are within a fixed window of values close
    to the median of the data?
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据点中有多少百分比落在接近数据中位数的固定值窗口内？
- en: 'Features that describe the distribution of the timing of data:'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述数据时间分布的特征：
- en: Features that take the distribution of time between measurements as their own
    distribution and compute similar statistics to those just described, now on the
    distribution of time differences rather than data values
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以时间测量之间的分布为其自身分布，并计算类似于刚刚描述的统计量的特征，现在是在时间差异的分布上而不是数据值上
- en: Features that compute the probability that the next observation will occur within
    *n* time steps given the observed distribution
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算下一个观测值在*n*个时间步骤内发生的概率的特征，考虑到观察到的分布
- en: Features that describe measures of the periodicity of the behavior within the
    time series. Often these features are associated with the *Lomb-Scargle periodogram*.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述时间序列行为周期性度量的特征。通常，这些特征与*Lomb-Scargle周期图*相关联。
- en: The features just described can be computed either over the entire time series
    or as rolling or expanding window functions. Given what we learned in earlier
    chapters about the mechanics of coding up rolling and expanding window functions,
    we could certainly implement these features ourselves, and we are in a good position
    to understand the documentation and meaning of what this library does. In this
    case, we would be applying rolling window functions to summarize data rather than
    to clean it. The same techniques in time series analysis come into use in many
    different but equally useful cases.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 刚刚描述的特征可以计算为整个时间序列或作为滚动或扩展窗口函数。考虑到我们在早期章节中学到的关于编写滚动和扩展窗口函数的机制，我们当然可以自己实现这些特征，并且我们有能力理解文档和这个库所做的事情的含义。在这种情况下，我们将应用滚动窗口函数来总结数据，而不是清理数据。时间序列分析中的相同技术在许多不同但同样有用的情况下使用。
- en: The `cesium` library provides supplementary functionality in addition to feature
    generation. For example, it includes a web-based GUI to perform feature generation
    and also integrates with `sklearn`.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`cesium`库提供了除特征生成外的补充功能。例如，它包括一个基于Web的GUI来执行特征生成，并且还与`sklearn`集成。'
- en: If you try these libraries on your data, you will notice that time series generation
    is extremely time consuming. For this reason, you should think carefully about
    how many features you need to generate for your data and when it truly makes sense
    to automatically generate features rather than thoughtfully developing your own.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在自己的数据上尝试这些库，您会注意到时间序列生成非常耗时。因此，您应该仔细考虑您需要为数据生成多少特征，以及在何时自动生成特征比仔细开发自己的特征更有意义。
- en: Many of the features generated by these libraries are computationally taxing
    and—given how extensive the lists of features are—will often not address points
    of interest for the question you are trying to answer. With some domain knowledge,
    you may even recognize that a particular kind of feature is irrelevant, noisy,
    or not predictive. Do not calculate these useless features unnecessarily. It will
    slow down your entire analysis without adding any clarity. Automatic feature generation
    libraries are useful but should be used judiciously rather than indiscriminately.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这些库生成的许多特征在计算上是繁重的，并且——考虑到特征列表的广泛程度——通常不会解决您尝试回答的问题的关键点。通过一些领域知识，您甚至可能认识到某种特征是无关的、噪音的或不具有预测性的。不要无谓地计算这些无用的特征。这样做会减慢整个分析过程，而不会增加清晰度。自动特征生成库是有用的，但应该谨慎使用，而不是肆意使用。
- en: R’s tsfeatures package
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: R的`tsfeatures`包
- en: '`tsfeatures`, developed by Rob Hyndman et al., is a convenient R package for
    generating a variety of commonly used and useful time series features. The documentation
    includes a listing of the features, which include helpful functions such as:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '`tsfeatures`，由Rob Hyndman等人开发，是一个方便的R包，用于生成各种常用和有用的时间序列特征。文档包括特征清单，其中包括以下有用的函数：'
- en: '`acf_features()` and `pacf_features()`, which each compute a number of related
    values given a general sense of how important autocorrelation is in the behavior
    of a series. For the `acf_features()` function, the documentation describes the
    following return values: “A vector of 6 values: first autocorrelation coefficient
    and sum of squared of first 10 autocorrelation coefficients of original series,
    first-differenced series, and twice-differenced series. For seasonal data, the
    autocorrelation coefficient at the first seasonal lag is also returned.”'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`acf_features()` 和 `pacf_features()`，它们分别计算与系列行为中自相关的重要性相关的一些相关值。对于`acf_features()`函数，文档描述了以下返回值：“一个包含6个值的向量：原始系列、一阶差分系列和两阶差分系列的第一个自相关系数和前10个自相关系数平方和。对于季节性数据，还返回第一个季节性滞后的自相关系数。”'
- en: '`lumpiness()` and `stability()`, which are tiled window–driven functions, and
    `max_level_shift()` and `max_var_shift()`, which are rolling window–driven functions.
    In each of these cases differences and variety-measuring statistics are applied
    to values measured on either overlapping (rolling) or nonoverlapping (tiled) windows
    of the time series.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lumpiness()` 和 `stability()`，这些是瓦片窗口驱动的函数，以及 `max_level_shift()` 和 `max_var_shift()`，这些是滚动窗口驱动的函数。在每种情况下，都会对时间序列的重叠（滚动）或非重叠（瓦片）窗口上测量的值应用差异和多样性测量统计量。'
- en: '[`unitroot_kpss()`](https://perma.cc/WF3Y-7MDJ) and [`unitroot_pp()`](https://perma.cc/54XY-4HWJ).'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`unitroot_kpss()`](https://perma.cc/WF3Y-7MDJ) 和 [`unitroot_pp()`](https://perma.cc/54XY-4HWJ)。'
- en: 'The `tsfeatures` package usefully consolidates and includes work from a variety
    of academic projects related to studying time series features, as well as from
    other ongoing efforts to improve the process of creating time series features
    that are useful in a variety of domains. These include:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`tsfeatures` 包有用地整合并包括了来自多个学术项目的时间序列特征研究，以及其他持续改进的努力，目的是创建在各种领域中有用的时间序列特征。这些包括：'
- en: '`compengine()` computes the same time series features developed by the comp-engine.org
    project, which have been found to be helpful across a wide variety of time series
    data from many domains.^([1](ch08.html#idm45576032996264))'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`compengine()` 计算了由 comp-engine.org 项目开发的相同时间序列特征，这些特征在许多领域的时间序列数据中被发现是有帮助的。^([1](ch08.html#idm45576032996264))'
- en: 'A number of features borrowed from the `hctsa` [package](https://github.com/benfulcher/hctsa),
    which is intended to run highly comparative time series analysis in Matlab. Some
    of these features are in: `autocorr_features()`, `firstmin_ac()`, `pred_features()`,
    and `trev_num()`. You will also find others from reading the documentation.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些特征借鉴自 `hctsa` [包](https://github.com/benfulcher/hctsa)，该包旨在在 Matlab 中运行高度比较的时间序列分析。其中一些特征包括：`autocorr_features()`、`firstmin_ac()`、`pred_features()`
    和 `trev_num()`。你还可以从文档中找到其他特征。
- en: The [`tsfeatures` documentation](https://perma.cc/Y8E9-9XCK) also includes helpful
    illustrations of the uses and outputs of each of the feature-generating functions,
    and an extensive bibliography linking to related statistical and machine learning
    work on the time series feature set available in the package.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[`tsfeatures` 文档](https://perma.cc/Y8E9-9XCK) 还包括每个生成特征函数的用途和输出的有用示例，以及广泛的参考文献，链接到与该包中提供的时间序列特征集相关的统计学和机器学习工作。'
- en: Domain-Specific Feature Examples
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特定领域特征示例
- en: Another source of inspiration can come from domain-specific features that have
    been developed for a variety of time series data. Often these features have been
    developed over decades, either from heuristics that empirically work even if they
    are not well understood or from scientific knowledge about how a system’s underlying
    mechanics work.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个灵感来源可以来自为各种时间序列数据开发的特定领域特征。通常这些特征已经发展了几十年，要么来自经验性能够工作但不被很好理解的启发式方法，要么来自对系统底层机制如何工作的科学知识。
- en: 'Next we review some domain-specific features for two kinds of time series data:
    financial and healthcare.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将回顾两类时间序列数据（金融和医疗）的一些特定领域特征。
- en: Technical stock market indicators
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 技术股市指标
- en: Technical stock market indicators are probably the most widely documented and
    formalized sets of indicators used for a domain-specific time series application.
    Economists studying time series data over the last century have an extensive list
    of features they commonly use to quantify time series in the financial markets
    and make predictions. Even if you have no interest in the financial markets, this
    list is inspirational in showing how a domain-specific list of features can also
    be quite extensive, descriptive, and creative.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 技术股市指标可能是用于特定领域时间序列应用的最广泛记录和正式化的指标集。经济学家在过去一个世纪研究时间序列数据时，有一套他们常用的功能列表，用于量化金融市场的时间序列并进行预测。即使你对金融市场没有兴趣，这个列表也能启发人们看到，特定领域的特征列表也可以非常广泛、描述性和创造性。
- en: A nonexhaustive list of these features is included here so that you can get
    an idea of how complex and highly specific to the financial markets these indicators
    are. Given the complexity, it’s no surprise that people can spend their entire
    career attempting to understand how these “signals” can forecast the rise and
    fall of the financial markets.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你了解这些指标有多复杂且高度特定于金融市场，这里包含了一个非详尽列表。考虑到其复杂性，人们花费整个职业生涯试图理解这些“信号”如何预测金融市场的涨跌。
- en: Relative Strength Index (RSI)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 相对强弱指数（RSI）
- en: This measure is equal to 100 – 100 */* (1 + *RS*) where *RS* is the ratio of
    the mean gain during an “up” period (rising prices) divided by the mean loss during
    a “down” period (decreasing prices), and the lookback period for these up and
    down periods is an input parameter, so that you can have different RSI values
    for different lookback periods. Traders have developed rules of thumb about what
    cutoff RSI values indicate that an asset is undervalued or overvalued relative
    to its true worth. The RSI is known as a “momentum indicator” because it relies
    on measures of an asset’s movement.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这个测量值等于100 - 100 */*（1 + *RS*），其中*RS*是“上升”期间（价格上涨）平均增益与“下降”期间（价格下跌）平均损失的比率，这些上升和下降期间的回顾期是一个输入参数，因此可以对不同的回顾期获得不同的RSI值。交易员已经制定了关于RSI值截断的经验法则，指示资产相对真实价值是被低估还是被高估。RSI被称为“动量指标”，因为它依赖于资产运动的测量。
- en: Moving Average Convergence/Divergence (MACD)
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 移动平均收敛/发散（MACD）
- en: 'This indicator is itself composed of three time series:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这个指标本身由三个时间序列组成：
- en: The MACD time series is a time series of the difference between a short-term
    exponential moving average of the asset (“fast”) and a long-term exponential moving
    average of the asset (“slow”).
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MACD时间序列是资产短期指数移动平均值（“快速”）与资产长期指数移动平均值（“慢速”）之间的差异时间序列。
- en: The “average” time series is an exponential moving average of the MACD time
    series.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “平均”时间序列是MACD时间序列的指数移动平均值。
- en: The “divergence” time series is the difference between the MACD time series
    and the “average” time series. This is the value that is usually used for making
    financial forecasts. The other input series (MACD and average) are usually only
    prepared to create the “divergence” series.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “分歧”时间序列是MACD时间序列与“平均”时间序列之间的差异。这通常是用于制定财务预测的值。其他输入系列（MACD和平均值）通常仅准备用于创建“分歧”系列。
- en: Chaikin Money Flow (CMF)
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Chaikin货币流（CMF）
- en: 'This indicator measures the direction in which spending is trending. To calculate
    it:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 这个指标衡量支出趋势的方向。要计算它：
- en: 'Calculate the money flow multiplier: ((*Close – Low*) – (*High – Close*))*/*(*High
    – Low*).'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算资金流乘数：((*Close - Low*) - (*High - Close*))/*(*High - Low*)。
- en: Calculate the money flow volume, which is the day’s trading volume multiplied
    by the money flow multiplier.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算资金流量，即当天的交易量乘以资金流乘数。
- en: Sum this money flow volume for a particular period of days and divide it by
    the volume for that same period of days. This indicator is an “oscillator” that
    ranges between –1 and 1\. It indicates “buying pressure” or “selling pressure,”
    a measure of the direction of the market.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对特定天数的资金流量进行汇总，并将其除以相同天数的成交量。该指标是一个“振荡器”，范围在-1到1之间。它指示“购买压力”或“销售压力”，衡量市场的方向。
- en: As you can see from this small taste of the many technical features that can
    be constructed from simple financial time series, there are many ways to describe
    a time series. The financial markets are a particularly rich and much-studied
    domain for feature generation.^([2](ch08.html#idm45576032954040))
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您从这篇对金融时间序列中可以构建的许多技术特性的小样本中看到的那样，有许多方法可以描述时间序列。金融市场是一个特别丰富且广泛研究的特征生成领域。
- en: Healthcare time series
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 医疗保健时间序列
- en: Healthcare is another area where time series features have domain-specific meanings
    and even names. As we discussed in [Chapter 1](ch01.html#time_series_an_overview_and_a_quick_history),
    health data offers quite a wide array of time series data. One example is EKG
    data (see [Figure 8-2](#fig-0802)). Reading EKGs is both a science and an art,
    and various features are manually identified by physicians and used to read a
    time series. If you were going to be selecting features for a machine learning
    study on EKG data, you would certainly want to start by studying these features
    and speaking to a knowledgeable physician to understand the purpose of the features
    and what they indicate.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 医疗保健是另一个具有特定领域含义甚至名称的时间序列特征的领域。正如我们在[第1章](ch01.html#time_series_an_overview_and_a_quick_history)中讨论的那样，健康数据提供了广泛的时间序列数据。其中一个例子是心电图数据（见[图8-2](#fig-0802)）。读取心电图既是科学也是艺术，各种特征由医生手动识别并用于读取时间序列。如果您将要选择心电图数据的机器学习研究特征，您肯定会首先研究这些特征，并与知识渊博的医生交谈，以了解这些特征的目的及其指示的内容。
- en: '![](assets/ptsa_0802.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ptsa_0802.png)'
- en: Figure 8-2\. Examples of time series features medical professionals use to read
    EKG time series data.
  id: totrans-137
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图8-2。医疗专业人士用于读取心电图时间序列数据的时间序列特征示例。
- en: Similarly, if you are analyzing high-resolution blood glucose time series data,
    it is also helpful to understand the kind of patterns that tend to affect daily
    data as well as how a healthcare professional would understand and label this
    data (see [Figure 8-3](#fig-0803)).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，如果您正在分析高分辨率血糖时间序列数据，了解影响每日数据的模式类型以及医疗专业人员如何理解和标记此数据也很有帮助（见[图 8-3](#fig-0803)）。
- en: The two time series illustrated in Figures [8-2](#fig-0802) and [8-3](#fig-0803)
    provide good examples of when we would be interested in finding local maxima or
    distances between them. Hence, we can easily envision specific features from the
    `tsfresh` or `cesium` libraries that are relevant to healthcare time series given
    domain-specific knowledge.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图 [8-2](#fig-0802) 和 [8-3](#fig-0803) 中展示的两个时间序列提供了我们有兴趣找到局部最大值或它们之间距离的良好示例。因此，我们可以很容易地设想从`tsfresh`或`cesium`库中提取出与医疗时间序列相关的特定特征，这些特征与领域特定知识相关。
- en: '![](assets/ptsa_0803.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ptsa_0803.png)'
- en: Figure 8-3\. In a one-day time series of blood glucose levels, we can see there
    are four features most healthcare professionals would identify in a typical day,
    one of which is not related to food but is known as the “dawn phenomenon.” This
    is something we would want to consider identifying in one or several features.
  id: totrans-141
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-3\. 在一天的血糖时间序列中，我们可以看到大多数医疗专业人士会在典型的一天中识别四个特征，其中一个特征与食物无关，而是被称为“黎明现象”。这是我们希望在一个或多个特征中识别的内容之一。
- en: How to Select Features Once You Have Generated Them
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一旦生成了特征，如何选择这些特征
- en: Suppose you have generated many features automatically to describe your large
    time series data set. You may not be able to look at all proposed features on
    a first pass through your data, so it can be helpful to complement the use of
    automatic feature *generation* with the use of automatic feature *selection*.
    One helpful feature selection algorithm is the FRESH algorithm, which is implemented
    in the `tsfresh` package described earlier. FRESH stands for feature extraction
    based on scalable hypothesis tests.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已自动生成了许多特征来描述您的大型时间序列数据集。在首次通过数据时，您可能无法查看所有建议的特征，因此将自动特征*生成*与自动特征*选择*相结合可以帮助。一个有用的特征选择算法是FRESH算法，该算法在之前描述的`tsfresh`包中实现。FRESH代表基于可扩展假设检验的特征提取。
- en: The FRESH algorithm is motivated by the ever-increasing amount of time series
    data that is available, often stored in a distributed manner, which facilitates
    parallelization of computation. The algorithm evaluates the significance of each
    input feature with respect to a target variable via the computation of a *p*-value
    for each feature. Once computed, the per-feature *p*-values are evaluated together
    via the Benjamini-Yekutieli procedure, which determines which features to keep
    based on input parameters about acceptable error rates and the like. The *Benjamini-Yekutieli
    procedure* is a method of limiting the number of false positives discovered during
    hypothesis testing used to produce the *p*-values in the initial step of the FRESH
    algorithm.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: FRESH算法受到可用时间序列数据数量不断增加的推动，这些数据通常以分布方式存储，从而便于计算的并行化。该算法通过计算每个输入特征相对于目标变量的*p*值来评估每个输入特征的显著性。一旦计算完成，通过Benjamini-Yekutieli程序评估每个特征的*p*值，该程序根据有关可接受误差率等的输入参数确定保留哪些特征。*Benjamini-Yekutieli程序*是在FRESH算法初始步骤中用于产生*p*值的假设检验期间限制发现的假阳性数量的方法。
- en: 'To implement these steps on our own would be quite a daunting task, but we
    can accomplish this in a few lines of code via `tsfresh`. Here we follow the code
    used in an illustration in the module’s documentation. First, we download time
    series data relating to robot execution failures:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要独自实施这些步骤将是一项相当艰巨的任务，但我们可以通过几行代码来完成，通过`tsfresh`。在这里，我们遵循模块文档中插图中使用的代码。首先，我们下载与机器人执行失败相关的时间序列数据：
- en: '[PRE0]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then we extract the features without needing to specify them, because the package
    automatically calculates all features. In this sense, it goes against the advice
    given in this chapter in being extremely inclusive without concern for computational
    resources. In this test data set there are not too many data points, but you would
    likely not want to blindly deploy this on your data set without shrinking it down
    to a reasonable number of points:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们提取特征，无需指定它们，因为该软件包会自动计算所有特征。从这个意义上说，它与本章中给出的建议相抵触，因为它极度包容，不考虑计算资源的问题。在这个测试数据集中，数据点不多，但您可能不希望在未经缩小的情况下盲目地将其部署到您的数据集中：
- en: '[PRE1]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: While `tsfresh` does provide a way for you to specify which features you would
    like to calculate, in this example we simply opt to include all features. You
    can also manually set the parameters for those features that take parameters into
    account for their calculation rather than using the defaults. This is all described
    and illustrated in the [documentation](https://perma.cc/D5RS-BJ6T).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`tsfresh`提供了一种指定要计算哪些特征的方法，但在这个例子中，我们选择包括所有特征。您还可以手动设置那些需要考虑参数的特征的参数，而不是使用默认值。所有这些都在[文档](https://perma.cc/D5RS-BJ6T)中有详细描述和插图。
- en: 'If you do perform a full extraction, as we have with the example data provided
    by `tsfresh`, you can see that there are numerous features calculated:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您执行了完整的提取，就像我们使用`tsfresh`提供的示例数据一样，您会看到计算了大量特征：
- en: '[PRE2]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: There are 4,764 columns. This is a far greater number of features than we could
    have calculated by hand, but this is also very time-consuming to run on a realistic
    data set. As you decide how and when to deploy such an outsize set of features,
    try to be realistic about both your computing power and your ability to carefully
    review the results. Remember that for time series data, outliers can be particularly
    influential in a nasty and unhelpful way for subsequent analysis. You will want
    to ensure that the features you choose are resistant to outliers.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 有4,764列。这比我们手工计算的特征数要多得多，但在实际数据集上运行却非常耗时。在决定如何和何时部署这样一组超大规模的特征时，请务必实际考虑您的计算能力以及仔细审查结果的能力。请记住，对于时间序列数据，异常值可能对后续分析产生特别重大且不利的影响。您将希望确保您选择的特征对异常值具有一定的抗性。
- en: While the FRESH algorithm is helpful in accounting for dependence among the
    features, it is somewhat difficult to reason about. We can also use a more traditional
    and transparent feature selection technique, *recursive feature elimination* (RFE).
    We can use RFE to complement our use of the FRESH algorithm and enhance our understanding
    of the degree of difference between those features selected by the FRESH algorithm
    and those not selected.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然FRESH算法有助于解释特征之间的依赖关系，但要理解它却有些困难。我们还可以使用更传统和透明的特征选择技术——*递归特征消除*（RFE）。我们可以使用RFE来补充我们对FRESH算法的使用，并增强我们对FRESH算法选择和未选择的特征之间差异程度的理解。
- en: Note
  id: totrans-154
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: RFE describes an incremental approach to feature selection whereby features
    are gradually eliminated from a more inclusive model, creating a less inclusive
    model down to the minimum number of features to be included, which is set at the
    start of the selection procedure.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: RFE描述了一种逐步减少特征的特征选择方法，通过逐步从更加包容的模型中排除特征，直到选择过程开始时设定的最小特征数目为止。
- en: This technique is known as *backward selection* because you start with the most
    inclusive model and move “backward” to a simpler model. In contrast, in *forward
    selection* features are incrementally added until the maximum number of specified
    features, or some other stopping criterion, is reached.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术被称为*后向选择*，因为您从最包容的模型开始，然后“向后”移动到更简单的模型。相比之下，*前向选择*是逐步添加特征，直到达到指定特征的最大数目或其他停止标准为止。
- en: 'We can use RFE both for feature selection and also as a way of ranking feature
    importance. To run an experiment, we combine 10 randomly selected features from
    the list of features kept by the FRESH algorithm with 10 randomly selected features
    from the list of features rejected by the FRESH algorithm:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用RFE进行特征选择，同时也可以作为评估特征重要性的一种方式。为了运行一个实验，我们从由FRESH算法保留的特征列表中随机选择10个特征，并从FRESH算法拒绝的特征列表中随机选择10个特征：
- en: '[PRE3]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'With this set of 20 features, we can then perform RFE to get a sense of the
    ranked importance of these features for the data set and for the model we use
    within the RFE:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这组 20 个特征，我们可以进行 RFE，以了解这些特征对数据集和我们在 RFE 中使用的模型的重要性排名：
- en: '[PRE4]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here we can see the relative rankings of the 20 features we fed into the RFE
    algorithm. We would hope that the first 10 features—those selected, among others,
    by the FRESH algorithm—would be ranked higher than those not selected by the FRESH
    algorithm. This is largely but not exclusively the case. For example, we can see
    that in the second half of the array, representing the ranks of the unselected
    features, we actually have the 5th and 7th most important features out of all
    20\. However, we would not expect a perfect match-up, and the results are largely
    consistent.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到我们输入 RFE 算法的 20 个特征的相对排名。我们希望前 10 个特征（这些特征是由 FRESH 算法选定的）的排名高于未被 FRESH
    算法选定的特征。这在很大程度上但不完全是这样的。例如，我们可以看到在数组的后半部分，表示未选定特征的排名中，实际上有第 5 和第 7 重要的特征，占据了所有
    20 个特征中的前半部分。然而，我们不应期望完美匹配，结果在很大程度上是一致的。
- en: We can use RFE on the selected features as a way of further culling our features.
    We can also use it as a sanity check if we attempt to fine-tune the input parameters
    of the FRESH algorithm, or the number of features we are generating as input to
    the FRESH algorithm in the first place.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 RFE 对选定的特征进行进一步修剪。如果我们尝试微调 FRESH 算法的输入参数或者首次输入到 FRESH 算法的特征数目，我们还可以将其用作健全性检查。
- en: Notice that the FRESH algorithm itself is essentially parameter free, so the
    number and quality of the features we input are our best way of affecting its
    output. The other parameter we set for the FRESH algorithm is the `fdr_level`,
    which is the percentage of irrelevant features we expect after generating the
    features. This parameter defaults to .05, but you might decide to set this value
    much higher to enhance the selectivity of the feature filtering, particularly
    when you are generating a large number of features without any consideration of
    whether they are appropriate for your domain of interest.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，FRESH 算法本身基本上是无参数的，因此我们输入的特征的数量和质量是影响其输出的最佳方式。我们为 FRESH 算法设置的另一个参数是 `fdr_level`，即我们在生成特征后预期的无关特征的百分比。该参数默认为
    0.05，但在生成大量特征而不考虑其是否适合您感兴趣的领域时，您可能决定将此值设置得更高，以增强特征过滤的选择性。
- en: Concluding Thoughts
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结思考
- en: In this chapter we have discussed the motivation for feature selection as well
    as a simple example of how feature generation can work to convert even a short
    time series to a more compressed set of numbers that is nearly as informative
    as the original. We also looked at examples of two Python modules designed to
    implement automated feature generation and selection on time series data, which
    can handily generate thousands of features of a time series. Because there is
    a danger that many of the features generated this way will not be especially useful,
    we also looked at methods for selecting the most useful features to pass on further
    down our analytical pipeline so that feature generation does not produce noisy
    or uninformative features.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了特征选择的动机，以及特征生成如何工作的简单示例，即使是一个短时间序列也可以将其转换为几乎与原始数据同样信息量的更紧凑的数字集。我们还看了两个用于在时间序列数据上实现自动特征生成和选择的
    Python 模块的示例，这些模块可以方便地生成数千个时间序列的特征。因为通过这种方式生成的特征中有许多可能不特别有用，所以我们还看了选择最有用的特征的方法，以便将其传递到我们的分析管道的后续阶段，从而使特征生成不会生成嘈杂或无信息的特征。
- en: 'Feature generation is useful for a number of purposes:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 特征生成对许多目的都很有用：
- en: Producing downstream data about time series in a format that is conducive to
    use in machine learning algorithms, most of which are designed to accept sets
    of features per data point rather than a time series.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成关于时间序列的下游数据，以一种适合于机器学习算法使用的格式，这些算法大多设计为接受每个数据点的特征集，而不是时间序列。
- en: Summarizing time series data in a way that compresses temporal observations
    into the shorthand of a few numbers and qualitative indicators. This can be useful
    not just for analysis but also for storing time series data in a more succinct
    and readable format in cases where we do not need to keep the full time series.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以一种方式总结时间序列数据，将时间观察压缩为几个数字和定性指标的简写。这不仅对分析有用，而且在我们不需要保留完整时间序列的情况下，还可以将时间序列数据存储为更简洁和可读的格式。
- en: Providing a common set of metrics to describe, and identify similarities across,
    data that may have been measured under many different conditions. By summarizing
    our data more broadly, we can make data comparable that otherwise may not seem
    easy to compare.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供一组通用的度量来描述和识别在许多不同条件下可能已经被测量的数据的相似性。通过更广泛地总结我们的数据，我们可以使本来看起来不容易比较的数据变得可比较。
- en: In [Chapter 9](ch09.html#ml_for_time_series_chapter) we will use feature generation
    to prepare data input for a number of machine learning algorithms that rely on
    input of time series features rather than raw time series data for classification
    and forecasting purposes.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第9章](ch09.html#ml_for_time_series_chapter)中，我们将使用特征生成来准备数据输入，用于多种依赖于时间序列特征而不是原始时间序列数据的机器学习算法，用于分类和预测目的。
- en: More Resources
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多资源
- en: 'On feature-based time series analysis:'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于基于特征的时间序列分析：
- en: Ben D. Fulcher, [“Feature-Based Time-Series Analysis,”](https://perma.cc/6LZ6-S3NC)
    eprint arXiv:1709.08055, 2017, https://perma.cc/6LZ6-S3NC.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Ben D. Fulcher，[“基于特征的时间序列分析,”](https://perma.cc/6LZ6-S3NC) eprint arXiv:1709.08055,
    2017, https://perma.cc/6LZ6-S3NC.
- en: This approachable review paper was written by the same person who implemented
    the `tsfresh` algorithm in Matlab. It offers an extensive taxonomy of different
    kinds of features that can be implemented on time series data. It also includes
    helpful illustrations of the categories of features discussed. There is also an
    emphasis on the use of feature generation as a form of data exploration to understand
    the appropriate analysis for a given time series data set.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这篇易于理解的综述文章是由在Matlab中实现 `tsfresh` 算法的同一人编写的。它提供了关于可以在时间序列数据上实现的不同特征种类的广泛分类。还包括了讨论特征生成作为数据探索形式以了解适用于给定时间序列数据集的分析的重要插图。强调了特征生成作为为多种机器学习算法准备数据输入的重要性，这些算法依赖于时间序列特征而不是原始时间序列数据进行分类和预测。
- en: 'On feature selection:'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于特征选择：
- en: 'Maximilian Christ et al., [“Time Series FeatuRe Extraction on basis of Scalable
    Hypothesis tests (tsfresh—A Python package),”](https://oreil.ly/YDBM8) *Neurocomputing*
    307 (2018): 72–7, https://oreil.ly/YDBM8.'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'Maximilian Christ 等，[“基于可扩展假设检验的时间序列特征提取（tsfresh—一个Python包）,”](https://oreil.ly/YDBM8)
    *Neurocomputing* 307 (2018): 72–7, https://oreil.ly/YDBM8.'
- en: This article introduces the `tsfresh` Python package and included FRESH algorithm,
    which were discussed in this chapter. Information about the computational efficiency
    of specific features to compute and sample usage patterns are also presented.
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这篇文章介绍了 `tsfresh` Python 包和包含的 FRESH 算法，这些内容在本章节中有所讨论。还介绍了特定特征的计算效率和样本使用模式的信息。
- en: Maximilian Christ et al., [“Distributed and Parallel Time Series Feature Extraction
    for Industrial Big Data Applications,”](https://arxiv.org/pdf/1610.07717.pdf)
    paper presented at ACML Workshop on Learning on Big Data (WLBD), Hamilton, NZ,
    November 16 2016, https://arxiv.org/pdf/1610.07717.pdf.
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Maximilian Christ 等，[“工业大数据应用中的分布式和并行时间序列特征提取,”](https://arxiv.org/pdf/1610.07717.pdf)
    于 ACML Workshop on Learning on Big Data (WLBD) 上发表的论文, Hamilton, NZ, 2016年11月16日,
    https://arxiv.org/pdf/1610.07717.pdf.
- en: This more technical explanation and testing of the FRESH algorithm provides
    more details about how the algorithm works and why it is appropriate for industrial
    time series application, and an extensive list of background reading in the references
    section.
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这篇对 FRESH 算法的更深入的技术解释和测试提供了关于算法工作原理的更多细节，以及为工业时间序列应用合适的原因，并在参考文献部分提供了广泛的背景阅读列表。
- en: 'On domain-specific features:'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于领域特定特征：
- en: Wikipedia, [“Technical Analysis for Financial Markets,”](https://perma.cc/8533-XFSZ)
    https://perma.cc/8533-XFSZ.
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Wikipedia，[“金融市场技术分析,”](https://perma.cc/8533-XFSZ) https://perma.cc/8533-XFSZ.
- en: This Wikipedia article gives a history of how technical analysis was developed
    for the financial markets as well as an extensive listing of many popularly used
    indicators.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这篇 Wikipedia 文章描述了技术分析是如何为金融市场发展的，以及许多常用指标的详尽列表。
- en: Amjed S. Al-Fahoum and Ausilah A. Al-Fraihat, [“Methods of EEG Signal Features
    Extraction Using Linear Analysis in Frequency and Time-Frequency Domains,”](https://perma.cc/465U-QT53)
    *ISRN Neuroscience* 2014, no. 730218 (2014), https://perma.cc/465U-QT53.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Amjed S. Al-Fahoum 和 Ausilah A. Al-Fraihat，[“使用频率和时频域线性分析的EEG信号特征提取方法,”](https://perma.cc/465U-QT53)
    *ISRN Neuroscience* 2014, no. 730218 (2014), https://perma.cc/465U-QT53.
- en: This article provides an example of testing standard time series features in
    the domain of EEG signals. There is an entire academic industry of generating
    features for medical time series, and this paper provides an accessible example
    of how it’s done.
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本文提供了在脑电信号领域测试标准时间序列特征的示例。在医疗时间序列生成特征的学术行业中，这篇论文提供了一个可访问的示例。
- en: 'Juan Bautista Cabral et al., [“From FATS to Feets: Further Improvements to
    an Astronomical Feature Extraction Tool Based on Machine Learning,](https://perma.cc/8ZEM-Y892)
    *Astronomy and Computing* 25 (2018), https://perma.cc/8ZEM-Y892.'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Juan Bautista Cabral等人，[“从FATS到Feets：基于机器学习的天文特征提取工具的进一步改进，](https://perma.cc/8ZEM-Y892)
    *天文学与计算* 25（2018年），https://perma.cc/8ZEM-Y892。
- en: This article discusses a recent redesign of a Python package designed for the
    extraction of features from astronomical time series data. While this document
    assumes some familiarity with astronomy and the specific packages, it’s still
    a useful read for getting an idea of how software is designed for feature extraction
    and for understanding some specific challenges and changes that have been occurring
    in astronomical time series data in particular.
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本文讨论了最近重新设计的Python包，用于从天文时间序列数据中提取特征。虽然本文假设读者对天文学和特定软件包有一定了解，但对于了解特征提取软件设计的方式以及理解天文时间序列数据中特定挑战和变化仍然是一个有用的阅读材料。
- en: Alvin Rajkomar et al., [“Supplementary Information for Scalable and Accurate
    Deep Learning for Electronic Health Records,”](https://perma.cc/2LKM-326C) *npj
    Digital Medicine* 1, no. 18 (2018), https://perma.cc/2LKM-326C.
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Alvin Rajkomar等人，[“电子健康记录的可扩展和准确的深度学习的补充信息”，](https://perma.cc/2LKM-326C) *npj数字医学*
    1，第18号（2018年），https://perma.cc/2LKM-326C。
- en: This supplementary information relates to an interesting paper published by
    Google illustrating a highly successful use of deep learning to understanding
    electronic health records. The supplementary information provides detailed information
    about how healthcare records were turned into quantitative input features that
    could be accessed by a neural network. If you are not familiar with deep learning,
    it may be worth returning to this resource only after reading [Chapter 10](ch10.html#dl_for_time_series_chapter).
    Additionally, it would be a good idea to first get a basic understanding of [embeddings
    for deep learning](https://perma.cc/3KAZ-9A3Y).
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此补充信息与谷歌发布的有关深度学习在理解电子健康记录中极其成功使用的有趣论文相关。补充信息提供了有关如何将医疗记录转化为神经网络可以访问的定量输入特征的详细信息。如果您对深度学习不熟悉，建议先阅读[第10章](ch10.html#dl_for_time_series_chapter)再回到此资源。此外，建议首先了解[用于深度学习的嵌入](https://perma.cc/3KAZ-9A3Y)的基本概念。
- en: 'On periodograms:'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于周期图谱：
- en: '[“The Periodogram,”](https://perma.cc/5DRZ-VPR9) lecture notes, Eberly College
    of Science, Pennsylvania State University, https://perma.cc/5DRZ-VPR9.'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[“周期图谱”，](https://perma.cc/5DRZ-VPR9) 宾夕法尼亚州立大学埃伯利科学学院的讲座笔记，https://perma.cc/5DRZ-VPR9。'
- en: These lecture notes from Penn State’s course on Applied Time Series Analysis
    offer an introduction to what a periodogram is, how to interpret one, and how
    to calculate one using R.
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 宾夕法尼亚州立大学应用时间序列分析课程的讲座笔记介绍了周期图谱的概念，如何解释以及如何使用R计算。
- en: Jacob T. VanderPlas, [“Understanding the Lomb-Scargle Periodogram,”](https://arxiv.org/pdf/1703.09824.pdf)
    *Astrophysical Journal Supplement Series* 236, no. 1 (2018), https://arxiv.org/pdf/1703.09824.pdf.
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Jacob T. VanderPlas，[“理解朗伯-斯卡格尔周期图谱”，](https://arxiv.org/pdf/1703.09824.pdf)
    *天体物理学补充系列* 236，第1号（2018年），https://arxiv.org/pdf/1703.09824.pdf。
- en: This expansive article provides an intuitive understanding of periodicity estimators
    generally and the Lomb-Scargle method in particular.
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这篇广泛的文章提供了周期性估算器的直观理解，特别是朗伯-斯卡格尔方法。
- en: ^([1](ch08.html#idm45576032996264-marker)) Interested readers who want to explore
    the details are referred to the [Catch22 set of time series features](https://perma.cc/57AG-V8NP),
    which have proven useful across a wide variety of time series data sets. Cutting
    down the set of features from over 4,000 to just 22 reduced computation time by
    a factor of 1,000 with a reduction in accuracy on a classification task of only
    7%. It is also quite educational to read about the pipeline the researchers used
    to select features and ensure a set of relatively independent but still accurate
    features from their starting set.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch08.html#idm45576032996264-marker)) 对于有兴趣深入了解细节的读者，推荐查阅[时间序列特征集合Catch22](https://perma.cc/57AG-V8NP)，这些特征已被证明在各种时间序列数据集中非常有用。将特征集从超过4,000个减少到仅22个，将计算时间减少了1,000倍，分类任务的准确度仅降低了7%。研究人员使用的特征选择流程也非常值得学习，确保了一组相对独立但仍然准确的特征从其起始集中提取出来。
- en: ^([2](ch08.html#idm45576032954040-marker)) For an extensive catalog of features
    that can be used in machine learning for financial markets time series, see the
    [Kaggle blog post](https://perma.cc/Q84C-44XD). Unfortunately, it does not seem
    as though that code met with great success, but it is an excellent example of
    exhaustive preparation of potentially useful features based on their domain relevance.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch08.html#idm45576032954040-marker)) 对于金融市场时间序列机器学习中可用的广泛特征目录，请参阅[Kaggle博文](https://perma.cc/Q84C-44XD)。不幸的是，看起来那些代码并没有取得很大的成功，但它是基于其领域相关性对潜在有用特征进行详尽准备的一个很好的例子。
