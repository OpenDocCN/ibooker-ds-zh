- en: 'Chapter 6\. Workflow: Scripts and Projects'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。工作流程：脚本和项目
- en: 'This chapter will introduce you to two essential tools for organizing your
    code: scripts and projects.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向您介绍两种组织代码的基本工具：脚本和项目。
- en: Scripts
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 脚本
- en: So far, you have used the console to run code. That’s a great place to start,
    but you’ll find it gets cramped pretty quickly as you create more complex ggplot2
    graphics and longer dplyr pipelines. To give yourself more room to work, use the
    script editor. Open it by clicking the File menu, selecting New File, and then
    selecting R script, or using the keyboard shortcut Cmd/Ctrl+Shift+N. Now you’ll
    see four panes, as in [Figure 6-1](#fig-rstudio-script). The script editor is
    a great place to experiment with your code. When you want to change something,
    you don’t have to retype the whole thing; you can just edit the script and rerun
    it. And once you have written code that works and does what you want, you can
    save it as a script file to easily return to later.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经使用控制台运行了代码。这是一个很好的开始，但随着创建更复杂的ggplot2图形和更长的dplyr管道，您会发现空间很快变得狭窄。为了获得更多的工作空间，请使用脚本编辑器。通过单击文件菜单，选择新建文件，然后选择R脚本，或使用键盘快捷键Cmd/Ctrl+Shift+N来打开它。现在您将看到四个窗格，如[图6-1](#fig-rstudio-script)所示。脚本编辑器是实验代码的好地方。当您想要更改内容时，您不必重新键入整个内容；您只需编辑脚本并重新运行即可。一旦编写出符合要求并且正常运行的代码，您可以将其保存为脚本文件，以便以后轻松返回。
- en: '![RStudio IDE with Editor, Console, and Output highlighted.](assets/rds2_0601.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![RStudio IDE with Editor, Console, and Output highlighted.](assets/rds2_0601.png)'
- en: Figure 6-1\. Opening the script editor adds a new pane at the top left of the
    IDE.
  id: totrans-5
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6-1。打开脚本编辑器将在IDE的左上角添加一个新窗格。
- en: Running Code
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行代码
- en: 'The script editor is an excellent place for building complex ggplot2 plots
    or long sequences of dplyr manipulations. The key to using the script editor effectively
    is to memorize one of the most important keyboard shortcuts: Cmd/Ctrl+Enter. This
    executes the current R expression in the console. For example, take the following
    code:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本编辑器非常适合构建复杂的ggplot2图或长序列的dplyr操作。有效使用脚本编辑器的关键是记住最重要的键盘快捷键之一：Cmd/Ctrl+Enter。这会在控制台中执行当前的R表达式。例如，看以下代码：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If your cursor is at █, pressing Cmd/Ctrl+Enter will run the complete command
    that generates `not_cancelled`. It will also move the cursor to the following
    statement (beginning with `not_cancelled |>`). That makes it easy to step through
    your complete script by repeatedly pressing Cmd/Ctrl+Enter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果光标在█处，按下Cmd/Ctrl+Enter将运行生成`not_cancelled`的完整命令。它还将移动光标到以下语句（以`not_cancelled
    |>`开头）。这样，通过反复按下Cmd/Ctrl+Enter，您可以轻松地逐步执行完整的脚本。
- en: Instead of running your code expression by expression, you can execute the complete
    script in one step with Cmd/Ctrl+Shift+S. Doing this regularly is a great way
    to ensure that you’ve captured all the important parts of your code in the script.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 不要逐个表达式地运行代码，您可以通过一步操作（Cmd/Ctrl+Shift+S）执行完整的脚本。定期执行此操作是确保您已捕获脚本中所有重要部分的好方法。
- en: We recommend you always start your script with the packages you need. That way,
    if you share your code with others, they can easily see which packages they need
    to install. Note, however, that you should never include [`install.packages()`](https://rdrr.io/r/utils/install.packages.xhtml)
    in a script you share. It’s inconsiderate to hand off a script that will install
    something on their computer if they’re not being careful!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议您始终从您需要的包开始编写脚本。这样，如果您与他人分享代码，他们可以轻松看到需要安装哪些包。但请注意，您不应在您分享的脚本中包含[`install.packages()`](https://rdrr.io/r/utils/install.packages.xhtml)。如果他们不小心操作，将在他们的计算机上安装东西是不礼貌的！
- en: When working through future chapters, we highly recommend starting in the script
    editor and practicing your keyboard shortcuts. Over time, sending code to the
    console in this way will become so natural that you won’t even think about it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在未来的章节中工作时，我们强烈建议您从脚本编辑器开始，并练习键盘快捷键。随着时间的推移，以这种方式将代码发送到控制台将变得如此自然，以至于您甚至不会考虑它。
- en: RStudio Diagnostics
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RStudio诊断
- en: 'In the script editor, RStudio will highlight syntax errors with a red squiggly
    line and a cross in the sidebar:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本编辑器中，RStudio会使用红色波浪线和侧边栏中的交叉标记突出显示语法错误：
- en: '![Script editor with the script x y <- 10\. A red X indicates that there is
    syntax error. The syntax error is also highlighted with a red squiggly line.](assets/rds2_06in01.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![带有脚本x y <- 10的脚本编辑器。红色的X表示有语法错误。语法错误还用红色波浪线进行了突出显示。](assets/rds2_06in01.png)'
- en: 'Hover over the cross to see what the problem is:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 将鼠标悬停在十字架上以查看问题所在：
- en: '![Script editor with the script x y <- 10\. A red X indicates that there is
    syntax error. The syntax error is also highlighted with a red squiggly line. Hovering
    over the X shows a text box with the text unexpected token y and unexpected token
    <-.](assets/rds2_06in02.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![脚本编辑器显示脚本 x y <- 10\. 一个红色的 X 表示语法错误。语法错误还用红色波浪线进行了标记。将鼠标悬停在 X 上会显示一个文本框，其中包含文本“unexpected
    token y”和“unexpected token <-”。](assets/rds2_06in02.png)'
- en: 'RStudio will also let you know about potential problems:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: RStudio 还会提醒您可能存在的问题：
- en: '![Script editor with the script 3 == NA. A yellow exclamation mark indicates
    that there may be a potential problem. Hovering over the exclamation mark shows
    a text box with the text use is.na to check whether expression evaluates to NA.](assets/rds2_06in03.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![脚本编辑器显示脚本 3 == NA。一个黄色的感叹号表示可能存在潜在问题。将鼠标悬停在感叹号上会显示一个文本框，其中包含文本“use is.na
    to check whether expression evaluates to NA”。](assets/rds2_06in03.png)'
- en: Saving and Naming
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保存和命名
- en: RStudio automatically saves the contents of the script editor when you quit
    and automatically reloads it when you re-open. Nevertheless, it’s a good idea
    to avoid Untitled1, Untitled2, Untitled3, and so on, and instead save your scripts
    with informative names.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: RStudio 在退出时会自动保存脚本编辑器的内容，并在重新打开时自动重新加载。尽管如此，最好避免使用 Untitled1、Untitled2、Untitled3
    等无意义的名称，而是使用信息丰富的名称保存脚本。
- en: 'It might be tempting to name your files `code.R` or `myscript.R`, but you should
    think a bit harder before choosing a name for your file. Three important principles
    for file naming are as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 或许给文件命名为 `code.R` 或 `myscript.R` 看起来很诱人，但在选择文件名之前，你应该认真考虑一下。文件命名的三个重要原则如下：
- en: 'Filenames should be *machine* readable: avoid spaces, symbols, and special
    characters. Don’t rely on case sensitivity to distinguish files.'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件名应该是*机器*可读的：避免使用空格、符号和特殊字符。不要依赖大小写敏感性来区分文件。
- en: 'Filenames should be *human* readable: use filenames to describe what’s in the
    file.'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件名应该是*人类*可读的：使用文件名描述文件中的内容。
- en: 'Filenames should play well with default ordering: start filenames with numbers
    so that alphabetical sorting puts them in the order they get used.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件名应该与默认排序相容：以数字开头，以便按字母顺序排列它们的顺序。
- en: 'For example, suppose you have the following files in a project folder:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设在项目文件夹中有以下文件：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'There are a variety of problems here: it’s hard to find which file to run first,
    filenames contain spaces, there are two files with the same name but different
    capitalization (`finalreport` versus `FinalReport`^([1](ch06.xhtml#idm44771313233616))),
    and some names don’t describe their contents (`run-first` and `temp`).'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这里存在各种问题：难以找到应首先运行哪个文件，文件名包含空格，有两个文件同名但大小写不同（`finalreport` 与 `FinalReport`^([1](ch06.xhtml#idm44771313233616)))，有些名称并未描述其内容（`run-first`
    和 `temp`）。
- en: 'Here’s a better way of naming and organizing the same set of files:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这是同一组文件更好的命名和组织方式：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Numbering the key scripts makes it obvious in which order to run them, and a
    consistent naming scheme makes it easier to see what varies. Additionally, the
    figures are labeled similarly, the reports are distinguished by dates included
    in the filenames, and `temp` is renamed to `report-draft-notes` to better describe
    its contents. If you have a lot of files in a directory, taking organization one
    step further and placing different types of files (scripts, figures, etc.) in
    different directories is recommended.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 编号关键脚本使其运行顺序明显，而一致的命名方案则使得变量更易于识别。此外，图表采用类似的标签，报告则通过文件名中包含的日期进行区分，`temp` 被重命名为
    `report-draft-notes` 以更好地描述其内容。如果目录中有大量文件，建议进一步组织，将不同类型的文件（脚本、图表等）放置在不同的目录中。
- en: Projects
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目
- en: One day, you will need to quit R, go do something else, and return to your analysis
    later. One day, you will be working on multiple analyses simultaneously and want
    to keep them separate. One day, you will need to bring data from the outside world
    into R and send numerical results and figures from R back out into the world.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 终有一天，你将需要退出 R，去做其他事情，稍后回来继续分析。终有一天，你将同时处理多个分析，并希望将它们保持分隔。终有一天，你将需要将外界的数据带入 R
    中，并将 R 的数值结果和图表发送回外界。
- en: 'To handle these real-life situations, you need to make two decisions:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理这些现实生活中的情况，你需要做出两个决定：
- en: What is the source of truth? What will you save as your lasting record of what
    happened?
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事实的来源是什么？你将保存什么作为记录下来发生了什么的持久记录？
- en: Where does your analysis live?
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的分析在哪里？
- en: What Is the Source of Truth?
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 真相之源是什么？
- en: 'As a beginner, it’s OK to rely on your current environment to contain all the
    objects you have created throughout your analysis. However, to make it easier
    to work on larger projects or collaborate with others, your source of truth should
    be the R scripts. With your R scripts (and your data files), you can re-create
    the environment. With only your environment, it’s much harder to re-create your
    R scripts: either you’ll have to retype a lot of code from memory (inevitably
    making mistakes along the way) or you’ll have to carefully mine your R history.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于初学者，依赖当前环境包含你在分析中创建的所有对象是可以的。然而，为了更轻松地处理大型项目或与他人合作，你的真相之源应该是 R 脚本。有了你的 R 脚本（和数据文件），你可以重新创建环境。但如果只有环境而没有代码，重新创建你的
    R 脚本就更加困难：你要么必须从记忆中重新输入大量代码（不可避免地会出错），要么必须仔细查看你的 R 历史记录。
- en: To help keep your R scripts as the source of truth for your analysis, we highly
    recommend that you instruct RStudio not to preserve your workspace between sessions.
    You can do this either by running [`usethis::use_blank_slate()`](https://usethis.r-lib.org/reference/use_blank_slate.xhtml)^([2](ch06.xhtml#idm44771313209872))
    or by mimicking the options shown in [Figure 6-2](#fig-blank-slate). This will
    cause you some short-term pain, because now when you restart RStudio, it will
    no longer remember the code that you ran last time nor will the objects you created
    or the datasets you read be available to use. But this short-term pain saves you
    long-term agony because it forces you to capture all important procedures in your
    code. There’s nothing worse than discovering three months after the fact that
    you’ve stored only the results of an important calculation in your environment,
    not the calculation itself in your code.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助保持你的 R 脚本成为分析的真相之源，我们强烈建议你指示 RStudio 在会话之间不保留你的工作空间。你可以通过运行[`usethis::use_blank_slate()`](https://usethis.r-lib.org/reference/use_blank_slate.xhtml)^([2](ch06.xhtml#idm44771313209872))或者模仿
    [图 6-2](#fig-blank-slate) 中显示的选项来实现这一点。这会带来一些短期的不便，因为现在当你重新启动 RStudio 时，它将不再记住你上次运行的代码，也不会保留你创建的对象或读取的数据集。但这种短期的不便可以避免长期的痛苦，因为它迫使你在代码中捕捉所有重要的过程。发现重要计算的结果只存储在你的环境中，而没有在你的代码中存储计算本身，三个月后再去发现这种情况是非常糟糕的。
- en: '![RStudio Global Options window where the option Restore .RData into workspace
    at startup is not checked. Also, the option Save workspace to .RData on exit is
    set to Never. ](assets/rds2_0602.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![RStudio 全局选项窗口，选项“在启动时不恢复 .RData 到工作空间”未选中。同时，“在退出时将工作空间保存为 .RData”的选项设置为“从不”。](assets/rds2_0602.png)'
- en: Figure 6-2\. Copy these selections in your RStudio options to always start your
    RStudio session with a clean slate.
  id: totrans-41
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-2\. 复制这些选项到你的 RStudio 选项中，以始终在启动时使用干净的环境。
- en: 'There is a great pair of keyboard shortcuts that will work together to make
    sure you’ve captured the important parts of your code in the editor:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 有一组很棒的键盘快捷键可以一起使用，确保你在编辑器中捕捉到代码的重要部分：
- en: Press Cmd/Ctrl+Shift+0/F10 to restart R.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下 Cmd/Ctrl+Shift+0/F10 来重新启动 R。
- en: Press Cmd/Ctrl+Shift+S to rerun the current script.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下 Cmd/Ctrl+Shift+S 来重新运行当前的脚本。
- en: We collectively use this pattern hundreds of times a week.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 每周我们总共使用这种模式数百次。
- en: Alternatively, if you don’t use keyboard shortcuts, you can select Session >
    Restart R and then highlight and rerun your current script.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果你不使用键盘快捷键，你可以选择会话 > 重新启动 R，然后重新运行你当前的脚本。
- en: RStudio Server
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: RStudio Server
- en: If you’re using RStudio Server, your R session is never restarted by default.
    When you close your RStudio Server tab, it might feel like you’re closing R, but
    the server actually keeps it running in the background. The next time you return,
    you’ll be in exactly the same place you left. This makes it even more important
    to regularly restart R so that you’re starting with a clean slate.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用 RStudio Server，默认情况下不会重新启动你的 R 会话。当你关闭 RStudio Server 标签页时，可能会感觉你关闭了
    R，但实际上服务器会在后台继续运行。下次返回时，你将会回到你离开时的同样位置。这使得定期重启 R 变得更加重要，以确保你从一个干净的状态开始。
- en: Where Does Your Analysis Live?
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你的分析数据存放在哪里？
- en: 'R has a powerful notion of the *working directory*. This is where R looks for
    files that you ask it to load and where it will put any files that you ask it
    to save. RStudio shows your current working directory at the top of the console:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: R 拥有一个强大的*工作目录*概念。这是 R 查找你要加载的文件和保存文件的地方。RStudio 在控制台顶部显示你当前的工作目录：
- en: '![The Console tab shows the current working directory as ~/Documents/r4ds.
    ](assets/rds2_06in04.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![控制台选项卡显示当前工作目录为 ~/Documents/r4ds。](assets/rds2_06in04.png)'
- en: 'You can print this out in R code by running [`getwd()`](https://rdrr.io/r/base/getwd.xhtml):'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过运行[`getwd()`](https://rdrr.io/r/base/getwd.xhtml)在 R 代码中打印此内容：
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In this R session, the current working directory (think of it as “home”) is
    in Hadley’s *Documents* folder, in a subfolder called *r4ds*. This code will return
    a different result when you run it, because your computer has a different directory
    structure than Hadley’s!
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在此 R 会话中，当前工作目录（可以将其视为“主目录”）位于 Hadley 的*文档*文件夹中的一个名为*r4ds*的子文件夹中。当您运行此代码时，由于您的计算机具有不同的目录结构，此代码将返回不同的结果！
- en: As a beginning R user, it’s OK to let your working directory be your home directory,
    documents directory, or any other weird directory on your computer. But you’re
    seven chapters into this book, and you’re no longer a beginner. Soon you should
    evolve to organizing your projects into directories and, when working on a project,
    set R’s working directory to the associated directory.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 作为初学者的 R 用户，允许将工作目录设置为主目录、文档目录或计算机上任何其他奇怪的目录都是可以的。但是在本书的第七章中，您已经不再是初学者了。很快，您应该开始将项目组织到目录中，并在处理项目时将
    R 的工作目录设置为相关目录。
- en: 'You can set the working directory from within R, but *we do not recommend it*:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 R 内设置工作目录，但*我们不建议这样做*：
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: There’s a better way—a way that also puts you on the path to managing your R
    work like an expert. That way is the *RStudio project*.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种更好的方式——一种也能让您像专家一样管理您的 R 工作的方式。这种方式就是*RStudio 项目*。
- en: RStudio Projects
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RStudio 项目
- en: Keeping all the files associated with a given project (input data, R scripts,
    analytical results, and figures) in one directory is such a wise and common practice
    that RStudio has built-in support for this via *projects*. Let’s make a project
    for you to use while you’re working through the rest of this book. Select File
    > New Project, and then follow the steps shown in [Figure 6-3](#fig-new-project).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 将与给定项目相关的所有文件（输入数据、R 脚本、分析结果和图表）放在一个目录中是一种明智且常见的做法，RStudio 通过*项目*内置支持此功能。在您阅读本书的其余部分时，让我们为您创建一个项目。选择“文件”
    > “新建项目”，然后按照[图 6-3](#fig-new-project)中显示的步骤进行操作。
- en: '![Three screenshots of the New Project menu. In the first screenshot, the Create
    Project window is shown and New Directory is selected. In the second screenshot,
    the Project Type window is shown and Empty Project is selected. In the third screenshot,
    the Create New Project  window is shown and the directory name is given as r4ds
    and the project is being created as subdirectory of the Desktop. ](assets/rds2_0603.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![新项目菜单的三个截图。第一张截图显示创建项目窗口并选择了新目录。第二张截图显示了项目类型窗口并选择了空项目。第三张截图显示了创建新项目窗口，将目录名指定为
    r4ds，并将项目创建为桌面的子目录。](assets/rds2_0603.png)'
- en: 'Figure 6-3\. To create new project: (top) first click New Directory, then (middle)
    click New Project, then (bottom) fill in the directory (project) name, choose
    a good subdirectory for its home, and click Create Project.'
  id: totrans-62
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-3\. 创建新项目：（顶部）首先点击“新建目录”，然后（中部）点击“新建项目”，最后（底部）填写目录（项目）名称，选择一个适合其主目录的子目录，并点击“创建项目”。
- en: Call your project `r4ds` and think carefully about which subdirectory you put
    the project in. If you don’t store it somewhere sensible, it will be hard to find
    it in the future!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 将您的项目命名为`r4ds`，并仔细考虑将项目放在哪个子目录中。如果不将其存储在合理的位置，将来找到它将会很困难！
- en: 'Once this process is complete, you’ll get a new RStudio project just for this
    book. Check that the “home” of your project is the current working directory:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当此过程完成后，您将获得一个专门为本书而设的新的 RStudio 项目。确保您项目的“主目录”是当前工作目录：
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now enter the following commands in the script editor and save the file, calling
    it `diamonds.R`. Then, create a new folder called `data`. You can do this by clicking
    the New Folder button in the Files pane in RStudio. Finally, run the complete
    script, which will save a PNG and CSV file into your project directory. Don’t
    worry about the details; you’ll learn them later in the book.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在脚本编辑器中输入以下命令并保存文件，命名为`diamonds.R`。然后，创建一个名为`data`的新文件夹。您可以在 RStudio 的文件面板中点击“新建文件夹”按钮来完成此操作。最后，运行完整的脚本，它将保存一个
    PNG 和 CSV 文件到您的项目目录中。不必担心细节；您会在本书后面学到它们。
- en: '[PRE6]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Quit RStudio. Inspect the folder associated with your project—notice the `.Rproj`
    file. Double-click that file to re-open the project. Notice you get back to where
    you left off: it’s the same working directory and command history, and all the
    files you were working on are still open. Because you followed our instructions,
    you will, however, have a completely fresh environment, guaranteeing that you’re
    starting with a clean slate.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 退出RStudio。检查与你的项目相关联的文件夹——注意`.Rproj`文件。双击该文件重新打开项目。注意你回到了离开时的地方：同样的工作目录和命令历史记录，所有你正在工作的文件仍然是打开的。因为你遵循了我们的指示，你将有一个完全新鲜的环境，确保你是从一个干净的状态开始。
- en: In your favorite OS-specific way, search your computer for `diamonds.png`, and
    you will find the PNG (no surprise) but *also the script that created it* (`diamonds.R`).
    This is a huge win! One day, you will want to remake a figure or just understand
    where it came from. If you rigorously save figures to files *with R code* and
    never with the mouse or the clipboard, you will be able to reproduce old work
    with ease!
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在你喜欢的操作系统特定方式中，搜索你的计算机中的`diamonds.png`，你会找到这个PNG文件（毫不奇怪），但*也会找到创建它的脚本*（`diamonds.R`）。这是一个巨大的胜利！总有一天，你会想要重新制作一个图表或者仅仅是理解它的来源。如果你严格地将图表保存为文件*带有R代码*，而不是使用鼠标或剪贴板，那么你将能够轻松地重现旧作品！
- en: Relative and Absolute Paths
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相对路径和绝对路径
- en: 'Once you’re inside a project, you should only ever use relative paths, not
    absolute paths. What’s the difference? A relative path is relative to the working
    directory, i.e., the project’s home. When Hadley wrote `data/diamonds.csv` earlier,
    it was a shortcut for `/Users/hadley/Documents/r4ds/data/diamonds.csv`. But importantly,
    if Mine ran this code on her computer, it would point to `/Users/Mine/Documents/r4ds/data/diamonds.csv`.
    This is why relative paths are important: they’ll work regardless of where the
    R project folder ends up.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你进入一个项目，你应该只使用相对路径，而不是绝对路径。两者有什么区别呢？相对路径是相对于工作目录的，也就是项目的根目录。当Hadley之前写了`data/diamonds.csv`时，它是`/Users/hadley/Documents/r4ds/data/diamonds.csv`的一个快捷方式。但是重要的是，如果Mine在她的计算机上运行这段代码，它将指向`/Users/Mine/Documents/r4ds/data/diamonds.csv`。这就是为什么相对路径很重要的原因：它们将在R项目文件夹最终结束的任何地方都能够工作。
- en: 'Absolute paths point to the same place regardless of your working directory.
    They look a little different depending on your operating system. On Windows they
    start with a drive letter (e.g., `C:`) or two backslashes (e.g., `\\servername`)
    and on Mac/Linux they start with a slash, / (e.g., `/users/hadley`). You should
    *never* use absolute paths in your scripts, because they hinder sharing: no one
    else will have exactly the same directory configuration as you.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 绝对路径指向相同的位置，不管你的工作目录在哪里。它们在不同的操作系统下看起来有些不同。在Windows上，它们以驱动器号开头（例如`C:`）或两个反斜杠（例如`\\servername`），而在Mac/Linux上，它们以斜杠`/`开头（例如`/users/hadley`）。你在脚本中*永远不应该*使用绝对路径，因为它们会阻碍分享：没有人会有完全相同的目录配置像你一样。
- en: 'There’s another important difference between operating systems: how you separate
    the components of the path. Mac and Linux uses slashes (e.g., `data/diamonds.csv`),
    and Windows uses backslashes (e.g., `data\diamonds.csv`). R can work with either
    type (no matter what platform you’re currently using), but unfortunately, backslashes
    mean something special to R, and to get a single backslash in the path, you need
    to type two backslashes! That makes life frustrating, so we recommend always using
    the Linux/Mac style with forward slashes.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统之间还有另一个重要的区别：路径组件的分隔符不同。Mac和Linux使用斜杠（例如`data/diamonds.csv`），而Windows使用反斜杠（例如`data\diamonds.csv`）。R可以处理任何类型的路径（无论你当前使用哪个平台），但不幸的是，反斜杠对于R来说有特殊意义，为了在路径中得到单个反斜杠，你需要输入两个反斜杠！这让生活变得很烦人，所以我们建议始终使用Linux/Mac风格的斜杠。
- en: Exercises
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: Go to the [RStudio Tips Twitter account](https://twitter.com/rstudiotips) and
    find one tip that looks interesting. Practice using it!
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往[RStudio Tips Twitter账号](https://twitter.com/rstudiotips)，找到一个看起来有趣的提示。练习使用它！
- en: What other common mistakes will RStudio diagnostics report? Read [this article
    on code diagnostics](https://oreil.ly/coili) to find out.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: RStudio诊断还会报告哪些其他常见的错误？阅读[这篇关于代码诊断的文章](https://oreil.ly/coili)去找出答案。
- en: Summary
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to organize your R code in scripts (files)
    and projects (directories). Much like code style, this may feel like busywork
    at first. But as you accumulate more code across multiple projects, you’ll learn
    to appreciate how a little up-front organization can save you a bunch of time
    later.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学会了如何将你的R代码组织成脚本（文件）和项目（目录）。就像代码风格一样，这起初可能感觉是繁琐的工作。但随着在多个项目中积累更多的代码，你会逐渐意识到，稍微前期的组织可以在以后节省大量时间。
- en: 'In summary, scripts and projects give you a solid workflow that will serve
    you well in the future:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，脚本和项目为你提供了一个稳固的工作流程，将在未来为你服务。
- en: Create one RStudio project for each data analysis project.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个数据分析项目都应创建一个RStudio项目。
- en: Save your scripts (with informative names) in the project, edit them, and run
    them in bits or as a whole. Restart R frequently to make sure you’ve captured
    everything in your scripts.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将你的脚本（用信息性的名称命名）保存在项目中，编辑它们，并逐部或整体运行它们。经常重新启动R以确保你已经捕获了脚本中的所有内容。
- en: Only ever use relative paths, not absolute paths.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只使用相对路径，而不是绝对路径。
- en: Then everything you need is in one place and cleanly separated from all the
    other projects you are working on.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，你需要的一切都集中在一个地方，并与你正在进行的所有其他项目清晰分开。
- en: So far, we’ve worked with datasets bundled in R packages. This makes it easier
    to get some practice on preprepared data, but obviously your data won’t be available
    in this way. So in the next chapter, you’re going to learn how load data from
    disk into your R session using the readr package.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经使用了R包中捆绑的数据集。这使得在预准备的数据上练习变得更加容易，但显然你的数据不会以这种方式可用。因此，在下一章中，你将学习如何使用readr包将数据从磁盘加载到你的R会话中。
- en: ^([1](ch06.xhtml#idm44771313233616-marker)) Not to mention that you’re tempting
    fate by using “final” in the name. The comic Piled Higher and Deeper has a [fun
    strip on this](https://oreil.ly/L9ip0).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch06.xhtml#idm44771313233616-marker)) 更不用说在名称中使用“final”会招来厄运。漫画《Piled
    Higher and Deeper》有一篇[有趣的条漫](https://oreil.ly/L9ip0)讲述了这一点。
- en: ^([2](ch06.xhtml#idm44771313209872-marker)) If you don’t have this installed,
    you can install it with `install.packages("usethis")`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch06.xhtml#idm44771313209872-marker)) 如果你还没有安装这个包，你可以使用`install.packages("usethis")`来安装它。
