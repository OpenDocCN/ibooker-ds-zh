- en: 1 Introduction to Streamlit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1 Streamlit简介
- en: This chapter covers
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本章节涵盖了
- en: Why you'd want to build web apps
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么你想构建Web应用
- en: What exactly Streamlit is, and why it's so popular
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Streamlit究竟是什么，以及为什么它如此受欢迎
- en: How Streamlit's ease-of-use, LLM-friendliness, and other factors make it popular
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Streamlit的易用性、对LLM的友好性以及其他因素使其变得流行
- en: How Streamlit is different from other similar technologies
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Streamlit与其他类似技术的不同之处
- en: What you can (and can't) build with Streamlit
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以用（和不能用）Streamlit构建什么
- en: 'Welcome to the exciting realm of Streamlit! By picking up this book, you''ve
    joined the ranks of thousands of developers who have discovered Streamlit over
    the past several years. These developers have become enamored with what Streamlit
    makes possible: web apps coded entirely in Python in mere minutes!'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到激动人心的Streamlit领域！通过拿起这本书，你已经加入了在过去几年中发现Streamlit的数千名开发者的行列。这些开发者已经着迷于Streamlit所能实现的事情：只需几分钟就能用Python编写的完整Web应用！
- en: Take a second to think about why you were drawn to this book. Maybe you have
    an idea buzzing in your head for an application that will save your coworkers
    hours of mundane, easy-to-automate tasks, and you want the fastest way to turn
    it into reality. Maybe you're aiming to land a job in tech and want to close a
    gap in your skillset by adding frontend development. Perhaps you're a data analyst
    or scientist wanting to present your findings in interactive dashboards for higher-ups.
    Or you might be a software engineer needing a quick way to prototype your apps.
    Perhaps you simply heard the buzz around Streamlit and AI and were curious.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 请花点时间思考一下你为什么会被这本书吸引。也许你脑海中有一个想法，这个应用将为你同事节省数小时枯燥的、容易自动化的任务，你希望最快地将它变为现实。也许你正在瞄准科技行业的工作，并希望通过添加前端开发来填补你的技能缺口。也许你是一位数据分析师或科学家，希望以交互式仪表板的形式向高层展示你的发现。或者你可能是一位需要快速原型化应用程序的软件工程师。也许你只是听说了Streamlit和AI的热潮，感到好奇。
- en: Whatever your story, Streamlit can bring your ideas to life quickly and easily.
    This book will be your guide, taking you step-by-step through the process of creating
    powerful, interactive web applications. You'll learn how to harness the simplicity
    and elegance of Python to build and deploy apps that can wow your audience, solve
    real problems, and advance your career.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你的故事如何，Streamlit都能快速轻松地将你的想法变为现实。这本书将是你向导，带你一步步通过创建强大、交互式Web应用程序的过程。你将学习如何利用Python的简洁和优雅来构建和部署能够震撼你的观众、解决实际问题并推动你职业发展的应用程序。
- en: Experience is the best teacher, so you'll learn Streamlit through real-world
    projects. By the end of this book, you'll have built a versatile portfolio, ranging
    from an interactive mortgage calculator to a chatbot powered by generative AI—all
    in record time!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 经验是最好的老师，所以你将通过实际项目来学习Streamlit。到这本书结束时，你将构建一个多功能的投资组合，从交互式抵押贷款计算器到由生成式AI驱动的聊天机器人，所有这些都在创纪录的时间内完成！
- en: While each chapter will immerse you deeper into Streamlit's capabilities, you'll
    also learn the overarching process of developing apps, including how to think
    about UI design and how to organize your code for maintainability.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然每一章都会让你更深入地了解Streamlit的功能，但你也会学习到开发应用程序的整体流程，包括如何考虑UI设计以及如何组织代码以实现可维护性。
- en: Whether you're a seasoned industry veteran or a complete beginner, I am convinced
    that you'll find value in this book.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是经验丰富的行业老手还是完全的初学者，我都确信你会发现这本书的价值。
- en: Eager to dive in? Then let's get started with the basics.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你渴望深入探索吗？那么，让我们从基础知识开始。
- en: 1.1 Building web apps
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.1 构建Web应用
- en: Before we get to Streamlit itself, let's talk about web apps and why you would
    want to build one, which is what Streamlit is for.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨Streamlit本身之前，让我们先谈谈Web应用以及为什么你想构建一个，这正是Streamlit的目的所在。
- en: A *graphical app* is an application with a *graphical user interface (GUI)*
    that you can interact with by clicking a mouse or touching on-screen controls.
    Contrast this with a *command-line app*, which has a *command-line user interface*
    where you type text inputs into a terminal and get the results back in the same
    terminal. You've likely written a few of the latter using Python.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一个*图形应用*是一个具有*图形用户界面（GUI）*的应用程序，你可以通过点击鼠标或触摸屏幕控件与之交互。这与*命令行应用*形成对比，后者有一个*命令行用户界面*，你在终端中输入文本输入并从同一终端获得结果。你很可能已经使用Python编写了一些这样的应用程序。
- en: A *web application (*or *web app)* is a graphical app that you access through
    a web browser, such as when you access Gmail or Netflix using the Google Chrome
    browser, as opposed to a *desktop app*, which is a program that runs directly
    on your computer (e.g., Photoshop or Notepad running on your PC), or a *native
    mobile app,* which runs directly on your mobile phone (e.g., Uber or when you
    access Gmail through the iPhone Gmail app).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*Web应用*（或*Web应用*）是一种通过网页浏览器访问的图形化应用，例如您使用Google Chrome浏览器访问Gmail或Netflix时，与*桌面应用*相对，桌面应用是直接在您的计算机上运行（例如，Photoshop或Notepad在您的PC上运行），或者*原生移动应用*，它直接在您的手机上运行（例如，Uber或通过iPhone的Gmail应用访问Gmail）。'
- en: Streamlit helps you build web apps, not command-line, desktop or native mobile
    apps. But why would you want to do that?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit帮助您构建Web应用，而不是命令行、桌面或原生移动应用。但为什么您想要这样做呢？
- en: 1.1.1 Why build a graphical app in the first place?
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.1.1 最初为什么要构建图形化应用？
- en: If you've learned Python, chances are that you're comfortable with creating
    command-line programs. These are the easiest types of apps to create, and Python
    provides native support for them.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经学习了Python，那么您可能对创建命令行程序感到很自在。这些是最容易创建的应用类型，Python为它们提供了原生支持。
- en: The trouble is, outside of techies, no one likes to use command-line programs
    for anything significant. Graphical apps are much less intimidating and give users
    a more intuitive experience.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于，除了技术人员之外，没有人喜欢使用命令行程序进行任何重要的事情。图形化应用不那么令人畏惧，并为用户提供更直观的体验。
- en: This is true generally, but also in the workplace. If you want to automate something
    at work for a non-technical audience and expect people to actually use what you've
    built, you'll need to make a graphical interface to go with it. You might have
    created the perfect solution to a genuine problem that cuts the effort required
    to accomplish something from hours to minutes, but the minute you tell people
    they're going to have to open up a terminal and type commands into it, you'll
    have lost them.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常是真的，但在工作场所也是如此。如果您想为非技术受众自动化工作场所中的某些事情，并期望人们真正使用您所构建的应用，您将需要为它创建一个图形界面。您可能已经为解决一个真实问题创造了完美的解决方案，这减少了完成某项任务所需的时间从数小时到数分钟，但当你告诉人们他们需要打开终端并输入命令时，您就会失去他们。
- en: 1.1.2 Why build apps for the web?
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.1.2 为什么要为Web构建应用？
- en: Graphical apps provide a clear usability advantage, but why build a web app
    rather than a desktop app or a native mobile app?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图形化应用提供了明显的易用性优势，但为什么构建Web应用而不是桌面应用或原生移动应用呢？
- en: 'Over the past two decades, web apps have become increasingly popular for a
    whole host of reasons. Here are just a couple:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的二十年里，由于各种原因，Web应用变得越来越受欢迎。这里只列举几个原因：
- en: Web apps can run on pretty much any device that has a web browser. This means
    you can code your app once and have users be able to run your program on their
    computer, tablet or phone with no extra effort.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web应用几乎可以在任何拥有网页浏览器的设备上运行。这意味着您只需编写一次代码，用户就可以在他们的电脑、平板或手机上运行您的程序，无需额外努力。
- en: Users don't have to install or update web apps manually; by visiting the right
    web address, they are always using the latest version.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户无需手动安装或更新Web应用；通过访问正确的网址，他们始终使用最新版本。
- en: Web apps are especially popular within companies. Most companies today have
    an *intranet*, which is an internal network of web pages only open to their employees.
    Since all employees are used to accessing the intranet, it often makes a lot of
    sense for a company to host their internal programs on this intranet as web apps
    rather than have people go through the trouble of installing desktop or mobile
    apps.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Web应用在公司中特别受欢迎。如今，大多数公司都有一个*内部网络*，这是一个仅对员工开放的网页内部网络。由于所有员工都习惯于访问内部网络，因此对于公司来说，将他们的内部程序托管在这个内部网络上作为Web应用，而不是让人们费心安装桌面或移动应用，通常是有很多道理的。
- en: Of course, there are certainly valid reasons to build desktop or mobile apps
    instead, such as when performance or offline access is critical. However, for
    many use cases, the benefits of web apps make them the preferred choice for both
    developers and users.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，构建桌面或移动应用肯定有合理的理由，例如当性能或离线访问至关重要时。然而，对于许多用例来说，Web应用的优点使它们成为开发者和用户的首选选择。
- en: 1.1.3 What do you need to build a web app?
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.1.3 构建Web应用需要什么？
- en: 'Hopefully you''ve bought into the idea of creating web apps enough to turn
    to the next question: how?'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 希望您已经足够认同创建Web应用的想法，以至于转向下一个问题：如何？
- en: 'Generally speaking (and simplifying somewhat), a web app has two big parts:
    a *frontend* and a *backend*. The frontend contains the onscreen things that people
    interact with, such as buttons, textboxes, menus, and what have you. The backend
    has the actual logic that fulfills the app''s purpose, such as crunching numbers
    or looking something up in a database.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一般而言（并且稍微简化一下），一个Web应用有两个主要部分：一个*前端*和一个*后端*。前端包含人们与之交互的屏幕上的元素，例如按钮、文本框、菜单等等。后端包含实现应用目的的实际逻辑，例如处理数字或在数据库中查找信息。
- en: The skills and languages required to create the backend are quite different
    from those required for the frontend. You can write your backend logic in Python
    (which this book assumes you're familiar with), primarily focusing on getting
    your business logic to work.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 创建后端所需的技术和语言与前端所需的技术和语言相当不同。你可以用Python（本书假设你熟悉）编写你的后端逻辑，主要关注使你的业务逻辑工作。
- en: Writing the frontend, on the other hand, involves focusing on the user experience
    where there are fewer "right" answers. And importantly, it has traditionally required
    familiarity with a different set of languages. Learning these languages requires
    at least as much, and probably more, effort as it took to learn Python from scratch.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，编写前端需要关注用户体验，其中“正确”的答案较少。而且重要的是，它传统上需要熟悉不同的语言集。学习这些语言至少需要与从头开始学习Python一样多的努力，甚至可能更多。
- en: 'This problem has stymied many busy Python developers without the time to invest
    in acquiring a whole new skillset, and prevented them from building full-fledged
    web apps. Luckily for you, we have a solution today: Streamlit.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题困扰了许多忙碌的Python开发者，他们没有时间投入学习全新的技能集，从而阻止了他们构建完整的Web应用。幸运的是，今天我们有一个解决方案：Streamlit。
- en: 1.2 What is Streamlit?
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.2 什么是Streamlit？
- en: Streamlit is a pure Python frontend development library that lets you create
    web apps called *Streamlit apps* quickly and easily.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit是一个纯Python前端开发库，它允许你快速轻松地创建名为*Streamlit应用*的Web应用。
- en: As we've seen, a traditional challenge in Python development is that you need
    to either use a command line to execute your script or write non-Python code to
    create a visual interface if it's for the web. Streamlit disrupts this by allowing
    you to write a web-based UI in Python.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，Python开发中的一个传统挑战是，你需要使用命令行来执行你的脚本，或者如果你是为Web创建的，需要编写非Python代码来创建可视化界面。Streamlit通过允许你用Python编写基于Web的UI来颠覆了这一点。
- en: In fact, one of my favorite ways to describe Streamlit apps to people new to
    them is "think of them as Python scripts where you can click buttons and stuff.”
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我向那些对Streamlit不熟悉的人描述Streamlit应用的最喜欢的方式是：“把它们想象成你可以点击按钮和执行操作的Python脚本。”
- en: Originally launched in 2019, Streamlit has exploded in popularity and usage
    in the last couple of years, bolstered by—among other things we'll explore shortly—its
    easy-to-grok syntax, its value in data science, and its support for creating LLM-based
    chatbots. So much so that in 2022, it was acquired by Snowflake Inc. for $800M.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit最初于2019年推出，在过去的几年里，其流行度和使用量急剧增长，这得益于——我们将在稍后探讨的其他因素——其易于理解的语法、在数据科学中的价值以及其对基于LLM的聊天机器人的支持。如此之甚，以至于在2022年，它被Snowflake
    Inc.以8亿美元的价格收购。
- en: 'To give you a sense of Streamlit''s rise, figure 1.1 shows a Google Trends
    chart:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你对Streamlit的兴起有一个概念，图1.1显示了Google Trends图表：
- en: '![image](../Images/01__image001.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/01__image001.png)'
- en: 'Figure 1.1 A Google Trends chart that shows the popularity of Streamlit over
    time (note: the dip near the end of 2023 is the week between Christmas and New
    Year''s Day, when I assume relatively few people were working in the US)'
  id: totrans-43
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图1.1 一个显示Streamlit随时间流行趋势的Google Trends图表（注意：2023年底的下降是在圣诞节和新年之间的那一周，当时我假设在美国相对较少的人在工作）
- en: 1.3 10 reasons Streamlit is so popular
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.3 Streamlit为何如此受欢迎的10个原因
- en: As figure 1.1 shows, Streamlit has enjoyed a fairly steady rise in popularity,
    especially beginning in 2022\. Besides its vibrant community of individual users,
    the roster of companies that use Streamlit internally includes names such as Netflix,
    Airbnb, Stripe, and Square.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如图1.1所示，Streamlit的流行度稳步上升，特别是在2022年开始。除了其充满活力的个人用户社区外，使用Streamlit作为内部工具的公司名单中还包括Netflix、Airbnb、Stripe和Square等知名公司。
- en: There are many reasons that Streamlit has gained such acceptance, chief among
    them being its pure-Python nature and its ease-of-use for data science and AI
    applications in particular. In this section, we'll explore ten of these reasons.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit之所以受到如此多的接受，有很多原因，其中最重要的是其纯Python本质，以及它在数据科学和AI应用中的易用性。在本节中，我们将探讨这十个原因之一。
- en: 1.3.1 Streamlit is pure Python
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.3.1 Streamlit 是纯 Python
- en: Any code you write with Streamlit is Python code.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你用 Streamlit 编写的任何代码都是 Python 代码。
- en: Traditionally, creating a web-based interface has required developers to write
    HTML, CSS and Javascript, the three stalwart languages of the web. *HyperText
    Markup Language* (HTML) is used for page structure, *Cascading StyleSheets (*CSS)
    for appearance and layout, and *Javascript* for functionality.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，创建基于网络的界面需要开发者编写 HTML、CSS 和 JavaScript，这是网络的三种支柱语言。*超文本标记语言*（HTML）用于页面结构，*层叠样式表*（CSS）用于外观和布局，而
    *JavaScript* 用于功能。
- en: The trouble is, these languages (especially CSS and Javascript) can be hard
    to master if you want to create something relatively complex. There are frameworks
    built on top of these languages that help, but more often than not these have
    a learning curve, too. In any case, you'd still need to know HTML, CSS, and Javascript
    to use them effectively.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于，如果你想要创建相对复杂的东西，这些语言（尤其是 CSS 和 JavaScript）可能很难掌握。在这些语言之上构建的框架可以帮助，但往往也有学习曲线。无论如何，你仍然需要了解
    HTML、CSS 和 JavaScript 才能有效地使用它们。
- en: Python, due to factors such as its ease-of-use and its rich ecosystem of libraries
    for data wrangling and analysis, is popular among data scientists, hobbyists,
    and even semi-technical people who learned it to help with their day jobs (and
    because it's fun). These groups are illustrated in figure 1.2\. Their skillset
    may not extend to the three web languages, or they may only have a passing knowledge
    of them—usually not enough to create complex applications.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其易用性和丰富的数据处理和分析库生态系统，Python 在数据科学家、爱好者甚至那些为了帮助日常工作（以及因为其乐趣）而学习它的人中很受欢迎。这些群体在图
    1.2 中展示。他们的技能可能不涉及三种网络语言，或者他们可能只是对它们有肤浅的了解——通常不足以创建复杂的应用程序。
- en: '![image](../Images/01__image002.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/01__image002.png)'
- en: Figure 1.2 Streamlit unlocks web app development for anyone who knows Python
    and helps even full stack developers prototype and build faster
  id: totrans-53
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图 1.2 Streamlit 为任何了解 Python 的人解锁了网络应用程序开发，并帮助全栈开发者更快地进行原型设计和构建
- en: Streamlit is a boon to these people because it lowers a huge barrier for them;
    it lets them create rich applications for the web without first having to invest
    time in learning another stack of languages.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些人来说，Streamlit 是一大福音，因为它降低了他们的一大障碍；它让他们能够在不首先投入时间学习另一套语言的情况下创建丰富的网络应用程序。
- en: 1.3.2 Streamlit lets you go from idea to app in minutes
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.3.2 Streamlit 让你几分钟内从想法到应用程序
- en: When you start using Streamlit, I can guarantee that you'll be impressed by
    how little time it takes to create a working application.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始使用 Streamlit 时，我可以保证你会对创建一个工作应用程序所需的时间之短感到印象深刻。
- en: Due to its intuitiveness and the fact that it gives you sensible defaults for
    most things (which means you don't have to customize or configure them manually
    to look and work great), apps created in Streamlit are really quick to develop.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其直观性和它为大多数事情提供合理的默认值（这意味着你不需要手动自定义或配置它们以看起来和工作得很好），在 Streamlit 中创建的应用程序开发速度非常快。
- en: Indeed, often, the time it takes to go from an idea to a fully working app can
    be measured in minutes rather than hours or days.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，从想法到完全工作的应用程序所需的时间往往可以以分钟来衡量，而不是小时或天。
- en: 1.3.3 Streamlit makes beautiful apps
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.3.3 Streamlit 制作美观的应用程序
- en: Even if you do know some of the web-based languages I mentioned earlier, *knowing*
    them is very different from being skilled at *using* them to create web pages
    that look good.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你确实知道我之前提到的某些基于网络的编程语言，*了解*它们与*熟练使用*它们来创建外观良好的网页是非常不同的。
- en: In Streamlit, the apps and pages you create are beautiful by default. That's
    because the elements (individual parts of an app, such as buttons, checkboxes
    or tabs) that Streamlit creates for you have been pre-designed to look good. All
    you have to do is put them together.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Streamlit 中，你创建的应用程序和页面默认就是美观的。这是因为 Streamlit 为你创建的元素（应用程序的各个部分，如按钮、复选框或标签页）已经预先设计得很好看。你所要做的就是将它们组合起来。
- en: As anyone who has used CSS to style a web page by hand (or tried to, at any
    rate) can tell you, it can be frustratingly hard to get just the right spacing
    you want between the edges of a button and its text, or the unique shadow effect
    you've dreamt up. And if, through force of will, you manage to implement exactly
    what you had in mind, it's *still* not guaranteed to be pretty, because UI design
    is as much art as it is science.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 任何手动使用CSS为网页添加样式（或者至少尝试过）的人都会告诉你，要在按钮的边缘和文本之间得到你想要的间距，或者实现你梦想中的独特阴影效果，可能会非常困难。而且，即使你通过意志力实现了你心中的想法，也不一定保证它会看起来漂亮，因为UI设计既是艺术也是科学。
- en: Streamlit doesn't necessarily solve all of those problems for you, but it *does*
    make it so you have to go out of your way to create something that *doesn't* look
    nice.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit并不一定为你解决所有这些问题，但它确实使得你必须费尽周折才能创建出看起来不美观的东西。
- en: 1.3.4 Streamlit lets you focus on your app, not UI details
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.3.4 Streamlit让你专注于你的应用，而不是UI细节
- en: 'Giving you pre-designed elements you can then combine to create apps has another
    advantage; it frees up your time to focus on the part you know best: your app''s
    logic.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 给你预设计的元素，然后你可以将它们组合起来创建应用，这还有一个优点；它释放了你的时间，让你可以专注于你最擅长的部分：你的应用逻辑。
- en: Streamlit intentionally limits the UI choices you can make by choosing *for*
    you.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit有意限制了你可以做出的UI选择，因为它为你做出了选择。
- en: As an example, take the snippet of code shown in Listing 1.1
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以列表1.1中显示的代码片段为例
- en: Listing 1.1 Using tabs in Streamlit
  id: totrans-68
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 列表1.1 在Streamlit中使用标签
- en: '[PRE0]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You don't need to know how this works just yet, but it produces the tabbed page
    shown in figure 1.3.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在不需要知道它是如何工作的，但它会产生如图1.3所示的带标签的页面。
- en: '![image](../Images/01__image003.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/01__image003.png)'
- en: Figure 1.3 Tabs in Streamlit, illustrating how Streamlit makes UI choices for
    you
  id: totrans-72
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图1.3 Streamlit中的标签，展示了Streamlit如何为你做出UI选择
- en: Turn your attention to the tab bar at the top. Notice the orange line beneath
    the tab we're currently on and the way the tab we're hovering over on is highlighted.
    Also, though you can't see it in a screenshot, the transition from one tab to
    another has a small animation where the orange line moves under the new tab.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的注意力转向顶部的标签栏。注意我们当前所在的标签下的橙色线条以及我们悬停的标签被突出显示的方式。尽管在截图上看不到，但从一个标签切换到另一个标签时，会有一个小动画，橙色线条会移动到新的标签下。
- en: 'The line that produces the tab bar is the following:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 生成标签栏的行如下：
- en: '[PRE1]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Notice how nothing in this line says anything about the styling we just discussed.
    We essentially just said "tabs" and Streamlit took care of the details for us.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这一行并没有提到我们刚才讨论的任何关于样式的内容。我们本质上只是说了“标签”，而Streamlit为我们处理了细节。
- en: This is because Streamlit correctly recognizes that most developers don't want
    to design these UI-related minutiae and would much rather spend that time implementing
    their business logic.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为Streamlit正确地认识到，大多数开发者不想设计这些与UI相关的细节，他们更愿意花时间实现他们的业务逻辑。
- en: The result is that Streamlit app developers are highly productive, and able
    to churn out sensible interfaces that complement rather than detract from their
    functionality.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，Streamlit应用开发者非常高效，能够快速生成合理的界面，这些界面补充而不是削弱了它们的功能。
- en: That said, there is ultimately a tradeoff here between hassle-free UI development
    and fine-grained control. Streamlit works great for you if you care about the
    former, but not the latter. If you want to be able to exercise a lot of control
    over the finer aspects of your interface, Streamlit may not be the tool for you.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，这里在无障碍UI开发和细粒度控制之间有一个权衡。如果你关心前者，Streamlit对你来说是个不错的选择，但如果你想要对界面的细微方面有更多的控制，Streamlit可能不是适合你的工具。
- en: For instance, as of the time of writing, if you wanted to put a shaded box around
    the current tab instead of a line underneath, you can't do that easily or without
    knowing HTML and CSS.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，截至写作时，如果你想在一个当前标签周围放置一个阴影框而不是下方的线条，你无法轻松地做到这一点，除非你了解HTML和CSS。
- en: 1.3.5 Streamlit's syntax is simple, concise, and intuitive
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.3.5 Streamlit的语法简单、简洁且直观
- en: One of the things I've always admired about Streamlit is how readable the syntax
    is. Like Python itself, Streamlit code is self-documenting and you'll often find
    what it does obvious.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我一直很欣赏Streamlit的一个特点就是它的语法可读性。就像Python本身一样，Streamlit的代码是自文档化的，你经常会发现它的功能很明显。
- en: For example, let's say you want to simulate the roll of a die and plot the results
    in a graph. Consider the four-line snippet shown in Listing 1.2 that does this.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设你想模拟掷骰子的过程，并在图表中展示结果。考虑列表1.2中展示的四个代码片段，它就是用来实现这一功能的。
- en: Listing 1.2 A die roll simulator in Streamli
  id: totrans-84
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 列表1.2 Streamlit中的骰子模拟器
- en: '[PRE2]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can see the output in figure 1.4.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在图1.4中看到输出。
- en: '![image](../Images/01__image004.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/01__image004.png)'
- en: Figure 1.4 Output of a die roll simulator in Streamlit
  id: totrans-88
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图1.4 Streamlit中骰子模拟器的输出
- en: 'Notice how you can likely read the code in Listing 1.2 and make sense of it
    without having seen a single line of Streamlit code before: we show a title, display
    a slider for the user to pick the number of die rolls to plot (between 10 and
    100), show a "Plot graph" button, and when it''s clicked, we generate the die
    rolls (random numbers between 1 and 6) and plot them in a line chart.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，你很可能在阅读列表1.2中的代码时就能理解它的含义，即使你之前从未见过任何一行Streamlit代码：我们展示了一个标题，显示一个滑块供用户选择要绘制的骰子投掷次数（在10到100之间），显示一个“绘制图表”按钮，当点击该按钮时，我们生成骰子投掷（1到6之间的随机数）并在折线图中绘制它们。
- en: There's none of the "setup" code that you would see with other languages or
    libraries, such as defining a handler to listen for a button-click event or defining
    a laundry list of attributes for the slider. It's short and simple.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他语言或库（如定义一个处理程序来监听按钮点击事件或定义一系列滑块的属性）相比，这里没有“设置”代码。它既简短又简单。
- en: 1.3.6 Streamlit is great with LLMs
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.3.6 Streamlit非常适合LLMs
- en: For better or for worse, technology had a watershed moment in 2022 with the
    launch and subsequent reception of OpenAI's generative AI chatbot, ChatGPT.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 无论好坏，2022年，随着OpenAI的生成式AI聊天机器人ChatGPT的推出及其随后的反响，技术经历了一个分水岭时刻。
- en: 'To understand how the rise of generative AI has resulted in an explosion in
    popularity for Streamlit, consider the following:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解生成式AI的兴起如何导致Streamlit的流行爆炸，请考虑以下内容：
- en: AI has captured the world's imagination.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AI已经吸引了全世界的想象力。
- en: Python is the most popular language for AI development because of its wide adoption
    across the industry and its rich ecosystem of AI-related libraries such as TensorFlow,
    PyTorch, scikit-learn, and LangChain.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python是AI开发中最流行的语言，因为它在行业中的广泛应用以及其丰富的AI相关库生态系统，如TensorFlow、PyTorch、scikit-learn和LangChain。
- en: Streamlit is the fastest way to write visual apps in Python.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Streamlit是编写Python中视觉应用最快的方式。
- en: The intersection of these facts has meant that developers of all stripes have
    been flocking to Streamlit to develop AI apps.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这些事实的交汇意味着各种类型的开发者都纷纷涌向Streamlit来开发AI应用。
- en: Streamlit itself was quick to capitalize on the sudden popularity of Large Language
    Models (LLMs) like GPT.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit本身迅速利用了大型语言模型（LLMs）如GPT的突然流行。
- en: For instance, Streamlit makes writing conversational chatbots a cinch through
    the introduction of chat elements.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Streamlit通过引入聊天元素，使得编写对话式聊天机器人变得轻而易举。
- en: 'Listing 1.3 shows a *complete* working AI chatbot I built using Streamlit chat
    elements in less than 30 lines of code:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 列表1.3展示了使用Streamlit聊天元素在不到30行代码内构建的*完整*工作AI聊天机器人：
- en: Listing 1.3 A working AI chatbot in less than 30 lines of code
  id: totrans-101
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 列表1.3 在不到30行代码内实现的AI聊天机器人
- en: '[PRE3]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-103
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 注意
- en: To get this to work, you need to make an OpenAI account, generate an API key
    and plug it into the line `os.environ["OPENAI_API_KEY"] = "sk-..."`. Importantly,
    the above code is for demonstration purposes only. In practice, you should never
    include API keys in any code that you distribute or share. Later in this book,
    we'll explore how to work around this.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要使这生效，你需要创建一个OpenAI账户，生成一个API密钥并将其插入到`os.environ["OPENAI_API_KEY"] = "sk-..."`这一行。重要的是，上述代码仅用于演示目的。在实际操作中，你永远不应该在任何你分发或共享的代码中包含API密钥。本书后面我们将探讨如何解决这个问题。
- en: Figure 1.5 shows the output of our code. You don't have to understand the code
    just yet, but you can hopefully see that Streamlit created a fully functional
    chat interface for us, complete with cute little bot and user avatars.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5展示了我们代码的输出。你目前不需要理解代码，但希望你能看到Streamlit为我们创建了一个完整的聊天界面，包括可爱的小机器人和使用者头像。
- en: '![image](../Images/01__image005.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/01__image005.png)'
- en: Figure 1.5 A complete AI chatbot in Streamlit
  id: totrans-107
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图1.5 Streamlit中的完整AI聊天机器人
- en: Time will tell if the hype around generative AI proves to be well-founded. In
    the meantime, if you're considering writing an AI app, Streamlit has you covered.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 时间将证明围绕生成式AI的炒作是否是合理的。与此同时，如果你正在考虑编写AI应用，Streamlit为你提供了支持。
- en: 1.3.7 You can share your Streamlit apps for free, in record time
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.3.7 你可以在创纪录的时间内免费分享你的 Streamlit 应用程序
- en: Building a web app is one thing, but making it available to people is quite
    another. For a public-facing web app that doesn't use Streamlit, usually that
    involves finding a way to host it (such as using a cloud provider like AWS or
    even acquiring and managing your own servers).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 建立一个网络应用程序是一回事，但使其对人们可用则是另一回事。对于一个不使用 Streamlit 的面向公众的网络应用程序，通常这涉及到找到一种托管方式（例如使用云服务提供商如
    AWS 或甚至获取和管理你自己的服务器）。
- en: All of this can seem intimidating (not to mention expensive) to the time-strapped
    data scientist or casual hobbyist, especially if the app they're trying to distribute
    is relatively simple and doesn't need to cater to thousands of users.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些对于时间紧迫的数据科学家或业余爱好者来说可能看起来令人畏惧（更不用说昂贵的了），尤其是如果他们试图分发的应用程序相对简单，不需要迎合成千上万的用户。
- en: Enter Streamlit Community Cloud, a completely free and fast way to deploy an
    unlimited number of public-facing Streamlit apps, designed with the same simplicity
    that you'll find in Streamlit itself. Using it is as simple as linking your GitHub
    repository (a way to share your code and manage different versions) to it.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 进入 Streamlit 社区云，这是一种完全免费且快速的方式，可以部署无限数量的面向公众的 Streamlit 应用程序，其设计理念与 Streamlit
    本身一样简单。使用它就像将你的 GitHub 仓库（一种分享代码和管理不同版本的方式）链接到它一样简单。
- en: In fact, most of the projects and examples used in this book, besides being
    available on GitHub, have also been published to Streamlit Community Cloud where
    you can access and play with them.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，本书中使用的许多项目和示例，除了在 GitHub 上可用外，还已在 Streamlit 社区云上发布，你可以访问并与之互动。
- en: Community Cloud does come with limitations, so it may not be for everyone, but
    it is a nice, hassle-free way to share your creations.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 社区云确实有限制，所以它可能不是适合每个人，但它是一种方便的、无烦恼的方式，可以分享你的创作。
- en: We discuss deploying to Community Cloud in detail in Chapter 5, and other options
    in Chapter 12 if Community Cloud doesn't meet your specific needs.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在第 5 章中详细讨论了部署到社区云，如果社区云不能满足你的特定需求，第 12 章中还有其他选项。
- en: 1.3.8 Streamlit has a huge, friendly community
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.3.8 Streamlit 拥有一个庞大而友好的社区
- en: Streamlit's user base is growing every day, and the more it grows, the more
    questions people have. Luckily, Streamlit's forums are friendly and the members
    (including the team behind Streamlit) are quite responsive.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 的用户基础每天都在增长，而且增长得越多，人们提出的问题就越多。幸运的是，Streamlit 的论坛很友好，成员（包括 Streamlit
    背后的团队）反应相当迅速。
- en: In researching this book, for instance, I needed to find out more about how
    Streamlit works under the hood. A forum comment by a Streamlit engineer helped
    me identify the right place to check in the source code.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在研究这本书时，我需要了解更多关于 Streamlit 内部工作原理的信息。一位 Streamlit 工程师在论坛上的评论帮助我确定了在源代码中检查的正确位置。
- en: If you've exhausted your Google-fu and still have a question that stumps you,
    help is at hand.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经用尽了你的 Google 技巧，但仍有一个让你困惑的问题，那么帮助就在手边。
- en: 1.3.9 Streamlit has excellent support for data science and visualizations
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.3.9 Streamlit 对数据科学和可视化有出色的支持
- en: Streamlit's original design prioritized data scientists, so you may be unsurprised
    to learn that it has great support for all sorts of data visualizations, powered
    by Python's already-rich set of visualization libraries.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 的原始设计优先考虑数据科学家，因此你可能会惊讶地了解到它对各种数据可视化有着强大的支持，这得益于 Python 已经丰富的可视化库集。
- en: This means that you can use your favorite visualization library to create charts
    (Matplotlib, Plotly, Altair etc.), graphs (GraphViz) or 3D renders (PyDeck), and
    display them in Streamlit.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着你可以使用你喜欢的可视化库来创建图表（Matplotlib、Plotly、Altair 等）、图形（GraphViz）或 3D 渲染（PyDeck），并在
    Streamlit 中显示它们。
- en: Figure 1.6 shows a histogram rendered in Streamlit using the Matplotlib library.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 显示了使用 Matplotlib 库在 Streamlit 中渲染的直方图。
- en: '![image](../Images/01__image006.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/01__image006.png)'
- en: Figure 1.6 A histogram in Streamlit created using the popular Matplotlib library
  id: totrans-125
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图 1.6 使用流行的 Matplotlib 库在 Streamlit 中创建的直方图
- en: Streamlit also works great with Pandas, which is an extremely popular library
    that makes working with tabular data easy via its central concept of dataframes.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 还与 Pandas 非常兼容，Pandas 是一个非常受欢迎的库，它通过其中心概念数据框使处理表格数据变得容易。
- en: A dataframe is a table-based data structure that enables developers to ingest,
    wrangle and analyze data in various ways. If you're a data scientist, there's
    a good chance that you use it regularly in your work.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框是一种基于表格的数据结构，使开发者能够以各种方式摄取、整理和分析数据。如果你是数据科学家，那么你很可能在工作中经常使用它。
- en: Streamlit has first-class support for dataframes with the ability to display
    them directly and even edit them visually.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit对数据框提供了一级支持，能够直接显示它们，甚至可以直观地编辑它们。
- en: Figure 1.7 shows an example of this where we enable the user to edit a Pandas
    dataframe live in the Streamlit app.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.7展示了这一示例，其中我们允许用户在Streamlit应用程序中实时编辑Pandas数据框。
- en: '![image](../Images/01__image007.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../Images/01__image007.png)'
- en: Figure 1.7 An editable Pandas dataframe as displayed in Streamlit
  id: totrans-131
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图1.7 在Streamlit中显示的可编辑的Pandas数据框
- en: We'll explore Pandas and dataframes in more detail in a later chapter.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后面的章节中更详细地探讨Pandas和数据框。
- en: 1.3.10 You can extend Streamlit with third-party components or build your own
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.3.10 您可以使用第三方组件扩展Streamlit或构建自己的组件
- en: As we saw earlier, Streamlit saves you time by providing pre-built UI elements
    and limits the amount of customization you can perform on them.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前所见，Streamlit通过提供预构建的UI元素并限制您对这些元素可进行的自定义程度来节省您的时间。
- en: Most of the time, this is actually a good thing since it gives you space to
    focus on your logic. Other times, it can feel restrictive because the specific
    experience you have in mind may be challenging to build out of the box with Streamlit's
    building blocks.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，这实际上是一件好事，因为它给您留出了空间来专注于您的逻辑。有时，它可能会感觉有些限制，因为您心中所想的特定体验可能难以使用Streamlit的构建块直接构建。
- en: In these situations, Streamlit provides a way out in the form of Streamlit Components,
    which are modules that third-party developers can create to extend its functionality.
    Streamlit Components can range from things that fill perceived gaps in Streamlit's
    natively-available elements, such as a search box with autocomplete, to entire
    mini-apps (an audio recorder, say) that you can embed in your app.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，Streamlit提供了Streamlit组件的形式作为出路，这些组件是第三方开发者可以创建以扩展其功能的模块。Streamlit组件的范围可以从填补Streamlit原生可用元素中感知到的空白的东西，如带有自动完成的搜索框，到可以嵌入到您的应用程序中的完整迷你应用程序（例如音频录音机）。
- en: Streamlit publishes popular components in a gallery on its website where you
    can view how they look and work. Installing a component is as easy as installing
    any other Python library.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit在其网站上发布了一个组件库，您可以在其中查看它们的外观和工作方式。安装组件就像安装任何其他Python库一样简单。
- en: If you have some frontend development experience, you can even create your own
    components. This does require knowledge of the web languages we mentioned earlier
    (HTML, CSS, and Javascript), but can enable you to fine-tune the experience you
    create for your users. We explore how to create our own Streamlit Components in
    Chapter 15.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一些前端开发经验，您甚至可以创建自己的组件。这确实需要我们之前提到的网络语言（HTML、CSS和JavaScript）的知识，但可以使您能够微调为您的用户创建的体验。我们将在第15章中探讨如何创建我们自己的Streamlit组件。
- en: 1.4 What can you build with Streamlit?
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.4 您可以用Streamlit构建什么？
- en: Streamlit offers a versatile platform for creating a wide array of interactive
    applications. In this section, we'll explore the diverse range of projects that
    can be built using Streamlit, showcasing its adaptability and utility.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit提供了一个灵活的平台，用于创建各种交互式应用。在本节中，我们将探讨使用Streamlit可以构建的多种项目，展示其适应性和实用性。
- en: 1.4.1 Data applications
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.4.1 数据应用
- en: Streamlit was originally designed for data scientists, and its usefulness in
    creating data applications remains one of its greatest selling points.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit最初是为数据科学家设计的，它在创建数据应用方面的实用性仍然是其最大的卖点之一。
- en: 'The kinds of data-related applications you can create with Streamlit include,
    but are not limited to:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以用Streamlit创建的数据相关应用包括但不限于：
- en: Dashboards that display metrics that decision makers at a company care about
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示公司决策者关心的指标的仪表板
- en: Data exploration apps that enable you to dive into and get a feel for datasets
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据探索应用，使您能够深入了解并感受数据集
- en: Visualizations that users can interact with to understand data better
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以与之交互以更好地理解数据的可视化
- en: Machine learning model deployments that enable users to upload inputs to get
    back predictions
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许用户上传输入以获取预测的机器学习模型部署
- en: 1.4.2 Internal tools for your workplace
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.4.2 工作场所内部工具
- en: Data apps may be the most well-known use case for Streamlit, but in my opinion,
    it is equally well-suited for developing internal tools for employees at your
    company.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 数据应用可能是Streamlit最知名的使用案例，但在我看来，它同样适合于开发您公司员工的内部工具。
- en: 'This might include applications such as:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能包括以下应用程序：
- en: Project management dashboards
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目管理仪表板
- en: Time tracking apps
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间跟踪应用
- en: Shift scheduling tools
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轮班调度工具
- en: Inventory management systems
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 库存管理系统
- en: File converter utilities, and more.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件转换工具等。
- en: 'Several factors make these tools ideal candidates for Streamlit apps:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 几个因素使这些工具成为 Streamlit 应用程序的理想候选者：
- en: They generally need only cater to a limited number of concurrent users
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们通常只需要服务于有限数量的并发用户
- en: They are scrappy in nature and may be required in a short time frame
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们本质上是灵活的，可能需要在短时间内完成
- en: Most companies don't have room in their budgets to hire full-time engineers
    to build them
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数公司没有足够的预算来雇佣全职工程师来构建它们
- en: Streamlit is easy enough that even semi-technical people with a passing knowledge
    of Python can wield it quite effectively to build what they need.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 足够简单，即使是那些对 Python 只有基本了解的半技术人士也能非常有效地使用它来构建他们所需的内容。
- en: 1.4.3 Apps that use Generative AI like LLMs
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.4.3 使用类似 LLM 的生成式 AI 的应用程序
- en: Writing generative AI apps often tends to involve adding a thin layer of business
    logic on top of API calls to a generative AI service such as OpenAI's GPT or Anthropic's
    Claude.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 编写生成式 AI 应用程序通常涉及在调用生成式 AI 服务（如 OpenAI 的 GPT 或 Anthropic 的 Claude）的 API 上添加一层薄薄的业务逻辑。
- en: Streamlit works quite well for these tools, letting you roll out AI functionality
    with a UI in a short time with out-of-the-box support for common AI form factors
    such as chatbots.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 对于这些工具来说工作得相当不错，它允许你通过内置对常见 AI 形式（如聊天机器人）的支持，在短时间内推出带有 UI 的 AI 功能。
- en: It also helps that Python's libraries for interacting with generative AI (LangChain,
    for one) are second to none, and Streamlit is perfectly placed to take advantage
    of them.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Python 用于与生成式 AI 交互的库（例如 LangChain）无与伦比，Streamlit 完美地处于利用这些库的位置。
- en: '![image](../Images/01__image008.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/01__image008.png)'
- en: Figure 1.8 An AI interviewer chatbot from Streamlit's app gallery ([https://aiinterviewer.streamlit.app/](https://aiinterviewer.streamlit.app/))
  id: totrans-166
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图 1.8 Streamlit 应用程序库中的 AI 面试聊天机器人（[https://aiinterviewer.streamlit.app/](https://aiinterviewer.streamlit.app/))
- en: 1.4.4 Prototypes for large apps
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.4.4 大型应用程序的原型
- en: Streamlit can be useful even to a dedicated software engineering team tasked
    with building a large, ambitious application. Such projects tend to be expensive
    in terms of developer time and effort to develop, and the work is spread out over
    months or years. Even with an iterative approach to development, it frequently
    takes a long time to see any results, at which point many incorrect and expensive-to-fix
    assumptions may have been made.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是负责构建大型、雄心勃勃应用程序的专用软件工程团队，Streamlit 也可能很有用。这类项目在开发时间和精力上往往成本高昂，工作可能持续数月或数年。即使采用迭代开发方法，通常也需要很长时间才能看到任何结果，到那时，许多错误且难以修复的假设可能已经形成。
- en: Early design mocks help solve this issue, but prototypes are even better. With
    Streamlit, you can churn out lightweight working prototypes that mimic the functionality
    of the larger app quickly. This shows stakeholders what to expect, and helps validate
    basic assumptions about the functionality early on in the process.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 早期设计草图有助于解决这个问题，但原型甚至更好。使用 Streamlit，你可以快速生成轻量级的原型，模仿大型应用程序的功能。这有助于利益相关者了解预期，并在流程早期验证关于功能的基本假设。
- en: If you're a software engineer, going through this exercise not only saves the
    company time and money in the long run; it also drums up excitement among your
    partners and builds support for your work because people appreciate something
    they can experience first-hand more than design documents and mocks.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一名软件工程师，进行这项练习不仅可以从长远角度为公司节省时间和金钱；它还能在合作伙伴中激起兴奋，并建立对你工作的支持，因为人们更欣赏那些他们可以亲身体验的东西，而不是设计文档和草图。
- en: 1.4.5 Anything else you can dream up
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.4.5 你能想到的其他任何东西
- en: Earlier in the chapter, I characterized Streamlit apps as "Python scripts where
    you can click buttons''. What this boils down to is that your Streamlit app can
    do pretty much anything Python can.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章早期，我把 Streamlit 应用程序描述为“你可以点击按钮的 Python 脚本”。这归结为你的 Streamlit 应用程序几乎可以做 Python
    能做的任何事情。
- en: 'You don''t have to use Streamlit in ways that people are familiar with. You
    can find new, creative things to code up into an app. Here are some unconventional
    app ideas for inspiration:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 你不必以人们熟悉的方式使用 Streamlit。你可以找到新的、富有创意的事情来编写成应用程序。以下是一些不寻常的应用程序想法以供参考：
- en: A personal AI habit-building buddy that lets you record your activity and offers
    advice and encouragement
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个个人 AI 习惯培养伙伴，让你记录你的活动并提供建议和鼓励
- en: A maze generator that generates fun puzzles (see figure 1.9)
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个生成有趣谜题的迷宫生成器（见图 1.9）
- en: A laundry tracker that keeps track of when your clothes need to be washed
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个追踪衣物何时需要洗涤的洗衣追踪器
- en: The point is, you should feel free to experiment! Often, learning a technology
    sparks ideas about new potential applications of it that only you could have thought
    about!
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 重点是，你应该自由地尝试！通常，学习一项技术会激发关于其新潜在应用的灵感，这些灵感可能只有你自己能想到！
- en: '![image](../Images/01__image009.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![image](../Images/01__image009.png)'
- en: Figure 1.9 Dungeon, a game created with Streamlit ([https://dungeon.streamlit.app/](https://dungeon.streamlit.app/))
  id: totrans-179
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 图1.9 地牢，一个使用Streamlit创建的游戏 ([https://dungeon.streamlit.app/](https://dungeon.streamlit.app/))
- en: 1.5 What not to use Streamlit for
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.5 不要使用Streamlit的场景
- en: Like any other technology, Streamlit comes with tradeoffs. Let's address these
    by taking a look at a few things you can't (or probably shouldn't) use Streamlit
    to develop.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何其他技术一样，Streamlit也有其权衡之处。让我们通过查看一些你不能（或可能不应该）使用Streamlit来开发的事情来解决这个问题。
- en: 1.5.1 Complex, large-scale applications
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.5.1 复杂、大规模应用
- en: The size of a Streamlit app's ideal user base is likely measured in the hundreds
    or thousands of users, not in the millions.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit应用的理想用户规模可能以数百或数千用户计算，而不是数百万。
- en: When it comes to concurrent users (users accessing your app at the same time),
    depending on the kind of app you're creating and its resource requirements to
    serve a single user, once you cross a threshold, your app may have trouble scaling.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到并发用户（同时访问你的应用的用户）时，根据你创建的应用类型及其为单个用户提供服务所需的资源需求，一旦超过阈值，你的应用可能难以扩展。
- en: As we'll see in a later chapter, Streamlit works by running your entire Python
    script from top to bottom each time something needs to change on the app screen.
    This can have implications for performance, especially if your script executes
    heavy computations. Streamlit's caching feature can usually mitigate this issue,
    but you may occasionally encounter situations where you can't use caching.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们将在后面的章节中看到的，Streamlit通过每次应用屏幕上需要更改时从头到尾运行整个Python脚本来实现工作。这可能会对性能产生影响，特别是如果你的脚本执行了大量的计算。Streamlit的缓存功能通常可以缓解这个问题，但你可能会偶尔遇到无法使用缓存的情况。
- en: There are other reasons that Streamlit may be unsuitable for large production-grade
    applications, though you can often overcome these limitations by using third-party
    components. For instance, Streamlit doesn't have a built-in authentication feature,
    but there are Streamlit components created by other people that add this (e.g.,
    `streamlit-authenticator`).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Streamlit可能不适合大型生产级应用，但你通常可以通过使用第三方组件来克服这些限制。例如，Streamlit没有内置的认证功能，但其他人创建的Streamlit组件可以添加这一功能（例如，`streamlit-authenticator`）。
- en: As the complexity of your app increases, you may find yourself straying from
    the beaten path more frequently. While the Streamlit forums are invaluable for
    identifying workarounds for features that Streamlit is missing, once your app
    reaches a certain level of sophistication, migrating to a different, more flexible
    framework (such as Flask, Django or some of the other options we explored earlier)
    with enhanced capabilities may be warranted.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你的应用复杂性的增加，你可能会发现自己越来越偏离常规路径。虽然Streamlit论坛对于识别Streamlit缺少的功能的解决方案非常有价值，但一旦你的应用达到一定程度的复杂性，迁移到不同、更灵活的框架（如Flask、Django或我们之前探索的其他选项）并增强其功能可能是合理的。
- en: 1.5.2 Apps that require a high degree of UI customization
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.5.2 需要高度UI定制的应用
- en: Streamlit is designed to simplify adding most common UI elements into your app,
    but now and then you may run into situations where you want fine-grained control
    over how a part of your interface works. Streamlit's limited customizability may
    pose challenges here.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit旨在简化将大多数常见UI元素添加到你的应用中，但有时你可能会遇到想要精细控制界面某部分工作方式的情况。Streamlit有限的定制性可能会在这里带来挑战。
- en: Though Streamlit does offer some relief in the form of theming for color customization
    or the ability to write your own components (or include ones others have shared)
    to augment its native functionality, the larger point stands.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Streamlit确实提供了一些缓解措施，例如主题化以进行颜色定制或编写自己的组件（或包含他人共享的组件）以增强其原生功能，但更大的问题仍然存在。
- en: If you need to have precise control over how your app looks or if there are
    specific visual effects you're trying to achieve, Streamlit may not be for you.
    Consider alternatives like React, a framework known for its flexibility and extensive
    customization capabilities (explored in the following section), or even manual
    page design with traditional HTML and CSS.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要精确控制应用程序的外观或如果你正在尝试实现特定的视觉效果，Streamlit 可能不适合你。考虑其他替代方案，如 React，这是一个以其灵活性和广泛的定制能力而闻名的框架（将在下一节中探讨），或者甚至使用传统的
    HTML 和 CSS 进行手动页面设计。
- en: 1.5.3 Native desktop or mobile apps
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.5.3 原生桌面或移动应用程序
- en: Streamlit is a web framework, meaning that it produces apps that run within
    a web browser. If you're trying to develop desktop or mobile apps outside the
    browser, opt for native application frameworks such as PyQt or React Native.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 是一个网络框架，这意味着它产生的应用程序是在网络浏览器中运行的。如果你试图在浏览器外开发桌面或移动应用程序，请选择原生应用程序框架，如
    PyQt 或 React Native。
- en: It's worth mentioning that you can still access Streamlit apps on mobile devices;
    the point here is that Streamlit does not produce standalone Android or iOS apps
    that run independently of the browser.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，你仍然可以在移动设备上访问 Streamlit 应用程序；这里的重点是 Streamlit 不会产生独立于浏览器的独立运行的 Android
    或 iOS 应用程序。
- en: 1.6 How is Streamlit different from other technologies?
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.6 Streamlit 与其他技术有何不同？
- en: If you've thought about or researched ways to create interactive applications
    in the past, chances are that you've come across or possibly used technologies
    similar or related to Streamlit before. This section compares Streamlit to some
    of these in an effort to clarify your understanding.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你过去考虑过或研究过创建交互式应用程序的方法，那么你很可能之前遇到过或可能使用过与 Streamlit 类似或相关的技术。本节旨在通过比较 Streamlit
    与这些技术来澄清你的理解。
- en: 1.6.1 Jupyter notebooks
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.6.1 Jupyter 笔记本
- en: 'A Jupyter notebook is an interactive environment for data exploration and working
    with code and visualizations. The concept is fairly simple: you write Python code
    (or even just text or markdown) in a "cell,” execute it, and see the output (which
    can be text, some kind of visualization or even something interactive) directly
    below. The output of each cell is retained so you can see what came before it.'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter 笔记本是一个用于数据探索和与代码及可视化一起工作的交互式环境。概念相当简单：你在“单元格”中编写 Python 代码（或者甚至只是文本或
    Markdown），执行它，并直接在下面看到输出（可以是文本、某种可视化甚至交互式内容）。每个单元格的输出都会保留，这样你就可以看到它之前的内容。
- en: Useful for things like explaining your thought process, playing around with
    data, and sharing your work with colleagues, Jupyter notebooks have become a mainstay
    in the data science community.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 对于解释你的思维过程、玩弄数据以及与同事分享你的工作等用途来说，Jupyter 笔记本已经成为数据科学社区的一个主流工具。
- en: 'Jupyter is similar to Streamlit in a few respects: they are both Python-based,
    both support tabular and graphical data, both integrate with popular libraries
    like pandas, and they are both popular in the data science world.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在几个方面，Jupyter 与 Streamlit 相似：它们都是基于 Python 的，都支持表格和图形数据，都集成了像 pandas 这样的流行库，并且在数据科学领域都很受欢迎。
- en: 'However, there are also important differences:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，也存在一些重要的差异：
- en: Jupyter is used to create interactive documents, rather than actual apps; it
    is best used for sharing your code and explanations with collaborators rather
    than having that code be executed by actual end users. Streamlit, as we've seen,
    is used to create apps for end users.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 用于创建交互式文档，而不是实际的应用程序；它最好用于与协作者共享你的代码和解释，而不是让实际最终用户执行该代码。正如我们所见，Streamlit
    用于创建面向最终用户的应用程序。
- en: Jupyter's support for engineering practices such as version control is sketchy;
    this is fine because it's meant for exploratory analysis, not shipping production
    dashboards. Streamlit, on the other hand, fits well into a regular engineering
    workflow.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 对版本控制等工程实践的支持比较薄弱；这没关系，因为它是为了探索性分析而设计的，而不是用于发布生产仪表板。另一方面，Streamlit 很好地融入了常规的工程工作流程。
- en: The audience for Jupyter notebooks consists of technical folks, not laypeople.
    Streamlit doesn't require the users of your app to be able to read or understand
    code.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter 笔记本的目标受众是技术人员，而不是普通大众。Streamlit 不要求你的应用程序用户能够阅读或理解代码。
- en: All told, Jupyter notebooks are a fantastic initial tool for experimenting with
    code, data and charts. Streamlit is an amazing tool for building and sharing the
    final buttoned-up interactive experience you want users to have, often using the
    code, data and charts you finessed in your Jupyter notebook.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，Jupyter 笔记本是实验代码、数据和图表的绝佳初始工具。Streamlit 是一个惊人的工具，用于构建和共享你希望用户拥有的最终按钮化的交互式体验，通常使用你在
    Jupyter 笔记本中精炼的代码、数据和图表。
- en: 1.6.2 HTML, CSS and Javascript
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.6.2 HTML、CSS 和 JavaScript
- en: As we discussed earlier, HTML, CSS, and Javascript are the big three complementary
    languages of the web.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前讨论的，HTML、CSS 和 JavaScript 是网络三大互补语言。
- en: HTML, or HyperText Markup Language, is used to provide the structure and content
    of a web page, and define elements like headings, lists, divisions, and links
    through a tree of "tags" which can contain other tags.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: HTML，或超文本标记语言，用于提供网页的结构和内容，并通过“标签”树定义元素，如标题、列表、分区和链接，这些标签可以包含其他标签。
- en: CSS, or Cascading StyleSheets, lets web developers manage the appearance, layout,
    and formatting of many different web pages in a central place. CSS has options
    to set colors, spacing, fonts, borders, and more.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: CSS，或称层叠样式表，允许网络开发者在一个中心位置管理许多不同网页的外观、布局和格式。CSS 提供了设置颜色、间距、字体、边框等选项。
- en: Javascript is a programming language primarily used to define the dynamic behavior
    of a web page. It can be used to create animations, validate forms, connect to
    other webpages, and pretty much anything else you'd want a web site to do.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 是一种主要用于定义网页动态行为的编程语言。它可以用来创建动画、验证表单、连接到其他网页，以及几乎任何你希望网站完成的任务。
- en: Together, these powerful languages enable you to build any web experience you
    want. While they aren't difficult per se to learn, using them effectively to create
    complex apps is a laborious process, so much so that "frontend" development is
    its own discipline in software engineering.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 一起，这些强大的语言使你能够构建任何你想要的网络体验。虽然它们本身并不难学，但有效地使用它们来创建复杂的应用程序是一个费力的过程，以至于“前端”开发在软件工程中成为了一个独立的学科。
- en: Streamlit abstracts away the complexity of using these languages in their raw
    form and lets you use a simpler, more concise syntax to write web pages, working
    in the background to generate the equivalent code that a web browser can understand.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: Streamlit 将使用这些语言的原始形式的复杂性抽象化，并允许你使用更简单、更简洁的语法来编写网页，在后台生成浏览器可以理解的等效代码。
- en: 1.6.3 React
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.6.3 React
- en: React is a popular Javascript framework that helps you create fast, responsive
    web pages. Like Streamlit, it is an alternative to using raw HTML, Javascript,
    and CSS to create web applications.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: React 是一个流行的 JavaScript 框架，它可以帮助你创建快速、响应式的网页。和 Streamlit 一样，它是一个使用原始 HTML、JavaScript
    和 CSS 创建网络应用的替代方案。
- en: React follows a reusable component-based design where you build up parts of
    a web page using smaller parts and then combine *those* parts to build larger
    parts, working all the way up to a full application. Each such part you create
    is called a component, and can be reused in your app or even shared with other
    people so they can use it in theirs.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: React 采用可重用组件化设计，你使用较小的部分构建网页的各个部分，然后将这些部分组合起来构建更大的部分，一直构建到完整的应用程序。你创建的每个这样的部分称为组件，可以在你的应用程序中使用，甚至可以与其他人共享，以便他们在自己的应用程序中使用它。
- en: React has a declarative programming approach where you describe the UI you want,
    and React takes care of updating the DOM (the tree of HTML elements that lies
    under your web page) to match it.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: React 采用声明式编程方法，你描述你想要的 UI，React 负责更新 DOM（位于你网页下的 HTML 元素树），以匹配你的描述。
- en: While React is incredibly powerful and used by frontend developers to create
    complex UIs, its architecture and approach can be challenging to wrap your head
    around. It is also not Python-based.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 React 非常强大，被前端开发者用来创建复杂的 UI，但其架构和方法可能难以理解。它也不是基于 Python 的。
- en: Though Streamlit actually uses React under the hood, from the programmer's perspective,
    Streamlit trades some of the power and flexibility of React for simpler semantics,
    pre-built elements with some customizability, and the ability to use Python to
    write web pages.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Streamlit实际上在底层使用React，但从程序员的视角来看，Streamlit以更简单的语义、预构建元素（具有一些可定制性）和使用 Python
    编写网页的能力为代价，牺牲了一些 React 的强大和灵活性。
- en: 1.6.4 Flask and Django
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.6.4 Flask 和 Django
- en: Flask and Django are both Python-based web frameworks.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: Flask 和 Django 都是 Python 基础的网络框架。
- en: Flask is lightweight and minimalistic. It's designed to be straightforward to
    use, and is quite flexible, allowing developers to choose the various libraries
    and tools they prefer rather than being prescriptive. Flask provides the essentials
    you need to create a web app, such as the ability to handle routing and HTTP requests,
    while leaving most of the design choices beyond that to the developer. It's popular
    with web developers who want to employ a modular approach or exercise a high degree
    of control.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: Flask轻量级且简约。它旨在易于使用，并且相当灵活，允许开发者选择他们偏好的各种库和工具，而不是强制性的。Flask提供了创建Web应用所需的基本功能，例如处理路由和HTTP请求的能力，而将大部分设计选择留给了开发者。它深受希望采用模块化方法或拥有高度控制的Web开发者的喜爱。
- en: Django, on the other hand, is feature-rich and sophisticated. It's more opinionated
    than Flask, following specific design patterns such as the MVT ("Model-View-Template")
    architecture. It also comes with many built-in modules for common tasks, such
    as an admin panel to manage your data models. Django is a popular choice to run
    powerful enterprise-grade applications.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: Django另一方面，功能丰富且复杂。它比Flask更具意见性，遵循特定的设计模式，如MVT（“模型-视图-模板”）架构。它还包含许多内置模块，用于常见任务，例如一个管理面板来管理您的数据模型。Django是运行强大企业级应用的流行选择。
- en: While Flask and Django are similar to Streamlit in that they can all be used
    to build web applications, a key distinction is that Flask and Django are primarily
    *backend* frameworks to be used in conjunction with your *frontend*, which still
    consists of HTML/CSS/Javascript that you have to write or embed within your Python
    code. Not so with Streamlit, which lets you write frontend code in pure Python.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Flask和Django与Streamlit相似，因为它们都可以用来构建Web应用，但一个关键的区别是Flask和Django主要是*后端*框架，用于与你的*前端*一起使用，其中前端仍然包括你必须编写或嵌入到Python代码中的HTML/CSS/JavaScript。Streamlit则不同，它允许你使用纯Python编写前端代码。
- en: 1.6.5 Tkinter and PyQt
  id: totrans-224
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.6.5 Tkinter和PyQt
- en: Tkinter and PyQt (pronounced "pie-cute") are Python libraries used to create
    graphical user interfaces (GUIs).
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: Tkinter和PyQt（发音为“pie-cute”）是用于创建图形用户界面（GUI）的Python库。
- en: Tkinter comes bundled with Python and provides a set of widgets you can use
    to create a desktop application. It is popular with beginners and suitable for
    creating simple apps.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Tkinter与Python捆绑在一起，提供了一套你可以用来创建桌面应用的控件。它深受初学者喜爱，适合创建简单的应用。
- en: PyQt is similar, but it's more powerful and mature (and more complex) than Tkinter.
    It's actually a wrapper around the C++ Qt application framework. PyQt lets you
    create quite sophisticated GUIs and has a wide range of features.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: PyQt与之类似，但比Tkinter更强大、更成熟（也更复杂）。它实际上是一个围绕C++ Qt应用框架的包装器。PyQt让你能够创建相当复杂的GUI，并具有广泛的功能。
- en: As you might have guessed, the key difference between Tkinter/PyQt and Streamlit
    is that the latter is used to create web applications, not desktop applications.
    Over the last couple of decades, users have increasingly become comfortable with
    web-based software that never needs to be installed or updated, which makes Streamlit
    arguably more useful than the other two for most use cases.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所猜，Tkinter/PyQt与Streamlit之间的关键区别在于后者用于创建Web应用，而不是桌面应用。在过去的几十年里，用户越来越习惯于无需安装或更新的基于Web的软件，这使得Streamlit在大多数用例中可能比其他两个更有用。
- en: 1.7 Learning through projects
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.7 通过项目学习
- en: Now that we know what Streamlit can and can't do, let's talk about what's in
    store for you as you go through the rest of this book. I strongly believe that
    the best way to learn a piece of technology is to gain experience in using it.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经知道了Streamlit能做什么和不能做什么，那么让我们谈谈在阅读本书的剩余部分时，你将面临什么。我坚信，学习一项技术的最佳方式是通过使用它来获得经验。
- en: 'This book is designed to give you this experience by building real projects
    that require you to think through actual problems and how to solve them. In fact,
    through these projects, we will learn not only about Streamlit itself, but also:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在通过构建需要你思考实际问题和解决方法的真实项目来给你这种体验。实际上，通过这些项目，我们将不仅学习Streamlit本身，还会学习：
- en: large language models (LLMs) like OpenAI's GPT, and how to create LLM-powered
    apps
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大型语言模型（LLMs）如OpenAI的GPT，以及如何创建由LLM驱动的应用
- en: best practices around User Experience (UX) and User Interface (UI) design
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于用户体验（UX）和用户界面（UI）设计的最佳实践
- en: best practices around code organization and structure
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于代码组织和结构的最佳实践
- en: 'Here''s a sneak preview of some of the things we''ll build together:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一些我们将一起构建的内容的预览：
- en: 1.7.1 An interactive metrics dashboard
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.7.1 交互式指标仪表板
- en: In this project, we'll study the requirements of a CEO who needs to make important
    decisions about their company, and design an interactive dashboard that they'll
    look at every day to understand what's going on in the business.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将研究一位CEO对公司做出重要决策的需求，并设计一个他们每天都会查看的交互式仪表板，以了解业务状况。
- en: Along the way, we'll explore Streamlit's charting and visualization capabilities,
    as well as how to work with Pandas dataframes.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在旅途中，我们将探索Streamlit的图表和可视化能力，以及如何与Pandas数据框一起工作。
- en: 1.7.2 A rent-vs-buy housing calculator
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.7.2 租房与购房计算器
- en: In our second real-world application, we'll evaluate the benefits and costs
    of owning a home as opposed to renting, and design a calculator that helps people
    make their decision.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的第二个真实世界应用中，我们将评估拥有房屋与租房的利弊，并设计一个帮助人们做出决定的计算器。
- en: Here, we'll experiment with Streamlit's layout options and different ways for
    users to provide inputs. We'll also dive deep into how Streamlit maintains state.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将尝试Streamlit的布局选项和用户提供输入的不同方式。我们还将深入了解Streamlit如何维护状态。
- en: 1.7.3 A CRUD application
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.7.3 CRUD应用
- en: Our next stop is a *Create-Read-Update-Delete* (CRUD) application where you'll
    need to go beyond a siloed app and establish a connection to a database for persistent
    storage.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一步是一个*创建-读取-更新-删除*（CRUD）应用，您需要超越孤立的应用，并建立与数据库的连接以实现持久存储。
- en: We'll see how this unlocks powerful possibilities in the kinds of things you
    can build. We'll also explore data tables and theming.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '我们将看到这如何解锁构建各种类型事物时的强大可能性。我们还将探索数据表和主题。 '
- en: 1.7.4 An AI trivia app
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.7.4 人工智能知识问答应用
- en: With three real apps that explore Streamlit's key features under your belt,
    it's now time to turn your attention to the exciting world of generative AI. To
    get a taste of what you can do in this space, we'll design an app that can answer
    trivia questions using OpenAI's GPT.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在掌握三个探索Streamlit关键特性的真实应用后，现在是时候将注意力转向令人兴奋的生成式AI世界了。为了体验这个领域您可以做什么，我们将设计一个可以使用OpenAI的GPT回答知识问答的应用。
- en: 1.7.5 A chatbot
  id: totrans-247
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.7.5 聊天机器人
- en: In this project, you'll expand your LLM capabilities with the LangChain libraries
    and build your very custom chatbot. We'll learn how Streamlit's chat elements
    make this easy to do.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，您将使用LangChain库扩展您的LLM能力，并构建您自己的定制聊天机器人。我们将学习Streamlit的聊天元素如何使这变得简单易行。
- en: 1.7.6 A custom knowledge base
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.7.6 自定义知识库
- en: Want a second brain? For our third LLM project, that's essentially what we're
    building. We'll learn how to integrate various sources of information into a query-able
    knowledge base and expose it in a Streamlit app.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 想要一个第二大脑？在我们的第三个LLM项目中，这正是我们正在构建的。我们将学习如何将各种信息来源整合到一个可查询的知识库中，并在Streamlit应用中展示它。
- en: 1.7.7 Your own Streamlit component
  id: totrans-251
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 1.7.7 您自己的Streamlit组件
- en: This one's pretty advanced, so strap in! We'll first identify some functionality
    we want that Streamlit's pre-built elements can't serve out of the box. We'll
    then use the React framework to create that functionality and integrate it into
    an app.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 这一项相当高级，所以请系好安全带！我们首先将确定一些我们想要的功能，这些功能是Streamlit预构建元素无法直接提供的。然后我们将使用React框架创建这些功能，并将其集成到应用中。
- en: 1.8 Summary
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.8 摘要
- en: Streamlit is a framework that lets you build web apps in pure Python with no
    HTML, CSS or Javascript.
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Streamlit是一个框架，允许您使用纯Python构建Web应用，无需HTML、CSS或JavaScript。
- en: Streamlit has been exploding in popularity due to its simplicity, development
    velocity, support for LLMs, powerful visualizations, and integration with data
    science libraries, among other features.
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于其简单性、开发速度、对LLMs的支持、强大的可视化以及与数据科学库的集成等功能，Streamlit的受欢迎程度正在迅速增长。
- en: 'You can create many types of applications with Streamlit: data apps, internal
    tools for your workplace, LLM apps, prototypes for larger apps, and more.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以使用Streamlit创建许多类型的应用程序：数据应用、工作场所的内部工具、LLM应用、大型应用的原型，等等。
- en: You shouldn't use Streamlit for large-scale apps meant for millions of users,
    or apps that require a high level of UI customization.
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您不应使用Streamlit构建面向数百万用户的规模化应用，或需要高度UI定制的应用。
