- en: Chapter 10\. Introducing Dynamic Array Functions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 10 章。介绍动态数组函数
- en: Thus far, this book has covered building measures for Power Pivot with DAX and
    touched on M code in Power Query to a lesser extent. However, it hasn’t examined
    the traditional workbook formulas and functions that have long been the foundation
    of Excel. Even this area of the program, which may have seemed neglected in favor
    of other flashy developments like Power Pivot and Power Query, has undergone significant
    improvements, becoming more powerful and capable.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，本书已经介绍了使用DAX构建Power Pivot的度量标准，并在Power Query中较少地涉及了M代码。然而，它并未审视长期以来一直是Excel基础的传统工作簿公式和函数。即使在其他如Power
    Pivot和Power Query等引人注目的发展活动中，此类程序区域似乎被忽视，但它经历了显著改进，变得更加强大和有能力。
- en: This chapter introduces dynamic array functions, shedding light on their capabilities.
    You will learn how to sort, filter, and join datasets, among other tasks, using
    the familiar environment of the Excel formula bar.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了动态数组函数，揭示了它们的功能。您将学习如何使用Excel公式栏中熟悉的环境来对数据集进行排序、过滤和连接等任务。
- en: Dynamic Array Functions Explained
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动态数组函数解析
- en: '*Dynamic array functions* have impressive capabilities, and it’s tempting to
    start experimenting with them right away. However, it’s crucial to understand
    what makes these functions special and how they differ from traditional Excel
    approaches. The following section explores the path from arrays to array references
    and finally to dynamic array functions.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*动态数组函数*具有令人印象深刻的功能，诱人地让人立即开始尝试。然而，了解这些函数的特殊之处以及它们与传统Excel方法的区别至关重要。接下来的部分将探讨从数组到数组引用再到动态数组函数的路径。'
- en: What Is an Array in Excel?
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Excel中，什么是数组？
- en: To follow this demonstration, open *ch_10.xlsx* in the *ch_10* folder of the
    book’s resources. Go to the `array-references` worksheet.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随此演示，请在书的资源中的`ch_10`文件夹中打开*ch_10.xlsx*，转到`array-references`工作表。
- en: First and foremost, an *array* in Excel refers to a collection of values. For
    instance, a basic array could consist of the numbers 3, 4, and 7 placed in cells
    `A2:C2`, as shown in [Figure 10-1](#excel-array).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先和最重要的是，在Excel中，*数组*指的是一组值的集合。例如，一个基本的数组可以由放置在单元格`A2:C2`中的数字3、4和7组成，如[图 10-1](#excel-array)所示。
- en: '![Excel array](assets/mdae_1001.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![Excel数组](assets/mdae_1001.png)'
- en: Figure 10-1\. A basic Excel array
  id: totrans-9
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-1。一个基本的Excel数组
- en: Array References
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数组引用
- en: With an understanding of what constitutes an array in Excel, this next section
    explores various approaches to build array references.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 理解在Excel中构成数组的内容后，本节将探讨构建数组引用的各种方法。
- en: Static array references
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 静态数组引用
- en: To create a tradititional Excel array reference, enter `=A2:C2` into cell `E2`
    and press Ctrl+Shift+Enter to indicate that you are referencing an array of values
    rather than a single value, as in [Figure 10-2](#excel-array-reference).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建传统的Excel数组引用，在单元格`E2`中输入`=A2:C2`，然后按Ctrl+Shift+Enter，表示您引用的是一组值而不是单个值，如[图 10-2](#excel-array-reference)所示。
- en: '![Excel array reference](assets/mdae_1002.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![Excel数组引用](assets/mdae_1002.png)'
- en: Figure 10-2\. A basic Excel array reference
  id: totrans-15
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-2。一个基本的Excel数组引用
- en: You will see the resulting formula enclosed within curly brackets `{}`, but
    not all three values will be displayed in the result. This occurs because, in
    Excel, each cell is designed to hold only a single data point, not three, as you
    might be attempting to achieve here. To distribute data from an array across multiple
    cells, select the range `E2:G2` and enter the same reference, as shown in [Figure 10-3](#improved-array-reference).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到结果公式被大括号`{}`括起来，但不会在结果中显示所有三个值。这是因为在Excel中，每个单元格设计用来存放单个数据点，而不是您可能试图在此处实现的三个值。要将数组数据分布到多个单元格中，请选择范围`E2:G2`并输入相同的引用，如[图 10-3](#improved-array-reference)所示。
- en: '![Excel array reference](assets/mdae_1003.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![Excel数组引用](assets/mdae_1003.png)'
- en: Figure 10-3\. An improved Excel array reference
  id: totrans-18
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-3。一个改进的Excel数组引用
- en: Excel’s conventional approach to handling arrays comes with limitations. The
    process of writing and managing references using Ctrl+Shift+Enter can be arduous
    and lacks automatic adjustment.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Excel处理数组的传统方法存在一些限制。使用Ctrl+Shift+Enter编写和管理引用的过程可能很繁琐，并且缺乏自动调整功能。
- en: Consider a scenario where cells are inserted or deleted between `A2:C2`—in such
    cases, the array reference fails to resize itself. Consequently, these array references
    could be described as *static* because they do not dynamically adapt to changes
    in the spreadsheet’s structure or cell count.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑这样一个场景，即在`A2:C2`之间插入或删除单元格时，数组引用无法自动调整大小。因此，这些数组引用可以描述为*静态*，因为它们不会根据电子表格结构或单元格数的变化动态适应。
- en: Dynamic array references
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 动态数组引用
- en: '*Dynamic arrays* were introduced in Excel in 2018 to overcome the limitations
    associated with traditional static arrays. Now, to refer to `A2:C2`, you simply
    need to type **`=A2:C2`** and press Enter, such as in cell `E5` of [Figure 10-4](#dynamic-array-reference).'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*动态数组*在2018年的Excel中引入，以克服传统静态数组的限制。现在，要引用`A2:C2`，只需输入**`=A2:C2`**并按Enter，例如在[图10-4](#dynamic-array-reference)的单元格`E5`中。'
- en: '![Dynamic array reference](assets/mdae_1004.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![动态数组引用](assets/mdae_1004.png)'
- en: Figure 10-4\. A dynamic Excel array reference
  id: totrans-24
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-4\. 动态Excel数组引用
- en: Using this reference, Excel intelligently recognizes the number of cells in
    the array. This means that if you insert or delete cells between `A2` and `C2`,
    the dynamic array reference will automatically resize to accommodate the changes.
    This dynamic adjustment saves time and effort by removing the need to manually
    update or modify the references whenever the data layout is altered.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此引用，Excel智能识别数组中的单元格数量。这意味着，如果在`A2`和`C2`之间插入或删除单元格，动态数组引用将自动调整大小以适应这些变化。这种动态调整节省了时间和精力，消除了在数据布局更改时手动更新或修改引用的需要。
- en: Array Formulas
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数组公式
- en: Having contrasted the behavior of array references in classic and modern Excel,
    the next section delves into the impact on functions using these references.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对比了经典和现代Excel中数组引用的行为后，接下来的部分深入探讨了使用这些引用的函数的影响。
- en: Static array formulas
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 静态数组公式
- en: Consider the following example, which uses a static array formula to list the
    unique products sold in a transactions dataset, as seen in [Figure 10-5](#static-array-formula).
    You can follow along with this example in the `array-functions` worksheet of *ch_10.xlsx*.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下示例，它使用静态数组公式列出了交易数据集中售出的唯一产品，正如在[图10-5](#static-array-formula)中所见。您可以在*ch_10.xlsx*的`array-functions`工作表中跟随此示例。
- en: '![Static array formula](assets/mdae_1005.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![静态数组公式](assets/mdae_1005.png)'
- en: Figure 10-5\. A static array formula
  id: totrans-31
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-5\. 静态数组公式
- en: Don’t worry too much about the formula’s inner workings; we’ll explore a more
    sensible alternative shortly. For now, observe how a static array can be challenging
    when it comes to determining the number of output pieces it should return.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 不要过分担心公式的内部工作原理；我们将很快探讨一个更合理的替代方案。现在，观察一下静态数组在确定应返回的输出件数时可能存在的挑战。
- en: Similar to array references, this approach lacks automatic adjustment to list
    the correct number of unique values, making it cumbersome and unintuitive. For
    example, if more transactions are added to the `dm_sales` table, any additional
    unique values, such as Rubber bands in this case, are not reflected in the array
    function, as seen in [Figure 10-6](#static-array-update-failure).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于数组引用，这种方法缺乏对唯一值正确数量的自动调整，使其显得复杂且不直观。例如，如果在`dm_sales`表中添加更多交易，比如橡皮筋，在数组函数中不会反映出任何额外的唯一值，正如在[图10-6](#static-array-update-failure)中所见。
- en: '![Static array formula](assets/mdae_1006.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![静态数组公式](assets/mdae_1006.png)'
- en: Figure 10-6\. Rubber bands (row 16) are not listed as a unique product
  id: totrans-35
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-6\. 橡皮筋（第16行）未列为唯一产品
- en: To see that extra value, you’ll need to extend your array formula in column
    `H` down one more row.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要看到额外的值，您需要在列`H`中扩展您的数组公式再向下一行。
- en: Dynamic array functions
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 动态数组函数
- en: Dynamic array functions, on the other hand, perform exceptionally well in this
    scenario. There is even a `UNIQUE()` function specifically designed to handle
    this task, as seen in [Figure 10-7](#unique-function).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，动态数组函数在这种情况下表现非常出色。甚至有一个专门设计来处理此任务的`UNIQUE()`函数，正如在[图10-7](#unique-function)中所见。
- en: Note
  id: totrans-39
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: If you see a `#SPILL` error after using the `UNIQUE()` function, make sure you
    have empty cells below it. This error happens when the results of the function
    spill over to non-empty adjacent cells.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在使用`UNIQUE()`函数后出现`#SPILL`错误，请确保其下方存在空单元格。当函数的结果溢出到非空相邻单元格时，会出现此错误。
- en: Dynamic array functions offer a significant advancement over traditional array
    formulas by instantly updating output cells in response to changes in inputs.
    This dynamic behavior eliminates the need for manual recalculations or refreshing
    formulas, providing a seamless and efficient workflow.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 动态数组函数通过即时更新输出单元格以响应输入变化，显著提升了传统数组公式的功能。这种动态行为消除了手动重新计算或刷新公式的需要，提供了无缝和高效的工作流程。
- en: '![Finding with UNIQUE()](assets/mdae_1007.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![使用 UNIQUE() 查找](assets/mdae_1007.png)'
- en: Figure 10-7\. Finding unique values with the `UNIQUE()` function
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-7\. 使用 `UNIQUE()` 函数查找唯一值
- en: An Overview of Dynamic Array Functions
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动态数组函数概述
- en: With the capabilities of dynamic array functions in mind, it’s time to explore
    a few examples. The first will expand on the `UNIQUE()` function discussed earlier.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到动态数组函数的功能，现在是时候探索一些例子了。第一个例子将深入讨论前文提到的 `UNIQUE()` 函数。
- en: Finding Distinct and Unique Values with UNIQUE()
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 `UNIQUE()` 查找不同和唯一值
- en: In the previous example, the `UNIQUE()` dynamic array function was used to generate
    a list of unique product names. To explore this function and dataset further,
    continue using the `dm_sales` table in the *ch_10.xlsx* workbook.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一个例子中，使用 `UNIQUE()` 动态数组函数生成了唯一产品名称列表。要进一步探索此函数和数据集，请继续使用 *ch_10.xlsx* 工作簿中的
    `dm_sales` 表。
- en: The `UNIQUE()` function has three parameters, two of which are optional. To
    understand how they work, refer to [Table 10-1](#unique-parameters).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`UNIQUE()` 函数有三个参数，其中两个是可选的。要理解它们的工作原理，请参考[表 10-1](#unique-parameters)。'
- en: Table 10-1\. `UNIQUE()` parameters
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 表 10-1\. `UNIQUE()` 参数
- en: '| Parameter | Description |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| Parameter | Description |'
- en: '| --- | --- |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `range` | Required argument that specifies the data range or array from which
    you want to extract unique values. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `range` | 必需的参数，指定要从中提取唯一值的数据范围或数组。 |'
- en: '| [`by_col`] | Optional argument that determines whether the unique values
    should be extracted by column or row. By default, unique values are extracted
    by row. If you set this parameter to `TRUE`, unique values will be extracted by
    row. If you set this parameter to TRUE, unique values will be extracted by column.
    |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`by_col`] | 可选参数，确定是否应按列或行提取唯一值。默认情况下，按行提取唯一值。如果将此参数设置为 `TRUE`，则将按列提取唯一值。如果将此参数设置为
    TRUE，则将按列提取唯一值。 |'
- en: '| [`exactly_once`] | Optional argument that specifies whether only values that
    appear exactly once should be considered unique. By default, all unique values,
    regardless of their frequency, are extracted. If you set this parameter to `TRUE`,
    only the values that appear exactly once will be extracted. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`exactly_once`] | 可选参数，指定是否只考虑仅出现一次的值作为唯一值。默认情况下，无论其频率如何，都会提取所有唯一值。如果将此参数设置为
    `TRUE`，则仅提取仅出现一次的值。 |'
- en: Finding Unique Versus Distinct Values
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找唯一与不同值的区别
- en: In database terminology, *unique values* refer to those appearing only once
    within a given range. This makes the name of the `UNIQUE()` function somewhat
    misleading. This function actually identifies *distinct* values, meaning those
    found once or more, rather than strictly unique ones. However, it’s possible to
    obtain genuinely unique values by setting the third argument of the function to
    `TRUE`, as shown in [Figure 10-8](#truly-unique).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据库术语中，*唯一值* 指的是在给定范围内仅出现一次的值。这使得 `UNIQUE()` 函数的名称有些误导性。该函数实际上识别的是*不同的* 值，即出现一次或多次的值，而不是严格意义上的唯一值。然而，通过将函数的第三个参数设置为
    `TRUE`，可以获得真正的唯一值，如[图 10-8](#truly-unique)所示。
- en: '![Truly UNIQUE() values](assets/mdae_1008.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![真正的 UNIQUE() 值](assets/mdae_1008.png)'
- en: Figure 10-8\. Finding the truly unique values with `UNIQUE()`
  id: totrans-58
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-8\. 使用 `UNIQUE()` 查找真正的唯一值
- en: Using the Spill Operator
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用溢出运算符
- en: In Excel, it is common to create additional calculations on top of existing
    ones, such as aggregating the results of a calculated column. The *spill operator*,
    denoted by the hash symbol (`#`), streamlines the aggregation process for dynamic
    array functions. Like dynamic arrays themselves, it automatically expands the
    output range to accommodate the data, eliminating the manual entry of array formulas
    and resizing of ranges. This feature enhances efficiency and conciseness when
    constructing formulas for aggregating data in Excel.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在Excel 中，常见的做法是在现有计算的基础上进行额外的计算，例如聚合计算列的结果。由井号符号 (`#`) 表示的*溢出运算符* 简化了动态数组函数的聚合过程。像动态数组本身一样，它会自动扩展输出范围以适应数据，消除了手动输入数组公式和调整范围的需要。这一特性在构建Excel中用于聚合数据的公式时提高了效率和简洁性。
- en: The number of unique values generated by the formula displayed in [Figure 10-8](#truly-unique)
    can be determined using the `COUNTA()` function. When selecting the range `D2:D7`,
    Excel automatically refers to it using the spill range indicated by the `#` operator,
    as in [Figure 10-9](#spill-aggregate).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `COUNTA()` 函数来确定在 [图 10-8](#truly-unique) 中显示的公式生成的唯一值的数量。选择范围 `D2:D7`
    时，Excel 自动引用以 `#` 运算符指示的溢出范围，如 [图 10-9](#spill-aggregate) 所示。
- en: '![Aggregating the spill operator](assets/mdae_1009.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![汇总溢出运算符](assets/mdae_1009.png)'
- en: Figure 10-9\. Aggregating a dynamic array with the spill operator
  id: totrans-63
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-9\. 使用溢出运算符汇总动态数组
- en: Although not extensively covered in this chapter, spill operators provide significant
    benefits for constructing dependent drop-down lists, dynamic charts, and various
    other features.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本章未详细介绍，溢出运算符对于构建依赖下拉列表、动态图表和其他各种功能提供了显著的好处。
- en: Filtering Records with FILTER()
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 FILTER() 过滤记录
- en: Excel’s traditional dropdowns for filtering data are intuitive, but have limitations.
    For instance, once they are applied, it’s no longer possible to view the raw data
    in its entirety. It would be better to create a separate copy of the data and
    then apply filters to that copy, similar to how Power Query approaches data cleaning.
    Additionally, defining complex filter logic rules across multiple columns can
    be tedious as well as repetitive.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Excel 的传统数据过滤下拉菜单很直观，但存在一些限制。例如，一旦应用了这些过滤，就不再能查看原始数据的完整内容了。最好是创建数据的副本，然后对该副本应用过滤，类似
    Power Query 处理数据清洗的方式。此外，跨多列定义复杂的过滤逻辑规则可能既繁琐又重复。
- en: To address these limitations, Excel introduced the `FILTER()` dynamic array
    function. `FILTER()` has three parameters, which are explained in detail in [Table 10-2](#filter-parameters).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这些限制，Excel 引入了 `FILTER()` 动态数组函数。`FILTER()` 有三个参数，详细说明在 [表 10-2](#filter-parameters)
    中。
- en: Table 10-2\. `FILTER()` parameters
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 表 10-2\. `FILTER()` 参数
- en: '| Parameter | Description |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 描述 |'
- en: '| --- | --- |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `array` | A required argument specifying the range or array of data that
    you want to filter. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `array` | 必需的参数，指定要过滤的数据范围或数组。 |'
- en: '| `include` | A required argument specifying the filtering criteria or condition.
    It defines the values that should be included in the filtered result. This can
    be a logical expression, a value to match, or a formula that evaluates to `TRUE`
    or `FALSE` for each element in the array. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `include` | 必需的参数，指定过滤条件或条件。它定义了应包含在过滤结果中的值。可以是逻辑表达式、要匹配的值，或者对数组中每个元素求值为
    `TRUE` 或 `FALSE` 的公式。 |'
- en: '| `[if_empty]` | An optional argument specifying the value to return if the
    filtered result is empty. By default, if no values meet the filtering criteria,
    the function returns an array with a `#CALC` error values. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `[if_empty]` | 一个可选参数，指定如果过滤结果为空时返回的值。默认情况下，如果没有值符合过滤条件，该函数将返回一个包含 `#CALC`
    错误值的数组。 |'
- en: To achieve the desired result, the `dm_sales` table needs to be filtered so
    that only the records with `product` set to Sticky Notes are returned, as shown
    in [Figure 10-10](#basic-filter-function).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现所需的结果，需要过滤 `dm_sales` 表，以便仅返回 `product` 设置为 Sticky Notes 的记录，如图 [10-10](#basic-filter-function)
    所示。
- en: '![Basic `FILTER()` function](assets/mdae_1010.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![基本 `FILTER()` 函数](assets/mdae_1010.png)'
- en: Figure 10-10\. A basic `FILTER()` function
  id: totrans-76
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-10\. 一个基本的 `FILTER()` 函数
- en: Note
  id: totrans-77
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: 'The `FILTER()` function is case insensitive by default. In the previous example,
    both “Sticky Notes” and “sticky notes” would yield the same result. To perform
    a case-sensitive filter, combine the `FILTER()` function with `EXACT()`; for example:
    `=FILTER(dm_sales, EXACT(dm_sales[product], "Sticky Notes"))`.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`FILTER()` 函数默认情况下不区分大小写。在上面的示例中，“Sticky Notes” 和 “sticky notes” 都将产生相同的结果。要执行区分大小写的过滤，请将
    `FILTER()` 函数与 `EXACT()` 结合使用；例如：`=FILTER(dm_sales, EXACT(dm_sales[product], "Sticky
    Notes"))`。'
- en: Adding a Header Column
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加一个标题列
- en: The `FILTER()` function is already useful, but it lacks one crucial feature—​it
    only returns matching rows, not the data’s header columns. To include these headers,
    it’s necessary to use a dynamic table header reference. For a quick recap on structured
    references, refer to [Chapter 1](ch01.html#ch_01). Include this reference above
    your filter output for dynamic header labels, as shown in [Figure 10-11](#filter-with-header-labels).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`FILTER()` 函数已经非常有用，但它缺少一个至关重要的功能—​它仅返回匹配的行，而不包括数据的标题列。要包含这些标题，需要使用动态表头引用。关于结构化引用的快速回顾，请参阅[第
    1 章](ch01.html#ch_01)。如 [图 10-11](#filter-with-header-labels) 所示，在你的过滤输出上方包含此引用以获取动态标头标签。'
- en: '![`FILTER()` results](assets/mdae_1011.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![`FILTER()` 结果](assets/mdae_1011.png)'
- en: Figure 10-11\. `FILTER()` results with header labels
  id: totrans-82
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-11\. 带有标头标签的 `FILTER()` 结果
- en: Warning
  id: totrans-83
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: Applying the `FILTER()` function or other dynamic array functions to an Excel
    table does not include the table headers in the results.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 将`FILTER()`函数或其他动态数组函数应用于Excel表时，结果不包括表头。
- en: Filtering by Multiple Criteria
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 根据多个条件过滤
- en: The `FILTER()` function distinguishes itself from traditional drop-down menu
    filtering methods through its ability to use formulas to filter data. This capability
    unlocks a realm of powerful opportunities, while still preserving an intuitive
    and straightforward approach for establishing and understanding criteria.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`FILTER()`函数通过使用公式来过滤数据与传统的下拉菜单过滤方法区别开来。这种能力不仅能解锁强大的机会，同时保持了一种直观和简单的方法来建立和理解条件。'
- en: To incorporate multiple criteria into the `FILTER()` function, employ the `*`
    symbol for `AND` statements and the `+` symbol for `OR` statements.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要在`FILTER()`函数中结合多个条件，使用`*`符号表示`AND`语句，使用`+`符号表示`OR`语句。
- en: AND criteria
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 并且条件
- en: 'To search for records where the `product` is “Copy Paper” *and* the quantity
    is greater than 5, you can combine the criteria by multiplying them within separate
    sets of parentheses:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要搜索 `product` 为“复印纸” *且* 数量大于 5 的记录，可以在不同的括号组合内将条件相乘：
- en: '[PRE0]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: OR criteria
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 或条件
- en: 'If you’d rather find records that meet *either* of this conditions, replace
    the `*` symbol with the `+` symbol to create an `OR` statement:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你宁愿查找符合*任一*条件的记录，请用`+`符号替换`*`符号来创建一个`OR`语句：
- en: '[PRE1]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Nested `AND`/`OR` criteria
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 嵌套的 `AND`/`OR` 条件
- en: 'To create a filter function with nested `AND` or `OR` statements, group the
    statements using parentheses. This filter function includes records where the
    `sales_amt` is at least $100, or `quantity` is at least 10 *and* `product` is
    “Envelopes”:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建带有嵌套 `AND` 或 `OR` 语句的过滤函数，将语句用括号分组。这个过滤函数包括了 `sales_amt` 至少为 $100 或 `quantity`
    至少为 10 *且* `product` 为“信封”的记录：
- en: '[PRE2]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can continue adding and adjusting multiple criteria to `FILTER()` functions
    by following these guidelines.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 按照这些准则，你可以继续添加和调整多个条件以及 `FILTER()` 函数。
- en: Sorting Records with SORTBY()
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SORTBY() 对记录进行排序
- en: '`SORTBY()` is a dynamic array function that enables sorting of records based
    on multiple criteria simultaneously, featuring syntax similar to that of `SUMIFS()`.
    [Table 10-3](#sortby-parameters) walks through the parameters.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`SORTBY()` 是一个动态数组函数，能够根据多个条件同时排序记录，其语法类似于 `SUMIFS()`。[表格 10-3](#sortby-parameters)
    详细介绍了参数。'
- en: Table 10-3\. `SORTBY()` parameters
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 表格 10-3\. `SORTBY()` 参数
- en: '| Parameter | Description |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 描述 |'
- en: '| --- | --- |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `array` | A required argument specifying the array or range to sort. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `array` | 必需参数，指定要排序的数组或范围。 |'
- en: '| `by_array1` | A required argument specifying the array or range to sort on.
    |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| `by_array1` | 必需参数，指定要排序的数组或范围。 |'
- en: '| `[sort_order1]` | An optional argument specifying how to sort the results.
    1 sorts ascendingly, -1 sorts descendingly. The default is ascending. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `[sort_order1]` | 可选参数，指定如何对结果进行排序。1 表示升序，-1 表示降序。默认为升序。 |'
- en: '| `[by_array2]` | An optional argument specifying the array or range to sort
    on. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `[by_array2]` | 可选参数，指定要排序的数组或范围。 |'
- en: '| `[sort_order2]` | An optional argument specifying how to sort the results
    of `by_array2`. 1 sorts ascendingly, -1 sorts descendingly. The default is ascending.
    |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| `[sort_order2]` | 可选参数，指定如何对 `by_array2` 的结果进行排序。1 表示升序，-1 表示降序。默认为升序。 |'
- en: To take an example, the dataset can be sorted in descending order based on `sales_amt`
    using the `SORTBY()` function, as shown in [Figure 10-12](#sortby-basic).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，可以根据 `sales_amt` 的降序对数据集使用 `SORTBY()` 函数进行排序，如 [图 10-12](#sortby-basic)
    所示。
- en: '![SORTBY() results](assets/mdae_1012.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![SORTBY() 结果](assets/mdae_1012.png)'
- en: Figure 10-12\. Sorting an Excel table with `SORTBY()`
  id: totrans-110
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-12\. 使用 `SORTBY()` 对 Excel 表格进行排序
- en: Sorting by Multiple Criteria
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 根据多个条件排序
- en: '`SORTBY()` enables sorting the data based on multiple criteria, with the flexibility
    to specify an ascending or descending order for each. For example, the data can
    be sorted in descending order by `emp_last` and in ascending order by `product`:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`SORTBY()` 允许基于多个条件对数据进行排序，可以灵活地指定每个条件的升序或降序。例如，数据可以按`emp_last`降序排列，并按`product`升序排列：'
- en: '[PRE3]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can extend this pattern to sort the dataset by even more criteria in the
    desired order.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以扩展此模式以按所需顺序根据更多条件对数据集进行排序。
- en: Sorting by Another Column Without Printing It
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按另一列排序而不打印它
- en: '`SORTBY()` can even sort a range by another range, even without including the
    original sort range in the results.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`SORTBY()` 甚至可以按照另一个范围排序，即使在结果中没有包含原始排序范围。'
- en: For example, say you want to obtain a list of transaction IDs sorted in descending
    order by sales. Instead of using the entire `dm_sales` table as the first argument,
    only select the `trans_id` column. The subsequent steps should be familiar. The
    result will consist of a single column, as shown in [Figure 10-13](#sortby-example).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设您希望按销售额降序获取交易 ID 列表。不要使用整个 `dm_sales` 表作为第一个参数，只选择 `trans_id` 列。接下来的步骤应该很熟悉。结果将包括单列，如
    [图 10-13](#sortby-example) 所示。
- en: '![SORTBY() results](assets/mdae_1013.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![SORTBY() 结果](assets/mdae_1013.png)'
- en: Figure 10-13\. Displaying `SORTBY()` results in one column
  id: totrans-119
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 10-13\. 在一列中显示 `SORTBY()` 结果
- en: Creating Modern Lookups with XLOOKUP()
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `XLOOKUP()` 创建现代查找功能
- en: Up to this point, the examples demonstrating dynamic array functions have used
    a single table. Yet, it’s often the case that data originates from several tables,
    requiring consolidation. Although Power Query and Power Pivot offer their own
    techniques for combining data from diverse sources, the immediate, dynamic, and
    interactive qualities of Excel formulas remain advantageous for tasks such as
    constructing models based on user input, performing real-time data analysis, and
    more.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，展示动态数组函数的示例仅使用了单个表格。然而，通常情况下，数据来自多个表格，需要进行合并。尽管 Power Query 和 Power Pivot
    提供了各自的技术来从不同来源合并数据，但 Excel 公式的即时、动态和交互特性仍然在诸如基于用户输入构建模型、执行实时数据分析等任务中具有优势。
- en: The `XLOOKUP()` function presents a versatile alternative to the conventional
    `VLOOKUP()` function by exploiting the capabilities of dynamic arrays.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`XLOOKUP()` 函数通过利用动态数组的能力，提供了传统 `VLOOKUP()` 函数的多功能替代方案。'
- en: To explore this function further, refer to the `xlookup` worksheet in *ch_10.xlsx*.
    This worksheet contains three distinct tables associated with office supply sales.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 要进一步探索此功能，请参考 *ch_10.xlsx* 中的 `xlookup` 工作表。该工作表包含与办公用品销售相关联的三个不同的表格。
- en: XLOOKUP() Versus VLOOKUP()
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`XLOOKUP()` 与 `VLOOKUP()` 比较'
- en: '`XLOOKUP()` offers a familiar experience for users accustomed to `VLOOKUP()`
    for retrieving data from one table and transferring it to another based on a shared
    lookup value. However, it introduces a range of additional search methods that
    are more versatile and sophisticated. For an overview of the key differences between
    `VLOOKUP()` and `XLOOKUP()`, refer to [Table 10-4](#vlookup-vs-xlookup).'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`XLOOKUP()` 对于习惯于使用 `VLOOKUP()` 从一个表中检索数据并基于共享查找值将其传输到另一个表的用户来说，提供了一种熟悉的体验。然而，它引入了一系列更为灵活和复杂的附加搜索方法。有关
    `VLOOKUP()` 和 `XLOOKUP()` 之间主要差异的概述，请参阅 [表 10-4](#vlookup-vs-xlookup)。'
- en: Table 10-4\. `VLOOKUP()` versus `XLOOKUP()`
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 表 10-4\. `VLOOKUP()` 对比 `XLOOKUP()`
- en: '| Feature | `VLOOKUP()` | `XLOOKUP()` |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 特性 | `VLOOKUP()` | `XLOOKUP()` |'
- en: '| --- | --- | --- |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Search direction | Can only search vertically | Can search both vertically
    and horizontally |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| 搜索方向 | 只能垂直搜索 | 可以垂直和水平同时搜索 |'
- en: '| Return direction | Can only return values to the right of the lookup value
    | Can return values from columns to the left and right of the lookup value |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| 返回方向 | 只能返回查找值右侧的值 | 可以返回查找值左右两侧的列中的值 |'
- en: '| Error handling | Returns #N/A if the value is not found | Can specify default
    value for unmatched items and handle errors |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| 错误处理 | 如果未找到值则返回 #N/A | 可以指定未匹配项的默认值并处理错误 |'
- en: '`XLOOKUP()` has six parameters in total, as shown in [Table 10-5](#xlookup-parameters).'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`XLOOKUP()` 总共有六个参数，如 [表 10-5](#xlookup-parameters) 所示。'
- en: Table 10-5\. `XLOOKUP()` parameters
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 表 10-5\. `XLOOKUP()` 参数
- en: '| Parameter | Description |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 描述 |'
- en: '| --- | --- |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `lookup_value` | Required argument specifying the value to search for in
    the `lookup_array`. |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| `lookup_value` | 必填参数，指定在`lookup_array`中搜索的值。 |'
- en: '| `lookup_array` | Required argument specifying the range or array to search
    for the `lookup_value`. |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| `lookup_array` | 必填参数，指定要在其中搜索`lookup_value`的范围或数组。 |'
- en: '| `return_array` | Required argument specifying the range or array from which
    to retrieve the data. |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| `return_array` | 必填参数，指定要从中检索数据的范围或数组。 |'
- en: '| [`if_not_found`] | Optional argument specifying the value to return if the
    `lookup_value` is not found. |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| [`if_not_found`] | 可选参数，指定如果未找到`lookup_value`则返回的值。 |'
- en: '| [`match_mode`] | Optional argument specifying the method for matching the
    `lookup_value`. |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [`match_mode`] | 可选参数，指定匹配`lookup_value`的方法。 |'
- en: '| [`search_mode`] | Optional argument specifying the search behavior for finding
    the `lookup_value`. |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| [`search_mode`] | 可选参数，指定查找`lookup_value`的搜索行为。 |'
- en: 'This demonstration highlights the first four parameters of `XLOOKUP()`. For
    a more in-depth overview, check out Chapter 12 of Alan Murray’s *Advanced Excel
    Formulas: Unleashing Brilliance with Excel Formulas* (Apress, 2022).'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 此演示突出了`XLOOKUP()`的前四个参数。要了解更详细的概述，请查看艾伦·默里（Alan Murray）的《高级Excel公式：释放Excel公式的光辉》第12章（Apress，2022）。
- en: A Basic XLOOKUP()
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个基本的XLOOKUP()
- en: 'Begin with a straightforward example: the `transactions` table includes a `product_id`
    that requires matching with its corresponding `product_name`. Here, the `product_id`
    serves as the lookup array and `product_name` serves as the return array, as shown
    in [Figure 10-14](#a-basic-xlookup).'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个简单的例子开始：`transactions`表包含一个需要与其对应的`product_name`匹配的`product_id`。在这里，`product_id`作为查找数组，`product_name`作为返回数组，如[图10-14](#a-basic-xlookup)所示。
- en: '![A basic XLOOKUP()](assets/mdae_1014.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![基本的XLOOKUP()](assets/mdae_1014.png)'
- en: Figure 10-14\. A basic `XLOOKUP()`
  id: totrans-146
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-14\. 基本的`XLOOKUP()`
- en: XLOOKUP() and Error Handling
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XLOOKUP()与错误处理
- en: Lookups for the `product_id` of *99* generate an error. Using `#N/A` as the
    result for a missing match is problematic. It can introduce calculation errors
    and create confusion for users who may not understand why the `#N/A` is being
    returned.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 查找编号为 *99* 的`product_id`会生成一个错误。使用`#N/A`作为缺失匹配的结果是有问题的。它可能会引入计算错误，并对用户造成困惑，因为他们可能不明白为什么会返回`#N/A`。
- en: To customize the error message in the `XLOOKUP()` statement, specify the fourth,
    optional parameter. In this specific case, you discovered that products assigned
    to the number *99* should be labeled as “Other.” The results are demonstrated
    in [Figure 10-15](#xlookup-error-handling).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 要定制`XLOOKUP()`语句中的错误消息，请指定第四个可选参数。在这种特定情况下，您发现分配给编号为 *99* 的产品应标记为“其他”。结果在[图10-15](#xlookup-error-handling)中展示。
- en: '![XLOOKUP() with error handling](assets/mdae_1015.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![带有错误处理的XLOOKUP()](assets/mdae_1015.png)'
- en: Figure 10-15\. `XLOOKUP()` with error handling
  id: totrans-151
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-15\. `XLOOKUP()`与错误处理
- en: After looking up product names in the table, it’s time to do the same for branch
    names.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在表中查找产品名称后，现在是时候为分支名称执行相同操作了。
- en: XLOOKUP() and Looking Up to the Left
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XLOOKUP()和左侧查找
- en: A common criticism of `VLOOKUP()` is its inability to search to the left of
    the lookup array, unless helper functions are used. On the other hand, `XLOOKUP()`
    can search through values in any Excel range, including a table column to the
    left of the lookup value. An example of this is shown in [Figure 10-16](#xlookup-lefthand-lookup).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 对`VLOOKUP()`的普遍批评是它无法在查找数组的左侧进行搜索，除非使用辅助函数。相反，`XLOOKUP()`可以搜索Excel范围中的任何值，包括查找值左侧的表列。此类示例在[图10-16](#xlookup-lefthand-lookup)中展示。
- en: '![XLOOKUP() with lefthand lookup](assets/mdae_1016.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![带有左侧查找的XLOOKUP()](assets/mdae_1016.png)'
- en: Figure 10-16\. `XLOOKUP()` with lefthand lookup
  id: totrans-156
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-16\. `XLOOKUP()`与左侧查找
- en: Thanks to its versatility in searching both vertically and horizontally, retrieving
    values from columns on either side of the matched lookup value, and handling errors
    within its formula, `XLOOKUP()` has emerged as the preferred formula for data
    retrieval in Excel.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 多亏了它在垂直和水平两个方向上搜索的多功能性，以及从匹配的查找值两侧列中检索值，并在其公式内处理错误，`XLOOKUP()`已成为Excel中数据检索的首选公式。
- en: Other Dynamic Array Functions
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他动态数组函数
- en: The dynamic array functions showcased here were among Excel’s initial offerings,
    with subsequent additions expanding the range of capabilities.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里展示的动态数组函数是Excel最初的提供功能之一，随后的增加扩展了其能力范围。
- en: For instance, the `RANDARRAY()` function produces an array of random numbers,
    enabling you to specify the number of rows and columns. This facilitates the generation
    of dynamic arrays filled with random values, ideal for simulations. Similarly,
    the `SEQUENCE()` function creates a sequence of numbers within an array, using
    a specified starting number, increment, and array size. This is particularly beneficial
    for generating linearly spaced values or time steps in simulations and dynamic
    models.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`RANDARRAY()`函数生成一组随机数的数组，您可以指定行数和列数。这有助于生成填充有随机值的动态数组，非常适合模拟。类似地，`SEQUENCE()`函数在数组中创建一系列数字，使用指定的起始数、增量和数组大小。这对于生成线性间隔值或模拟和动态模型中的时间步骤特别有益。
- en: Many other dynamic array functions are geared towards text manipulation, including
    `VSTACK()` for vertical array combination and `TEXTSPLIT()` for splitting text
    using a specified delimiter. To explore a comprehensive list of dynamic array
    functions and access tutorials, [visit Exceljet.com’s article](https://oreil.ly/MTWH6)
    on the topic.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 许多其他动态数组函数旨在文本操作，包括用于垂直数组合并的`VSTACK()`和使用指定分隔符拆分文本的`TEXTSPLIT()`。要查看动态数组函数的全面列表并访问教程，[请访问Exceljet.com上关于此主题的文章](https://oreil.ly/MTWH6)。
- en: Dynamic Arrays and Modern Excel
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动态数组和现代Excel
- en: 'Dynamic array functions may appear to be a step backward in Excel, given the
    availability of tools like Power Query and Power Pivot. Why willingly return to
    the days of delicate, formula-driven workbooks when these advanced features exist?
    This attitude overlooks the value that dynamic arrays bring to the modern Excel
    analytics stack. Here’s why they are an important component:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于像Power Query和Power Pivot这样的工具的存在，动态数组函数在Excel中可能看起来是倒退的一步。为什么要自愿回到依赖精细公式驱动的工作簿时代，而不使用这些先进功能呢？这种态度忽视了动态数组在现代Excel分析堆栈中带来的价值。以下是它们成为重要组成部分的原因：
- en: Simplicity
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 简洁性
- en: Dynamic array functions streamline data manipulation and analysis by enabling
    calculations within a single formula, enhancing comprehension and maintainability.
    This stands in contrast to the complex and multistep process involved in constructing
    and managing data cleaning tasks in Power Query or Data Models in Power Pivot.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 动态数组函数通过在单个公式内执行计算来简化数据操作和分析，增强了理解和可维护性。这与在 Power Query 或 Power Pivot 中构建和管理数据清洗任务所涉及的复杂多步骤过程形成鲜明对比。
- en: Familiarity
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 熟悉度
- en: Dynamic array functions distinguish themselves from many of the other tools
    discussed in this book through their integration within the familiar Excel environment.
    Unlike add-ins that require installation or separate editors, dynamic array formulas
    are readily available within Excel itself. They are easily accessible, making
    adoption significantly smoother for the typical user.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 动态数组函数通过与熟悉的Excel环境集成，与本书中讨论的许多其他工具区别开来。与需要安装或单独编辑器的插件不同，动态数组公式在Excel中自带并且易于访问，大大简化了典型用户的采纳过程。
- en: Real-time updates
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 实时更新
- en: Dynamic array functions offer the advantage of automatic result updates whenever
    the underlying data changes. This eliminates the need for manual formula recalculations
    or connection refreshes, and enables real-time analysis and insights. This functionality
    proves especially beneficial in dynamic scenarios where data is continuously evolving,
    such as real-time dashboards or financial models.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 动态数组函数提供了当基础数据发生变化时自动更新结果的优势。这消除了手动公式重新计算或连接刷新的需要，并实现了实时分析和洞察。在数据不断变化的动态场景中（如实时仪表板或财务模型），这种功能尤其有益。
- en: Conclusion
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: The chapter introduced dynamic array functions, revitalizing traditional, sometimes-clunky
    Excel references and formulas. These features now hold a vital place alongside
    Power Query and Power Pivot in the Excel analytics toolkit.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了动态数组函数，使传统且有时笨拙的Excel引用和公式焕发新生。这些功能现在与Excel分析工具包中的Power Query和Power Pivot并驾齐驱。
- en: While dynamic array functions offer simplicity and low overhead, the subsequent
    chapters in [Part III](part03.html#part-3) delve into more advanced tools. These
    tools require additional setup but offer intricate analytics insights that surpass
    what can be achieved through formulas alone. Throughout these chapters, you’ll
    learn how to incorporate artificial intelligence, machine learning techniques,
    and advanced automation features using Python into your Excel workflow.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然动态数组函数提供简单和低开销的选择，但是第三部分[Part III](part03.html#part-3)中的后续章节深入探讨了更高级的工具。这些工具需要额外的设置，但提供了比单纯使用公式更为复杂的分析洞察。在这些章节中，您将学习如何通过Python将人工智能、机器学习技术和高级自动化功能整合到您的Excel工作流程中。
- en: Exercises
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: 'To practice dynamic array functions, open the *ch_10_exercises.xlsx* file found
    in the *exercises\ch_10_exercises* folder in the book’s [companion repository](https://oreil.ly/modern-analytics-excel-exercises).
    This workbook includes two datasets: `vehicles` and `common`. Complete the following
    exercises:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 要练习动态数组函数，请打开书的[companion repository](https://oreil.ly/modern-analytics-excel-exercises)中的*exercises\ch_10_exercises*文件夹中的*ch_10_exercises.xlsx*文件。此工作簿包括两个数据集：`vehicles`和`common`。完成以下练习：
- en: Find the distinct and truly unique values in the `make` column of the `vehicles`
    dataset. How many are there of each?
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找出`vehicles`数据集中`make`列中的不同和真正唯一的值。每个有多少个？
- en: Display only the vehicles with city mileage greater than 30.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅显示城市里程大于30的车辆。
- en: Display only the vehicles where either the city mileage is greater than 30,
    or where both cylinders are less than 6 and fuel is Regular.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅显示城市里程大于30的车辆，或者汽缸少于6且燃油为Regular的车辆。
- en: Sort the `vehicles` dataset in descending order based on the highway mileage.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据高速公路里程将`vehicles`数据集按降序排序。
- en: Sort just the `model` column of the `common` dataset based on the `years` column,
    descending.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据`common`数据集中的`years`列，按降序排序`model`列。
- en: Add the `years` column from the `common` dataset to the `vehicles` dataset.
    Return `Not reported` if a match is not found.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`common`数据集中的`years`列添加到`vehicles`数据集中。如果找不到匹配项，则返回`Not reported`。
- en: The solutions can be found in *ch_10_solutions.xlsx* in the same folder.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案可以在同一文件夹中的*ch_10_solutions.xlsx*中找到。
