- en: Chapter 7\. Creating Relational Models in Power Pivot
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章\. 在 Power Pivot 中创建关系模型
- en: '[Chapter 6](ch06.html#ch_06) introduced the fundamentals of Power Pivot as
    an effective tool for data analysis and reporting, especially when working with
    data from multiple sources. This chapter offers a demonstration on how to use
    Power Pivot for relational data modeling.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 6 章](ch06.html#ch_06) 介绍了 Power Pivot 作为处理来自多个来源的数据时的有效工具，尤其是数据分析和报告。本章演示了如何使用
    Power Pivot 进行关系数据建模。'
- en: Connecting Data to Power Pivot
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接数据到 Power Pivot
- en: As highlighted in [Chapter 6](ch06.html#ch_06), the Data Model serves as the
    foundation of Power Pivot, facilitating the creation and management of table relationships
    for effective data computation and analysis. Power Pivot streamlines this task
    with an intuitive drag-and-drop interface. This chapter delves deeper into the
    Data Model, using the *ch_07.xlsx* file. This file contains a retail sales dataset
    often referenced within the analytics community and is found in the *ch_07* folder
    among the book’s resources.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如 [第 6 章](ch06.html#ch_06) 所示，数据模型是 Power Pivot 的基础，有助于有效的数据计算和分析的表关系管理。Power
    Pivot 使用直观的拖放界面简化了这项任务。本章深入讨论了数据模型，使用 *ch_07.xlsx* 文件。该文件包含了分析社区经常引用的零售销售数据集，位于书籍资源的
    *ch_07* 文件夹中。
- en: In the example from [Chapter 6](ch06.html#ch_06), the Data Model was predefined.
    In this chapter, we’ll need to define it manually.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 6 章](ch06.html#ch_06) 的示例中，数据模型是预定义的。在本章中，我们需要手动定义它。
- en: Although direct connections to data sources via Power Pivot are feasible, it’s
    recommended to channel data through Power Query first. This approach provides
    a convenient platform to establish any recurring data cleaning procedures on these
    tables when necessary.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然通过 Power Pivot 直接连接到数据源是可行的，但建议首先通过 Power Query 进行数据通道。这种方法为需要时建立这些表上的任何重复数据清理程序提供了一个便捷的平台。
- en: To get started, import the `orders` table into Power Query using the Data →
    From Table/Range steps. Bypass any data transformation steps and proceed to Close
    & Load → Close & Load To on the Home tab.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请使用数据 → 从表/范围导入`orders`表到 Power Query。跳过任何数据转换步骤，然后在主页选项卡的关闭并加载 → 关闭并加载到中进行操作。
- en: To load this query to Power Pivot, choose to create the data as a connection
    only, and then select “Add this data to the Data Model,” as shown in [Figure 7-1](#load-to-data-model).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要将此查询加载到 Power Pivot 中，请选择将数据创建为仅连接，然后选择“将此数据添加到数据模型”，如 [图 7-1](#load-to-data-model)
    所示。
- en: '![Loading data screen](assets/mdae_0701.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![加载数据屏幕](assets/mdae_0701.png)'
- en: Figure 7-1\. Loading a query from Power Query to Power Pivot
  id: totrans-9
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-1\. 从 Power Query 加载查询到 Power Pivot
- en: By following these steps, the query becomes accessible in Power Pivot for data
    modeling, but not in a separate worksheet for examination. It’s important to note
    that the primary purpose of Power Pivot is to link and relate this table to others,
    construct DAX measures, and so on. Loading the data into the workbook as is would
    obscure these functionalities.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循这些步骤，可以使查询在 Power Pivot 中用于数据建模，但不会出现在单独的工作表中供检查。需要注意的是，Power Pivot 的主要目的是将此表与其他表关联起来，构建
    DAX 度量等功能。直接将数据加载到工作簿中会掩盖这些功能。
- en: Repeat the process for both the `returns` and `users` tables to ensure that
    you have three connection-only queries incorporated into your workbook and added
    to the Data Model.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对`returns`和`users`表重复执行这一过程，确保你的工作簿中包含三个仅连接的查询，并将其添加到数据模型中。
- en: Creating Relationships
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建关系
- en: In Power Pivot, table relationships streamline data analysis, allowing for sophisticated
    models without the traditional, laborious data merging. This approach enhances
    consistency, reduces redundancy, and simplifies dataset management. Through these
    connections, users unlock dynamic and interactive exploration, boosting Excel’s
    analytical power.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Power Pivot 中，表之间的关系优化了数据分析，允许创建复杂的模型，而无需传统繁琐的数据合并工作。这种方法增强了一致性，减少了冗余，并简化了数据集管理。通过这些连接，用户可以实现动态和交互式的数据探索，提升
    Excel 的分析能力。
- en: To establish relationships among the `orders`, `returns`, and `users` tables,
    navigate to the Power Pivot tab on the ribbon. Next, select Manage and choose
    Diagram View under the View group. Within Diagram View, the three tables and their
    respective column names will be displayed, as illustrated in [Figure 7-2](#pp-diagram-view).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要在`orders`、`returns`和`users`表之间建立关系，请导航到功能区上的 Power Pivot 选项卡。接下来，选择“管理”并选择视图组下的“图表视图”。在图表视图中，将显示三个表及其各自的列名，如
    [图 7-2](#pp-diagram-view) 所示。
- en: '![Creating the relationship](assets/mdae_0702.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![创建关系](assets/mdae_0702.png)'
- en: Figure 7-2\. Diagram View in the Power Pivot editor
  id: totrans-16
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-2\. Power Pivot 编辑器中的图表视图
- en: It’s OK if your tables are not displayed in the exact order shown in [Figure 7-2](#pp-diagram-view).
    We will establish the relationships between these tables, which will function
    regardless of their arrangement in Diagram View. Once we understand the content
    of the tables through these relationships, we’ll rearrange them visually into
    a more coherent and efficient layout.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的表格不像[图 7-2](#pp-diagram-view)中显示的顺序一样，不要紧。我们将建立这些表格之间的关系，这些关系将不受图表视图中的排列顺序影响。一旦通过这些关系了解了表格的内容，我们会将它们可视化为更一致和高效的布局。
- en: To create the first relationship, start by selecting the `orders` table. Then,
    go to the Design tab in Power Pivot and click on Create Relationship under the
    Relationships group, as shown in [Figure 7-3](#pp-create-relationship).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建第一个关系，请先选择`orders`表。然后，在Power Pivot的设计选项卡中，转到“关系”组下的“创建关系”并单击，如[图 7-3](#pp-create-relationship)所示。
- en: '![Creating the relationship](assets/mdae_0703.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![创建关系](assets/mdae_0703.png)'
- en: Figure 7-3\. Create Relationship in Power Pivot
  id: totrans-20
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-3\. 在 Power Pivot 中创建关系
- en: To establish a relationship between the `orders` and `returns` tables in Power
    Pivot, choose the `returns` table from the drop-down menu. Highlight the `Order
    ID` column in both tables. Complete the process by clicking OK, as shown in [Figure 7-4](#create-relationship-orders-returns).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Power Pivot中的`orders`和`returns`表之间建立关系，请从下拉菜单中选择`returns`表。在两个表格中突出显示`Order
    ID`列。完成过程，请单击“确定”，如[图 7-4](#create-relationship-orders-returns)所示。
- en: '![Creating the relationship](assets/mdae_0704.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![创建关系](assets/mdae_0704.png)'
- en: Figure 7-4\. Creating a relationship between `orders` and `returns`
  id: totrans-23
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-4\. 在`orders`和`returns`之间创建关系
- en: Much like the `VLOOKUP()` function, a data relationship is anchored on common
    columns between tables. Here, the shared column is `Order ID`. Upon setting this
    relationship and clicking OK, a line appears connecting the two tables, as shown
    in [Figure 7-5](#orders-returns-created-relationship).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于`VLOOKUP()`函数，数据关系基于表格之间的共同列。这里，共享列是`Order ID`。设置此关系并单击“确定”后，将显示连接两个表格的线条，如[图 7-5](#orders-returns-created-relationship)所示。
- en: '![Created relationship](assets/mdae_0705.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![已创建关系](assets/mdae_0705.png)'
- en: Figure 7-5\. Created relationship between `orders` and `returns`
  id: totrans-26
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-5\. 在`orders`和`returns`之间已创建关系
- en: To establish the final relationship in the Data Model and connect all three
    tables, you can use the `Region` field present in both `orders` and `users`. Rather
    than using the Create Relationship option, a more efficient approach is to drag
    and drop the `Region` field between the two tables. This action will create the
    desired relationship, as illustrated in [Figure 7-6](#drag-drop-orders-users).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要在数据模型中建立最终关系并连接所有三个表格，您可以使用同时存在于`orders`和`users`中的`Region`字段。与使用“创建关系”选项不同，更有效的方法是直接将`Region`字段在两个表格之间拖放。此操作将创建所需的关系，如[图 7-6](#drag-drop-orders-users)所示。
- en: '![Created relationship](assets/mdae_0706.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![已创建关系](assets/mdae_0706.png)'
- en: Figure 7-6\. Dragging-and-dropping to create a relationship between `orders`
    and `users`
  id: totrans-29
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-6\. 拖放以在`orders`和`users`之间创建关系
- en: Identifying Fact and Dimension Tables
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别事实表和维度表
- en: Once a comprehensive Data Model is created, a good next step is to identify
    its fact tables and dimension tables. *Fact tables* typically contain quantitative
    data that is suitable for calculations, such as averages, minimums, and maximums.
    On the other hand, *dimension tables* contain descriptive data that provides context
    to the measurements in the fact tables.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 创建全面的数据模型后，一个不错的下一步是识别其事实表和维度表。*事实表*通常包含适合计算的定量数据，如平均值、最小值和最大值。另一方面，*维度表*包含提供事实表中测量内容背景的描述性数据。
- en: For example, the `orders` table consists of several measurable quantities, such
    as sales, profits, and units sold that can be summed, averaged, and so forth.
    These represent the core metrics of the business or process that you’re analyzing.
    The presence these quantitative data indicate that this is a fact table.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`orders`表包含多个可测量的数量，如销售额、利润和销售单位，可以对其进行求和、平均值等操作。这些数据代表您正在分析的业务或流程的核心指标。这些定量数据的存在表明这是一个事实表。
- en: Fact tables often lack contextual information that is crucial for data interpretation.
    In the case of the `orders` table, it may be useful to know the manager associated
    with each region of the company. The `users` table acts as a dimension table because
    it offers descriptive context; specifically, which manager oversees each region.
    Dimension tables play a vital role in slicing, dicing, and gaining a deeper understanding
    of the data.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 事实表通常缺乏对数据解释至关重要的上下文信息。例如，对于`orders`表，了解与公司每个区域相关的经理可能是有用的。`users`表作为维度表，因为它提供描述性上下文；具体来说，指出每个区域由哪个经理负责。维度表在切片、切块和深入了解数据方面发挥着至关重要的作用。
- en: Arranging the Diagram View
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安排图表视图
- en: In real-world scenarios, it’s common to encounter a dozen or more tables within
    the Data Model. Properly organizing the diagram is crucial for enabling users
    to understand the data effectively.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实场景中，数据模型中常见的是一打或更多的表。正确组织图表对于用户有效理解数据至关重要。
- en: One useful technique is to position the fact table at the center of the diagram
    and surround it with dimension tables. This visual arrangement assists in comprehending
    the relationships and dependencies between the tables. To achieve this with the
    current data, click and drag the `returns` and `users` tables so that they are
    on either side of the `orders` table, as shown in [Figure 7-7](#superstore-diagram-view).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有用的技术是将事实表放在图表的中心，并用维度表围绕它。这种视觉排列有助于理解表之间的关系和依赖性。要使用当前数据实现这一点，请点击并拖动`returns`和`users`表，使它们位于`orders`表的两侧，如[图 7-7](#superstore-diagram-view)所示。
- en: '![Completed Diagram View](assets/mdae_0707.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![完成的图表视图](assets/mdae_0707.png)'
- en: Figure 7-7\. Viewing the Data Model in Diagram View
  id: totrans-38
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-7\. 在图表视图中查看数据模型
- en: Note
  id: totrans-39
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注
- en: In a Data Model, when a fact table is central and flanked by dimension tables,
    as illustrated in [Figure 7-7](#superstore-diagram-view), this arrangement is
    termed a *star schema*. The star schema is a foundational concept in data model
    design. Its moniker is derived from the schema’s visual representation, where
    the fact table anchors the center and the dimension tables emanate outward, mimicking
    the rays of a star.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据模型中，当一个事实表位于中心，并被维度表包围，如[图 7-7](#superstore-diagram-view)所示，这种安排被称为*星型模式*。星型模式是数据模型设计中的基础概念。其名称来源于模式的视觉表示，其中事实表位于中心，维度表向外辐射，类似星星的射线。
- en: Editing the Relationships
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑关系
- en: To modify defined relationships in Power Pivot, you have several options. First,
    you can right-click on any relationship line in Diagram View and select Edit Relationship
    to revisit the dialog where you can modify the related tables and columns. Second,
    you can temporarily disable or delete the relationship by right-clicking on the
    relationship lines and selecting from the menu.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 若要修改Power Pivot中定义的关系，您有几个选项。首先，您可以右键单击图表视图中的任何关系线，选择“编辑关系”，重新访问对话框，在那里您可以修改相关的表和列。其次，您可以通过右键单击关系线并从菜单中选择来暂时禁用或删除关系。
- en: Third, you can manage all relationships within the Data Model from a centralized
    location. To do this, navigate to the Design tab on the ribbon and click on Manage
    Relationships. This will provide a comprehensive view of all relationships within
    your Data Model, as depicted in [Figure 7-8](#superstore-manage-relationships),
    enabling you to make necessary adjustments.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 第三，您可以从集中位置管理数据模型中的所有关系。要做到这一点，请导航到功能区上的“设计”选项卡，然后单击“管理关系”。这将提供您数据模型中所有关系的全面视图，如[图 7-8](#superstore-manage-relationships)所示，使您能够进行必要的调整。
- en: '![Manage Relationships menu](assets/mdae_0708.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![管理关系菜单](assets/mdae_0708.png)'
- en: Figure 7-8\. Managing relationships in the Data Model
  id: totrans-45
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-8\. 在数据模型中管理关系
- en: The Manage Relationships dialog box—shown in [Figure 7-8](#superstore-manage-relationships)—provides
    insights into the cardinality and filter direction of each relationship. These
    ideas will be delved into later in this chapter.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: “管理关系”对话框—如[图 7-8](#superstore-manage-relationships)所示—提供了每个关系的基数和过滤方向的洞见。这些概念将在本章后面进一步探讨。
- en: Loading the Results to Excel
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将结果加载到Excel
- en: Once the Data Model is established, the next step is to transfer the results
    to Excel. This can be achieved by navigating to the Home tab in the Power Pivot
    editor and then selecting an option from the PivotTable drop-down menu, as illustrated
    in [Figure 7-9](#pivot-load-options).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦建立了数据模型，下一步是将结果转移到 Excel 中。这可以通过在 Power Pivot 编辑器的“主页”选项卡中导航，然后从数据透视表下拉菜单中选择一个选项来实现，如[图 7-9](#pivot-load-options)所示。
- en: '![Power Pivot menu](assets/mdae_0709.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![Power Pivot 菜单](assets/mdae_0709.png)'
- en: Figure 7-9\. Power Pivot load options
  id: totrans-50
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-9\. Power Pivot 加载选项
- en: Power Pivot offers various configuration options for loading a PivotTable into
    a workbook. These options often involve both PivotTables and PivotCharts, as Power
    Pivot is commonly used to create basic dashboards and reports. The final option,
    Flattened PivotTable, removes all subtotals and displays the data in a tabular,
    unnested format.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Power Pivot 提供了各种配置选项，用于将数据透视表加载到工作簿中。这些选项通常涉及数据透视表和数据透视图，因为 Power Pivot 通常用于创建基本的仪表板和报告。最终选项“扁平化数据透视表”会删除所有小计，并将数据以表格化、非嵌套的格式显示。
- en: Select the PivotTable option. Click OK on the Create PivotTable dialog box to
    insert it into a new worksheet. You should now have something similar to [Figure 7-10](#power-pivot-table).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 选择数据透视表选项。在“创建数据透视表”对话框中单击“确定”，将其插入到新工作表中。您现在应该有类似于[图 7-10](#power-pivot-table)的内容。
- en: '![Power Pivot PivotTable](assets/mdae_0710.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![Power Pivot PivotTable](assets/mdae_0710.png)'
- en: Figure 7-10\. A Power Pivot-generated PivotTable
  id: totrans-54
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-10\. 由 Power Pivot 生成的数据透视表
- en: Now, drag the `Region` field from the `users` table to the Rows section of the
    PivotTable. Next, place `Sum of sales` from the `orders` table to the Values section.
    The Data Model will instantly use the relationships between these tables, specifically
    the shared `Region` value, to accurately perform the calculation. You can see
    the results in [Figure 7-11](#multi-table-pivottable).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将`users`表中的`Region`字段拖到数据透视表的行区域。接下来，将`orders`表中的`Sum of sales`放置到值区域。数据模型将立即利用这些表之间的关系，特别是共享的`Region`值，准确执行计算。您可以在[图 7-11](#multi-table-pivottable)中查看结果。
- en: '![Power Pivot PivotTable](assets/mdae_0711.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![Power Pivot PivotTable](assets/mdae_0711.png)'
- en: Figure 7-11\. A PivotTable sourced from multiple tables
  id: totrans-57
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-11\. 从多个表源的数据透视表
- en: The results show that the `Sales` field is rounded to three decimal points,
    which is unusual, and the formatting doesn’t clearly show currency, making it
    hard to read. It’s possible to adjust these numbers in the worksheet or PivotTable,
    but a lasting fix is to format the data in the Power Pivot Data Model. To do this,
    go back to the Power Pivot tab on the ribbon and click on Manage.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 结果显示`Sales`字段舍入到三位小数，这是不寻常的，并且格式不清晰显示货币，使其难以阅读。可以在工作表或数据透视表中调整这些数字，但是持久修复方法是在
    Power Pivot 数据模型中格式化数据。要做到这一点，请返回到功能区中的 Power Pivot 选项卡，然后单击“管理”。
- en: On the Power Pivot Home tab, click on Data View in the View group. Select the
    `orders` worksheet tab at the bottom of Data View to access and operate on this
    table. Then, click the `Sales` column and adjust its format to Currency, also
    enabling the thousands separator, as seen in [Figure 7-12](#power-pivot-column-formatting).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Power Pivot 主页选项卡上，在“查看”组中单击“数据视图”。在数据视图底部选择“orders”工作表选项卡，以访问和操作此表。然后，单击“Sales”列，并将其格式调整为货币格式，同时启用千位分隔符，如[图 7-12](#power-pivot-column-formatting)所示。
- en: '![Power Pivot PivotTable](assets/mdae_0712.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![Power Pivot PivotTable](assets/mdae_0712.png)'
- en: Figure 7-12\. Formatting a column in Power Pivot
  id: totrans-61
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-12\. 在 Power Pivot 中格式化列
- en: Feel free to make any other formatting adjustments to your source data while
    you are here.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎在此处对源数据进行任何其他格式调整。
- en: After exiting Power Pivot, the enhancements will be clearly visible in the PivotTable,
    as illustrated in [Figure 7-13](#power-pivot-formatted-column).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 退出 Power Pivot 后，增强效果将清晰地显示在数据透视表中，如[图 7-13](#power-pivot-formatted-column)所示。
- en: This book will continue to make changes to the formatting of columns in Power
    Pivot without necessarily explicitly walking through the instructions.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将继续对 Power Pivot 中列的格式进行更改，而不一定要明确地按照说明进行。
- en: '![Power Pivot PivotTable](assets/mdae_0713.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![Power Pivot PivotTable](assets/mdae_0713.png)'
- en: Figure 7-13\. The results of a formatted column in the PivotTable
  id: totrans-66
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-13\. 数据透视表中格式化列的结果
- en: Understanding Cardinality
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解基数
- en: Challenges in Power Pivot results often emerge when numbers don’t aggregate
    as expected or when specific fields become unusable due to issues in the Data
    Model’s relationships. Such problems typically stem from an incomplete understanding
    of the Data Model’s structure and its cardinality. Let’s delve deeper into these
    elements.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Power Pivot 中，当数字不按预期聚合或特定字段由于数据模型关系中的问题而无法使用时，通常会出现问题。这些问题通常源于对数据模型结构及其基数的不完全理解。让我们深入探讨这些要素。
- en: The earlier section highlighted the significance of shared fields for creating
    relationships in Power Pivot. The count of unique records in each table plays
    a pivotal role in determining how relationships function within the Data Model.
    *Cardinality* pertains to the quantity of entries in one table that correlate
    to entries in another table.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 较早的部分强调了在 Power Pivot 中创建关系时共享字段的重要性。每个表中唯一记录的计数在确定数据模型中关系功能的运作方式方面起到关键作用。*基数*
    是指一个表中与另一个表中条目相关的数量。
- en: One-to-One Cardinality
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一对一基数
- en: A *one-to-one* relationship represents the most straightforward form of cardinality,
    wherein each entry in one table corresponds uniquely to a single entry in another.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 *一对一* 的关系代表基数中最简单的形式，其中一个表中的每个条目唯一对应于另一个表中的单个条目。
- en: 'Consider a scenario where the Data Model comprises two tables: `product_details`
    and `supplier_details`, as illustrated in [Figure 7-14](#one-to-one-relationship).'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑数据模型包含两个表的情况：`product_details` 和 `supplier_details`，如 [图 7-14](#one-to-one-relationship)
    所示。
- en: '![One to one relationshiop](assets/mdae_0714.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![一对一关系](assets/mdae_0714.png)'
- en: Figure 7-14\. Example of a one-to-one relationship
  id: totrans-74
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-14\. 一对一关系示例
- en: In [Figure 7-14](#one-to-one-relationship), each record is identified by a unique
    `Product ID`, forming the basis of the relationship between the two tables.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [图 7-14](#one-to-one-relationship) 中，每条记录由唯一的 `Product ID` 标识，构成了两个表之间的关系基础。
- en: Although such a structure can be useful, it’s often not the most efficient.
    Merging the tables can minimize redundancy, decrease maintenance efforts, and
    enhance performance. Power Pivot, as a data modeling tool in Excel, doesn’t provide
    an option for one-to-one cardinality, underscoring its limited application in
    real-world data models. Instead, Power Pivot is fine-tuned for one-to-many relationships.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这种结构可能很有用，但通常并不是最有效的。合并表格可以最小化冗余，减少维护工作，并提高性能。作为 Excel 中数据建模工具的 Power Pivot，在实际数据模型中没有一对一基数的选项，突显了其应用的局限性。相反，Power
    Pivot 被调优用于一对多关系。
- en: One-to-Many Relationships
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一对多关系
- en: A *one-to-many* relationship indicates that several records in one table correspond
    to a single record in another table. Consider the example in [Figure 7-15](#one-to-many-relationship).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 *一对多* 的关系表示一个表中的多个记录对应另一个表中的单个记录。考虑 [图 7-15](#one-to-many-relationship) 中的示例。
- en: '![One to many relationshiop](assets/mdae_0715.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![一对多关系](assets/mdae_0715.png)'
- en: Figure 7-15\. Example of a one-to-many relationship
  id: totrans-80
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-15\. 一对多关系示例
- en: In this model, a customer from one table can have multiple related records in
    another table, such as orders. By storing related records in separate tables and
    connecting them via a single item per group, this method reduces data redundancy,
    streamlines updates and queries, and ensures data integrity. This efficient approach
    is key to building scalable, maintainable databases that accurately capture the
    complexities of business operations.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种模型中，来自一个表的客户可以在另一个表中拥有多个相关记录，例如订单。通过将相关记录存储在单独的表中，并通过每组的单个项目连接它们，这种方法减少了数据冗余，简化了更新和查询，并确保了数据完整性。这种高效的方法对于构建可扩展、可维护的数据库至关重要，准确捕捉业务运作的复杂性。
- en: Many-to-Many Relationships
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多对多关系
- en: In scenarios where entities from two different tables have the capability to
    form multiple connections, a *many-to-many* relationship is present. Tools like
    Power Pivot do not directly accommodate these relationships. The common approach
    to managing such relationships is through the use of a *bridge* or *junction*
    table.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个不同表的实体能够形成多个连接的情况下存在 *多对多* 的关系。像 Power Pivot 这样的工具不直接支持这些关系。管理这些关系的常见方法是通过使用
    *桥接* 或 *连接* 表。
- en: Consider tracking customer purchases across multiple promotions in a retail
    setting, such as in [Figure 7-16](#many-to-many-relationship).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑在零售设置中跟踪客户在多个促销活动中的购买情况，例如 [图 7-16](#many-to-many-relationship)。
- en: '![Many to many relationship](assets/mdae_0716.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![多对多关系](assets/mdae_0716.png)'
- en: Figure 7-16\. Example of a many-to-many relationship
  id: totrans-86
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-16\. 多对多关系示例
- en: In this example, each customer and event is listed once, indicating that a customer
    may have made multiple purchases per promotion. To manage this complexity, we
    introduce a bridge table that maps which customers participated in which promotions,
    as shown in [Figure 7-17](#many-to-many-bridge-table).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，每位客户和活动仅列出一次，表明每位客户可能在每个促销活动中购买多次。为了管理这种复杂性，我们引入了一个桥接表，用于映射哪些客户参与了哪些促销活动，如图
    [Figure 7-17](#many-to-many-bridge-table) 所示。
- en: '![Many to many bridge table](assets/mdae_0717.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![多对多桥接表](assets/mdae_0717.png)'
- en: Figure 7-17\. Example of a many-to-many bridge table
  id: totrans-89
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-17\. 多对多桥接表示例
- en: This table simplifies the many-to-many relationship, representing each customer’s
    engagement in specific promotions.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这张表简化了多对多关系，展示了每位客户在特定促销活动中的参与情况。
- en: Why Does Cardinality Matter?
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么基数很重要？
- en: Cardinality plays a pivotal role in data modeling, ensuring data accuracy and
    consistency. In a one-to-many relationship, it’s essential to confirm that each
    “one” entity corresponds uniquely to a “many” entity, and vice versa.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 基数在数据建模中起着至关重要的作用，确保数据的准确性和一致性。在一对多关系中，确认每个“一”实体与唯一对应的“多”实体，以及反之，尤为重要。
- en: Though Power Pivot doesn’t differentiate between one-to-one and one-to-many
    relationships, mastering this notion enhances data model performance in Power
    BI, which does cater to these distinctions. For a deeper dive into Power BI relationships,
    refer to [Microsoft’s documentation](https://oreil.ly/fB8-G).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Power Pivot 不区分一对一和一对多关系，但掌握这一概念有助于提升 Power BI 中数据模型的性能，后者确实关注这些区别。有关深入了解
    Power BI 关系，请参阅 [Microsoft 的文档](https://oreil.ly/fB8-G)。
- en: Grasping various cardinalities, such as one-to-one, one-to-many, and many-to-many,
    is crucial across all data modeling tools, not just Power Pivot. While Power Pivot
    emphasizes one-to-many relationships, understanding all cardinalities ensures
    organized data, preserved integrity, and smooth tool integration. This insight
    is invaluable for troubleshooting and effective communication with data peers.
    In short, a thorough understanding of these principles offers adaptability in
    diverse data landscapes.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 掌握各种基数，如一对一、一对多和多对多，在所有数据建模工具中都至关重要，不仅限于 Power Pivot。虽然 Power Pivot 强调一对多关系，但理解所有基数确保了组织化数据、保持完整性和平滑的工具集成。这种洞察力对故障排除和与数据同行有效沟通至关重要。简言之，对这些原则的深入理解为适应多样化数据景观提供了灵活性。
- en: Understanding Filter Direction
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解过滤方向
- en: As a relational data model, Power Pivot streamlines data analysis across multiple
    tables by leveraging common fields. Adjusting filters on these fields affects
    related tables, embodying the concept of *filter direction*, which is intrinsically
    tied to cardinality.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 作为关系数据模型，Power Pivot 通过利用公共字段简化跨多张表的数据分析。调整这些字段上的过滤器会影响相关表，体现了*过滤方向*的概念，这与基数密切相关。
- en: Within this workbook’s Diagram View, the connection between the `users` and
    `orders` tables through the `Region` field is evident. A closer look at the line
    symbolizing this relationship reveals a small arrow pointing from `users` to `orders`,
    as shown in [Figure 7-18](#power-pivot-filter-direction).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在此工作簿的图表视图中，通过 `Region` 字段连接 `users` 和 `orders` 表的关系显而易见。仔细观察表示这种关系的线条，可以看到一个小箭头指向从
    `users` 到 `orders`，如图 [Figure 7-18](#power-pivot-filter-direction) 所示。
- en: '![Filter direction](assets/mdae_0718.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![过滤方向](assets/mdae_0718.png)'
- en: Figure 7-18\. `users` to `orders` filter direction
  id: totrans-99
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-18\. `users` 到 `orders` 的过滤方向
- en: Note
  id: totrans-100
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: The asterisk seen in [Figure 7-18](#power-pivot-filter-direction) indicates
    the “many” side of a one-to-many relationship between tables. This visual representation
    offers a quick glance at the relationship’s nature and cardinality between the
    tables.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在图 [Figure 7-18](#power-pivot-filter-direction) 中看到的星号表示表之间一对多关系中的“多”一侧。这种视觉表示快速展示了表之间关系的本质和基数。
- en: The arrow indicates the flow of filter effects from one table to the other.
    Applying filters to the left table influences the right table, but the reverse
    doesn’t hold true.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 箭头指示了过滤效果从一张表流向另一张表。对左表应用过滤会影响右表，但反之则不成立。
- en: Filtering orders with users
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用用户筛选订单
- en: To understand the influence of filtering `orders` via the `users` table, begin
    by inserting a PivotTable from the Data Model into the workbook. Add the `Region`
    field from the `users` table to the Filters area and the `Sum of Sales` field
    from the `orders` table to the Values area. When adjusting the `Region` field,
    for instance by selecting Central, the PivotTable will showcase the sum of sales
    for the Central region, as demonstrated in [Figure 7-19](#orders-people-filter-direction).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解通过`users`表筛选`orders`的影响，首先将数据模型中的透视表插入工作簿中。将`users`表中的`Region`字段添加到筛选区域，将`orders`表中的`Sum
    of Sales`字段添加到值区域。例如，在调整`Region`字段时，选择中心，透视表将展示中心地区的销售总额，如[图7-19](#orders-people-filter-direction)所示。
- en: '![Filter direction](assets/mdae_0719.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![筛选方向](assets/mdae_0719.png)'
- en: Figure 7-19\. Filtering `orders` with `users`
  id: totrans-106
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7-19\. 使用`users`表筛选`orders`
- en: The technical term for this phenomenon is that the filter is “propagated” from
    the `users` table to the `orders` table. This is the expected behavior when creating
    a filter, and the one you’re probably used to.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这种现象的技术术语是筛选“传播”，从`users`表传播到`orders`表。这是创建筛选时的预期行为，也是您可能已习惯的行为。
- en: Filtering users with orders
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过订单筛选用户
- en: Now, consider a PivotTable using the `Region` field from the `orders` table
    in the Filters area and the `Manager` field from the `users` table in the Rows
    area.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在考虑使用`orders`表中的`Region`字段作为筛选区域和`users`表中的`Manager`字段作为行区域的透视表。
- en: 'Upon filtering for the Central region, something interesting happens: the data
    remains intact with no records omitted. This is depicted in [Figure 7-20](#people-users-filter-direction).'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在对中心地区进行筛选后，发生了一些有趣的事情：数据保持完整，没有记录被省略。这在[图7-20](#people-users-filter-direction)中有所体现。
- en: '![Filter direction](assets/mdae_0720.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![筛选方向](assets/mdae_0720.png)'
- en: Figure 7-20\. Filtering `users` with `orders`
  id: totrans-112
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图7-20\. 使用`orders`表筛选`users`
- en: 'This brings up the question: Why doesn’t the filter applied to the `orders`
    table affect the `users` table? Shouldn’t Chris be the only manager returned in
    this PivotTable, given that he is the only manager in the Central region? The
    answer lies in the principle of filter direction.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这带来了一个问题：为什么应用于`orders`表的筛选不影响`users`表？鉴于Chris是中心地区唯一的经理，他不应该是返回的唯一经理吗？答案在于筛选方向的原则。
- en: Filter Direction and Cardinality
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 筛选方向和基数
- en: In Power Pivot, filter direction depends on the type of relationship. In a one-to-many
    relationship, filters move from the “one” side to the “many” side. For example,
    the `users` table can affect the `orders` table, but not vice versa. This approach
    enhances performance because filtering from the side with fewer records to the
    side with more records is more efficient.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在Power Pivot中，筛选方向取决于关系类型。在一对多关系中，筛选从“一”方向到“多”方向。例如，`users`表可以影响`orders`表，但反之则不行。这种方法提高了性能，因为从记录较少的一侧向记录较多的一侧进行筛选更为高效。
- en: From Design to Practice in Power Pivot
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从设计到实践的Power Pivot应用
- en: 'Jazz guitarist Irving Ashby once likened rhythm guitar to vanilla in a cake:
    “You can’t taste it, but you know when it’s been left out.” Filter direction in
    your Data Model mirrors this sentiment. Typically, it works quietly in the background,
    but when something’s amiss, its absence becomes glaringly evident.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 爵士吉他手Irving Ashby曾将节奏吉他比作蛋糕中的香草：“你尝不出它的味道，但当它被遗漏时你会知道。”数据模型中的筛选方向正是如此。通常情况下，它在背景中悄然运行，但当出现问题时，其缺失将变得显而易见。
- en: With a foundational understanding of Data Model aspects like filter direction
    and cardinality, we can now delve into advanced features. Exploring calculated
    columns and hierarchies will further refine the Data Model, adding layers of flexibility
    and enhanced functionality.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 通过对数据模型方面的基本了解，如筛选方向和基数，我们现在可以深入探讨高级功能。探索计算列和层次结构将进一步完善数据模型，增加灵活性和功能性。
- en: Creating Columns in Power Pivot
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Power Pivot中创建列
- en: In [Chapter 4](ch04.html#ch_04), you were introduced to creating calculated
    columns in Excel Power Query. Now, let’s delve into when and how to perform the
    same task in Power Pivot, while also considering the advantages and disadvantages
    of each approach.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.html#ch_04)中，您已经了解了如何在Excel Power Query中创建计算列。现在，让我们深入探讨在Power Pivot中执行相同任务的时间和方式，同时考虑每种方法的优缺点。
- en: Calculating in Power Query Versus Power Pivot
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Power Query与Power Pivot的计算方法对比
- en: 'Power Query and Power Pivot are distinct tools with complementary roles, and
    both can derive calculated columns. To determine which to use, consider the following:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Power Query 和 Power Pivot 是具有互补作用的不同工具，两者都可以生成计算列。要确定使用哪一个，考虑以下几点：
- en: Use Power Query for data cleaning and transformation during the prep stage.
    It’s ideal for one-time tasks like merging fields or changing data types, optimizing
    your model by simplifying data before loading it into Power Pivot.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在准备阶段使用 Power Query 进行数据清洗和转换。它非常适合一次性任务，如合并字段或更改数据类型，在将数据加载到 Power Pivot 之前通过简化数据来优化模型。
- en: Use Power Pivot for advanced analyses, like dynamic calculations or building
    relationships between tables. These operations are done after data loading, enhancing
    reports and dashboards. However, excessive use may increase file size and slow
    performance.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Power Pivot 进行高级分析，如动态计算或建立表之间的关系。这些操作在数据加载后完成，可以增强报告和仪表板。然而，过度使用可能会增加文件大小并降低性能。
- en: By adhering to these guidelines, you can maximize the capabilities of both Power
    Query and Power Pivot, ensuring optimal calculated column creation relative to
    your data’s state and processing requirements.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循这些准则，您可以最大化 Power Query 和 Power Pivot 的能力，确保根据数据的状态和处理要求进行最佳的计算列创建。
- en: Tip
  id: totrans-126
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: While these rules of thumb are helpful, the best way to decide whether to create
    calculated columns in Power Query or Power Pivot is to experiment with both tools
    and see which one works best for your needs.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些经验法则很有帮助，但确定是在 Power Query 还是 Power Pivot 中创建计算列的最佳方法是尝试使用两种工具，看哪一种最适合您的需求。
- en: 'Example: Calculating Profit Margin'
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例：计算利润率
- en: Return to the Power Pivot editor. In Data View, select the `orders` table.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 返回到 Power Pivot 编辑器。在数据视图中，选择`orders`表格。
- en: Create a calculated column called `Profit margin`. Scroll to the right until
    you reach the end of the table where it says “Add Column.” Click inside Add Column
    to name the column `Profit margin,` then add the profit margin formula (`=orders[Profit]/orders[Sales]`)
    as shown in [Figure 7-21](#profit-margin-calculated-column).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`Profit margin`的计算列。滚动到表的末尾，在“添加列”内部点击以命名列为`Profit margin,`，然后按[图 7-21](#profit-margin-calculated-column)中显示的利润率公式（`=orders[Profit]/orders[Sales]`）添加。
- en: '![Profit margin calculated column](assets/mdae_0721.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![利润率计算列](assets/mdae_0721.png)'
- en: Figure 7-21\. Creating a profit margin calculated column
  id: totrans-132
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-21\. 创建利润率计算列
- en: 'Your calculated column should read like this:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您的计算列应该像这样：
- en: '[PRE0]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that, in contrast to Excel tables, you must manually type in references
    to other columns within the table instead of selecting them with a mouse click
    or keyboard stroke.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，与 Excel 表相比，您必须手动输入对表内其他列的引用，而不能通过鼠标点击或键盘击键来选择它们。
- en: This completes your first time using the DAX programming language for managing
    your Data Model in Power Pivot. You’ll observe that the way individual columns
    are referenced bears a striking resemblance to the structured column references
    of basic Excel tables. You can format the new column as a percentage while still
    in Data View.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您首次使用 DAX 编程语言管理 Power Pivot 中数据模型。您会注意到，单独列的引用方式与基本 Excel 表的结构化列引用非常相似。您可以在数据视图中将新列格式化为百分比。
- en: To validate this calculation, load the Data Model into a new PivotTable. Drag
    `Customer Segment` to the Rows section and `Average of Profit Margin` to the Values
    section. To cross-check accuracy, add `Sum of Profit` and `Sum of Sales` to the
    Values section as well.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证此计算，将数据模型加载到新的数据透视表中。将`Customer Segment`拖到行部分，将`Average of Profit Margin`拖到值部分。为了交叉检查准确性，还需将`Sum
    of Profit`和`Sum of Sales`添加到值部分。
- en: Upon manually calculating the profit margin as shown in [Figure 7-22](#check-profit-margin-calculation),
    you may spot a discrepancy compared to the PivotTable values.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 当按照[图 7-22](#check-profit-margin-calculation)手动计算利润率时，可能会发现与数据透视表值相比存在差异。
- en: '![Checking profit margin calculation](assets/mdae_0722.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![检查利润率计算](assets/mdae_0722.png)'
- en: Figure 7-22\. Checking the profit margin calculation
  id: totrans-140
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-22\. 检查利润率计算
- en: The issue arises because the `Profit margin` calculated column calculates a
    basic average of individual profit margins, without factoring in the aggregation
    of total profits and total sales. For an accurate profit margin calculation, dynamic
    and on-the-fly computations are needed which can’t be accomplished solely through
    calculated columns. Instead, you’ll need to use DAX measures, which will be extensively
    covered in Chapters [8](ch08.html#ch_08) and [9](ch09.html#ch_09).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 问题出在`Profit margin`计算列计算的是单个利润率的基本平均值，而不考虑总利润和总销售额的聚合。要进行准确的利润率计算，需要动态和即时计算，这不能仅通过计算列来完成。而是需要使用DAX度量值，这将在第[8章](ch08.html#ch_08)和第[9章](ch09.html#ch_09)中广泛讨论。
- en: For now, it is important to remember that calculated columns in Power Pivot
    should not be used when there is a possibility of aggregating the results. This
    issue is similar to working with calculated columns in Power Query, where they
    can become distorted when aggregated.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，重要的是记住，在Power Pivot中，当存在可能对结果进行聚合时，不应使用计算列。这个问题类似于在Power Query中使用计算列时，当进行聚合时可能会产生失真。
- en: There are scenarios where calculated columns in the Data Model are indeed the
    appropriate choice. One such example is the use of `SWITCH()`, which the following
    section explores.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据模型中，有些情况下计算列确实是合适的选择。其中一个例子是使用`SWITCH()`函数，下面的部分将详细探讨这个例子。
- en: Recoding Column Values with SWITCH()
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用`SWITCH()`重编码列值
- en: The `SWITCH()` function proves highly valuable for applying conditional logic
    to reassign values. Given that each row is evaluated independently and results
    generally aren’t aggregated, it’s more appropriate to save the `SWITCH()` outcomes
    as calculated columns, rather than measures.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`SWITCH()`函数非常有价值，可用于应用条件逻辑来重新分配值。由于每一行都是独立评估的，通常结果不会被聚合，因此更适合将`SWITCH()`的结果保存为计算列，而不是度量。'
- en: To demonstrate, imagine you want to assign the numbers 1, 2, 3, and 4 to the
    segments `Consumer`, `Corporate`, `Home Office`, and `Small Business`, respectively.
    In cases where a match isn’t found, you’d prefer to recode the value as `Unknown`.
    Begin by adding a new calculated column named `Segment number` to the `orders`
    table in Power Pivot, as depicted in [Figure 7-23](#segment-switch-recode).
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 举例说明，假设您想要将数字1、2、3和4分别分配给`Consumer`、`Corporate`、`Home Office`和`Small Business`四个部分。在找不到匹配项时，您希望将值重新编码为`Unknown`。首先在Power
    Pivot中的`orders`表中添加名为`Segment number`的新计算列，如[图 7-23](#segment-switch-recode)所示。
- en: '![Segment recoding with SWITCH()](assets/mdae_0723.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![使用SWITCH()进行分段重编码](assets/mdae_0723.png)'
- en: Figure 7-23\. Creating a `Segment number` column with the `SWITCH()` function
  id: totrans-148
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-23\. 使用`SWITCH()`函数创建`Segment number`列
- en: Keep in mind that all values within a column of a Data Model table must share
    the same data type. Because `Segment number` includes the string `Unknown`, it’s
    essential to transform the other values (1, 2, 3, 4) into strings to maintain
    consistency.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，数据模型表中某列的所有值必须具有相同的数据类型。因为`Segment number`包含字符串`Unknown`，因此将其他值（1、2、3、4）转换为字符串以保持一致性是非常重要的。
- en: Load your updated Data Model to a new PivotTable, or refresh an existing one,
    to use this new column in your analysis. For instance, [Figure 7-24](#switch-in-pivot-table)
    summarizes sales by the recoded segment numbers rather than the original category.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 将更新后的数据模型加载到新的PivotTable中，或者刷新现有的PivotTable，以在分析中使用这个新列。例如，[图 7-24](#switch-in-pivot-table)总结了按重新编码的段号而不是原始类别进行的销售情况。
- en: '![Checking profit margin calculation](assets/mdae_0724.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![检查利润率计算](assets/mdae_0724.png)'
- en: Figure 7-24\. `SWITCH()` results used in a PivotTable
  id: totrans-152
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-24\. PivotTable 中使用的`SWITCH()`结果
- en: Creating and Managing Hierarchies
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和管理层次结构
- en: 'Hierarchies are pivotal in numerous facets of our lives. Take my location while
    penning this book as an example: Cleveland, Ohio, United States. This can be organized
    into a hierarchical structure, starting with the broadest category (country: United
    States), followed by a more specific category (state: Ohio), and culminating in
    the most specific location (city: Cleveland). Integrating such hierarchical structures
    into the Data Model simplifies the process of data analysis and exploration, enabling
    a more efficient examination at varying levels of detail.'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 层次结构在我们生活的许多方面起着关键作用。以我撰写本书时的位置为例：俄亥俄州克利夫兰市，美国。这可以组织成一个层次结构，从最广泛的类别（国家：美国）开始，然后是更具体的类别（州：俄亥俄州），最后是最具体的位置（城市：克利夫兰）。将这样的层次结构集成到数据模型中，简化了数据分析和探索的过程，使得可以在不同详细级别上进行更有效的检查。
- en: Creating a Hierarchy in Power Pivot
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Power Pivot 中创建层次结构
- en: Let’s create a product-based hierarchy in our Data Model consisting of `Product
    Category`, `Product Sub-Category` and `Product Name`. To do this, navigate to
    Diagram View. Select the dimensions in the desired hierarchical order (i.e., `Product
    Category` at the top) while holding the Ctrl key. Once selected, right-click and
    choose Create Hierarchy. Assign a name for the hierarchy, such as `Product Hierarchy`,
    as shown in [Figure 7-25](#diagram-view-hierarchy).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在数据模型中创建基于产品的层次结构，包括`产品类别`、`产品子类别`和`产品名称`。要做到这一点，请导航到图示视图。按住 Ctrl 键选择所需的层次顺序中的维度（例如，最上面是`产品类别`）。选择完成后，右键单击并选择“创建层次结构”。为层次结构分配一个名称，例如`产品层次结构`，如[图
    7-25](#diagram-view-hierarchy)所示。
- en: '![Diagram View hierarchies](assets/mdae_0725.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![层次结构图示](assets/mdae_0725.png)'
- en: Figure 7-25\. Hierarchies seen in Diagram View
  id: totrans-158
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-25\. 在图示视图中看到的层次结构
- en: In Diagram View, you can easily add, modify, or delete hierarchies within the
    Data Model as needed. For now, load the data into a PivotTable to see it in action.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在图示视图中，根据需要可以轻松添加、修改或删除数据模型中的层次结构。目前，将数据加载到数据透视表中以查看其运行情况。
- en: Using Hierarchies in the PivotTable
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在数据透视表中使用层次结构
- en: After closing Power Pivot, return to your PivotTable. Place `Product Hierarchy`
    in the Rows section and `Sum of Sales` in the Values section. You will observe
    that the three dimensions within the hierarchy cannot be used individually in
    the PivotTable; they can only be used as part of the hierarchy.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭 Power Pivot 后，返回您的数据透视表。将`产品层次结构`放置在行部分，将`销售总额`放置在值部分。您将观察到，在数据透视表中，无法单独使用层次结构中的三个维度；它们只能作为层次结构的一部分使用。
- en: Now, you can click on the small plus sign to the left of any product category
    to drill down into that category at the subcategory level and, eventually, to
    the individual product name level, as shown in [Figure 7-26](#drilling-up-down-pivottable).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以单击任何产品类别左侧的小加号，以便在子类别级别和最终单个产品名称级别进入该类别，如[图 7-26](#drilling-up-down-pivottable)所示。
- en: '![Driling up and down](assets/mdae_0726.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![上下钻取](assets/mdae_0726.png)'
- en: Figure 7-26\. Drilling up and down in the PivotTable
  id: totrans-164
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-26\. 在数据透视表中上下钻取
- en: Toggle the buttons back to a minus sign to navigate upwards in the hierarchy.
    In the Active Field group on the PivotTable Analyze tab, you’ll find additional
    features that simplify hierarchy manipulation, such as the option to expand or
    collapse the entire hierarchy simultaneously.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 切换按钮回到减号，以在层次结构中向上导航。在数据透视表分析选项卡的“活动字段”组中，您将找到其他简化层次结构操作的功能，例如同时展开或折叠整个层次结构的选项。
- en: Before incorporating hierarchies into your data, it is crucial to consider the
    impact of data quality inconsistencies. In cases where a single subcategory is
    inconsistently mapped to multiple categories, the hierarchy may lose its meaning
    for analysis. It is also important to note that less experienced Excel users may
    face initial challenges when working with hierarchies.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在将层次结构纳入数据之前，重要考虑数据质量不一致性的影响。例如，一个单一的子类别映射到多个类别时，该层次结构可能会失去其分析意义。此外，需要注意，对于不太熟悉
    Excel 的用户来说，在使用层次结构时可能会面临一些挑战。
- en: Loading the Data Model to Power BI
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据模型加载到 Power BI 中
- en: 'Up to this point, you have mastered the basic elements of creating Data Models,
    including valuable features such as calculated columns and hierarchies. In Chapters
    [8](ch08.html#ch_08) and [9](ch09.html#ch_09), we’ll explore the creation of DAX
    measures and the use of tools like KPIs to improve data analysis and reporting.
    Before we move forward, let’s briefly explore an alternative method for analyzing
    and visualizing your Data Model: Power BI. We will examine how Power BI operates
    and the benefits it provides.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经掌握了创建数据模型的基本要素，包括如计算列和层次结构等宝贵功能。在第 [8](ch08.html#ch_08) 章和第 [9](ch09.html#ch_09)
    章中，我们将探讨创建 DAX 度量和使用 KPI 等工具来改进数据分析和报告的方法。在我们继续之前，让我们简要探讨一种用于分析和可视化数据模型的替代方法：Power
    BI。我们将探讨 Power BI 的操作方式及其提供的优势。
- en: Power BI as the Third Piece of “Modern Excel”
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Power BI 作为“现代 Excel”的第三个组成部分
- en: So far this book has primarily focused on Power Query and Power Pivot for data
    cleaning and data analysis, respectively. A third component of this stack, used
    for data visualization, was Power View, which was ultimately discontinued. Initially
    developed for Excel, Power View enabled the creation of interactive dashboards
    and reports. However, as time went on, the concept of Power View was integrated
    into Power BI, and newer versions of Excel no longer include it or include very
    limited functionality.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，本书主要集中在用于数据清理和数据分析的 Power Query 和 Power Pivot。该堆栈的第三个组件用于数据可视化的是 Power
    View，但最终已被停用。最初为 Excel 开发，Power View 允许创建交互式仪表板和报告。然而，随着时间的推移，Power View 的概念被整合到
    Power BI 中，并且较新版本的 Excel 不再包含它或包含非常有限的功能。
- en: Microsoft’s decision to shift focus from Power View in Excel to Power BI was
    driven by several factors. Power BI offers advanced data visualization capabilities
    that enable users to build interactive dashboards and reports using a wide range
    of data sources. This transition also aligns with Microsoft’s cloud-oriented strategy,
    as Power BI operates largely as a cloud-based platform that enables collaboration
    and data accessibility from any location. By emphasizing Power BI, Microsoft provides
    users with a more comprehensive, modern, and integrated solution for business
    intelligence to meet evolving needs.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 微软决定将注意力从 Excel 中的 Power View 转移到 Power BI，是基于多种因素。Power BI 提供先进的数据可视化能力，使用户能够使用各种数据源构建交互式仪表板和报告。这一转变也与微软的云导向策略一致，因为
    Power BI 主要作为云平台运行，支持从任何位置进行协作和数据访问。通过强调 Power BI，微软为用户提供了一个更全面、现代化和集成的商业智能解决方案，以满足不断发展的需求。
- en: While Power BI is renowned for its ability to generate interactive dashboards,
    some analysts may find it less familiar, which can introduce challenges when they
    are building and sharing their work. Starting with Excel to build a Data Model
    remains a practical choice due to its widespread familiarity among professionals.
    As projects grow in complexity, and there’s a demand for more advanced dashboards,
    transitioning from Excel to Power BI becomes a viable path. This section will
    explore the strategies for making this transition smoothly.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Power BI 以生成交互式仪表板而闻名，但一些分析师可能会发现它相对不太熟悉，这可能在构建和分享工作时带来挑战。从 Excel 开始构建数据模型仍然是因其在专业人士中广泛熟悉的实际选择。随着项目复杂度的增加以及对更高级仪表板的需求，从
    Excel 过渡到 Power BI 成为一条可行的道路。本节将探讨如何平稳过渡的策略。
- en: Importing the Data Model to Power BI
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将数据模型导入 Power BI
- en: 'As this is not a book on Power BI, the main objective here is simply to load
    the Data Model into Power BI and preview it. To accomplish this, ensure that you
    have Power BI Desktop, a free application, installed. You can find instructions
    on how to install it in [Microsoft’s official documentation](https://oreil.ly/Jutf1).
    If you wish to explore Power BI in more depth, check out Jeremey Arnold’s book,
    [*Learning Microsoft Power BI: Transforming Data into Insights*](https://www.oreilly.com/library/view/learning-microsoft-power/9781098112837)
    (O’Reilly, 2022).'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书不是关于 Power BI 的，这里的主要目标只是将数据模型加载到 Power BI 中并预览它。要实现这一目标，请确保已安装免费应用程序 Power
    BI Desktop。你可以在[Microsoft 的官方文档](https://oreil.ly/Jutf1)中找到安装说明。如果你希望更深入地探索 Power
    BI，请查阅 Jeremey Arnold 的书籍，[*《学习 Microsoft Power BI：将数据转化为见解》*](https://www.oreilly.com/library/view/learning-microsoft-power/9781098112837)（O'Reilly，2022）。
- en: To see how easy it is to transfer your Power Pivot work into Power BI, practice
    loading the *ch_07_solutions.xlsx* file or try loading the workbook you’ve been
    working on throughout this chapter.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 为了看到将 Power Pivot 的工作转移到 Power BI 有多么简单，请练习加载 *ch_07_solutions.xlsx* 文件，或尝试加载你在本章节中一直在使用的工作簿。
- en: With this workbook closed in Excel, open Power BI Desktop and create a new report.
    From the Power BI Desktop ribbon, head to File → Import → Power Query, Power Pivot,
    Power View, as shown in [Figure 7-27](#import_data_model).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Excel 中关闭这个工作簿后，打开 Power BI Desktop 并创建一个新报表。从 Power BI Desktop 的功能区，依次点击
    文件 → 导入 → Power Query、Power Pivot、Power View，如[图 7-27](#import_data_model)所示。
- en: '![Importing data model](assets/mdae_0727.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![导入数据模型](assets/mdae_0727.png)'
- en: Figure 7-27\. Importing from Power Pivot to Power BI
  id: totrans-178
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-27\. 从 Power Pivot 导入到 Power BI
- en: From here, browse to *ch_07_solutions.xlsx*, and select it. You might encounter
    a warning such as in [Figure 7-28](#import-excel-contents-warning), indicating
    that Power BI will make its best effort to import the data. Click on the Start
    button to proceed with the import.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，浏览到*ch_07_solutions.xlsx*，并选择它。您可能会遇到警告，例如在[图 7-28](#import-excel-contents-warning)中显示的内容，指示Power
    BI将尽其所能导入数据。点击开始按钮继续导入过程。
- en: '![Excel workbook contents options](assets/mdae_0728.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![Excel工作簿内容选项](assets/mdae_0728.png)'
- en: Figure 7-28\. Import Excel workbooks warning
  id: totrans-181
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-28\. 导入Excel工作簿警告
- en: You can choose between copying the Excel data or keeping a live connection.
    Linking to the Excel workbook offers convenience for making changes to the data,
    but it comes with slower performance in Power BI. To keep things simple, I will
    make a copy of the data instead of maintaining the connection.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择复制Excel数据或保持实时连接。链接到Excel工作簿可以方便地修改数据，但在Power BI中的性能较慢。为了简化操作，我会复制数据而不是保持连接。
- en: You should now receive a message confirming that Power BI has successfully imported
    your workbook, including its queries, Data Model relationships, and any KPIs or
    measures that were created. You might receive a message indicating that, due to
    the large size of one of the objects in the import, it was too extensive to be
    copied, and therefore, a live connection was used instead.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您应该会收到一条消息，确认Power BI已成功导入您的工作簿，包括其查询、数据模型关系以及任何已创建的关键绩效指标（KPI）或度量。您可能会收到一条消息，指出由于导入对象的大小过大，无法复制，因此使用了实时连接。
- en: Viewing the Data in Power BI
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看Power BI中的数据
- en: To verify the Data Model has been imported correctly into Power BI, navigate
    to Model View by clicking the third small icon on the left side of the screen.
    In Model View, which is similar to Diagram View in Power Pivot, we can confirm
    that the relations between tables were properly defined, as seen in [Figure 7-29](#power-bi-model-view).
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证数据模型是否已正确导入Power BI，请点击屏幕左侧的第三个小图标，进入模型视图。在模型视图中（类似于Power Pivot中的图表视图），我们可以确认表之间的关系已经正确定义，如[图 7-29](#power-bi-model-view)所示。
- en: '![Power BI Model View](assets/mdae_0729.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![Power BI模型视图](assets/mdae_0729.png)'
- en: Figure 7-29\. Model View in Power BI
  id: totrans-187
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-29\. Power BI中的模型视图
- en: Keep scrolling down the `orders` table and you will also see that the hierarchy
    and calculated columns you created in Power Pivot have been ported to Power BI.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 持续滚动`orders`表，您还将看到您在Power Pivot中创建的层次结构和计算列已经移植到Power BI中。
- en: You can view these calculated columns through the Table View, which is accessible
    by clicking the small spreadsheet icon above the Model View icon. This feature
    is akin to Power Pivot’s Data View, enabling you to toggle between data sources.
    The calculated columns for `Profit Margin` and `Segment Number`, along with their
    formulas, have been successfully imported, as shown in [Figure 7-30](#power-bi-data-view).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过点击模型视图图标上方的小型电子表格图标来查看这些计算列，从而访问表视图。此功能类似于Power Pivot的数据视图，使您可以在数据源之间切换。成功导入了`Profit
    Margin`和`Segment Number`的计算列及其公式，如[图 7-30](#power-bi-data-view)所示。
- en: '![Power BI Data View](assets/mdae_0730.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![Power BI数据视图](assets/mdae_0730.png)'
- en: Figure 7-30\. Table View in Power BI
  id: totrans-191
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 7-30\. Power BI中的表视图
- en: The formula editor in Power BI is noticeably more advanced compared to the one
    in Power Pivot. This reflects the broader capabilities of Power BI, which offers
    numerous opportunities for creating advanced dashboards and reports that would
    be challenging to build in Excel alone.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: Power BI中的公式编辑器显然比Power Pivot中的更先进。这反映了Power BI的更广泛能力，提供了创建高级仪表板和报告的多种机会，这在仅仅使用Excel中将会非常具有挑战性。
- en: Power BI has become Microsoft’s modern platform for developing dashboards and
    reports. However, Excel still retains its legacy as a quick and user-friendly
    tool, allowing for more flexible and exploratory data modeling and analysis. In
    the end, Power BI and Excel complement each other and serve different purposes
    as part of the same team.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: Power BI已成为微软的现代仪表板和报告开发平台。然而，Excel仍保留其作为快速和用户友好工具的传统，允许更灵活和探索性的数据建模和分析。最终，Power
    BI和Excel相辅相成，作为同一团队的不同工具，各自发挥不同的作用。
- en: Your Power BI report can now be saved. This Power BI file has been saved on
    your behalf in the *ch_07* folder, titled *ch_07_solutions.pbix*.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 您的Power BI报告现在可以保存。此Power BI文件已在您的*ch_07*文件夹中保存，文件名为*ch_07_solutions.pbix*。
- en: Conclusion
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This chapter provided a practical, hands-on approach to constructing basic Data
    Models and exploring essential features in Power Pivot. Upcoming chapters in [Part II](part02.html#part-2)
    will delve deeper, exploring its data analysis and reporting capabilities.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了一个实际的、动手操作的方法来构建基本的数据模型，并探索 Power Pivot 中的关键特性。[第二部分](part02.html#part-2)中的后续章节将深入探讨其数据分析和报告能力。
- en: Exercises
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: 'For this exercise, open *ch_07_exercises.xlsx* found in the *exercises\ch_07_exercises*
    folder in the book’s [companion repository](https://oreil.ly/modern-analytics-excel-exercises).
    This workbook consists of three tables: `batting`, `people`, and `hof`. Perform
    the following:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此练习，在书的 [伴侣存储库](https://oreil.ly/modern-analytics-excel-exercises) 中的 *exercises\ch_07_exercises*
    文件夹中打开名为 *ch_07_exercises.xlsx* 的文件。该工作簿包含三个表：`batting`、`people` 和 `hof`。执行以下操作：
- en: Load the tables into Power Pivot via Power Query and establish relationships
    in the Power Pivot Data Model.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 Power Query 将表加载到 Power Pivot 中，并在 Power Pivot 数据模型中建立关系。
- en: Identify fact and dimension tables in the Data Model and organize the model
    in Diagram View accordingly.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别数据模型中的事实表和维度表，并根据图表视图组织模型。
- en: What is the cardinality of the relationships between these tables?
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些表之间的关系的基数是多少？
- en: Use the `SWITCH()` function to generate an `is_player` column in the `hof` table.
    Assign Yes if the `category` column indicates Player, otherwise assign No.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `SWITCH()` 函数在 `hof` 表中生成一个 `is_player` 列。如果 `category` 列指示为 Player，则赋值为
    Yes，否则赋值为 No。
- en: Create a hierarchy among the `birthCountry`, `birthState`, and `birthCity` fields
    in the `people` table.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `people` 表中的 `birthCountry`、`birthState` 和 `birthCity` 字段之间创建层次结构。
- en: Load the Data Model results into an Excel PivotTable. Count the number of players.
    You can do this by totaling the number of `playerID`s that have Yes in the `is_player`
    column.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据模型结果加载到 Excel PivotTable 中。计算球员的数量。您可以通过统计 `is_player` 列中为 Yes 的 `playerID`
    的数量来实现此目标。
- en: You can find the solutions in *ch_07_exercise_solutions.xlsx* in the same folder.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在同一文件夹中的 *ch_07_exercise_solutions.xlsx* 中找到解决方案。
