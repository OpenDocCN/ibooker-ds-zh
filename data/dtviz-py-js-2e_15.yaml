- en: Chapter 11\. Exploring Data with pandas
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 11 章。利用 pandas 探索数据
- en: In the previous chapter, we cleaned the Nobel Prize dataset that we scraped
    from Wikipedia in [Chapter 6](ch06.xhtml#chapter_heavy_scraping). Now it’s time
    to start exploring our shiny new dataset, looking for interesting patterns, stories
    to tell, and anything else that could form the basis for an interesting visualization.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们清理了从维基百科中抓取的诺贝尔奖数据集，详见 [第 6 章](ch06.xhtml#chapter_heavy_scraping)。现在是时候开始探索我们光鲜亮丽的新数据集了，寻找有趣的模式、可讲述的故事以及任何其他可以成为有趣可视化基础的东西。
- en: First off, let’s try to clear our minds and take a long, hard look at the data
    to hand to get a broad idea of the visualizations suggested. [Example 11-1](#explore_JSON)
    shows the form of the Nobel dataset, with categorical, temporal, and geographical
    data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们尝试清空我们的思绪，认真地审视手头的数据，以获得对所建议可视化的整体概念。 [Example 11-1](#explore_JSON) 展示了诺贝尔数据集的形式，其中包含了分类、时间和地理数据。
- en: Example 11-1\. Our cleaned Nobel Prize dataset
  id: totrans-3
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 例 11-1\. 我们清理过的诺贝尔奖数据集
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The data in [Example 11-1](#explore_JSON) suggests a number of *stories* we
    might want to investigate, among them:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[Example 11-1](#explore_JSON) 中的数据表明我们可能想要调查的一些 *故事*，其中包括：'
- en: Gender disparities among the prize winners
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 奖项获得者之间的性别差异
- en: National trends (e.g., which country has most prizes in Economics)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 国家趋势（例如，哪个国家在经济学领域获得了最多的奖项）
- en: Details about individual winners, such as their average age on receiving the
    prize or life expectancy
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 个别获奖者的详细信息，例如他们获奖时的平均年龄或预期寿命
- en: Geographical journey from place of birth to adopted country using the `born_in`
    and `country` fields
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用 `born_in` 和 `country` 字段，从出生地到采纳国的地理旅程
- en: These investigative lines form the basis for the coming sections, which will
    probe the dataset by asking questions of it, such as “How many women other than
    Marie Curie have won the Nobel Prize for Physics?”, “Which countries have the
    most prizes per capita rather than absolute?”, and “Is there a historical trend
    to prizes by nation, a changing of the guard from old (science) world (big European
    nations) to new (US and upcoming Asian nations)?” Before beginning our explorations,
    let’s ready our tools and load our Nobel Prize dataset.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些调查性的行将成为接下来的部分的基础，这些部分将通过对数据集提出问题来探索数据集，比如“除了玛丽·居里之外，还有多少名女性获得了诺贝尔物理学奖？”，“哪些国家的奖项人均数量最多而不是绝对数量？”以及“是否有国家奖项的历史趋势，从旧（科学）世界（欧洲大国）到新（美国和即将崛起的亚洲国家）的交替？”在开始我们的探索之前，让我们准备好工具并加载我们的诺贝尔奖数据集。
- en: Starting to Explore
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始探索
- en: 'To start our exploration, let’s fire up a Jupyter notebook from the command
    line:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始我们的探索，让我们从命令行启动一个 Jupyter 笔记本：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We’ll use the *magic* `matplotlib` command to enable inline plotting:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 *神奇* 的 `matplotlib` 命令来启用内联绘图：
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then import the standard set of data exploration modules:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然后导入标准的数据探索模块集：
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now we’ll make a few adjustments to the plotting parameters and the general
    look and feel of the charts. Make sure to change the style *before* adjusting
    figure sizes, fonts, and the rest:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将对绘图参数和图表的一般外观进行一些调整。确保在调整图形大小、字体和其他内容之前更改样式：
- en: '[PRE4]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO1-1)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO1-1)'
- en: We’ll use the seaborn theming for our charts, arguably more attractive than
    Matplotlib’s default.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为我们的图表使用 seaborn 主题，这在美观程度上可能比 Matplotlib 的默认主题更具吸引力。
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO1-2)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO1-2)'
- en: Sets the default plotting size to eight inches by four.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 将默认绘图大小设置为八英寸乘四英寸。
- en: At the end of [Chapter 9](ch09.xhtml#chapter_cleaning), we saved our clean dataset
    as a JSON file. Let’s load the clean data into a pandas DataFrame, ready to begin
    exploring.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 9 章](ch09.xhtml#chapter_cleaning) 的最后，我们将我们的清洁数据集保存为一个 JSON 文件。让我们将清洁的数据加载到
    pandas DataFrame 中，准备开始探索。
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Let’s get some basic information about our dataset’s structure:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们获取一些关于我们数据集结构的基本信息：
- en: '[PRE6]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Note that our dates of birth and death columns have the standard pandas datatype
    of `object`. In order to make date comparisons, we’ll need to convert those to
    the datetime type, `datetime64`. We can use pandas’s [`to_datetime` method](https://oreil.ly/jjcoR)
    to achieve this conversion:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们的出生日期和死亡日期列具有标准的 pandas 数据类型 `object`。为了进行日期比较，我们需要将其转换为 datetime 类型 `datetime64`。我们可以使用
    pandas 的 [`to_datetime` 方法](https://oreil.ly/jjcoR) 进行此转换：
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Running `df.info()` should now show two datetime columns:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 `df.info()` 现在应该显示两个 datetime 列：
- en: '[PRE8]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO2-1)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO2-1)'
- en: '[UTC](https://oreil.ly/ZzSOR) (Coordinated Universal Time in English) is the
    primary time standard by which the world regulates clocks and time. It’s almost
    always desirable to work to this standard.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[UTC](https://oreil.ly/ZzSOR)（英文中的协调世界时）是世界上调整时钟和时间的主要时间标准。几乎总是希望按照这个标准工作。'
- en: '`to_datetime` usually works without needing extra arguments and should throw
    an error if given non time-based data, but it’s worth checking the converted columns
    to make sure. In the case of our Nobel Prize dataset, everything checks out.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`to_datetime`通常不需要额外的参数即可工作，并且如果给出非基于时间的数据，应该会抛出错误，但是值得检查转换后的列以确保。在我们的诺贝尔奖数据集的情况下，一切都很正常。'
- en: Plotting with pandas
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 pandas 进行绘图
- en: Both pandas Series and DataFrames have integrated plotting, which wraps the
    most common Matplotlib charts, a few of which we explored in the last chapter.
    This makes it easy to get quick visual feedback as you interact with your DataFrame.
    And if you want to visualize something a little more complicated, the pandas containers
    will play nicely with vanilla Matplotlib. You can also adapt the plots produced
    by pandas using standard Matplotlib customizations.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 的 Series 和 DataFrame 都有集成绘图功能，它包含了最常见的 Matplotlib 图表，我们在上一章中已经探讨过其中的一些。这使得在与
    DataFrame 交互时轻松获得快速的视觉反馈。如果你想要可视化更复杂的内容，pandas 容器将与原始的 Matplotlib 很好地配合。你还可以使用标准的
    Matplotlib 自定义来调整 pandas 生成的图形。
- en: Let’s look at an example of pandas’s integrated plotting, starting with a basic
    plot of gender disparity in Nobel Prize wins. Notoriously, the Nobel Prize has
    been distributed unequally among the genders. Let’s get a quick feel for that
    disparity by using a bar plot on the *gender* category. [Example 11-2](#explore_gender_code)
    produces [Figure 11-1](#explore_gender), showing the huge difference, with males
    receiving 811 of the 858 prizes in our dataset.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个 pandas 集成绘图的例子，从一个基本的诺贝尔奖性别差异的绘图开始。众所周知，诺贝尔奖在各性别之间分配不均。让我们通过在*性别*类别上使用条形图来快速了解这种差异。[示例
    11-2](#explore_gender_code)生成了[图 11-1](#explore_gender)，显示了巨大的差异，男性在我们的数据集中获得了
    858 项奖项中的 811 项。
- en: Example 11-2\. Using pandas’s integrated plotting to see gender disparities
  id: totrans-38
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 11-2. 使用 pandas 的集成绘图查看性别差异
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![dpj2 1101](assets/dpj2_1101.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1101](assets/dpj2_1101.png)'
- en: Figure 11-1\. Prize counts by gender
  id: totrans-41
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-1. 按性别计算奖项数
- en: 'In [Example 11-2](#explore_gender_code), the Series produced by the gender
    group’s `size` method has its own integrated `plot` method, which turns the raw
    numbers into a chart:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在[示例 11-2](#explore_gender_code)中，通过性别组的`size`方法产生的 Series 有其自己的集成`plot`方法，它将原始数字转换为图表：
- en: '[PRE10]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In addition to the default line plot, the pandas `plot` method takes a `kind`
    argument to select among other possible plots. Among the more commonly used are:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 除了默认的线图外，pandas 的`plot`方法还接受一个`kind`参数来选择其他可能的图。其中更常用的是：
- en: '`bar` or `barh` (*h* for horizontal) for bar plots'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bar` 或 `barh`（*h* 表示水平）用于条形图'
- en: '`hist` for a histogram'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hist` 用于直方图'
- en: '`box` for a box plot'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`box` 用于箱线图'
- en: '`scatter` for scatter plots'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scatter` 用于散点图'
- en: You can find a full list of pandas’s integrated plots [in the docs](https://oreil.ly/Zeo9f)
    as well as some pandas plotting functions that take DataFrames and Series as arguments.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[文档中](https://oreil.ly/Zeo9f)找到 pandas 集成绘图的完整列表，以及一些以 DataFrame 和 Series
    作为参数的 pandas 绘图函数。
- en: Let’s extend our investigation into gender disparities and start extending our
    plotting know-how.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们扩展对性别差异的调查，并开始扩展我们的绘图技能。
- en: Gender Disparities
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性别差异
- en: 'Let’s break down the gender numbers shown in [Figure 11-1](#explore_gender)
    by category of prize. pandas’s `groupby` method can take a list of columns to
    group by, with each group being accessed by multiple keys:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过奖项类别来分析[图 11-1](#explore_gender)中显示的性别数字。pandas 的`groupby`方法可以接受一个列名列表进行分组，每个组可以通过多个键来访问：
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO3-1)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO3-1)'
- en: 'Gets a group using a `category` and `gender` key:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`category`和`gender`键获取一个分组：
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Using the `size` method to get the size of these groups returns a Series with
    a `MultiIndex` that labels the values by both category and gender:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`size`方法获取这些组的大小将返回一个带有`MultiIndex`的 Series，通过类别和性别标记值：
- en: '[PRE13]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We can plot this multi-indexed Series directly, using `hbar` as the `kind` argument
    to produce a horizontal bar chart. This code produces [Figure 11-2](#explore_cat_gen).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以直接绘制这个多索引的 Series，使用`hbar`作为`kind`参数以生成水平条形图。这段代码生成 [图 11-2](#explore_cat_gen)。
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![dpj2 1102](assets/dpj2_1102.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1102](assets/dpj2_1102.png)'
- en: Figure 11-2\. Plotting multikey groups
  id: totrans-63
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-2. 绘制多关键组
- en: '[Figure 11-2](#explore_cat_gen) is a little crude and makes comparing gender
    disparities harder than it should be. Let’s go about refining our charts to make
    those disparities clearer.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-2](#explore_cat_gen)有些粗糙，使得比较性别差距比应有的更难。让我们继续完善我们的图表，使这些差距更加明显。'
- en: Unstacking Groups
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组展开
- en: '[Figure 11-2](#explore_cat_gen) isn’t the easiest chart to read, even were
    we to improve the sorting of the bars. Handily, pandas Series has a cool `unstack`
    method that takes the multiple indices—​in this case, gender and category—​and
    uses them as columns and indices, respectively, to create a new DataFrame. Plotting
    this DataFrame gives a much more usable plot, as it compares prize wins by gender.
    The following code produces [Figure 11-3](#explore_cat_gen_unstack):'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-2](#explore_cat_gen)并不是最容易阅读的图表，即使我们改进了条形的排序。幸运的是，pandas Series有一个很酷的`unstack`方法，它接受多个索引（在本例中是性别和类别）并将它们用作列和索引，从而创建一个新的数据框。绘制此数据框将得到一个更加可用的图表，因为它比较了按性别获奖的奖品。以下代码生成[图 11-3](#explore_cat_gen_unstack)：'
- en: '[PRE16]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![dpj2 1103](assets/dpj2_1103.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1103](assets/dpj2_1103.png)'
- en: Figure 11-3\. Unstacked Series of group sizes
  id: totrans-69
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-3\. 组大小的展开系列
- en: '[Figure 11-3](#explore_cat_gen_unstack) shows a huge discrepancy between male
    and female prize numbers. Let’s make the data a little more concrete by using
    pandas to produce a chart showing the percentage of female winners by category.
    We’ll also order the category bars by prize haul.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-3](#explore_cat_gen_unstack)显示了男性和女性获奖数量之间的巨大差异。让我们通过使用pandas生成一个显示按类别百分比的女性获奖者的图表，使数据更具体。我们还将按奖品数量对类别条进行排序。'
- en: 'First, we’ll unstack the `by_cat_gen` group to produce a `cat_gen_sz` DataFrame:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将展开`by_cat_gen`组以生成一个`cat_gen_sz`数据框：
- en: '[PRE17]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We’ll do the pandas manipulation in two stages for demonstration purposes,
    using two new columns to store our new data. First, we’ll make a column containing
    the ratio of female winners to the total number of winners:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示目的，我们将在两个阶段进行pandas操作，使用两列新数据存储我们的新数据。首先，我们将制作一个包含女性获奖者比例的列，与总获奖者数的比值：
- en: '[PRE19]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO4-1)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO4-1)'
- en: The awkward forward slash stops Python breaking, but this is a division operation.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 尴尬的斜杠阻止Python崩溃，但这是一个除法操作。
- en: '[PRE20]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'With the ratio column in place, we can create a column containing percentage
    of female winners by multiplying that ratio by 100:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有了比例列后，我们可以通过将该比例乘以100来创建一个包含女性获奖者百分比的列：
- en: '[PRE21]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Let’s plot these female percentages on a horizontal bar chart, setting an x-limit
    of 100 (%) and sorting the categories by prize number:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将这些女性百分比绘制在水平条形图上，设置x轴限制为100%，并按奖项数量对类别进行排序：
- en: '[PRE22]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: You can see the new plot in [Figure 11-4](#img_female_pc), clearly showing the
    discrepancy in prize totals by gender.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[图 11-4](#img_female_pc)中看到新的图表，清楚地显示了按性别划分的奖项总数的差异。
- en: '![dpj2 1104](assets/dpj2_1104.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1104](assets/dpj2_1104.png)'
- en: Figure 11-4\. Percentage of winning females by prize category
  id: totrans-85
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-4\. 按奖项类别百分比的女性获奖者
- en: 'Ignoring Economics, a recent and contentious addition to the Nobel Prize categories,
    [Figure 11-4](#img_female_pc) shows that the largest discrepancy in the number
    of male and female prize winners is in Physics, with only two female winners.
    Let’s remind ourselves who they are:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 忽略经济学，这是诺贝尔奖类别的最近而有争议的增加，[图 11-4](#img_female_pc)显示物理学中男女获奖者数量最大的差距，只有两位女性获奖者。让我们提醒一下她们是谁：
- en: '[PRE23]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: While most people will have heard of Marie Curie, who is actually one of the
    four illustrious winners of two Nobel Prizes, few have heard of Maria Goeppert-Mayer.^([1](ch11.xhtml#idm45607764293184))
    This ignorance is surprising, given the drive to encourage women into science.
    I would want my visualization to enable people to discover and learn a little
    about Maria Goeppert-Mayer.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人都听说过玛丽·居里，她实际上是两位诺贝尔奖获得者中的四位杰出人物之一，但很少有人听说过玛丽亚·歌柏·迈耶。^([1](ch11.xhtml#idm45607764293184))
    这种无知令人惊讶，考虑到鼓励女性从事科学的努力。我希望我的可视化能帮助人们发现并了解一点玛丽亚·歌柏·迈耶的事迹。
- en: Historical Trends
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 历史趋势
- en: 'It would be interesting to see if there has been any increase in female prize
    allocation in recent years. One way to visualize this would be as grouped bars
    over time. Let’s run up a quick plot, using `unstack` as in [Figure 11-3](#explore_cat_gen_unstack)
    but using the year and gender columns:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 很有趣的是看看最近几年女性奖项分配是否有所增加。一种可视化的方法是随时间分组的条形图。让我们快速绘制一个图表，使用`unstack`，如[图 11-3](#explore_cat_gen_unstack)，但使用年份和性别列：
- en: '[PRE25]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[Figure 11-5](#explore_year_gen), the hard-to-read plot produced, is only functional.
    The trend of female prize distributions can be observed, but the plot has many
    problems. Let’s use Matplotlib’s and pandas’s eminent flexibility to fix them.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-5](#explore_year_gen) 是一个功能性的但难以阅读的绘图。可以观察到女性奖项分布的趋势，但图中存在许多问题。让我们利用
    Matplotlib 和 pandas 卓越的灵活性来解决这些问题。'
- en: '![dpj2 1105](assets/dpj2_1105.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1105](assets/dpj2_1105.png)'
- en: Figure 11-5\. Prizes by year and gender
  id: totrans-95
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-5\. 按年份和性别分的奖项
- en: The first thing we need to do is reduce the number of x-axis labels. By default,
    Matplotlib will label each bar or bar group of a bar plot, which in the case of
    our hundred years of prizes creates a mess of labels. What we need is the ability
    to thin out the number of axis labels as desired. There are various ways to do
    this in Matplotlib; I’ll demonstrate the one I’ve found to be most reliable. It’s
    the sort of thing you’re going to want to reuse, so it makes sense to stick it
    in a dedicated function. [Example 11-3](#explore_thin_axis) shows a function to
    reduce the number of ticks on our x-axis.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是减少 x 轴标签的数量。默认情况下，Matplotlib 将为每个条形图或条形图组标记标签，在我们的百年奖项中会创建混乱的标签。我们需要的是根据需要稀疏化轴标签的能力。在
    Matplotlib 中有多种方法可以做到这一点；我将展示我发现最可靠的方法。这是您将要重复使用的类型，因此将其放入专用函数中是有意义的。[示例 11-3](#explore_thin_axis)
    展示了一个函数，用于减少我们 x 轴上的刻度。
- en: Example 11-3\. Reducing the number of x-axis labels
  id: totrans-97
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例11-3\. 减少 x 轴标签的数量
- en: '[PRE26]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO5-1)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO5-1)'
- en: Gets the existing locations and labels of the x-ticks, currently one per bar.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 获取当前条形图每个条或条组的 x 轴刻度位置和标签。
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO5-3)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO5-3)'
- en: Rotates the labels for readability, by default on an upward diagonal.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 旋转标签以提高可读性，默认情况下是向上倾斜的对角线。
- en: As well as needing to reduce the number of ticks, the x-axis in [Figure 11-5](#explore_year_gen)
    has a discontinuous range, missing the years 1939–1945 of WWII, during which no
    Nobel Prizes were presented. We want to see such gaps, so we need to set the x-axis
    range manually to include all years from the start of the Nobel Prize to the current
    day.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 除了需要减少刻度的数量外，[图 11-5](#explore_year_gen) 的 x 轴有一个不连续的范围，在第二次世界大战期间的1939年至1945年之间没有诺贝尔奖颁发。我们希望看到这样的间隙，因此需要手动设置
    x 轴范围，以包含从诺贝尔奖开始到现在的所有年份。
- en: 'The current unstacked group sizes use an automatic year index:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 当前未堆叠的组大小使用自动年份索引：
- en: '[PRE27]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'In order to see any gaps in the prize distribution, all we have to do is reindex
    this Series with one containing the full range of years:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看奖项分布中的任何间隙，我们只需用包含全年份范围的新 Series 重新索引即可：
- en: '[PRE28]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO6-1)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO6-1)'
- en: Here we create a full-range index named `year`, covering all the Nobel Prize
    years.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们创建一个名为`year`的全范围索引，涵盖所有诺贝尔奖年份。
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO6-2)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO6-2)'
- en: We replace our discontinuous index with the new continuous one.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用新的连续索引替换我们的不连续索引。
- en: Another problem with [Figure 11-5](#explore_year_gen) is the excessive number
    of bars. Although we do get male and female bars side by side, it looks messy
    and has aliasing artifacts too. It’s better to have dedicated male and female
    plots but stacked so as to allow easy comparison. We can achieve this using the
    subplotting method we saw in [“Axes and Subplots”](ch10.xhtml#mpl_axes_subplots),
    using the pandas data but customizing the plot using our Matplotlib know-how.
    [Example 11-4](#explore_year_gen_stack_code) shows how to do this, producing the
    plot in [Figure 11-6](#explore_year_gen_stack).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-5](#explore_year_gen) 的另一个问题是过多的条形图。虽然我们确实看到男性和女性条并排，但看起来混乱，还有混叠伪影。最好拥有专门的男性和女性图，但堆叠起来以便于轻松比较。我们可以使用我们在
    [“Axes and Subplots”](ch10.xhtml#mpl_axes_subplots) 中看到的 subplot 方法，使用 pandas
    数据但使用我们的 Matplotlib 知识自定义绘图。[示例 11-4](#explore_year_gen_stack_code) 展示了如何做到这一点，生成了
    [图 11-6](#explore_year_gen_stack) 中的绘图。'
- en: Example 11-4\. Stacked gender prizes by year
  id: totrans-113
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例11-4\. 按年份堆叠的性别奖项
- en: '[PRE29]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO7-1)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO7-1)'
- en: Creates two axes, on a two (row) by one (column) grid.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了两个轴，分别在二行一列的网格上。
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO7-2)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO7-2)'
- en: We’ll share the x- and y-axes, which will make comparisons between the two plots
    sensible.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将共享 x 轴和 y 轴，这将使得两个图之间的比较更加合理。
- en: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO7-3)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO7-3)'
- en: We provide the axis’s bar chart (`bar`) method with the continuous year index
    and the unstacked gender columns.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为轴的条形图 (`bar`) 方法提供了连续的年份索引和未堆叠的性别列。
- en: The take-home from our investigation into gender distributions is that there
    is a huge discrepancy but, as shown by [Figure 11-6](#explore_year_gen_stack),
    a slight improvement in recent years. Moreover, with Economics being an outlier,
    the difference is greatest in the sciences. Given the fairly small number of female
    prize winners, there’s not a lot more to be seen here.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 通过我们对性别分布的调查，我们得出结论存在巨大的差异，但正如[图 11-6](#explore_year_gen_stack)所示，近年来有所改善。此外，经济学作为一个离群值，在科学领域的差异最大。考虑到女性获奖者数量相对较少，在这里没有太多可以看到的东西。
- en: '![dpj2 1106](assets/dpj2_1106.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1106](assets/dpj2_1106.png)'
- en: Figure 11-6\. Prizes by year and gender, on two stacked axes
  id: totrans-123
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-6\. 按年份和性别分布的奖项，分布在两个堆叠的坐标轴上
- en: Let’s now take a look at national trends in prize wins and see if there are
    any interesting nuggets for visualization.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看看奖项赢得的国家趋势，看看是否有任何有趣的可视化信息。
- en: National Trends
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 国家趋势
- en: 'The obvious starting point in looking at national trends is to plot the absolute
    number of prize winners. This is easily done in one line of pandas, broken up
    here for ease of reading:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看国家趋势的显而易见的起点是绘制奖项获得者的绝对数量。这在 pandas 的一行中很容易实现，这里为了便于阅读分开了：
- en: '[PRE30]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This produces [Figure 11-7](#explore_nat_abs), showing the United States with
    the lion’s share of prizes.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这产生了[图 11-7](#explore_nat_abs)，显示美国占据了奖项的主导地位。
- en: The absolute number of prizes will be bound to favor countries with large populations.
    Let’s look at a fairer comparison, visualizing prizes per capita.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 奖品的绝对数量将有利于人口较多的国家。让我们看看更公平的比较，可视化每人均奖项。
- en: '![dpj2 1107](assets/dpj2_1107.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1107](assets/dpj2_1107.png)'
- en: Figure 11-7\. Absolute prize wins by country
  id: totrans-131
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-7\. 各国绝对奖项数目
- en: Prize Winners Per Capita
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 每人均获奖者
- en: The absolute number of prize winners is bound to favor larger countries, which
    raises the question, how do the numbers stack up if we account for population
    sizes? In order to test prize haul per capita, we need to divide the absolute
    prize numbers by population size. In [“Getting Country Data for the Nobel Dataviz”](ch05.xhtml#country_data),
    we downloaded some country data from the web and stored it as a JSON file. Let’s
    retrieve it now and use it to produce a plot of prizes relative to population
    size.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 奖项获得者的绝对数量将有利于较大的国家，这引发了一个问题，如果我们考虑到人口大小，这些数字如何叠加？为了测试每人均奖项的获得情况，我们需要将绝对奖项数量除以人口大小。在[“获取诺贝尔数据可视化的国家数据”](ch05.xhtml#country_data)中，我们从网络上下载了一些国家数据，并将其存储为
    JSON 文件。现在让我们检索它，并用它来制作相对于人口大小的奖项的图表。
- en: 'First, let’s get the national group sizes, with country names as index labels:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们获取国家组的大小，以国家名称为索引标签：
- en: '[PRE31]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now let’s load our country data into a DataFrame and remind ourselves of the
    data it contains:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将我们的国家数据加载到一个数据框中，并回顾它包含的数据：
- en: '[PRE32]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Our country dataset is already indexed to its `name` column. If we add to it
    the `ngsz` national group-size Series, which also has a country name index, the
    two will combine on the shared indices, giving our country data a new `nobel_wins`
    column. We can then use this new column to create a `nobel_wins_per_capita` by
    dividing it by population size:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的国家数据集已经索引到其 `name` 列。如果我们向其添加 `ngsz` 国家组大小系列，该系列也具有国家名称索引，则两者将根据共享的索引组合，为我们的国家数据添加一个新的
    `nobel_wins` 列。然后，我们可以使用这一新列将其除以人口大小，创建一个 `nobel_wins_per_capita`：
- en: '[PRE33]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'We now need only to sort the `df_countries` DataFrame by its new `nobel_wins_per_cap`
    column and plot the Nobel Prize wins per capita, producing [Figure 11-8](#explore_per_cap):'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们只需按照 `df_countries` 数据框的新 `nobel_wins_per_cap` 列进行排序，并绘制每人均诺贝尔奖的图表，生成[图
    11-8](#explore_per_cap)：
- en: '[PRE34]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![dpj2 1108](assets/dpj2_1108.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1108](assets/dpj2_1108.png)'
- en: Figure 11-8\. National prize numbers per capita
  id: totrans-143
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-8\. 每人均国家奖项数目
- en: This shows the Caribbean island of Saint Lucia taking top place. Home to the
    Nobel Prize–winning poet [Derek Walcott](https://oreil.ly/OOYBc), its small population
    of 175,000 gives it a high Nobel Prizes per capita.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示加勒比海岛国圣卢西亚获得了第一名。作为诺贝尔奖获得者诗人[德里克·沃尔科特](https://oreil.ly/OOYBc)的故乡，其17.5万人口使其每人均诺贝尔奖数目高达。
- en: 'Let’s see how things stack up with the larger countries by filtering the results
    for countries that have won more than two Nobel Prizes:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过过滤那些获得超过两次诺贝尔奖的国家，来看看情况如何叠加：
- en: '[PRE35]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The results in [Figure 11-9](#explore_per_cap_filter) show the Scandinavian
    countries and Switzerland punching above their weight.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-9](#explore_per_cap_filter) 中的结果显示，斯堪的纳维亚国家和瑞士的奖项数量超过了其应有的份额。'
- en: '![dpj2 1109](assets/dpj2_1109.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1109](assets/dpj2_1109.png)'
- en: Figure 11-9\. National prize numbers per capita, filtered for three or more
    wins
  id: totrans-149
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-9\. 人均国家奖项数量，过滤为三项或更多获奖
- en: Changing the metric for national prize counts from absolute to per capita makes
    a big difference. Let’s now refine our search a little and focus on the prize
    categories, looking for interesting nuggets there.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 将国家奖项计数的度量方式从绝对值改为人均值会产生很大的差异。现在让我们稍微细化一下我们的搜索，并专注于奖项类别，寻找其中的有趣信息。
- en: Prizes by Category
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按类别分的奖项
- en: 'Let’s drill down a bit into the absolute prize data and look at wins by category.
    This will require grouping by country and category columns, getting the size of
    those groups, unstacking the resulting Series and then plotting the columns of
    the resulting DataFrame. First, we get our categories with country group sizes:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解一下绝对奖项数据，并查看按类别获胜的情况。这将需要按国家和类别列进行分组，获取这些组的大小，展开生成的 Series，然后绘制生成的 DataFrame
    的列。首先，我们通过国家和类别列获取我们的类别与国家组大小：
- en: '[PRE36]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'We then use the `nat_cat_sz` DataFrame to produce subplots for the six Nobel
    Prize categories:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们使用 `nat_cat_sz` DataFrame 为六个诺贝尔奖类别生成子图：
- en: '[PRE37]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO8-1)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO8-1)'
- en: '`items` returns an iterator for the DataFrames columns in form of (column_label,
    column) tuples.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`items` 返回一个以 (列标签，列) 元组形式的 DataFrame 列的迭代器。'
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO8-2)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO8-2)'
- en: Python 3 acquired the handy [integer division](https://oreil.ly/X6QGK) operator
    `//`, which returns the rounded-down integer value of the division.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Python 3 引入了方便的 [整数除法](https://oreil.ly/X6QGK) 运算符 `//`，它返回除法的向下取整的整数值。
- en: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO8-3)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO8-3)'
- en: '`order` orders the column’s Series by first making a copy. It is the equivalent
    of `sort(inplace=False)`.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`order` 通过首先制作一个副本来对列的 Series 进行排序。它相当于 `sort(inplace=False)`。'
- en: '[![4](assets/4.png)](#co_exploring_data_with_pandas_CO8-4)'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_exploring_data_with_pandas_CO8-4)'
- en: Having sliced off the largest 10 countries, we now reverse the order to make
    the bar chart, which plots from bottom to top, presenting the largest countries
    at the top.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 将最大的 10 个国家去掉后，我们现在将顺序反转以制作条形图，该图自底向上绘制，将最大的国家放在顶部。
- en: '[![5](assets/5.png)](#co_exploring_data_with_pandas_CO8-5)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](assets/5.png)](#co_exploring_data_with_pandas_CO8-5)'
- en: '`tight_layout` should prevent label overlaps among the subplots. If you have
    any problems with `tight_layout`, see the end of [“Titles and Axes Labels”](ch10.xhtml#sect_mpl_titles).'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`tight_layout` 应该可以防止子图之间的标签重叠。如果您在使用 `tight_layout` 时遇到任何问题，请参阅 [“标题和轴标签”](ch10.xhtml#sect_mpl_titles)
    的末尾。'
- en: This produces the plots in [Figure 11-10](#explore_nat_cat).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这会生成 [图 11-10](#explore_nat_cat) 中的图表。
- en: A couple of interesting nuggets from [Figure 11-10](#explore_nat_cat) are the
    United States’ overwhelming dominance of the Economics prize, reflecting a post-WWII
    economic consensus, and France’s leadership of the Literature prize.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-10](#explore_nat_cat) 中的一些有趣信息是，美国在经济奖项上的压倒性统治反映了二战后的经济共识，而法国在文学奖项上的领导地位。'
- en: '![dpj2 1110](assets/dpj2_1110.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1110](assets/dpj2_1110.png)'
- en: Figure 11-10\. Prizes by country and category
  id: totrans-169
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-10\. 按国家和类别的奖项
- en: Historical Trends in Prize Distribution
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 奖项分配的历史趋势
- en: Now that we know the aggregate prize stats by country, are there any interesting
    historical trends to the prize distribution? Let’s explore this with some line
    plots.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了按国家的奖项统计数据，是否有任何有趣的历史趋势与奖项分配有关？让我们通过一些折线图来探索一下。
- en: 'First, let’s increase the default font size to 20 points to make the plot labels
    more legible:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们将默认字体大小增加到 20 点，以使图表标签更清晰可读：
- en: '[PRE38]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'We’re going to be looking at prize distribution by year and country, so we’ll
    need a new unstacked DataFrame based on these two columns. As previously, we add
    a `new_index` to give continuous years:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要查看的是按年份和国家的奖项分布情况，所以我们需要基于这两列创建一个新的未堆叠的 DataFrame。与以前一样，我们添加一个 `new_index`
    来提供连续的年份：
- en: '[PRE39]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The trend we’re interested in is the cumulative sum of Nobel Prizes by country
    over its history. We can further explore trends in individual categories, but
    for now we’ll look at the total for all. pandas has a handy `cumsum` method for
    just this. Let’s take the United States column and plot it:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感兴趣的趋势是各国诺贝尔奖的累积总和。我们可以进一步探索各个类别的趋势，但现在我们将查看所有类别的总数。pandas 提供了一个方便的`cumsum`方法来做到这一点。让我们取美国列并绘制它：
- en: '[PRE40]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: This produces the chart in [Figure 11-11](#explore_cumsum_us).
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这生成了[图11-11](#explore_cumsum_us)中的图表。
- en: '![dpj2 1111](assets/dpj2_1111.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1111](assets/dpj2_1111.png)'
- en: Figure 11-11\. Cumulative sum of US prize winners over time
  id: totrans-180
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-11\. 美国奖项获得者随时间的累积总和
- en: 'The gaps in the line plot are where the fields are `NaN`, years when the US
    won no prizes. The `cumsum` algorithm returns `NaN` here. Let’s fill those in
    with a zero to remove the gaps:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 线图中的间隙是`NaN`字段，即美国在某些年份没有获奖的年份。`cumsum`算法在这里返回`NaN`。让我们将这些填充为零以去除这些间隙：
- en: '[PRE41]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: This produces the cleaner chart shown in [Figure 11-12](#explore_cumsum_us_gapless).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这生成了更干净的图表，显示在[图11-12](#explore_cumsum_us_gapless)中。
- en: '![dpj2 1112](assets/dpj2_1112.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1112](assets/dpj2_1112.png)'
- en: Figure 11-12\. Cumulative sum of US prize winners over time
  id: totrans-185
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-12\. 美国奖项获得者随时间的累积总和
- en: 'Let’s compare the US prize rate with that of the rest of the world:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们比较美国的获奖率与世界其他地区的获奖率：
- en: '[PRE42]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO9-1)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO9-1)'
- en: Gets the list of country column names and removes United States.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 获取国家列名称列表并移除美国。
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO9-2)'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO9-2)'
- en: Uses our list of non-US country names to create a `'Not_US'` column, the sum
    of all the prizes for countries in the `not_US` list.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们的非美国国家名称列表创建一个`'Not_US'`列，对`not_US`列表中所有国家的奖项总和进行求和。
- en: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO9-3)'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO9-3)'
- en: By default, the lines in pandas plots are colored. In order to distinguish them
    in the printed book, we can use the `style` argument to make one line solid (*-*)
    and the other dashed (*--*), using the Matplotlib line styles (see [the docs](https://oreil.ly/dUw3x)
    for details).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 绘图中，默认情况下，线条是有颜色的。为了在印刷书籍中区分它们，我们可以使用`style`参数使一条线变为实线（*-*)，另一条线变为虚线（*--*），使用
    Matplotlib 的线条样式（详见[文档](https://oreil.ly/dUw3x)）。
- en: This code produces the chart shown in [Figure 11-13](#explore_cumsum_us_notus).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码生成了[图11-13](#explore_cumsum_us_notus)中显示的图表。
- en: '![dpj2 1113](assets/dpj2_1113.png)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1113](assets/dpj2_1113.png)'
- en: Figure 11-13\. United States versus rest of world prize hauls
  id: totrans-196
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-13\. 美国与世界其他地区奖项总和比较
- en: 'Where the `''Not_US''` haul shows a steady increase over the years of the prize,
    the US shows a rapid increase around the end of World War II. Let’s investigate
    that further, looking at regional differences. We’ll focus on the two or three
    largest winners for North America, Europe, and Asia:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在`'Not_US'`的赢取数量显示出奖项多年来稳定增长的情况下，美国在二战结束后显示出急剧增长。让我们进一步调查一下，关注北美洲、欧洲和亚洲两到三个最大的赢家的地区差异：
- en: '[PRE43]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO10-1)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO10-1)'
- en: Our continental country list created by selecting the biggest two or three winners
    in the three continents compared.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择三大洲中两到三个最大的赢家，我们创建了我们的大陆国家列表。
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO10-2)'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO10-2)'
- en: Creates a new column with a region label for each `dict` in the `regions` list,
    summing its `countries` members.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个带有每个`regions`列表中的`dict`的区域标签的新列，总结其`countries`成员。
- en: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO10-3)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO10-3)'
- en: Plots the cumulative sum of all the new region columns.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制所有新区域列的累积总和。
- en: This gives us the plot in [Figure 11-14](#explore_cumsum_regions). The rate
    of Asia’s prize haul has increased slightly over the years, but the main point
    of note is North America’s huge increase in prizes around the mid-1940s, overtaking
    a declining Europe in total prizes around the mid-1980s.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们提供了[图11-14](#explore_cumsum_regions)中的图表。亚洲的奖项获得数量在多年来略有增加，但值得注意的主要是北美洲在1940年代中期前后的巨大增长，超过了在1980年代中期左右奖项总数下降的欧洲。
- en: '![dpj2 1114](assets/dpj2_1114.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1114](assets/dpj2_1114.png)'
- en: Figure 11-14\. Historical prize trends by region
  id: totrans-207
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-14\. 按地区的历史奖项趋势
- en: 'Let’s expand the detail of the previous national plots by summarizing the prize
    rates for the 16 biggest winners, excluding the outlying United States:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过总结16位最大获奖者（排除美国的离群值）的奖金比例来扩展先前的国家情节的详细信息：
- en: '[PRE44]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO11-1)'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO11-1)'
- en: Sorts our country groups from highest to lowest win-hauls.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 将我们的国家组按获奖总数从高到低排序。
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO11-2)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO11-2)'
- en: Gets a 4×4 grid of axes with shared x- and y-axes for normalized comparison.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 获取具有共享 x 和 y 轴的4×4轴网格，用于归一化比较。
- en: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO11-4)'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO11-4)'
- en: Enumerates over the sorted index from the second row (1), excluding the US (0).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 枚举从第二行（1）开始的排序索引，排除美国（0）。
- en: '[![4](assets/4.png)](#co_exploring_data_with_pandas_CO11-5)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_exploring_data_with_pandas_CO11-5)'
- en: Selects the `nat` country name column and plots its cumulative sum of prizes
    on the grid axis `ax`.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 `nat` 国家名称列，并在网格轴 `ax` 上绘制其奖励的累积和。
- en: This produces [Figure 11-15](#explore_nat_grid), which shows some nations like
    Japan, Australia, and Israel on the rise historically, while others flatten off.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 这将生成 [图11-15](#explore_nat_grid)，显示了一些历史上获奖率上升的国家，如日本，澳大利亚和以色列，而其他国家则趋于平稳。
- en: '![dpj2 1115](assets/dpj2_1115.png)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1115](assets/dpj2_1115.png)'
- en: Figure 11-15\. Prize rates for the 16 largest national winners after the US
  id: totrans-220
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-15. 美国之后排名前16位的国家获奖率
- en: 'Another good way to summarize national prize rates over time is by using a
    heatmap and dividing the totals by decade. The seaborn library provides a good
    heatmap. Let’s import it and use its `set` method to increase the font size of
    its labels by scaling them:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种总结国家奖励率随时间变化的好方法是使用热图，并按十年将总数划分。 seaborn 库提供了一个很好的热图。 让我们导入它，并使用其 `set` 方法通过缩放来增加其标签的字体大小：
- en: '[PRE45]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The division of data into chunks is also known as [*binning*](https://oreil.ly/SkFSj),
    as it creates *bins* of data. pandas has a handy `cut` method for just this job,
    taking a column of continuous values—​in our case, Nobel Prize years—​and returning
    ranges of a specified size. You can supply the DataFrame’s `groupby` method with
    the result of `cut` and it will group by the range of indexed values. The following
    code produces [Figure 11-16](#explore_heatmap_nat_year):'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分割成块也称为[*分箱*](https://oreil.ly/SkFSj)，因为它创建数据*箱*。 pandas 有一个方便的 `cut` 方法来完成这个任务，它接受一列连续值——在我们的情况下是诺贝尔奖年份——并返回指定大小的范围。
    您可以将 DataFrame 的 `groupby` 方法与 `cut` 的结果一起使用，并将其按索引值范围分组。 以下代码生成 [图11-16](#explore_heatmap_nat_year)：
- en: '[PRE46]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO12-1)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO12-1)'
- en: Gets our bin ranges for the decades from 1901 (1901, 1911, 1921…​).
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 从1901年开始，获取我们的十年期间的区间（1901年，1911年，1921年...）。
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO12-2)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO12-2)'
- en: Cuts our Nobel Prize years into decades using the `bins` ranges with `precision`
    set to `0`, to give integer years.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `bins` 范围将我们的诺贝尔奖年份划分为十年，精度设置为 `0`，以给出整数年份。
- en: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO12-3)'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO12-3)'
- en: Before heatmapping, we filter for those countries with over two Nobel Prizes.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在制作热图之前，我们先筛选出拥有两个以上诺贝尔奖的国家。
- en: '[![4](assets/4.png)](#co_exploring_data_with_pandas_CO12-4)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_exploring_data_with_pandas_CO12-4)'
- en: We use the continuous `rocket_r` heatmap to highlight the differences. Check
    out all the pandas color palettes in the [seaborn documentation](https://oreil.ly/3FmHj).
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用连续的 `rocket_r` 热图来突出显示差异。 查看 [seaborn 文档](https://oreil.ly/3FmHj) 中的所有 pandas
    颜色调色板。
- en: '[Figure 11-16](#explore_heatmap_nat_year) captures some interesting trends,
    such as Russia’s brief flourishing in the 1950s, which petered out around the
    1980s.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '[图11-16](#explore_heatmap_nat_year) 捕捉到一些有趣的趋势，比如俄罗斯在1950年代的短暂繁荣，到了1980年代就消退了。'
- en: Now that we’ve investigated the Nobel Prize nations, let’s turn our attention
    to the individual winners. Are there any interesting things we can discover about
    them using the data at hand?
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经调查了诺贝尔奖的国家，让我们将注意力转向个体获奖者。 使用手头的数据，我们能发现他们有什么有趣的事情吗？
- en: '![dpj2 1116](assets/dpj2_1116.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1116](assets/dpj2_1116.png)'
- en: Figure 11-16\. Nations’ Nobel Prize hauls by decade
  id: totrans-236
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-16. 各国诺贝尔奖获得情况按十年统计
- en: Age and Life Expectancy of Winners
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获奖者的年龄和预期寿命
- en: We have the date of birth for all our winners and the date of death for 559
    of them. Combined with the year in which they won their prizes, we have a fair
    amount of individual data to mine. Let’s investigate the age distribution of winners
    and try to glean some idea of the winners’ longevity.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有所有获奖者的出生日期和559位获奖者的逝世日期。结合他们获奖的年份，我们有相当多的个人数据可以挖掘。让我们调查获奖者年龄的分布，并试图了解他们的长寿。
- en: Age at Time of Award
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 颁奖时的年龄
- en: 'In [Chapter 9](ch09.xhtml#chapter_cleaning), we added an `''award_age''` column
    to our Nobel Prize dataset by subtracting the winners’ ages from their prize years.
    A quick and easy win is to use pandas’s histogram plot to assess this distribution:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第9章](ch09.xhtml#chapter_cleaning)中，我们通过将获奖者的年龄减去他们的获奖年份，为诺贝尔奖数据集添加了一个 `'award_age'`
    列。使用 pandas 的直方图绘制来评估这个分布是一个快速且简单的胜利：
- en: '[PRE47]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Here we require that the age data be divided into 20 bins. This produces [Figure 11-17](#explore_hist_award_age),
    showing that the early ’60s is a sweet spot for the prize and if you haven’t achieved
    it by 100, it probably isn’t going to happen. Note the outlier around 20, which
    is the 17-year-old recipient of the Peace Prize, [Malala Yousafzai](https://oreil.ly/8ft8y).
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们要求将年龄数据分成20个箱子。这产生了[Figure 11-17](#explore_hist_award_age)，显示60年代初是获奖的一个黄金期，如果你到了100岁还没有获奖，可能就不会发生了。请注意20岁左右的异常值，这是和平奖的17岁获奖者[马拉拉·尤萨夫扎伊](https://oreil.ly/8ft8y)。
- en: '![dpj2 1117](assets/dpj2_1117.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1117](assets/dpj2_1117.png)'
- en: Figure 11-17\. Distribution of ages at time of award
  id: totrans-244
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-17\. 颁奖时年龄的分布
- en: 'We can use seaborn’s `displot` to get a better feel for the distribution, adding
    a kernel density estimate (KDE)^([2](ch11.xhtml#idm45607761940144)) to the histogram.
    The following one-liner produces [Figure 11-18](#explore_hist_award_age_kde),
    showing that our sweet spot is around 60 years of age:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 seaborn 的 `displot` 来更好地了解分布情况，添加一个核密度估计（KDE）^([2](ch11.xhtml#idm45607761940144))到直方图中。以下一行代码生成[Figure 11-18](#explore_hist_award_age_kde)，显示我们的黄金年龄大约是60岁：
- en: '[PRE48]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '![dpj2 1118](assets/dpj2_1118.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1118](assets/dpj2_1118.png)'
- en: Figure 11-18\. Distribution of ages at time of award with KDE superimposed
  id: totrans-248
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-18\. 颁奖时年龄的分布并叠加了 KDE
- en: 'A [box plot](https://oreil.ly/EWFhx) is a good way of visualizing continuous
    data, showing the quartiles, the first and third marking the edges of the box
    and the second quartile (or median average) marking the line in the box. Generally,
    as in [Figure 11-19](#explore_boxplot_age_gen), the horizontal end lines (known
    as the whisker ends) indicate the max and min of the data. Let’s use a seaborn
    box plot and divide the prizes by gender:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 箱线图是可视化连续数据的一种好方法，显示四分位数，第一和第三个四分位数标记箱子的边缘，第二个四分位数（或中位数）标记在箱子内的线。通常，如图[Figure 11-19](#explore_boxplot_age_gen)，水平的端线（称为须线端点）表示数据的最大值和最小值。让我们使用
    seaborn 的箱线图，并按性别划分奖项：
- en: '[PRE49]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: This produces [Figure 11-19](#explore_boxplot_age_gen), which shows that the
    distributions by gender are similar, with women having a slightly lower average
    age. Note that with far fewer female prize winners, their statistics are subject
    to a good deal more uncertainty.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这产生了[Figure 11-19](#explore_boxplot_age_gen)，显示按性别的分布相似，女性的平均年龄略低。请注意，由于女性获奖者较少，她们的统计数据更不确定。
- en: '![dpj2 1119](assets/dpj2_1119.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1119](assets/dpj2_1119.png)'
- en: Figure 11-19\. Ages of prize winners by gender
  id: totrans-253
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-19\. 按性别分布的获奖者年龄
- en: 'seaborn’s rather nice violin plot combines the conventional box plot with a
    kernel density estimation to give a more refined view of the breakdown by age
    and gender. The following code produces [Figure 11-20](#explore_violin_age_gen):'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: seaborn 的小提琴图结合了传统的箱线图和核密度估计，以更精细的方式显示年龄和性别的分布情况。以下代码生成[Figure 11-20](#explore_violin_age_gen)：
- en: '[PRE50]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '![dpj2 1120](assets/dpj2_1120.png)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1120](assets/dpj2_1120.png)'
- en: Figure 11-20\. Violin plots of prize-age distribution by gender
  id: totrans-257
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-20\. 小提琴图显示按性别分布的奖项年龄
- en: Life Expectancy of Winners
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获奖者的预期寿命
- en: 'Now let’s look at the longevity of Nobel Prize winners, by subtracting the
    available dates of death from their respective dates of birth. We’ll store this
    data in a new `''age_at_death''` column:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看诺贝尔奖获得者的长寿情况，通过他们的出生日期减去逝世日期。我们将这些数据存储在一个新的 `'age_at_death'` 列中：
- en: '[PRE51]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO13-1)'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO13-1)'
- en: '`datetime64` data can be added and subtracted in a sensible fashion, producing
    a pandas `timedelta` column. We can use its `dt` method to get the interval in
    days, dividing this by 365 to get the age at death as a float.'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '`datetime64` 数据可以进行合理的加减操作，生成一个pandas `timedelta` 列。我们可以使用它的 `dt` 方法获取以天为单位的间隔，将其除以365得到浮点数的死亡年龄。'
- en: 'We make a copy of the `''age_at_death''` column,^([3](ch11.xhtml#idm45607761762448))
    removing all empty `NaN` rows. This can then be used to make the histogram and
    KDE shown in [Figure 11-21](#explore_hist_aad):'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 我们复制 `'age_at_death'` 列，^([3](ch11.xhtml#idm45607761762448)) 删除所有空的 `NaN` 行。这可以用来制作
    [Figure 11-21](#explore_hist_aad) 中显示的直方图和KDE：
- en: '[PRE52]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO14-1)'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO14-1)'
- en: Removes all `NaN`s to clean the data and reduce plotting errors (e.g., `distplot`
    fails with `NaN`s).
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 删除所有的 `NaN` 以清理数据并减少绘图错误（例如，`distplot` 在有 `NaN` 的情况下会失败）。
- en: '![dpj2 1121](assets/dpj2_1121.png)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1121](assets/dpj2_1121.png)'
- en: Figure 11-21\. Life expectancy of the Nobel Prize winners
  id: totrans-268
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 11-21\. 诺贝尔奖获得者的寿命期望
- en: '[Figure 11-21](#explore_hist_aad) shows the Nobel Prize winners to be a remarkably
    long-lived bunch, with an average age in the early 80s. This is all the more impressive
    given that the large majority of winners are men, who have significantly lower
    average life expectancies^([4](ch11.xhtml#idm45607761692592)) in the general population
    than women. One contributary factor to this longevity is the selection bias we
    saw earlier. Nobel Prize winners aren’t generally honored until they’re in their
    late 50s and 60s, which removes the subpopulation who died before having the chance
    to be acknowledged, pushing up the longevity figures.'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '[Figure 11-21](#explore_hist_aad) 展示了诺贝尔奖获得者是一群寿命异常长的人，平均寿命在80岁左右。这更加令人印象深刻，因为大多数获奖者都是男性，在一般人口中男性的平均寿命显著较低^([4](ch11.xhtml#idm45607761692592))。导致这种长寿的一个因素是我们早些看到的选择偏差。诺贝尔奖获得者通常直到他们五六十岁才受到尊敬，这排除了那些没有机会被认可的亚群体，从而提高了长寿的数据。'
- en: '[Figure 11-21](#explore_hist_aad) shows some centenarians among the prize winners.
    Let’s find them:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '[Figure 11-21](#explore_hist_aad) 展示了一些长寿者在获奖者中。让我们找找看：'
- en: '[PRE53]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Now let’s superimpose a couple of KDEs to show differences in mortality for
    male and female recipients:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们叠加几个KDE来展示男性和女性获奖者的死亡率差异：
- en: '[PRE54]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO15-1)'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO15-1)'
- en: Creates a DataFrame with only valid `'age_at_death'` fields.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个只包含有效 `'age_at_death'` 字段的DataFrame。
- en: This produces [Figure 11-22](#explore_aad_kde), which, allowing for the small
    number of female winners and flatter distribution, shows the male and female averages
    to be close. Female Nobel Prize winners seem to live relatively shorter lives
    than their counterparts in the general population.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 这产生了 [Figure 11-22](#explore_aad_kde)，尽管女性获奖者数量较少且分布较为平坦，显示男性和女性的平均值接近。相比一般人群，女性诺贝尔奖获得者似乎活得相对较短。
- en: '![dpj2 1122](assets/dpj2_1122.png)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1122](assets/dpj2_1122.png)'
- en: Figure 11-22\. Nobel Prize winner life expectancies by gender
  id: totrans-278
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 11-22\. 获奖者的寿命期望值按性别划分
- en: 'A violin plot provides another perspective, shown in [Figure 11-23](#explore_aad_violin):'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 一张小提琴图提供了另一种视角，如 [Figure 11-23](#explore_aad_violin) 所示：
- en: '[PRE55]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '![dpj2 1123](assets/dpj2_1123.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1123](assets/dpj2_1123.png)'
- en: Figure 11-23\. Winner life expectancies by gender
  id: totrans-282
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 11-23\. 获奖者的寿命期望值按性别划分
- en: Increasing Life Expectancies over Time
  id: totrans-283
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 随着时间的推移，寿命期望值增加
- en: 'Let’s do a little historical demographic analysis by seeing if there’s a correlation
    between the date of birth of our Nobel Prize winners and their life expectancy.
    We’ll use one of seaborn’s `lmplot`s to provide a scatter plot and line-fitting
    with confidence intervals (see [“seaborn”](ch10.xhtml#mpl_seaborn)):'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过看看我们的诺贝尔奖获得者的出生日期和他们的寿命期望之间是否有相关性，做一点历史人口统计分析。我们将使用seaborn的 `lmplot` 之一提供散点图和带有置信区间的线性拟合（参见
    [“seaborn”](ch10.xhtml#mpl_seaborn)）：
- en: '[PRE56]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO16-1)'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO16-1)'
- en: Creates a temporary DataFrame, removing all the rows with no `'age_at_death'`
    field.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个临时DataFrame，删除所有没有 `'age_at_death'` 字段的行。
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO16-2)'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO16-2)'
- en: Creates a new DataFrame with only the two columns of interest from the refined
    `df_temp`. We grab only the year from the `date_of_birth`, using its [`dt` accessor](https://oreil.ly/hGULX).
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的DataFrame，只包含来自精炼的 `df_temp` 的两列感兴趣的内容。我们只从 `date_of_birth` 中获取年份，使用其
    [`dt` accessor](https://oreil.ly/hGULX)。
- en: This produces [Figure 11-24](#explore_birth_death), showing an increase in life
    expectancy of a decade or so over the prize’s duration.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 这产生了[图 11-24](#explore_birth_death)，显示奖项期间预期寿命增加了约十年。
- en: '![dpj2 1124](assets/dpj2_1124.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1124](assets/dpj2_1124.png)'
- en: Figure 11-24\. Correlating date of birth with age at death
  id: totrans-292
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-24\. 出生日期与去世年龄的相关性
- en: The Nobel Diaspora
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 诺贝尔流亡者
- en: While cleaning our Nobel Prize dataset in [Chapter 9](ch09.xhtml#chapter_cleaning),
    we found duplicate entries recording the winner’s place of birth and country at
    time of winning. We preserved these, giving us 104 winners whose country at time
    of winning was different from their country of birth. Is there a story to tell
    here?
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在清理我们的诺贝尔奖数据集时（见[第 9 章](ch09.xhtml#chapter_cleaning)），我们发现有重复条目记录了获奖者出生地和获奖时的国家。我们保留了这些信息，共有
    104 名获奖者，其获奖时的国家与出生国不同。这其中是否有故事？
- en: 'A good way to visualize the movement patterns from the winners’ country of
    birth to their adopted country is by using a heatmap to show all `born_in`/`country`
    pairs. The following code produces the heatmap in [Figure 11-25](#explore_diaspora):'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 从获奖者的出生国到其所选国的移动模式的良好可视化方法是使用热图来显示所有 `born_in`/`country` 对。以下代码生成了图 11-25 中的热图：
- en: '[PRE57]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO17-1)'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_exploring_data_with_pandas_CO17-1)'
- en: Selects all rows with a `'born_in'` field, and forms groups on this and the
    country column.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 选择所有具有 `'born_in'` 字段的行，并根据此字段和国家列进行分组。
- en: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO17-2)'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_exploring_data_with_pandas_CO17-2)'
- en: We rename the row index and column names to make them more descriptive.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 我们重新命名行索引和列名，使它们更具描述性。
- en: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO17-3)'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_exploring_data_with_pandas_CO17-3)'
- en: seaborn’s `heatmap` attempts to set the correct bounds for the data, but in
    this case, we must manually adjust the limits (`vmin` and `vmax`) to see all the
    cells.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: seaborn 的 `heatmap` 尝试设置正确的数据边界，但在这种情况下，我们必须手动调整限制 (`vmin` 和 `vmax`) 以查看所有单元格。
- en: '![dpj2 1125](assets/dpj2_1125.png)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![dpj2 1125](assets/dpj2_1125.png)'
- en: Figure 11-25\. The Nobel Prize diaspora
  id: totrans-304
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 11-25\. 诺贝尔奖流亡现象
- en: '[Figure 11-25](#explore_diaspora) shows some interesting patterns, which tell
    a tale of persecution and sanctuary. First, the United States is the overwhelming
    recipient of relocated Nobel winners, followed by the United Kingdom. Note that
    the biggest contingents for both (except cross-border traffic from Canada) are
    from Germany. Italy, Hungary, and Austria are the next largest groups. Examining
    the individuals in these groups shows that the majority were displaced as a result
    of the rise of antisemitic fascist regimes in the run-up to World War II and the
    increasing persecution of Jewish minorities.'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-25 显示了一些有趣的模式，讲述了迫害和庇护的故事。首先，美国是重新安置的诺贝尔奖获得者的主要接收国，其次是英国。请注意，两者（除了来自加拿大的跨国移民）的最大派系都来自德国。意大利、匈牙利和奥地利是下一个最大的群体。检查这些群体中的个体表明，大多数是由于二战前纳粹反犹太少数民族政权的崛起和对犹太人的迫害而被迫流离失所的。
- en: 'To take an example, all four of the Nobel winners who moved from Germany to
    the United Kingdom were German research scientists with Jewish ancestry who moved
    in response to the Nazis’ rise to power:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，所有四位从德国移居到英国的诺贝尔奖获得者都是具有犹太血统的德国研究科学家，他们是对纳粹兴起作出反应而迁移：
- en: '[PRE58]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Ernst Chain pioneered the industrial production of penicillin. Hans Krebs discovered
    the Krebs cycle, one of the most important discoveries in biochemistry, which
    regulates the energy production of cells. Max Born was one of the pioneers of
    quantum mechanics, and Bernard Katz uncovered the fundamental properties of synaptic
    junctions in neurons.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 恩斯特·恩·查恩（Ernst Chain）开创了盘尼西林的工业生产。汉斯·克雷布斯（Hans Krebs）发现了克雷布斯循环，这是生物化学中最重要的发现之一，调节细胞的能量产生。马克斯·玻恩（Max
    Born）是量子力学的先驱之一，伯纳德·卡茨（Bernard Katz）揭示了神经元突触连接的基本特性。
- en: There are many such illustrious names among the winning emigrants. One interesting
    discovery is the number of prize winners who were part of the famous [Kindertransport](https://oreil.ly/tIzjj),
    an organized rescue effort that took place nine months before the outbreak of
    WWII and saw ten thousand Jewish children from Germany, Austria, Czechoslovakia,
    and Poland transported to the United Kingdom. Of these children, four went on
    to win a Nobel Prize.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 在获奖的移民中有许多如此显赫的名字。一个有趣的发现是参与著名[Kindertransport](https://oreil.ly/tIzjj)行动的奖项获得者数量，这是第二次世界大战爆发前九个月进行的一次组织营救行动，将德国、奥地利、捷克斯洛伐克和波兰的一万名犹太儿童运送到英国。这些儿童中有四人后来获得了诺贝尔奖。
- en: Summary
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored our Nobel Prize dataset, probing the key fields
    of gender, category, country, and year (of prize) looking for interesting trends
    and stories we can tell or enable visually. We used a fair number of Matplotlib
    (by way of pandas) and seaborn’s plots, from basic bar charts to more complicated
    statistical summaries like violin plots and heatmaps. Mastery of these tools and
    the others in the Python chart armory will allow you to quickly get the feel of
    your datasets, which is a prerequisite to building a visualization around them.
    We found more than enough stories in the data to suggest a web visualization.
    In the next chapter, we will imagine and design just such a Nobel Prize winner
    visualization, cherry-picking the nuggets gained in this chapter.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们探索了我们的诺贝尔奖数据集，分析了性别、类别、国家和奖励年份等关键字段，寻找可以讲述或视觉化的有趣趋势和故事。我们使用了大量的Matplotlib（通过pandas）和seaborn的图表，从基本的条形图到更复杂的统计摘要，如小提琴图和热图。精通这些工具以及Python图表库中的其他工具，将使您能够快速了解数据集的感觉，这是围绕它们构建可视化的先决条件。我们在数据中找到了足够多的故事，建议进行网络可视化。在下一章中，我们将想象并设计一个诺贝尔奖获奖者的可视化作品，挑选出本章获得的宝贵经验。
- en: ^([1](ch11.xhtml#idm45607764293184-marker)) Anecdotally, no one I have asked
    in person or in talk audiences has known the name of the *other* female Nobel
    Prize winner for Physics.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch11.xhtml#idm45607764293184-marker)) 据传，我个人询问过的或者在演讲观众中询问过的人，没有一个知道物理学领域另一位女性诺贝尔奖得主的名字。
- en: ^([2](ch11.xhtml#idm45607761940144-marker)) See [Wikipedia](https://oreil.ly/DUd3e)
    for details. Essentially the data is smoothed and a probability density function
    derived.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch11.xhtml#idm45607761940144-marker)) 详细信息请参阅[Wikipedia](https://oreil.ly/DUd3e)。基本上，数据经过平滑处理并推导出概率密度函数。
- en: ^([3](ch11.xhtml#idm45607761762448-marker)) We are ignoring leap years and other
    subtle, complicating factors in deriving years from days.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch11.xhtml#idm45607761762448-marker)) 在从天数推导年份时，我们忽略了闰年和其他微妙的复杂因素。
- en: ^([4](ch11.xhtml#idm45607761692592-marker)) Depending on the country, this is
    around five to six years. See [Our World in Data](https://oreil.ly/6xY9W) for
    some stats.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch11.xhtml#idm45607761692592-marker)) 根据国家的不同，这大约是五到六年时间。请参阅[Our World
    in Data](https://oreil.ly/6xY9W)获取一些统计数据。
