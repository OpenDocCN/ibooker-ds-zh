- en: Chapter 2\. Data Science Use Cases
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章 数据科学应用案例
- en: In this chapter, we show how AI and machine learning have disrupted nearly every
    industry—and will continue to do so in the future. We discuss prominent use cases
    across industries such as media, advertising, IoT, and manufacturing. As more
    and more building blocks become available, more and more use cases become tangible.
    Cloud-native developers have access to these building blocks through ready-to-use
    AI services such as Amazon Rekognition, fully customizable ML services including
    Amazon SageMaker, and easy-to-access quantum computers with Amazon Braket.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们展示了AI和机器学习如何几乎颠覆了每个行业，并将继续在未来如此。我们讨论了跨媒体、广告、物联网和制造业等行业的重要应用案例。随着越来越多的构建模块变得可用，越来越多的应用案例变得具体可行。云原生开发人员通过像亚马逊
    Rekognition 这样的即用AI服务、包括亚马逊 SageMaker 的完全可定制的ML服务，以及易于访问的亚马逊 Braket 量子计算机，可以访问这些构建模块。
- en: AI and machine learning have become truly ubiquitous thanks to recent innovations
    in cloud computing, leaps in computing power, and explosions in data collection.
    This democratization of AI and machine learning is fueled by an explosion of AI
    services that are easy to integrate with applications, require very little maintenance,
    and offer pay-as-you-go pricing.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: AI 和机器学习由于云计算的最新创新、计算能力的飞跃和数据收集的激增，已经真正无处不在。这种AI和机器学习的民主化得益于大量易于与应用集成、几乎不需要维护并提供按需付费定价的AI服务的爆发。
- en: With no required PhD in data science, we can implement product recommendations
    to delight our customers, implement highly accurate forecasting models to improve
    our supply chain, or build virtual assistants to simplify our customer support—all
    with just a single API call! These AI services free up valuable human resources
    to focus on domain-specific and product-differentiating features.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在不需要数据科学博士学位的情况下，我们可以通过一次API调用实现产品推荐以取悦我们的客户，实现高度准确的预测模型以改善我们的供应链，或者构建虚拟助手简化我们的客户支持！这些AI服务释放了宝贵的人力资源，让其集中精力关注领域特定和产品差异化的特性。
- en: Innovation Across Every Industry
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创新横跨每个行业
- en: 'Many AI and machine learning use cases fall in one of two categories: improving
    business operations or creating new customer experiences. Prominent examples that
    improve business operations are AI-powered demand forecasting, resource optimization,
    and fraud detection. Examples for creating new customer experiences include personalized
    product recommendations and enriched video-streaming experiences. Without a doubt,
    AI and machine learning are driving innovation in every industry. Here are a few
    examples across various industries:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 许多AI和机器学习应用案例可以归为两类：改善业务运营或创建新的客户体验。改善业务运营的突出例子包括AI驱动的需求预测、资源优化和欺诈检测。用于创建新客户体验的例子包括个性化产品推荐和丰富的视频流体验。毫无疑问，AI和机器学习正在推动每个行业的创新。以下是各种行业的几个示例：
- en: Media and entertainment
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 媒体和娱乐
- en: Companies are delighting customers with highly engaging, personalized content.
    AI also enables highly efficient and effective metadata extraction to make media
    content more easily discoverable and searchable by customers and media production
    workers.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 公司正在通过高度引人入胜、个性化的内容让客户感到愉悦。AI 还能够高效且有效地提取元数据，使媒体内容更易于客户和媒体制作工作者发现和搜索。
- en: Life sciences
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 生命科学
- en: Companies benefit from AI and machine learning for drug discovery, clinical
    trial management, drug manufacturing, digital therapeutics development, and clinical
    decision support.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 公司通过AI和机器学习在药物发现、临床试验管理、药物制造、数字治疗开发和临床决策支持方面受益匪浅。
- en: Financial services
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 金融服务
- en: AI and machine learning improve compliance, surveillance, and fraud detection.
    They help to speed up document processing, create personalized pricing and financial
    product recommendations, and assist in trading decisions.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: AI 和机器学习改善了合规、监控和欺诈检测。它们帮助加快文件处理，创建个性化定价和金融产品推荐，并协助交易决策。
- en: Automotive
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 汽车
- en: AI and machine learning power autonomous driving, navigation, and connected
    vehicles.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: AI 和机器学习推动了自动驾驶、导航和互联车辆。
- en: Manufacturing
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 制造业
- en: AI and machine learning support engineering design, manage supply chain inventory,
    and optimize maintenance, repair, and operations. They enhance the assembly line
    and underpin smart products or factories.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: AI 和机器学习支持工程设计、供应链库存管理和维护、修理和运营的优化。它们增强了装配线并支撑智能产品或工厂。
- en: Gaming
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏
- en: The gaming industry leverages AI and machine learning to implement intelligent
    auto-scaling for their game servers as demand changes throughout the day.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏行业利用AI和机器学习实施智能自动扩展他们的游戏服务器，以应对一天中需求的变化。
- en: Let’s discuss some prominent AI use cases in more detail and see how we can
    start to implement them with ready-to-use AI services from AWS.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细讨论一些突出的AI应用案例，看看我们如何开始使用AWS的现成AI服务来实施它们。
- en: Personalized Product Recommendations
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 个性化产品推荐
- en: Over recent decades, consumers have experienced more and more personalized online
    product and content recommendations. Recommendations are everywhere, including
    Amazon.com suggesting the next product to buy and Amazon Prime Video recommending
    the next show to watch.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 近几十年来，消费者在个性化的在线产品和内容推荐方面体验越来越多。推荐无处不在，包括亚马逊推荐下一个要购买的产品和亚马逊Prime Video推荐下一个要观看的节目。
- en: 'A lot of recommendation systems find similarities based on how customers collaborate
    with items in the catalog. An early implementation of such “collaborative filtering”
    is described in a 2003 paper by Amazon.com, [“Amazon.com Recommendations: Item-to-Item
    Collaborative Filtering”](https://oreil.ly/LbrdC).'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 很多推荐系统基于客户如何与目录中的项目合作来找到相似性。早期实施这种“协同过滤”的例子在亚马逊公司2003年的一篇论文中有描述，[“亚马逊推荐：项目到项目的协同过滤”](https://oreil.ly/LbrdC)。
- en: Today, sophisticated deep learning techniques understand customers’ needs at
    the right time and within the right context. Whether we are shopping on the Amazon.com
    marketplace, listening to music on Prime Music, watching shows on Prime Video,
    reading ebooks on the Amazon Kindle, or listening to audiobooks with Audible,
    we will be presented with new personalized recommendations.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，精密的深度学习技术能够在正确的时间和正确的上下文中理解客户的需求。无论我们是在亚马逊市场上购物，还是在Prime Music上听音乐，在Prime
    Video上观看节目，在Amazon Kindle上阅读电子书，或者在Audible上听有声书，我们都会被呈现出新的个性化推荐。
- en: Simple recommendation systems often start as rule-based systems. As the number
    of users and products increase in our system, it becomes difficult to define rules
    that are specific enough to each user to provide meaningful recommendations. Broad
    rules are not typically specialized enough to keep customers coming back.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的推荐系统通常从基于规则的系统开始。随着我们系统中用户和产品的数量增加，定义足够特定以为每个用户提供有意义推荐的规则变得困难。广泛的规则通常不够专业化，无法吸引客户持续回归。
- en: Even ML-based recommendation systems may face challenges. We also have to handle
    new users and new items entering our system where we don’t have any data on which
    to base our recommendations. This is the classic “cold start” problem and should
    be addressed by anyone implementing a recommendation engine in the modern era.
    Cold start is when we have little or no historical event activity to use as a
    signal to build our recommender model for a given user or product.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是基于机器学习的推荐系统也可能面临挑战。我们还必须处理新用户和新项目进入我们系统的情况，我们没有任何数据来基于它们建立推荐。这是现代推荐引擎中要解决的经典“冷启动”问题。冷启动是当我们没有或很少有历史事件活动用作信号来为给定用户或产品构建我们的推荐模型时的情况。
- en: Recommendations should also avoid the “popularity trap,” which only recommends
    popular items and potentially misses delightful recommendations for nonpopular
    items. This can be solved with recommender systems that explore new items using
    algorithms such as multiarmed bandits, which we will discuss in [Chapter 9](ch09.html#deploy_models_to_production).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统还应避免“流行陷阱”，该陷阱只推荐热门项目，可能忽略了非热门项目的愉快推荐。这可以通过使用多臂老虎机等算法探索新项目的推荐系统来解决，我们将在[第9章](ch09.html#deploy_models_to_production)中讨论。
- en: Also, we’d like to handle real-time changes in a user’s intent as they are using
    our application. This requires a real-time, dynamic recommendation system instead
    of traditional offline, precomputed recommendations served from a database.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们希望在用户使用我们的应用程序时处理其实时意图的变化。这需要一个实时动态的推荐系统，而不是传统的离线预先计算的从数据库提供的推荐。
- en: 'With such a dynamic system, customers will appreciate the relevant and timely
    content—and our business will realize the following benefits from a more personalized
    customer experience:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这样一个动态系统中，客户将欣赏到相关及时的内容，而我们的业务将从更个性化的客户体验中获得以下好处：
- en: Increase in product engagement
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 产品参与度的增加
- en: By recommending relevant content to users, we increase the stickiness of our
    website, encourage users to come back often, and give them reason to stay longer.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向用户推荐相关内容，我们增加了网站的黏性，鼓励用户经常回访，并使他们停留更长时间。
- en: Increase in product conversions
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 产品转化率增加
- en: Users are more likely to purchase more relevant products.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 用户更有可能购买更相关的产品。
- en: Increase in click-through rates
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 点击率增加
- en: We will likely see higher click-through rates with personalized product updates
    targeted at the individual user.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 通过个性化产品更新，针对个人用户的目标，我们很可能会看到更高的点击率。
- en: Increase in revenue
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 收入增加
- en: When customers are served the right recommendations at the right time, companies
    see an increase in revenue.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当客户在适当的时间得到正确的推荐时，公司会看到收入增加。
- en: Reduction in churn
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 流失减少
- en: We can reduce overall churn and reduce opt-outs from interesting email campaigns.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以减少总体流失率，并减少对有趣电子邮件活动的退出。
- en: Over the last two decades, Amazon has continuously advanced its machine learning
    research focused on personalization. The paper [“Two Decades of Recommender Systems
    at Amazon.com”](https://oreil.ly/iXEXk) by Smith and Linden (2017) provides a
    great summary of this journey.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的二十年中，亚马逊一直在不断推进其个性化的机器学习研究。Smith和Linden（2017）的论文[“亚马逊.com 的两个十年推荐系统”](https://oreil.ly/iXEXk)
    很好地总结了这一历程。
- en: Tip
  id: totrans-39
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 小贴士
- en: More insights into Amazon’s scientific research and academic publications are
    available [on Amazon](https://www.amazon.science).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于亚马逊的科学研究和学术出版物的深入了解，请访问[亚马逊](https://www.amazon.science)。
- en: Recommend Products with Amazon Personalize
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推荐使用亚马逊个性化推荐产品。
- en: Like a lot of machine learning, there is no single algorithm that addresses
    all those challenges in personalization. Wouldn’t it be great if anyone could
    just tap into Amazon.com’s extensive experience in creating personalized product
    and content recommendations and add this capability to our applications? Amazon
    Personalize offers exactly this.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 像很多机器学习一样，没有单一的算法可以解决个性化中所有的挑战。如果任何人都能够利用亚马逊.com 在创建个性化产品和内容推荐方面的丰富经验，并将此功能添加到我们的应用程序中，那不是很棒吗？亚马逊个性化正是提供这种功能。
- en: Amazon Personalize reflects Amazon.com’s decades of experience in creating,
    scaling, and managing personalization technology. Amazon Personalize makes it
    easy for developers to create individualized product recommendations as well as
    targeted marketing promotions. This AI service enables developers to build custom
    personalization models without having to deal with the complexity of managing
    our own machine learning infrastructure.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊个性化反映了亚马逊.com 在创建、扩展和管理个性化技术方面数十年的经验。亚马逊个性化使开发人员能够轻松创建个性化产品推荐以及有针对性的营销促销活动。这种人工智能服务使开发人员能够构建定制的个性化模型，而无需处理自己的机器学习基础设施管理的复杂性。
- en: To start generating recommendations, we just provide Amazon Personalize with
    the continuous activity stream from our application (i.e., clicks, page views,
    signups, purchases) along with the inventory of the products we want to recommend,
    as shown in [Figure 2-1](#provide_the_activity_dataset_and_invent).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始生成推荐，我们只需向亚马逊个性化提供我们应用程序的持续活动流（即点击、页面浏览、注册、购买）以及我们想要推荐的产品库存，如[图2-1](#provide_the_activity_dataset_and_invent)所示。
- en: The activity data comprises event information about how the user interacts with
    the system. Some example event activity includes user clicks, shopping cart additions,
    item purchases, and movie watches. This event activity represents a strong signal
    to build an effective recommendation model.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 活动数据包括有关用户如何与系统进行交互的事件信息。一些示例事件活动包括用户点击、购物车添加、商品购买和电影观看。这些事件活动对于构建有效的推荐模型提供了强有力的信号。
- en: '![](assets/dsaw_0201.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0201.png)'
- en: Figure 2-1\. Provide the activity dataset and inventory of products to Amazon
    Personalize to start generating recommendations.
  id: totrans-47
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-1。提供活动数据集和产品清单给亚马逊个性化，开始生成推荐。
- en: We can also provide additional metadata about the users and products involved
    in the event activity, such as the product category, product price, user age,
    user location, etc. While this additional metadata is optional, it is helpful
    when addressing the “cold start” scenario where we have little or no historical
    event activity to use as a signal to build our recommender model.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以提供有关参与活动的用户和产品的额外元数据，如产品类别、产品价格、用户年龄、用户位置等。尽管这些额外的元数据是可选的，但在处理“冷启动”场景（即没有或很少历史事件活动可用作信号来构建我们的推荐模型时），它们非常有帮助。
- en: Additionally, Amazon Personalize has recently announced a new cold-start algorithm
    that combines neural networks and reinforcement learning to provide more relevant
    recommendations when little data is known about the user.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，Amazon Personalize最近推出了一种新的冷启动算法，结合了神经网络和强化学习，在用户的数据很少时提供更相关的推荐。
- en: 'With this event activity and metadata in place, Amazon Personalize trains,
    tunes, and deploys a custom recommender model for our users and products. Amazon
    Personalize performs all steps of the machine learning pipeline, including feature
    engineering, algorithm selection, model tuning, and model deploying. Once Amazon
    Personalize selects, trains, and deploys the best model for our dataset, we simply
    call the Amazon Personalize `get_recommendations()` API to generate recommendations
    in real time for our users:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些事件活动和元数据，Amazon Personalize为我们的用户和产品训练、调优和部署了一个定制的推荐模型。Amazon Personalize执行机器学习管道的所有步骤，包括特征工程、算法选择、模型调优和模型部署。一旦Amazon
    Personalize为我们的数据集选择、训练和部署了最佳模型，我们只需调用Amazon Personalize的`get_recommendations()`
    API即可实时生成用户的推荐：
- en: '[PRE0]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Trained with the popular MovieLens dataset that contains millions of user-movie
    ratings, Amazon Personalize generates the following recommended movies for our
    sample user:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 使用包含数百万用户电影评分的流行MovieLens数据集进行训练，Amazon Personalize为我们的示例用户生成以下推荐电影：
- en: '| `Shrek` |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `Shrek` |'
- en: '| `Amelie` |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `Amelie` |'
- en: '| `Lord of the Rings: The Two Towers` |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `Lord of the Rings: The Two Towers` |'
- en: '| `Toy Story 2` |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `Toy Story 2` |'
- en: '| `Good Will Hunting` |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `Good Will Hunting` |'
- en: '| `Eternal Sunshine of the Spotless Mind` |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `Eternal Sunshine of the Spotless Mind` |'
- en: '| `Spirited Away` |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `Spirited Away` |'
- en: '| `Lord of the Rings: The Return of the King` |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `Lord of the Rings: The Return of the King` |'
- en: '| `Schindler''s List` |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `Schindler''s List` |'
- en: '| `Leon: The Professional` |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `Leon: The Professional` |'
- en: Generate Recommendations with Amazon SageMaker and TensorFlow
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Amazon SageMaker和TensorFlow生成推荐
- en: Multitask recommenders create a model that optimizes two or more objectives
    at the same time. The model performs transfer learning by sharing variables between
    the tasks during model training.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 多任务推荐器创建一个模型，同时优化两个或更多目标。模型在模型训练期间通过任务之间共享变量进行迁移学习。
- en: 'In the following TensorFlow example that uses the [TensorFlow Recommenders
    (TFRS) library](https://oreil.ly/XdDIl), we will find a model that trains a recommender
    to predict ratings (ranking task) as well as predict the number of movie watches
    (retrieval task):'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面使用[TensorFlow推荐器（TFRS）库](https://oreil.ly/XdDIl)的TensorFlow示例中，我们将找到一个模型，该模型训练一个推荐器来预测评分（排名任务）以及预测电影观看次数（检索任务）：
- en: '[PRE1]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Generate Recommendations with Amazon SageMaker and Apache Spark
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Amazon SageMaker和Apache Spark生成推荐
- en: Amazon SageMaker supports serverless Apache Spark (both Python and Scala) through
    SageMaker Processing Jobs. We will use SageMaker Processing Jobs throughout the
    book to perform data-quality checks and feature transformations. However, in this
    section we will generate recommendations using SageMaker Processing Jobs with
    Apache Spark ML’s collaborative filtering algorithm called *Alternating Least
    Squares* (ALS). We would use this algorithm if we already have a Spark-based data
    pipeline and want to generate recommendations using that pipeline.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SageMaker通过SageMaker处理作业支持无服务器Apache Spark（Python和Scala）。我们将在整本书中使用SageMaker处理作业执行数据质量检查和特征转换。但在本节中，我们将使用SageMaker处理作业与Apache
    Spark ML的协同过滤算法*Alternating Least Squares*（ALS）生成推荐。如果我们已经有一个基于Spark的数据管道，并希望使用该管道生成推荐，我们将使用此算法。
- en: 'Here is the *train_spark.py* file that generates recommendations with Apache
    Spark ML and ALS:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这是生成推荐使用Apache Spark ML和ALS的*train_spark.py*文件：
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now let’s launch the PySpark script within a serverless Apache Spark environment
    running as a SageMaker Processing Job:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在作为SageMaker处理作业运行的无服务器Apache Spark环境中启动PySpark脚本：
- en: '[PRE3]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output shows a user ID and list of recommendations (item ID, rank) sorted
    by rank from most recommended to least recommended:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示用户ID和按推荐程度排序的推荐列表（项目ID，排名）：
- en: '[PRE4]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Detect Inappropriate Videos with Amazon Rekognition
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon Rekognition检测不适当的视频
- en: Computer vision is useful for many different use cases, including content moderation
    of user-generated content, digital identity verification for secure login, and
    hazard identification for driverless cars.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机视觉对许多不同的用例很有用，包括用户生成内容的内容审核，安全登录的数字身份验证，以及无人驾驶汽车的危险识别。
- en: Amazon Rekognition is a high-level AI service that identifies objects, including
    people, text, and activities found in both images and videos. Amazon Rekognition
    uses AutoML to train custom models to recognize objects specific to our use case
    and business domain.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Rekognition是一个高级AI服务，能够识别图像和视频中的对象，包括人、文本和活动。Amazon Rekognition使用AutoML来训练定制模型，以识别特定于我们用例和业务领域的对象。
- en: 'Let’s use Amazon Rekognition to detect violent content in videos uploaded by
    our application users. For example, we want to reject videos that contain weapons
    by using Amazon Rekognition’s Content Moderation API as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用Amazon Rekognition来检测我们应用用户上传的视频中的暴力内容。例如，我们希望使用Amazon Rekognition的内容审查API来拒绝包含武器的视频，操作如下：
- en: '[PRE5]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here is the output that shows the detected labels. Note the `Timestamp`, which
    represents the offset from the start of the video, as well as the `Confidence`,
    which represents the confidence of Amazon Rekognition’s prediction:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是显示检测标签的输出。请注意`Timestamp`，它表示从视频开始的偏移量，以及`Confidence`，它表示Amazon Rekognition预测的置信度：
- en: '[PRE6]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-82
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: We can further improve the confidence of Amazon Rekognition’s predictions by
    training with our own dataset. This feature is called “custom labels”; it’s supported
    by many of the Amazon AI services.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用自己的数据集进行训练来进一步提高Amazon Rekognition预测的置信度。这一功能称为“自定义标签”，并得到许多Amazon AI服务的支持。
- en: Demand Forecasting
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需求预测
- en: Demand forecasting is used across many domains to predict demand in areas such
    as electricity usage, supply-chain inventory, call-center staffing, cash-flow
    planning, hospital-bed usage, and many other use cases. Forecasting is a time-series
    problem solved with popular algorithms such as Auto-Regressive Integrated Moving
    Average, Error Trend Seasonality, Non-Parametric Time Series, Prophet, and DeepAR++.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 需求预测在许多领域中被用来预测电力使用、供应链库存、呼叫中心人员配备、现金流规划、医院床位使用以及许多其他用例中的需求。预测是一个使用流行算法如自回归积分移动平均、误差趋势季节性、非参数时间序列、Prophet和DeepAR++解决的时间序列问题。
- en: Businesses use everything from simple spreadsheets to complex time-series software
    to forecast future business outcomes such as product demand, resource needs, or
    financial performance. These approaches typically build forecast models using
    historical time-series data with the assumption that future demand is determined
    by past activity. These purely time-series approaches have a difficult time producing
    accurate forecasts with irregular trends and patterns. Also, these approaches
    often do not factor in important metadata that is relevant to the forecast, such
    as product price, product category, and store location.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 企业使用从简单的电子表格到复杂的时间序列软件来预测未来的业务结果，如产品需求、资源需求或财务表现。这些方法通常使用历史时间序列数据构建预测模型，假设未来需求由过去活动决定。这些纯时间序列方法在处理不规则趋势和模式时往往难以产生准确的预测。此外，这些方法通常不考虑与预测相关的重要元数据，如产品价格、产品类别和店铺位置。
- en: Overforecasting can decrease efficiency and increase cost by overprovisioning
    resources that remain underutilized. Underforecasting can decrease customer satisfaction,
    lower revenue by starving the system of necessary resources, and require high-cost
    alternatives like paying overtime labor wages.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 过度预测可能会降低效率并增加成本，因为资源超配，而这些资源仍然被低效利用。反之，低估预测可能会降低客户满意度，通过使系统饥饿于必要资源而降低收入，并且需要像支付加班工资这样的高成本替代方案。
- en: 'An effective demand forecast system demonstrates the following characteristics:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的需求预测系统展示了以下特征：
- en: Analyze complex relationships rather than just time-series data
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 分析复杂关系而不仅仅是时间序列数据
- en: Combines time-series data with other metadata like product features and store
    locations.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 将时间序列数据与产品特性和店铺位置等其他元数据结合起来。
- en: Reduce forecast prediction time from months to hours
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 将预测预测时间从几个月缩短到几小时
- en: After automatically loading, inspecting, and identifying key dataset attributes,
    the system will quickly train, optimize, and deploy a custom model that fits our
    dataset.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在自动加载、检查和识别关键数据集属性之后，系统将快速训练、优化并部署适合我们数据集的自定义模型。
- en: Create forecasts for many different use cases
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为许多不同的用例创建预测
- en: Build forecasts for virtually every use case, including supply chain, logistics,
    and finance, using a large library of algorithms to automatically determine the
    best fit for our specific use case.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 使用大量算法自动确定最适合我们特定用例的预测，包括供应链、物流和财务等几乎所有用例。
- en: Keep data secure
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 保持数据安全
- en: Every data point is protected with at-rest and in-flight encryption to keep
    sensitive information secure and confidential.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据点都受到静态和动态加密的保护，以保持敏感信息的安全和机密性。
- en: Automatically retrain and redeploy models when needed
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在需要时自动重新训练和部署模型
- en: When new data arrives—or when model evaluation metrics fall below a certain
    threshold—the model will be retrained and redeployed to improve the forecast predictions.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当新数据到达或者模型评估指标低于某个阈值时，将重新训练并部署模型以改进预测。
- en: Predict Energy Consumption with Amazon Forecast
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Amazon Forecast 预测能源消耗
- en: Amazon Forecast is a fully managed service based on the technology that powers
    Amazon.com’s demand forecasting needs, such as efficient inventory management,
    immediate product fulfillment, and same-day delivery. Forecast uses machine learning
    to automatically train, tune, and optimize highly specialized demand forecast
    models from our dataset. We simply register our historical datasets—and related
    metadata—with Forecast to start generating demand predictions. Demand forecasts
    can be exported as CSVs, accessed via the AWS Console UI, or integrated into our
    application through the Forecast API.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Forecast 是一个完全托管的服务，基于驱动亚马逊.com需求预测需求的技术，如高效库存管理，即时产品履行和当天交付。Forecast
    使用机器学习自动训练，调整和优化高度专业的需求预测模型，从我们的数据集中。我们只需向 Forecast 注册我们的历史数据集和相关元数据，即可开始生成需求预测。需求预测可以导出为
    CSV 文件，通过 AWS 控制台 UI 访问，或通过 Forecast API 集成到我们的应用程序中。
- en: Let’s train a demand forecast model to predict individual household energy power
    consumption for the next 24 hours using Forecast’s DeepAR++ algorithm and a public
    dataset from the [UCI Machine Learning Repository](https://oreil.ly/DYLJ7).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 Forecast 的 DeepAR++ 算法和来自[UCI 机器学习库](https://oreil.ly/DYLJ7)的公共数据集来训练一个需求预测模型，以预测未来
    24 小时的个体家庭能源消耗。
- en: 'Here is a snippet of the dataset, including the power consumption per customer:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这是数据集的一部分，包括每位客户的功耗：
- en: '| timestamp | value | item |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| timestamp | value | item |'
- en: '| --- | --- | --- |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 2014-01-01 01:00:00 | 38.34991708126038 | client_12 |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| 2014-01-01 01:00:00 | 38.34991708126038 | client_12 |'
- en: '| 2014-01-01 02:00:00 | 33.5820895522388 | client_12 |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| 2014-01-01 02:00:00 | 33.5820895522388 | client_12 |'
- en: '| 2014-01-01 03:00:00 | 34.41127694859037 | client_12 |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| 2014-01-01 03:00:00 | 34.41127694859037 | client_12 |'
- en: 'Here is the schema that we define in Forecast to represent the public dataset:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们在 Forecast 中定义的模式，以表示公共数据集：
- en: '[PRE7]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let’s register the dataset with Forecast:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们注册数据集到 Forecast：
- en: '[PRE8]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now let’s train the demand forecast model with Forecast:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们使用 Forecast 训练需求预测模型：
- en: '[PRE9]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Let’s make a prediction:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们做出预测：
- en: '[PRE10]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Predict Demand for Amazon EC2 Instances with Amazon Forecast
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测亚马逊 EC2 实例需求与亚马逊预测
- en: AWS uses Forecast to predict demand for Amazon EC2 instances within Amazon Redshift
    clusters. As new data is ingested into Forecast, the Amazon Redshift control plane
    queries Forecast to adjust the size of the Amazon EC2 warm pool for Amazon Redshift,
    as shown in [Figure 2-2](#redshift_control_plane_adjusts_the_warm).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 使用 Forecast 预测 Amazon Redshift 集群内 Amazon EC2 实例的需求。随着新数据被摄入 Forecast，Amazon
    Redshift 控制平面查询 Forecast 调整 Amazon EC2 温暖池的大小，如[图 2-2](#redshift_control_plane_adjusts_the_warm)所示。
- en: '![](assets/dsaw_0202.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0202.png)'
- en: Figure 2-2\. Amazon Redshift control plane adjusts the warm-pool cache of Amazon
    EC2 instances using Forecast.
  id: totrans-119
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-2\. Amazon Redshift 控制平面使用 Forecast 调整 Amazon EC2 实例的温暖池缓存。
- en: 'The steps in [Figure 2-2](#redshift_control_plane_adjusts_the_warm) can be
    described as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 2-2](#redshift_control_plane_adjusts_the_warm)中的步骤可以描述如下：'
- en: Changes to Amazon EC2 warm-pool cache demand are published to S3.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Amazon EC2 温暖池缓存需求的变化被发布到 S3。
- en: Forecast ingests demand data from S3 and then creates new forecast predictions.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Forecast 摄取来自 S3 的需求数据，然后创建新的预测。
- en: A Lambda function copies the new forecast predictions to Amazon DynamoDB.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个 Lambda 函数将新的预测预测复制到 Amazon DynamoDB。
- en: The Amazon EC2 cluster scaler reads the forecast predictions from DynamoDB and
    adjusts the warm-pool cache size based on projected demand.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Amazon EC2 集群缩放器从 DynamoDB 读取预测预测，并根据预计的需求调整温暖池缓存大小。
- en: Identify Fake Accounts with Amazon Fraud Detector
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用亚马逊欺诈检测器识别假账户
- en: Each year, tens of billions of dollars are lost to online fraud across the world.
    Online companies are especially prone to bad-actor attacks trying to defraud the
    system by creating fake user accounts and purchasing items with stolen credit
    cards. Typical fraud detection systems that detect bad actors often rely on business
    rules that are slow to adapt to the latest fraud techniques.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 每年全球都会因在线诈骗而损失数十亿美元。在线公司尤其容易受到恶意行为者的攻击，他们试图通过创建假用户账户并使用盗窃的信用卡购买商品来欺诈系统。通常检测恶意行为者的欺诈检测系统往往依赖于业务规则，这些规则对最新的欺诈技术适应缓慢。
- en: 'Effective fraud detection and privacy-leak prevention systems include the following
    characteristics:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的欺诈检测和隐私泄漏预防系统具备以下特点：
- en: Stop bad actors before they affect our business
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在他们影响我们的业务之前，制止恶意行为者
- en: Flag suspicious activity before bad actors can do real harm.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在恶意行为者造成实际伤害之前标记可疑活动。
- en: High-quality fraud-detection models without a lot of data
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 高质量的欺诈检测模型无需大量数据
- en: Pre-trained algorithms can analyze even the smallest amount of historical event
    data and still provide a high-quality fraud-detection model.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 预先训练的算法可以分析即使是最少量的历史事件数据，并且仍能提供高质量的欺诈检测模型。
- en: Let fraud teams move faster and with more control
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让欺诈团队更快速、更有控制力
- en: Automatically handle the complex tasks required to build, train, tune, deploy,
    and update our fraud-detection models when new event data is available.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 当新的事件数据可用时，自动处理构建、训练、调优、部署和更新我们的欺诈检测模型所需的复杂任务。
- en: Amazon Fraud Detector is a fully managed service that identifies potentially
    fraudulent online activities such as online payments and fake accounts. Amazon
    Fraud Detector uses machine learning and 20 years of fraud-detection expertise
    from AWS and Amazon.com.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊欺诈检测器是一个完全托管的服务，可以识别潜在的欺诈在线活动，如在线支付和虚假账户。亚马逊欺诈检测器利用来自AWS和Amazon.com的20年欺诈检测专业知识和机器学习。
- en: With Amazon Fraud Detector, we create a fraud-detection model with just a few
    clicks, a relatively small amount of historical data, and minimal code. We simply
    upload our historical online event data, such as online transactions and account
    registrations—and Amazon Fraud Detector does the rest, including training, tuning,
    and deploying a custom fraud-detection model for our business.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 使用亚马逊欺诈检测器，我们只需点击几下，上传相对较少的历史数据和最小量的代码即可创建一个欺诈检测模型。我们只需上传我们的历史在线事件数据，如在线交易和账户注册，亚马逊欺诈检测器将完成其余工作，包括训练、调优和部署为我们业务量身定制的欺诈检测模型。
- en: 'Here is the code that trains Amazon Fraud Detector on our transaction dataset:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这是训练亚马逊欺诈检测器使用我们的交易数据集的代码：
- en: '[PRE11]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Here is the code to predict whether a given transaction is fraudulent:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是用于预测给定交易是否欺诈的代码：
- en: '[PRE12]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Here is the output of the Amazon Fraud Detector prediction showing the relevant
    data, prediction outcome, and prediction confidence:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这是亚马逊欺诈检测器预测的输出，显示相关数据、预测结果和预测置信度：
- en: '| ip_address | email_address | state | postal | name | phone_number | score
    | outcomes |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| IP地址 | 电子邮件地址 | 州 | 邮政编码 | 姓名 | 电话号码 | 分数 | 结果 |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| 84.138.6.238 | synth1@yahoo.com | LA | 32733 | Brandon Moran | (555)784 -
    5238 | 5.0 | [approve] |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| 84.138.6.238 | synth1@yahoo.com | 洛杉矶 | 32733 | Brandon Moran | (555)784
    - 5238 | 5.0 | [批准] |'
- en: '| 194.147.250.63 | synth2@yahoo.com | MN | 34319 | Dominic Murray | (555)114
    - 6133 | 4.0 | [approve] |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| 194.147.250.63 | synth2@yahoo.com | 明尼苏达州 | 34319 | Dominic Murray | (555)114
    - 6133 | 4.0 | [批准] |'
- en: '| 192.54.60.50 | synth3@gmail.com | WA | 32436 | Anthony Abbott | (555)780
    - 7652 | 5.0 | [approve] |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| 192.54.60.50 | synth3@gmail.com | 华盛顿州 | 32436 | Anthony Abbott | (555)780
    - 7652 | 5.0 | [批准] |'
- en: '| 169.120.193.154 | synth4@gmail.com | AL | 34399.0 | Kimberly Webb | (555)588
    - 4426 | 938.0 | [review] |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| 169.120.193.154 | synth4@gmail.com | 阿拉巴马州 | 34399.0 | Kimberly Webb | (555)588
    - 4426 | 938.0 | [审核] |'
- en: '| 192.175.55.43 | synth5@hotmail.com | IL | 33690.0 | Renee James | (555)785
    - 8274 | 16.0 | [approve] |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| 192.175.55.43 | synth5@hotmail.com | 伊利诺伊州 | 33690.0 | Renee James | (555)785
    - 8274 | 16.0 | [批准] |'
- en: Enable Privacy-Leak Detection with Amazon Macie
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用亚马逊Macie启用隐私泄漏检测
- en: A well-instrumented application produces many logs and metrics to increase insight
    and maintain high system uptime to avoid customer dissatisfaction. However, sometimes
    these logs contain sensitive account information such as home zip codes or credit
    card numbers. We need a system that monitors our data for sensitive information,
    detects access to this sensitive information, and sends notifications if unauthorized
    access is detected or data is leaked.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 一种良好配置的应用程序会生成许多日志和指标，以增加洞察力并保持高系统运行时间，避免客户不满。然而，有时这些日志包含敏感账户信息，如家庭邮政编码或信用卡号码。我们需要一种系统来监控我们的数据以寻找敏感信息，检测对此类信息的访问，并在检测到未经授权访问或数据泄露时发送通知。
- en: 'Effective systems to detect and monitor access to sensitive information have
    the following characteristics:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的系统用于检测和监控对敏感信息的访问具有以下特点：
- en: Continuously assess data sensitivity and evaluate access controls
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 持续评估数据敏感性和访问控制
- en: Attacker ROI math dictates that an S3 bucket with sensitive customer data and
    loosely configured IAM roles is an easy target. We stay ahead of this by continuously
    monitoring our entire S3 environment and generating actionable steps to respond
    quickly when needed.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者 ROI 数学决定了一个具有敏感客户数据和松散配置的 IAM 角色的 S3 存储桶是一个容易的目标。我们通过持续监控整个 S3 环境并生成可操作步骤，以在需要时快速响应，保持领先地位。
- en: Support many data sources
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 支持多种数据源
- en: Assess data sensitivity and evaluate access controls across many different data
    sources, such as S3, Amazon Relational Database Service (Amazon RDS), Amazon Aurora,
    emails, file shares, collaboration tools, etc.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 评估数据敏感性，并评估跨多个不同数据源（例如 S3、Amazon 关系数据库服务（Amazon RDS）、Amazon Aurora、电子邮件、文件共享、协作工具等）的访问控制。
- en: Maintain regulatory compliance
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 维护法规合规性
- en: In addition to monitoring and protecting sensitive data, compliance teams are
    required to provide evidence that they are enforcing data security and privacy
    to meet regulatory compliance requirements.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 除了监控和保护敏感数据之外，合规团队还需要提供证据，证明他们正在执行数据安全和隐私以满足法规合规要求。
- en: Identifying sensitive data during data migrations
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据迁移期间识别敏感数据
- en: When migrating large volumes of data into AWS, we want to know if the data includes
    sensitive data. If so, we likely need to update the security access controls,
    encryption settings, and resource tags when the data is migrated.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在将大量数据迁移到 AWS 时，我们希望知道数据是否包含敏感信息。如果是这样，当数据迁移时，我们可能需要更新安全访问控制、加密设置和资源标签。
- en: Amazon Macie is a fully managed security service that uses machine learning
    to identify sensitive data like personally identifiable information in our AWS-based
    data sources, such as S3\. Macie provides visibility into where this data is stored—and
    who is accessing the data. By monitoring access to sensitive data, Macie can send
    an alert when it detects a leak—or risk of a leak.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Macie 是一种完全托管的安全服务，利用机器学习在我们基于 AWS 的数据源中识别诸如个人身份信息等敏感数据。Macie 提供了数据存储位置的可视性以及访问数据的人员信息。通过监控对敏感数据的访问，Macie
    可以在检测到泄漏或泄漏风险时发送警报。
- en: Macie continuously identifies sensitive data and evaluates the security and
    access controls to this data. Macie helps maintain data privacy and security across
    all of our data and provides comprehensive options for scheduling our data-sensitivity
    and access-control analysis to maintain our data privacy and compliance requirements.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: Macie 持续识别敏感数据并评估对这些数据的安全和访问控制。Macie 帮助维护数据的隐私和安全，并为调度数据敏感性和访问控制分析提供全面的选项，以满足我们的数据隐私和合规要求。
- en: We can schedule daily, weekly, or monthly discovery jobs to generate our findings,
    including evaluation results, time stamps, and historical records of all buckets
    and objects scanned for sensitive data. These findings are summarized in a standard
    report compliant with data privacy and protection audits to ensure long-term data
    retention. For data migrations, Macie automates the configuration of data protection
    and role-based access policies as our data moves into AWS.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以安排每天、每周或每月的发现作业，以生成我们的发现结果，包括评估结果、时间戳以及所有敏感数据扫描的存储桶和对象的历史记录。这些发现结果总结在符合数据隐私和保护审核标准的标准报告中，以确保长期数据保留。对于数据迁移，Macie
    在我们的数据进入 AWS 时自动配置数据保护和基于角色的访问策略。
- en: Conversational Devices and Voice Assistants
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对话设备和语音助手
- en: Whether it’s Alexa or any of those other famous home voices, all of them use
    state-of-the-art deep learning technologies in the field of automatic speech recognition
    (ASR) and natural language understanding (NLU) to recognize the intent of our
    spoken text.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是 Alexa 还是其他著名的家庭语音助手，它们都使用最先进的深度学习技术，涉及自动语音识别（ASR）和自然语言理解（NLU）领域，以识别我们所说文本的意图。
- en: Speech Recognition with Amazon Lex
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Amazon Lex 进行语音识别
- en: Using Amazon Lex to build conversational interfaces for voice and text, we have
    access to the same deep learning technologies that power Amazon Alexa. Amazon
    Lex is a fully managed service that uses ASR to convert speech to text. Amazon
    Lex also uses NLU to recognize the intent of the text. We can build custom responses
    to a wide set of voice and text queries, such as, “Where is the IT help desk in
    this office?” and “Reserve this room for the next 30 minutes.”
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Amazon Lex 构建语音和文本的对话界面，我们可以访问支持 Amazon Alexa 的深度学习技术。Amazon Lex 是一个完全托管的服务，使用
    ASR 将语音转换为文本。Amazon Lex 还使用 NLU 来识别文本的意图。我们可以为广泛的语音和文本查询构建定制响应，例如“这个办公室里的 IT 帮助台在哪里？”和“为接下来的
    30 分钟预订这个房间。”
- en: Text-to-Speech Conversion with Amazon Polly
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Amazon Polly 进行文本转语音转换
- en: Amazon Polly is an automated text-to-speech service with dozens of human voices
    across a broad set of languages, dialects, and genders. We can use Amazon Polly
    to build speech-enabled applications that turn text into human-like speech for
    accessibility purposes, for example.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Polly 是一个自动化的文本转语音服务，提供多种语言、方言和性别的数十种人声。我们可以使用 Amazon Polly 构建支持语音的应用程序，将文本转换为人类般的语音，例如用于辅助功能。
- en: Speech-to-Text Conversion with Amazon Transcribe
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Amazon Transcribe 进行语音转文本转换
- en: Amazon Transcribe is an ASR service that makes it easy for developers to add
    speech-to-text capability to their real-time and batch applications. Amazon Transcribe
    converts speech to text by processing audio either in batch or real time. Popular
    use cases for Amazon Transcribe include creating image captions and video subtitles.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Transcribe 是一个 ASR 服务，使开发人员能够轻松将语音转换为文本，从而为其实时和批处理应用程序增加了此功能。Amazon Transcribe
    通过批处理或实时处理音频来将语音转换为文本。Amazon Transcribe 的流行用例包括创建图像标题和视频字幕。
- en: Text Analysis and Natural Language Processing
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本分析和自然语言处理
- en: Natural language processing (NLP) is a field of artificial intelligence that
    focuses on machines’ ability to read, understand, and derive meaning from human
    languages. It is a field that has been studied for a very long time, with research
    publications dating back to the early 1900s.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 自然语言处理（NLP）是人工智能的一个领域，专注于机器阅读、理解和从人类语言中获取意义的能力。这是一个研究已久的领域，早在 1900 年代初就有相关的研究论文发表。
- en: Fast-forwarding to 2021, we still experience ground-breaking NLP research with
    new language models emerging nearly on a monthly basis. In later chapters, we
    will discuss the evolution of NLP algorithms, discuss the novel Transformer neural-network
    architecture, and dive deeper into the BERT family of NLP algorithms.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 快进到 2021 年，我们依然见证了具有开创性的 NLP 研究，几乎每个月都会出现新的语言模型。在接下来的章节中，我们将讨论 NLP 算法的演变，探讨新型的
    Transformer 神经网络架构，并深入探讨 BERT 系列的 NLP 算法。
- en: 'Effective text analysis and cognitive search systems have the following characteristics:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的文本分析和认知搜索系统具有以下特点：
- en: Fast time to discover
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 快速发现时间
- en: New documents should become searchable quickly and without errors that require
    human correction.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 新文档应快速变得可搜索，而不需要人工校正错误。
- en: Efficient processing workflows
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 高效的处理工作流程
- en: Document-processing workflows should be automated to increase speed and quality
    while reducing human effort, custom code, and cost.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 文档处理工作流程应自动化，以提高速度和质量，同时减少人力成本、定制代码和费用。
- en: Translate Languages with Amazon Translate
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Amazon Translate 翻译语言
- en: In today’s global economy, we need to appeal to international users by translating
    our content into many localized, region-specific, multilingual versions. Popular
    use cases include on-demand translation of user-generated content, real-time translations
    for communication apps, and multilingual sentiment analysis of social media content.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在今天的全球经济中，我们需要通过将内容翻译成许多本地化、区域特定的多语言版本来吸引国际用户。流行的用例包括对用户生成内容进行按需翻译、通信应用程序的实时翻译以及对社交媒体内容进行多语言情感分析。
- en: Amazon Translate is a neural machine translation service that creates more accurate
    and fluent translations than traditional statistical and rule-based translation
    models.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Translate 是一个神经机器翻译服务，比传统的统计和基于规则的翻译模型创建更准确流畅的翻译。
- en: Classify Customer-Support Messages with Amazon Comprehend
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Amazon Comprehend 对客户支持信息进行分类
- en: Customer Obsession is one of Amazon’s key leadership principles—customer focus
    is important for every business and industry. And in many cases, a customer’s
    experience is largely influenced by the quality of customer support. In this section,
    we will use Amazon Comprehend to classify the sentiment of sample customer-support
    messages.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 客户迷恋是亚马逊的关键领导原则之一——客户关注对于每一个业务和行业都很重要。在许多情况下，客户的体验很大程度上受到客户支持质量的影响。在本节中，我们将使用
    Amazon Comprehend 来对样本客户支持信息的情感进行分类。
- en: Text classification is a popular task in the field of NLP. As described earlier,
    we can use Amazon Comprehend as a fully managed NLP service to implement text
    classification without much machine learning experience.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 文本分类是自然语言处理领域中的一项流行任务。正如前面描述的，我们可以使用 Amazon Comprehend 作为完全托管的自然语言处理服务来实现文本分类，而无需太多的机器学习经验。
- en: More broadly, Amazon Comprehend can recognize important entities, key phrases,
    sentiment, language, and topics from our text documents. Important entities include
    names, places, items, and dates. Key phrases include “good morning,” “thank you,”
    and “not happy.” Sentiment includes “positive,” “neutral,” and “negative.” Amazon
    Comprehend currently supports many languages, and new languages are added frequently.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 更广泛地说，Amazon Comprehend 可以从我们的文本文档中识别重要实体、关键短语、情感、语言和主题。重要实体包括姓名、地点、物品和日期。关键短语包括“早上好”、“谢谢”和“不高兴”。情感包括“积极的”、“中性的”和“消极的”。Amazon
    Comprehend 目前支持许多语言，并且会定期添加新的语言支持。
- en: Note
  id: totrans-185
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Amazon Comprehend also supports a set of healthcare APIs called *Amazon Comprehend
    Medical*. Amazon Comprehend Medical has been pre-trained on extensive healthcare
    datasets and can identify medical conditions, medications, tests, treatments,
    procedures, anatomy, and protected health information.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Comprehend 还支持一组名为*Amazon Comprehend Medical*的医疗 API。Amazon Comprehend
    Medical 已经在广泛的医疗数据集上进行了预训练，可以识别医疗条件、药物、检查、治疗、程序、解剖和受保护的健康信息。
- en: Let’s take a look at how we can use Amazon Comprehend’s out-of-the-box Sentiment
    Analysis API to classify sample product reviews with just a few lines of code.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用 Amazon Comprehend 的开箱即用情感分析 API，只需几行代码就可以对样本产品评论进行分类。
- en: 'First, let’s use Amazon Comprehend’s `create_document_classifier()` API to
    create the classifier:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们使用 Amazon Comprehend 的 `create_document_classifier()` API 来创建分类器：
- en: '[PRE13]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next, let’s use the classifier to predict the sentiment of a sample *positive*
    review with Amazon Comprehend’s `detect_sentiment()` API:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们使用分类器使用 Amazon Comprehend 的 `detect_sentiment()` API 预测一个*正面*评论的情感：
- en: '[PRE14]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here is the output:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这是输出：
- en: '[PRE15]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Next, let’s use the classifier to predict the sentiment of a sample *negative*
    review with Amazon Comprehend’s `detect_sentiment()` API:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们使用分类器使用 Amazon Comprehend 的 `detect_sentiment()` API 预测一个*负面*评论的情感：
- en: '[PRE16]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Here is the output for the *negative* review:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是*负面*评论的输出：
- en: '[PRE17]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: With Amazon Comprehend Custom Labels, we can train Amazon Comprehend to predict
    custom labels specific to our dataset.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Amazon Comprehend Custom Labels，我们可以训练 Amazon Comprehend 来预测特定于我们数据集的自定义标签。
- en: Note
  id: totrans-199
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: In [Chapter 3](ch03.html#automated_machine_learnin), we will train a custom
    Amazon Comprehend model that classifies support messages into a star rating (1–5)
    as a finer-grained form of sentiment analysis. We will use the Amazon Customer
    Reviews Dataset.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第三章](ch03.html#automated_machine_learnin)中，我们将训练一个定制的 Amazon Comprehend 模型，将支持消息分类为星级评分（1-5），这是情感分析的更精细形式。我们将使用
    Amazon Customer Reviews 数据集。
- en: Extract Resume Details with Amazon Textract and Comprehend
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Amazon Textract 和 Comprehend 提取简历详细信息
- en: Organizations have long struggled to process semistructured documents efficiently
    to make them easy to index and search. Document processing usually requires significant
    customization and configuration. Amazon Textract, a fully managed service to accurately
    extract text from a document, uses optical character recognition (OCR) and machine
    learning to automatically extract information from our scanned documents.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 组织长期以来一直在努力高效处理半结构化文档，使其易于索引和搜索。文档处理通常需要大量的定制和配置。Amazon Textract 是一个完全托管的服务，通过光学字符识别（OCR）和机器学习从我们扫描的文档中自动提取信息，以准确地提取文本。
- en: More than just OCR, Amazon Textract also uses NLP to parse and save the specific
    words, phrases, dates, and numbers found in the document. Combined with Amazon
    Comprehend, Amazon Textract can build and maintain a smart index of our document
    contents. We can also use Amazon Textract to build automated document processing
    workflows and maintain compliance for our document archives.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊文本提取不仅仅是OCR，它还使用NLP来解析和保存文档中找到的特定单词、短语、日期和数字。结合亚马逊理解，亚马逊文本提取可以构建和维护我们文档内容的智能索引。我们还可以使用亚马逊文本提取构建自动化文档处理工作流程，并维护文档档案的合规性。
- en: 'After scanning and parsing a PDF resume, Amazon Textract generates this text-based
    version:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在扫描和解析PDF简历之后，亚马逊文本提取生成这个基于文本的版本：
- en: '[PRE18]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Let’s train Amazon Comprehend to understand a new concept called “SKILLS” that
    is specific to our resume domain:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们训练亚马逊理解来理解一个称为“SKILLS”的新概念，这是特定于我们简历领域的。
- en: '[PRE19]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Using this new Skills entity recognizer that we built with Amazon Comprehend,
    we can perform entity recognition on the text-based resume that was extracted
    from the PDF with Amazon Textract earlier:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们与亚马逊理解构建的新技能实体识别器，我们可以对之前从PDF中提取的基于文本的简历执行实体识别：
- en: '[PRE20]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here is the output of our custom Amazon Comprehend entity recognizer that includes
    the text, offsets within the document, entity type (SKILLS), and prediction confidence:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们自定义的亚马逊理解实体识别器的输出，包括文档中的文本、偏移量、实体类型（SKILLS）和预测置信度：
- en: '| Start offset | End offset | Confidence | Text | Type |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| 开始偏移量 | 结束偏移量 | 置信度 | 文本 | 类型 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| 9 | 39 | 0.9574943836014351 | analytical and problem solving | SKILLS |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 39 | 0.9574943836014351 | 分析和解决问题 | SKILLS |'
- en: '| 8 | 11 | 0.7915781756343004 | AWS | SKILLS |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 11 | 0.7915781756343004 | AWS | SKILLS |'
- en: '| 33 | 41 | 0.9749685544856893 | Solution | SKILLS |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| 33 | 41 | 0.9749685544856893 | 解决方案 | SKILLS |'
- en: '| 20 | 23 | 0.9997213663311131 | SQL | SKILLS |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| 20 | 23 | 0.9997213663311131 | SQL | SKILLS |'
- en: '| 2 | 13 | 0.9996676358048374 | Programming | SKILLS |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 13 | 0.9996676358048374 | 编程 | SKILLS |'
- en: '| 25 | 27 | 0.9963501364429431 | C, | SKILLS |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| 25 | 27 | 0.9963501364429431 | C, | SKILLS |'
- en: '| 28 | 32 | 0.9637213743240001 | C++, | SKILLS |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| 28 | 32 | 0.9637213743240001 | C++, | SKILLS |'
- en: '| 33 | 37 | 0.9984518452247634 | Java | SKILLS |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| 33 | 37 | 0.9984518452247634 | Java | SKILLS |'
- en: '| 39 | 42 | 0.9986466628533158 | PHP | SKILLS |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| 39 | 42 | 0.9986466628533158 | PHP | SKILLS |'
- en: '| 44 | 54 | 0.9993487072806023 | JavaScript | SKILLS |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| 44 | 54 | 0.9993487072806023 | JavaScript | SKILLS |'
- en: Cognitive Search and Natural Language Understanding
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 认知搜索与自然语言理解
- en: At one point or another, we have all struggled with finding a relevant piece
    of information buried deep in a website, enterprise content management system,
    corporate wiki, or corporate file share. We also know the pain of reanswering
    the same frequently asked questions over and over.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在某个时间点，我们都曾经历过在网站、企业内容管理系统、企业wiki或企业文件共享中深埋的相关信息的寻找困难。我们也知道反复回答同样经常问到的问题的痛苦。
- en: Surfacing relevant and timely search results is an age-old problem that has
    spawned many open source solutions, including Apache Lucene, Apache SOLR, and
    Elasticsearch. These solutions are rooted in older NLP techniques created many
    years ago. When interacting with these solutions, we typically issue keyword searches
    that, if entered incorrectly or out of order, could result in poor search results.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 提供相关和及时的搜索结果是一个长期存在的问题，产生了许多开源解决方案，包括Apache Lucene、Apache SOLR和Elasticsearch。这些解决方案根植于多年前创建的较旧的NLP技术。当与这些解决方案交互时，我们通常发出关键字搜索，如果输入不正确或顺序混乱，可能导致搜索结果不佳。
- en: Cognitive search is a modern solution to the age-old problem of discovering
    information. Rooted in modern NLU, cognitive search allows end users to issue
    natural language questions that a human would naturally ask.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 认知搜索是解决发现信息这一古老问题的现代解决方案。基于现代自然语言理解，认知搜索允许最终用户提出像人类自然提问的自然语言问题。
- en: Amazon Kendra uses machine learning, NLU, and cognitive search to tackle the
    enterprise search problem in a modern way. Instead of issuing traditional keyword
    searches that require extra effort to distill, we can ask Amazon Kendra full natural
    language questions such as, “On which floor is the IT department located in this
    office?” and get a specific answer such as “19th floor.”
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊肯德拉利用机器学习、自然语言理解和认知搜索以现代方式解决企业搜索问题。与需要额外努力去提炼的传统关键词搜索不同，我们可以向亚马逊肯德拉提出完全自然语言的问题，比如，“IT部门在这个办公室的哪一层？”并得到一个具体的答案，如“19楼”。
- en: Amazon Kendra integrates with many different data sources, including Amazon
    S3, SharePoint, Salesforce, ServiceNow, Amazon RDS Databases, OneDrive, and many
    more. It supports all types of data schemas, including structured, unstructured,
    and semistructured. It also supports many different formats, including PDF, HTML,
    rich text, Microsoft Word, and PowerPoint.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Kendra 集成了许多不同的数据源，包括 Amazon S3、SharePoint、Salesforce、ServiceNow、Amazon
    RDS 数据库、OneDrive 等等。它支持所有类型的数据架构，包括结构化、非结构化和半结构化。它还支持多种不同的格式，包括 PDF、HTML、富文本、Microsoft
    Word 和 PowerPoint。
- en: While Amazon Kendra comes out of the box with various pre-trained models optimized
    across multiple domains, we can train Amazon Kendra with our datasets to improve
    the accuracy of the results. In addition, Amazon Kendra actively learns and retrains
    itself based on end-user usage patterns, including explicit feedback such as thumbs
    up and thumbs down on specific search results.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Amazon Kendra 默认带有跨多个领域优化的多个预训练模型，但我们可以使用我们的数据集训练 Amazon Kendra 来提高结果的准确性。此外，Amazon
    Kendra 还根据最终用户的使用模式（包括特定搜索结果的赞和踩）积极学习和重新训练自己。
- en: Combining Amazon Kendra and Lex, we can build a support chatbot across a broad
    range of devices to help answer frequently asked questions. In this example, we
    also include the popular workforce-collaboration tool Slack, as shown in [Figure 2-3](#using_slackcomma_amazon_lexcomma_and_ke).
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 结合 Amazon Kendra 和 Lex，我们可以跨多种设备构建支持聊天机器人，帮助回答常见问题。在此示例中，我们还包括了流行的工作协作工具 Slack，如
    [图 2-3](#using_slackcomma_amazon_lexcomma_and_ke) 所示。
- en: '![](assets/dsaw_0203.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0203.png)'
- en: Figure 2-3\. Using Slack, Amazon Lex, and Amazon Kendra to automatically answer
    questions.
  id: totrans-232
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-3\. 使用 Slack、Amazon Lex 和 Amazon Kendra 自动回答问题。
- en: 'The following is a sample conversation where Antje is using a Slackbot to ask
    questions during a live workshop. The chatbot answers commonly asked questions
    from attendees. This allows hosts of the workshop to focus on more-complicated
    questions that require human intervention:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个样本对话，其中 Antje 在直播研讨会期间使用 Slackbot 提问。聊天机器人回答与参与者常见问题相关的问题。这使得研讨会的主持人可以专注于需要人工干预的更复杂问题：
- en: '*Antje*: “Hi there.”'
  id: totrans-234
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*Antje*: “嗨。”'
- en: ''
  id: totrans-235
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Slackbot*: “Hello! How can I help?”'
  id: totrans-236
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*Slackbot*: “你好！我能帮忙什么？”'
- en: ''
  id: totrans-237
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Antje*: “Do you record this workshop?”'
  id: totrans-238
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*Antje*: “你们录制这个研讨会吗？”'
- en: ''
  id: totrans-239
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Slackbot*: “Yes, this workshop is being recorded.”'
  id: totrans-240
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*Slackbot*: “是的，这个研讨会正在录制。”'
- en: ''
  id: totrans-241
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Antje*: “Where do I find the recording?”'
  id: totrans-242
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*Antje*: “我在哪里找到录音？”'
- en: ''
  id: totrans-243
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Slackbot*: “The recording will be shared at *https://youtube.datascienceonaws.com*
    within 24 hours.”'
  id: totrans-244
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*Slackbot*: “录音将在 *https://youtube.datascienceonaws.com* 上在 24 小时内分享。”'
- en: ''
  id: totrans-245
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Antje*: “Do you know how to get started with SageMaker?”'
  id: totrans-246
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*Antje*: “你知道如何开始使用 SageMaker 吗？”'
- en: ''
  id: totrans-247
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Slackbot*: “I think the answer to your question is: On the Amazon SageMaker
    Studio page, under Get Started, choose Quick Start, then select Create Studio
    Domain.”'
  id: totrans-248
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*Slackbot*: “我认为你问题的答案是：在 Amazon SageMaker Studio 页面上，在开始使用中，选择快速开始，然后选择创建工作室域。”'
- en: Intelligent Customer Support Centers
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 智能客户支持中心
- en: Quality customer support is important for every industry and business (as noted
    earlier, Customer Obsession is a key leadership principle at Amazon). In many
    cases, customer support directly affects the customer’s perception of the business.
    Amazon Connect is a cloud contact center solution that implements machine learning
    to provide intelligent contact center features. With Connect Wisdom, customer
    support agents can simply enter a question, such as “What is the exchange policy
    for books?” and Wisdom returns the most relevant information and best answer.
    Wisdom also runs machine learning on live-call transcripts to automatically identify
    customer issues and recommend responses to the agents.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 质量客户支持对每个行业和企业都非常重要（正如前文所述，客户至上是亚马逊的关键领导原则之一）。在许多情况下，客户支持直接影响客户对企业的感知。Amazon
    Connect 是一种云联系中心解决方案，利用机器学习提供智能联系中心功能。通过 Connect Wisdom，客户支持代理可以简单地输入问题，例如“书籍的换货政策是什么？”，Wisdom
    将返回最相关的信息和最佳答案。Wisdom 还对现场通话记录运行机器学习，自动识别客户问题并向代理推荐响应。
- en: Contact Lens for Amazon Connect adds machine learning capabilities to Amazon
    Connect, a cloud contact center service based on the same technology that powers
    Amazon’s customer service. Contact Lens uses speech-to-text transcription, NLP,
    and cognitive search capabilities to analyze customer–agent interactions.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: Contact Lens for Amazon Connect 为基于相同技术支持亚马逊客服的云联系中心服务 Amazon Connect 添加了机器学习功能。Contact
    Lens 使用语音转文本转录、自然语言处理（NLP）和认知搜索能力分析客户-代理互动。
- en: By automatically indexing call transcripts, Contact Lens lets us search for
    specific words, phrases, and sentiment—as well as redact sensitive information
    from transcripts to avoid leaks. Contact Lens helps supervisors spot recurring
    themes with interactions in real time, automatically trains agents to improve
    their customer support skills, and continuously categorizes contacts based on
    keywords and phrases used by the customer.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 通过自动索引通话转录，Contact Lens 允许我们搜索特定词语、短语和情绪，同时从转录中删除敏感信息以避免泄露。Contact Lens 帮助主管实时发现互动中的重复主题，自动培训代理人以提高他们的客户支持技能，并基于客户使用的关键词和短语连续分类联系人。
- en: With Contact Lens for Amazon Connect, contact center supervisors have a single
    view into customer–agent interactions, product feedback trends, and potential
    compliance risks. Amazon Connect replicates successful interactions, highlights
    product feedback anomalies, and escalates poor customer–agent interactions to
    a supervisor.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Contact Lens for Amazon Connect，联系中心主管可以单一视图查看客户与代理人的互动、产品反馈趋势以及潜在的合规风险。Amazon
    Connect 复制成功的互动，突出产品反馈异常，并将不良的客户与代理人互动升级至主管。
- en: Industrial AI Services and Predictive Maintenance
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工业 AI 服务与预测性维护
- en: As part of the AWS for Industrial service portfolio, AWS offers a range of AI
    services and hardware, including Amazon Lookout for Metrics, Lookout for Vision,
    Lookout for Equipment, Amazon Monitron, and AWS Panorama.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 AWS 工业服务组合的一部分，AWS 提供一系列 AI 服务和硬件，包括 Amazon Lookout for Metrics、Lookout for
    Vision、Lookout for Equipment、Amazon Monitron 和 AWS Panorama。
- en: We can create accurate anomaly detection models using Amazon Lookout for Metrics.
    After uploading our data, Lookout for Metrics will automatically inspect the data
    and build the anomaly detection model. If the model detects anomalies, the service
    will group related anomalies together and assign a severity score. Lookout for
    Metrics comes with built-in connectors to popular data sources, including Amazon
    S3, Amazon Redshift, Amazon CloudWatch, Amazon RDS, and a variety of SaaS applications.
    The anomaly detection model leverages human-in-the-loop feedback to continuously
    improve over time.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Amazon Lookout for Metrics 创建准确的异常检测模型。上传数据后，Lookout for Metrics 将自动检查数据并构建异常检测模型。如果模型检测到异常，服务将将相关异常分组并分配严重性评分。Lookout
    for Metrics 配备了与流行数据源的内置连接器，包括 Amazon S3、Amazon Redshift、Amazon CloudWatch、Amazon
    RDS 以及各种 SaaS 应用程序。异常检测模型利用人在环回反馈持续改进。
- en: We can spot product defects using Amazon Lookout for Vision. Lookout for Vision
    implements computer vision to identify visual defects in objects. It can help
    automate the detection of damages to parts, identify missing components, or uncover
    process issues in our manufacturing lines. Lookout for Vision already comes with
    a pre-trained anomaly detection model. We simply fine-tune it to our specific
    images.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Amazon Lookout for Vision 来发现产品缺陷。Lookout for Vision 利用计算机视觉来识别物体的视觉缺陷。它可以帮助自动检测零部件的损坏，识别缺失的组件，或者发现制造线上的流程问题。Lookout
    for Vision 已经配备了预训练的异常检测模型。我们只需对特定的图像进行微调。
- en: We can monitor the health and efficiency of our equipment using Amazon Lookout
    for Equipment. We upload our historical equipment sensor data to Lookout for Equipment,
    and the service will build a custom machine learning model to detect any abnormal
    equipment behavior. Additionally, the service will automatically send an alert
    so we can take action. Lookout for Equipment works with any time series analog
    data, including sensor data such as temperature, flow rates, etc.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Amazon Lookout for Equipment 监控设备的健康和效率。将历史设备传感器数据上传到 Lookout for Equipment，服务将构建一个定制的机器学习模型来检测任何异常设备行为。此外，服务还将自动发送警报，以便我们采取行动。Lookout
    for Equipment 适用于任何时间序列模拟数据，包括温度、流量等传感器数据。
- en: We can implement an end-to-end predictive maintenance use case with Amazon Monitron,
    which includes equipment sensors, a gateway device to securely connect to AWS,
    and a managed service to analyze the data for abnormal machine patterns. Amazon
    Monitron captures the sensor data from our equipment, identifies healthy sensor
    patterns, and trains a machine learning model specific to that equipment. We can
    provide feedback to improve the model via an Amazon Monitron mobile app, for example.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Amazon Monitron 实现端到端的预测性维护用例，包括设备传感器、安全连接到 AWS 的网关设备，以及用于分析异常机器模式数据的托管服务。Amazon
    Monitron 捕获我们设备的传感器数据，识别健康的传感器模式，并训练特定设备的机器学习模型。我们可以通过 Amazon Monitron 移动应用程序提供反馈以改进模型，例如。
- en: We can enable our on-premises cameras for computer vision via AWS Panorama,
    which comes with a hardware appliance that we can connect to our network and existing
    cameras. We can then deploy computer vision applications to the appliance to process
    the video streams from the connected cameras. Camera device manufacturers can
    use the AWS Panorama SDK to build new cameras that run computer vision models
    at the edge.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过AWS Panorama为本地摄像头启用计算机视觉，它配备了一个硬件设备，可以连接到我们的网络和现有摄像头。然后，我们可以将计算机视觉应用部署到该设备上，以处理连接摄像头的视频流。摄像头设备制造商可以使用AWS
    Panorama SDK构建新的摄像头，在边缘运行计算机视觉模型。
- en: Home Automation with AWS IoT and Amazon SageMaker
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用AWS IoT和Amazon SageMaker的家庭自动化
- en: We live in a world where we estimate five billion people own some sort of mobile
    device, and more than half of our internet traffic happens through mobile devices.
    In addition, the industrial Internet of Things (IoT) revolution boasts many more
    billions of connected sensors and devices across our homes, office buildings,
    factories, cars, ships, planes, oil drills, agricultural fields, and many more.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生活在一个估计有五十亿人拥有某种移动设备的世界，超过一半的互联网流量通过移动设备产生。此外，工业物联网（IoT）革命引领着数十亿个连接的传感器和设备进入我们的家庭、办公楼、工厂、汽车、船只、飞机、油井、农田等领域。
- en: This trend toward mobile and IoT devices also pushed computing to the edge,
    whether we need to analyze and preprocess data before it is sent and ingested
    into central data lakes (for data-privacy compliance reasons, for example) or
    improve user experience by serving application responses faster, eliminating the
    latency of a round trip to the cloud. We also see more and more machine learning
    happening at the edge. And while the training of machine learning models often
    requires powerful compute resources, making inferences against these models typically
    requires far less computational power.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 移动和物联网设备的这一趋势也推动计算移到边缘，无论我们是出于数据隐私合规的原因需要在将数据发送和导入到中央数据湖之前分析和预处理数据，还是通过更快地提供应用程序响应来改善用户体验，消除到云端的往返延迟。我们还看到越来越多的机器学习发生在边缘。虽然训练机器学习模型通常需要强大的计算资源，但对这些模型进行推断通常需要远低于此的计算能力。
- en: Performing inference at the edge helps to reduce latency and cost as we are
    saving the round-trip time to the cloud. We can also capture and analyze the prediction
    results faster, trigger some action locally, or send the analyzed data back to
    the cloud to retrain and improve our machine learning models.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在边缘执行推断有助于减少延迟和成本，因为我们节省了到云端的往返时间。我们还可以更快地捕获和分析预测结果，本地触发某些动作，或将分析数据发送回云端以重新训练和改进我们的机器学习模型。
- en: AWS IoT Greengrass deploys the model from S3 to the edge to make predictions
    with edge-local data. AWS IoT Greengrass also syncs the model inference results
    back to an S3 bucket. This prediction data can then be used to retrain and improve
    the SageMaker model. AWS IoT Greengrass supports over-the-air deployments, runs
    locally on each device, and extends AWS to those devices.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: AWS IoT Greengrass将模型从S3部署到边缘，以便利用边缘本地数据进行预测。AWS IoT Greengrass还将模型推断结果同步回S3存储桶。然后可以使用这些预测数据来重新训练和改进SageMaker模型。AWS
    IoT Greengrass支持空中部署，本地在每个设备上运行，并将AWS扩展到这些设备。
- en: '[Figure 2-4](#home_automation_use_case_with_aws_iot_g) shows a home automation
    use case running AWS IoT Greengrass on a local home automation server called the
    “edge device.” AWS IoT Greengrass deploys a SageMaker model to the edge device
    and processes data received from camera, light switches, and light bulbs using
    an edge version of Lambda running on the edge device.'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '[图2-4](#home_automation_use_case_with_aws_iot_g)展示了一个运行AWS IoT Greengrass的家庭自动化用例，本地家庭自动化服务器称为“边缘设备”。AWS
    IoT Greengrass将一个SageMaker模型部署到边缘设备，并使用在边缘设备上运行的Lambda的边缘版本处理从摄像头、灯开关和灯泡接收的数据。'
- en: '![](assets/dsaw_0204.png)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0204.png)'
- en: Figure 2-4\. Home automation use case with AWS IoT Greengrass.
  id: totrans-268
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-4. 使用AWS IoT Greengrass的家庭自动化用例。
- en: AWS provides a wide range of services to implement machine learning at the edge,
    including AWS IoT Greengrass for model deployment to the edge, SageMaker Neo for
    model optimization, and SageMaker Edge Manager for managing models at the edge.
    We will dive deeper into SageMaker Neo and Edge Manager in [Chapter 9](ch09.html#deploy_models_to_production).
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: AWS提供了多种服务来实现边缘上的机器学习，包括AWS IoT Greengrass用于模型部署到边缘，SageMaker Neo用于模型优化，以及SageMaker
    Edge Manager用于管理边缘上的模型。我们将在[第9章](ch09.html#deploy_models_to_production)深入探讨SageMaker
    Neo和Edge Manager。
- en: Extract Medical Information from Healthcare Documents
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从医疗文件中提取医疗信息
- en: In the healthcare space, AWS offers many dedicated services. The services have
    been developed specifically for the characteristics and needs of healthcare data
    and comply with healthcare regulations. As part of the Amazon AI HIPAA-eligible
    healthcare portfolio of services, AWS offers Amazon Comprehend Medical, Amazon
    Transcribe Medical, and Amazon HealthLake.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在医疗领域，AWS 提供许多专用服务。这些服务专门针对医疗数据的特性和需求进行开发，并符合医疗法规。作为亚马逊 AI 符合 HIPAA 标准的医疗健康服务组合的一部分，AWS
    提供了 Amazon Comprehend Medical、Amazon Transcribe Medical 和 Amazon HealthLake。
- en: Comprehend Medical is an NLP service that has been pre-trained specifically
    on medical language. Comprehend Medical automates the extraction of health data
    from medical texts, such as doctors’ notes, clinical trial reports, or patient
    health records.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: Comprehend Medical 是一个专门针对医疗语言进行了预训练的 NLP 服务。Comprehend Medical 自动化从医疗文本中提取健康数据，例如医生的笔记、临床试验报告或患者健康记录。
- en: Transcribe Medical is an ASR service that has been similarly pre-trained on
    medical language. We can use Transcribe Medical to transcribe medical speech into
    text. With a simple API call, we can automate clinical documentation workflows
    or even subtitle telemedicine.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: Transcribe Medical 是一个已经在医疗语言上进行了预训练的 ASR 服务。我们可以使用 Transcribe Medical 将医疗语音转录为文本。通过简单的
    API 调用，我们可以自动化临床文档工作流程，甚至为远程医疗提供字幕。
- en: HealthLake is a secure data lake that complies with the Fast Healthcare Interoperability
    Resources industry standard. In addition to storing, indexing, and transforming
    healthcare data, Amazon HealthLake leverages machine learning to identify, understand,
    and extract medical information from the raw data, such as medical reports and
    patient notes. We can use Amazon QuickSight, Athena, and SageMaker to run advanced
    analytics and machine learning on our healthcare data.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: HealthLake 是一个符合快速医疗互操作资源行业标准的安全数据湖。除了存储、索引和转换医疗数据外，Amazon HealthLake 还利用机器学习从原始数据中识别、理解和提取医疗信息，例如医疗报告和患者笔记。我们可以使用
    Amazon QuickSight、Athena 和 SageMaker 在我们的医疗数据上运行高级分析和机器学习。
- en: Self-Optimizing and Intelligent Cloud Infrastructure
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自我优化和智能化云基础设施
- en: The Amazon AI/ML services that we have introduced so far are not the only services
    that provide sophisticated machine learning. In fact, more and more existing AWS
    services are being enriched with machine learning capabilities, and new machine-learning-powered
    services are being introduced across a variety of use cases. Let’s take a quick
    look at some of these hidden gems.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们介绍的亚马逊 AI/ML 服务并不是唯一提供复杂机器学习功能的服务。事实上，越来越多的现有 AWS 服务正在丰富机器学习功能，并且在各种用例中推出新的基于机器学习的服务。让我们快速浏览一些这些潜力明星。
- en: Predictive Auto Scaling for Amazon EC2
  id: totrans-277
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测自动缩放 Amazon EC2
- en: Amazon EC2, short for Elastic Compute Cloud, provides virtual server instances
    in the AWS cloud. One of the challenges in running our applications on those Amazon
    EC2 instances is how we make sure to scale the number of instances to serve the
    current workload, basically matching supply with demand. Luckily, there’s Amazon
    EC2 Auto Scaling, which helps us with exactly that. Based on changes in demand,
    we can configure Amazon EC2 Auto Scaling to automatically add or remove compute
    capacity. This dynamic scaling approach is still reactive, though, as it acts
    on monitored traffic and Amazon EC2 instance utilization metrics.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon EC2，即弹性计算云，在 AWS 云中提供虚拟服务器实例。在这些 Amazon EC2 实例上运行我们的应用程序的一个挑战是如何确保根据当前工作负载扩展实例数量，基本上是匹配供给和需求。幸运的是，有
    Amazon EC2 Auto Scaling，它可以帮助我们做到这一点。根据需求的变化，我们可以配置 Amazon EC2 Auto Scaling 自动增加或减少计算能力。然而，这种动态缩放方法仍然是响应性的，因为它根据监控流量和
    Amazon EC2 实例利用率指标来执行。
- en: We can take this a level further to a proactive approach in combination with
    a service called *AWS Auto Scaling*. AWS Auto Scaling provides a single interface
    to set up automatic scaling of multiple AWS services, including Amazon EC2\. It
    combines dynamic and predictive scaling. With predictive scaling, AWS uses machine
    learning algorithms to predict our future traffic based on daily and weekly trends
    and provisions the right number of Amazon EC2 instances in advance of anticipated
    changes, as shown in [Figure 2-5](#predictive_scaling_with_aws_auto_scalin).
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过与名为*AWS自动缩放*的服务结合，进一步采取主动的方法。AWS自动缩放提供了一个单一接口来设置多个AWS服务的自动扩展，包括Amazon
    EC2。它结合了动态和预测缩放。通过预测缩放，AWS使用机器学习算法根据每日和每周的趋势预测我们未来的流量，并提前配置正确数量的Amazon EC2实例，如[图2-5](#predictive_scaling_with_aws_auto_scalin)所示。
- en: '![](assets/dsaw_0205.png)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0205.png)'
- en: Figure 2-5\. Predictive scaling with AWS Auto Scaling anticipates traffic changes
    to provision the right number of Amazon EC2 instances.
  id: totrans-281
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-5\. 使用AWS自动缩放进行预测缩放，以预测流量变化，从而提供正确数量的Amazon EC2实例。
- en: Anomaly Detection on Streams of Data
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据流中的异常检测
- en: Streaming technologies provide us with the tools to collect, process, and analyze
    data streams in real time. AWS offers a wide range of streaming technology options,
    including Amazon MSK and Amazon Kinesis. While we dive deeper into streaming analytics
    and machine learning with Amazon Kinesis and Apache Kafka in [Chapter 10](ch10.html#pipelines_and_mlops),
    we want to highlight Kinesis Data Analytics as a simple and powerful way to create
    streaming applications with just a few lines of code.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 流技术为我们提供了在实时收集、处理和分析数据流的工具。AWS提供了广泛的流技术选项，包括Amazon MSK和Amazon Kinesis。虽然我们在[第十章](ch10.html#pipelines_and_mlops)深入研究使用Amazon
    Kinesis和Apache Kafka进行流分析和机器学习，但我们想要强调Kinesis Data Analytics作为仅需几行代码即可创建流应用程序的简单而强大的方法。
- en: Kinesis Data Analytics provides built-in capabilities for anomaly detection
    using the Random Cut Forest (RCF) function in Kinesis Data Analytics to build
    a machine learning model in real time and calculate anomaly scores for numeric
    values in each message. The score indicates how different the value is compared
    to the observed trend. The RCF function also calculates an attribution score for
    each column, which reflects the anomaly of the data in that particular column.
    The sum of all attribution scores of all columns is the overall anomaly score.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: Kinesis Data Analytics提供了使用Kinesis Data Analytics中的Random Cut Forest (RCF)函数进行实时构建机器学习模型并计算每条消息中数值的异常分数的内置功能。该分数指示值与观察到的趋势的不同程度。RCF函数还计算每列的归因分数，反映了该特定列中数据的异常性。所有列的所有归因分数之和即为总体异常分数。
- en: Cognitive and Predictive Business Intelligence
  id: totrans-285
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 认知和预测商业智能
- en: Many machine learning applications and models assume data being readily available
    in a data lake (discussed in [Chapter 4](ch04.html#ingest_data_into_the_cloud)).
    In reality, though, much of the world’s data is stored and processed in structured,
    relational databases. In order for us to apply machine learning to this structured
    data, we have to either export the data or develop a custom application to read
    the data before applying any machine learning. Wouldn’t it be great if we could
    use machine learning straight from our business intelligence service, our data
    warehouse, or our databases? Let’s see how to do this on AWS.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 许多机器学习应用程序和模型假设数据在数据湖中随时可用（在[第四章](ch04.html#ingest_data_into_the_cloud)讨论）。然而，实际上，世界上大部分数据存储和处理在结构化的关系数据库中。为了将机器学习应用于这些结构化数据，我们必须将数据导出或开发定制应用程序来读取数据，然后才能应用机器学习。如果我们可以直接从我们的商业智能服务、数据仓库或数据库使用机器学习，那岂不是太棒了？让我们看看如何在AWS上实现这一点。
- en: Ask Natural-Language Questions with Amazon QuickSight
  id: totrans-287
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Amazon QuickSight进行自然语言提问
- en: Amazon QuickSight is a business intelligence service that performs interactive
    queries and builds visualizations on data sources such as Amazon Redshift, Amazon
    RDS, Amazon Athena, and Amazon S3\. QuickSight can also detect anomalies, create
    forecasts, and answer natural-language questions from our data through QuickSight
    ML Insights and QuickSight Q.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon QuickSight是一个商业智能服务，可以在数据源如Amazon Redshift、Amazon RDS、Amazon Athena和Amazon
    S3上执行交互式查询和构建可视化。QuickSight还可以通过QuickSight ML Insights和QuickSight Q从我们的数据中检测异常、创建预测并回答自然语言问题。
- en: QuickSight ML Insights runs the RCF algorithm to identify change in millions
    of metrics, across billions of data points. ML Insights also enables forecasting
    based on the observed metrics. The RCF algorithm automatically detects seasonality
    patterns in our data, excludes any outliers, and imputes missing values.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: QuickSight ML Insights运行RCF算法来识别数亿数据点中数百万度量的变化。ML Insights还能基于观察到的度量进行预测。RCF算法会自动检测数据中的季节性模式，排除任何异常值，并填补缺失值。
- en: With QuickSight Q, we can ask natural-language questions such as, “What are
    the best-selling product categories in the US state of California?” QuickSight
    uses machine learning to understand the question, apply the question to our data,
    and create a chart to answer our question, as shown in [Figure 2-6](#quicksight_q_understands_natural_langua).
    We will dive deep into QuickSight in [Chapter 5](ch05.html#explore_the_dataset).
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 使用QuickSight Q，我们可以询问诸如“在加利福尼亚州哪些产品类别畅销？”之类的自然语言问题。QuickSight使用机器学习理解问题，将问题应用于我们的数据，并创建图表来回答我们的问题，如[图2-6](#quicksight_q_understands_natural_langua)所示。我们将在[第5章](ch05.html#explore_the_dataset)深入探讨QuickSight。
- en: '![](assets/dsaw_0206.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0206.png)'
- en: Figure 2-6\. QuickSight Q understands natural-language questions and automatically
    creates charts to answer the questions.
  id: totrans-292
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-6\. QuickSight Q理解自然语言问题，并自动创建图表来回答这些问题。
- en: Train and Invoke SageMaker Models with Amazon Redshift
  id: totrans-293
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用Amazon Redshift训练和调用SageMaker模型
- en: Amazon Redshift is a fully managed data warehouse that allows us to run complex
    analytic queries against petabytes of structured data. Using Amazon Redshift ML,
    we can use our data in Amazon Redshift to train models with SageMaker Autopilot
    as new data arrives. SageMaker Autopilot automatically trains, tunes, and deploys
    a model. We then register and invoke the model in our Amazon Redshift queries
    as a user-defined function (UDF). [Figure 2-7](#redshift_uses_sagemaker_autopilot_to_tr)
    shows how we make predictions with the `USING FUNCTION` SQL clause. We will show
    a more detailed example of Amazon Redshift ML and SageMaker Autopilot in [Chapter 3](ch03.html#automated_machine_learnin).
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Redshift是一个完全托管的数据仓库，允许我们对PB级结构化数据运行复杂的分析查询。使用Amazon Redshift ML，我们可以在Amazon
    Redshift中使用我们的数据，随着新数据到来训练SageMaker Autopilot模型。SageMaker Autopilot会自动训练、调优和部署模型。然后，我们在Amazon
    Redshift查询中注册并调用该模型作为用户定义函数（UDF）。[图2-7](#redshift_uses_sagemaker_autopilot_to_tr)展示了我们如何使用`USING
    FUNCTION` SQL子句进行预测。我们将在[第3章](ch03.html#automated_machine_learnin)中展示Amazon Redshift
    ML和SageMaker Autopilot的更详细示例。
- en: '![](assets/dsaw_0207.png)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0207.png)'
- en: Figure 2-7\. Amazon Redshift uses SageMaker Autopilot to train and invoke a
    SageMaker model as a UDF.
  id: totrans-296
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-7\. Amazon Redshift使用SageMaker Autopilot来训练和调用SageMaker模型作为UDF。
- en: Note
  id: totrans-297
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: 'We can create a UDF to invoke any AWS service using Lambda Functions. This
    sample UDF invokes a Lambda Function:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以创建一个UDF来使用Lambda函数调用任何AWS服务。此示例UDF调用一个Lambda函数：
- en: '[PRE21]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Invoke Amazon Comprehend and SageMaker Models from Amazon Aurora SQL Database
  id: totrans-300
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Amazon Aurora SQL数据库调用Amazon Comprehend和SageMaker模型
- en: Aurora, a MySQL- and PostgreSQL-compatible relational database, is natively
    integrated with Amazon Comprehend and Amazon SageMaker, as shown in [Figure 2-8](#amazon_aurora_ml_can_invoke_models_in_a).
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: Aurora是一个与MySQL和PostgreSQL兼容的关系数据库，与Amazon Comprehend和Amazon SageMaker本地集成，如[图2-8](#amazon_aurora_ml_can_invoke_models_in_a)所示。
- en: '![](assets/dsaw_0208.png)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0208.png)'
- en: Figure 2-8\. Aurora ML can invoke models in Amazon Comprehend and SageMaker.
  id: totrans-303
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-8\. Aurora ML可以调用Amazon Comprehend和SageMaker中的模型。
- en: We can use either built-in SQL functions (with Amazon Comprehend) or custom-written
    SQL functions (with Amazon SageMaker) in our queries to apply machine learning
    to the data. As shown in previous sections, we could leverage Amazon Comprehend
    for customer sentiment analysis (built-in SQL function) on maybe a product review
    or use Amazon SageMaker for any custom-developed machine learning model integration.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在查询中使用内置SQL函数（与Amazon Comprehend一起）或自定义编写的SQL函数（与Amazon SageMaker一起）来将机器学习应用于数据。正如前面所示，我们可以利用Amazon
    Comprehend进行客户情感分析（内置SQL函数），可能是产品评价，或者使用Amazon SageMaker进行任何自定义开发的机器学习模型集成。
- en: 'Let’s say we have some sample product reviews in a relational table:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们在一个关系表中有一些样本产品评价：
- en: '[PRE22]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then, we can use the following built-in SQL functions to let Amazon Comprehend
    return us the sentiment and confidence score:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用以下内置SQL函数让Amazon Comprehend返回情感和置信度分数：
- en: '[PRE23]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'This would show a result similar to this:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示类似于这样的结果：
- en: '[PRE24]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Invoke SageMaker Model from Amazon Athena
  id: totrans-311
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Amazon Athena调用SageMaker模型
- en: Similarly, we can use Amazon Athena, a service that lets us use SQL queries
    to query data stored in Amazon S3, and invoke SageMaker machine learning models
    for inference directly from those queries, as shown in [Figure 2-9](#amazon_athena_can_invoke_sagemaker_mode).
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以使用Amazon Athena，这是一个允许我们使用SQL查询Amazon S3中存储的数据的服务，并直接从这些查询中调用SageMaker机器学习模型进行推理，如图[2-9](#amazon_athena_can_invoke_sagemaker_mode)所示。
- en: '![](assets/dsaw_0209.png)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0209.png)'
- en: Figure 2-9\. Amazon Athena can invoke SageMaker models.
  id: totrans-314
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2-9. 亚马逊Athena可以调用SageMaker模型。
- en: We define a UDF with the `USING FUNCTION` SQL statement that invokes a custom-built
    Amazon SageMaker Endpoint that serves the sentiment predictions. Any subsequent
    `SELECT` statement in the query can then reference the function to pass values
    to the model.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`USING FUNCTION` SQL语句定义一个UDF，调用一个自定义构建的Amazon SageMaker Endpoint来服务情感预测。随后的任何`SELECT`语句中，可以引用该函数将值传递给模型。
- en: 'Here’s a simple example:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个简单的例子：
- en: '[PRE25]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Run Predictions on Graph Data Using Amazon Neptune
  id: totrans-318
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Amazon Neptune上运行图数据预测
- en: Amazon Neptune is a fully managed graph database that allows us to build and
    run applications across highly connected datasets. Neptune ML implements graph
    neural networks (GNNs) to make predictions using graph data. While algorithms
    such as XGBoost are designed for traditional tabular datasets, GNNs have been
    specifically designed to deal with the complexity of graphs and potentially billions
    of relationships. Neptune ML uses the open source Deep Graph Library and Amazon
    SageMaker to automatically choose, train, and deploy the best model for our graph
    data.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Neptune是一款完全托管的图形数据库，允许我们构建和运行跨高度连接的数据集的应用程序。Neptune ML实现了图神经网络（GNN），用于使用图数据进行预测。虽然诸如XGBoost之类的算法专为传统表格数据集设计，但GNN专门设计用于处理图形的复杂性和可能的数十亿个关系。Neptune
    ML使用开源的Deep Graph Library和Amazon SageMaker，自动选择、训练和部署最佳模型来处理我们的图数据。
- en: Educating the Next Generation of AI and ML Developers
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 培养下一代AI和ML开发者
- en: Amazon and AWS offer many programs and services to help educate the next generation
    of AI/ML developers. Amazon’s [Machine Learning University program](https://oreil.ly/CnXwM)—used
    to train Amazon employees—was released to the public in 2020\. AWS Training and
    Certification (T&C) offers a broad range of on-demand and classroom training courses
    that help to prepare for the AWS Machine Learning specialty certification. In
    addition, AWS has partnered with Udacity, Coursera, and DeepLearning.AI to create
    several Massive Open Online Courses to give hands-on experience with the Amazon
    AI and machine learning stack.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊和AWS提供了许多计划和服务，帮助培养下一代AI/ML开发者。亚马逊的[Machine Learning University program](https://oreil.ly/CnXwM)
    —— 用于培训亚马逊员工 —— 于2020年向公众发布。AWS培训与认证（T&C）提供广泛的按需和课堂培训课程，帮助准备AWS机器学习专业认证考试。此外，AWS与Udacity、Coursera和DeepLearning.AI合作，创建了多个大规模在线开放课程，以便通过亚马逊AI和机器学习技术栈进行实践经验。
- en: In this section, we discuss the deep-learning-powered AWS devices that provide
    a fun and educational way to get hands-on experience with computer vision, reinforcement
    learning, and generative adversarial networks (GANs).
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论了深度学习驱动的AWS设备，提供了一个有趣和教育性的方式来进行计算机视觉、强化学习和生成对抗网络（GANs）的实践经验。
- en: 'The developer-focused device family consists of the following: AWS DeepLens,
    DeepRacer, and DeepComposer. AWS DeepLens is a wireless, deep-learning-enabled
    video camera. AWS DeepRacer is a fully autonomous 1/18th-scale race car driven
    by reinforcement learning. And AWS DeepComposer is a musical keyboard powered
    by GANs to transform our melodies into original songs.'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 面向开发者的设备系列包括以下几种：AWS DeepLens、DeepRacer和DeepComposer。AWS DeepLens是一款支持深度学习的无线视频摄像头。AWS
    DeepRacer是一款由强化学习驱动的全自动1/18比例赛车。而AWS DeepComposer是一款音乐键盘，由GAN技术驱动，可以将我们的旋律转化为原创歌曲。
- en: Build Computer Vision Models with AWS DeepLens
  id: totrans-324
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用AWS DeepLens构建计算机视觉模型
- en: AWS DeepLens is a deep-learning-enabled video camera that comes with a rich
    set of computer vision tutorials and pre-built models. If we want to learn how
    to build computer vision apps and see our first results in a matter of minutes,
    we can just use one of the many sample projects that come with pre-trained models
    and a simple inference function. The camera will perform local inference on the
    device against the deployed model.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: AWS DeepLens是一款支持深度学习的视频摄像头，提供丰富的计算机视觉教程和预构建模型。如果我们想要学习如何构建计算机视觉应用程序，并在几分钟内看到第一个结果，我们可以使用其中一个带有预训练模型和简单推理功能的样本项目。摄像头将在设备上执行对部署模型的本地推理。
- en: If we are a more experienced developer, we can build and train our custom convolutional
    neural network (CNN) model in any of the supported deep-learning frameworks, such
    as TensorFlow, Apache MXNet, or Caffe, and then deploy the project to the AWS
    DeepLens device. [Figure 2-10](#aws_deeplens_captures_input_video_strea) shows
    a typical AWS DeepLens workflow.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们是经验丰富的开发人员，可以在支持的深度学习框架（如 TensorFlow、Apache MXNet 或 Caffe）中构建和训练自定义卷积神经网络（CNN）模型，然后将项目部署到
    AWS DeepLens 设备上。[图 2-10](#aws_deeplens_captures_input_video_strea) 展示了典型的 AWS
    DeepLens 工作流程。
- en: '![](assets/dsaw_0210.png)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0210.png)'
- en: Figure 2-10\. AWS DeepLens captures input video streams, processes the stream
    using a deployed model, and generates two output video streams.
  id: totrans-328
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-10\. AWS DeepLens 捕获输入视频流，使用部署模型处理流，并生成两个输出视频流。
- en: 'AWS DeepLens is both an edge device and a camera. Therefore, AWS DeepLens runs
    AWS IoT Greengrass Core and can execute its own Lambda functions. New models are
    pushed to AWS DeepLens using AWS IoT Greengrass. The camera captures the input
    video stream and produces two output streams: a device stream that’s passed through
    as is, and a project stream that is the result of the deployed model’s processed
    video frames.'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: AWS DeepLens 既是边缘设备又是摄像头。因此，AWS DeepLens 运行 AWS IoT Greengrass Core 并可以执行自己的
    Lambda 函数。使用 AWS IoT Greengrass 将新模型推送到 AWS DeepLens。摄像头捕获输入视频流并生成两个输出流：一个是设备流，原样传递；另一个是项目流，是部署模型处理后的视频帧的结果。
- en: Any project we deploy needs to contain a Lambda function to process the input
    video frames, also called the *Inference Lambda function*. We first bundle that
    function together with a Lambda runtime and a trained model. Then we deploy the
    project using AWS IoT Greengrass to an AWS DeepLens device.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 我们部署的任何项目都需要包含一个 Lambda 函数来处理输入的视频帧，也称为*推理 Lambda 函数*。我们首先将该函数与 Lambda 运行时和一个训练模型捆绑在一起。然后，使用
    AWS IoT Greengrass 将项目部署到 AWS DeepLens 设备上。
- en: Learn Reinforcement Learning with AWS DeepRacer
  id: totrans-331
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用 AWS DeepRacer 学习强化学习
- en: AWS DeepRacer is a fully autonomous 1/18th-scale race car driven by reinforcement
    learning. The car is equipped with two cameras, a LIDAR sensor, and an on-board
    compute module. The compute module performs the inference in order to drive the
    car along a track.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: AWS DeepRacer 是一款完全自主的1/18比例的赛车，通过强化学习驱动。该车配备了两个摄像头、一台激光雷达传感器和一个板载计算模块。计算模块执行推理以驾驶车辆沿赛道行驶。
- en: Reinforcement learning is applied to a variety of autonomous decision-making
    problems. It gained broader popularity when the team of scientists, engineers,
    and machine learning experts at [DeepMind](https://deepmind.com) released AlphaGo,
    the first computer program that defeated a professional human Go player back in
    2015.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 强化学习应用于各种自主决策问题。当DeepMind团队在2015年发布了首个击败职业人类围棋选手的计算机程序AlphaGo时，它受到了广泛关注。
- en: Note
  id: totrans-334
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Go is an ancient, strategic board game known for its complexity. It was invented
    in China about three thousand years ago and is still being played by amateurs
    and in various professional leagues around the globe.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 围棋是一种古老的战略棋类游戏，因其复杂性而闻名。约三千年前在中国发明，至今仍然由业余爱好者和各种专业联赛玩家在全球范围内进行比赛。
- en: While AlphaGo learned the game by playing thousands of matches against human
    players, the subsequent release AlphaGo Zero learned Go by just playing against
    itself. This has revolutionized the field of reinforcement learning once more
    as it performed even better than the previous release and showed that the model
    was able to discover new knowledge and apply unconventional strategies to win.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管AlphaGo是通过与人类玩家进行数千场比赛来学习该游戏的，随后发布的AlphaGo Zero则是通过与自己对弈来学习围棋。这再次彻底改变了强化学习领域，因为它的表现甚至比之前的版本更好，并表明该模型能够发现新知识并应用非传统策略取得胜利。
- en: At a high level, reinforcement learning is a machine learning method that aims
    at autonomous decision making by an agent to achieve a specific goal through interactions
    with an environment, as shown in [Figure 2-11](#reinforcement_learning_is_a_machine_lea).
    Learning is achieved through trial and error.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在高层次上，强化学习是一种通过与环境交互来实现特定目标的机器学习方法，代理通过试错学习来做出自主决策，如 [图 2-11](#reinforcement_learning_is_a_machine_lea)
    所示。
- en: '![](assets/dsaw_0211.png)'
  id: totrans-338
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0211.png)'
- en: Figure 2-11\. Reinforcement learning is a machine learning method that aims
    at autonomous decision making by an agent to achieve a specific goal through interactions
    with an environment.
  id: totrans-339
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-11\. 增强学习是一种机器学习方法，旨在通过与环境的交互实现自主决策目标。
- en: We will dive deeper into reinforcement learning to compare models in production
    with multiarmed bandits in [Chapter 9](ch09.html#deploy_models_to_production),
    but let’s get back to our autonomous-car racing scenario. In our example, the
    agent is the AWS DeepRacer car, and the environment consists of track layouts,
    traveling routes, and traffic conditions. The actions include steer left, steer
    right, brake, and accelerate. Actions are chosen to maximize a reward function,
    which represents the goal of reaching the destination quickly without accidents.
    Actions lead to states. [Figure 2-12](#deepracerapostrophes_flow_of_actionscom)
    shows the AWS DeepRacer’s flow of actions, rewards, and states.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将深入探讨增强学习，以便在[第 9 章](ch09.html#deploy_models_to_production)中将生产模型与多臂老虎机进行比较，但让我们回到我们的自动驾驶车辆竞赛场景。在我们的例子中，代理是
    AWS DeepRacer 车辆，环境包括赛道布局、行驶路线和交通状况。动作包括左转、右转、刹车和加速。动作的选择是为了最大化一个奖励函数，这代表了快速到达目的地且避免事故的目标。动作导致状态。[图
    2-12](#deepracerapostrophes_flow_of_actionscom)展示了 AWS DeepRacer 的动作、奖励和状态流程。
- en: '![](assets/dsaw_0212.png)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0212.png)'
- en: Figure 2-12\. AWS DeepRacer takes action based on state and reward.
  id: totrans-342
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-12\. AWS DeepRacer 基于状态和奖励采取行动。
- en: We don’t even need a physical track or car to get started. We can start training
    our custom reinforcement learning model in the AWS DeepRacer console and use the
    AWS DeepRacer simulator to evaluate our model on a virtual track, as shown in
    [Figure 2-13](#we_can_use_the_aws_deepracer_simulator).
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至不需要实体赛道或车辆即可开始。我们可以在 AWS DeepRacer 控制台中开始训练我们的自定义增强学习模型，并使用 AWS DeepRacer
    模拟器在虚拟赛道上评估我们的模型，如[图 2-13](#we_can_use_the_aws_deepracer_simulator)所示。
- en: '![](assets/dsaw_0213.png)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0213.png)'
- en: 'Figure 2-13\. Model evaluation using the AWS DeepRacer simulator. Source: [AWS
    DeepRacer Developer Guide](https://oreil.ly/rN3dR).'
  id: totrans-345
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-13\. 使用 AWS DeepRacer 模拟器进行模型评估。来源：[AWS DeepRacer 开发者指南](https://oreil.ly/rN3dR)。
- en: AWS also maintains a global AWS DeepRacer League and leaderboard that ranks
    vehicle performances from official AWS DeepRacer League racing events happening
    throughout the year, including both physical and virtual events.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 还维护全球 AWS DeepRacer 联赛和排行榜，根据一整年举办的官方 AWS DeepRacer 联赛赛事的车辆表现进行排名，包括物理和虚拟事件。
- en: Understand GANs with AWS DeepComposer
  id: totrans-347
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解 AWS DeepComposer 中的 GANs
- en: Yes, everyone looked a bit puzzled when AWS introduced the AWS DeepComposer
    device at the annual AWS re:Invent conference back in December 2019\. Soon, however,
    we started hearing those distinctive sounds coming from hotel hallways throughout
    Las Vegas. AWS DeepComposer is a musical USB keyboard to help us learn generative
    AI. It is designed to work with the AWS DeepComposer service to turn a simple
    melody into an original song. An AWS DeepComposer device is shown in [Figure 2-14](#aws_deepcomposer_is_a_musical_usb_keybo).
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，在 AWS 在 2019 年 12 月的年度 AWS re:Invent 大会上介绍 AWS DeepComposer 设备时，每个人都显得有些困惑。然而很快，我们开始听到这些独特的声音从拉斯维加斯酒店走廊传出。AWS
    DeepComposer 是一款音乐 USB 键盘，帮助我们学习生成式 AI。它专为与 AWS DeepComposer 服务配合使用，将简单的旋律转化为原创歌曲而设计。AWS
    DeepComposer 设备如[图 2-14](#aws_deepcomposer_is_a_musical_usb_keybo)所示。
- en: '![](assets/dsaw_0214.png)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0214.png)'
- en: 'Figure 2-14\. AWS DeepComposer is a musical USB keyboard that helps us learn
    generative AI. Source: [AWS](https://oreil.ly/qk6zr).'
  id: totrans-350
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-14\. AWS DeepComposer 是一款音乐 USB 键盘，帮助我们学习生成式 AI。来源：[AWS](https://oreil.ly/qk6zr)。
- en: Generative AI, specifically in the form of GANs, is used to generate new content
    from inputs we provide. This input can be images, text, or—yes—music. Generative
    AI models automatically discover and learn patterns in data and use this knowledge
    to generate new data based on the data they were trained on. GANs use two competing
    algorithms, a generator and a discriminator, to generate new content, as shown
    in [Figure 2-15](#gans_use_two_competing_algorithmscomma).
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 生成式 AI，特别是 GANs 的形式，用于根据我们提供的输入生成新内容。这些输入可以是图像、文本，甚至是音乐。生成式 AI 模型会自动发现和学习数据中的模式，并利用这些知识基于其训练数据生成新数据。GANs
    使用两个竞争算法，生成器和判别器，来生成新内容，如[图 2-15](#gans_use_two_competing_algorithmscomma)所示。
- en: '![](assets/dsaw_0215.png)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0215.png)'
- en: Figure 2-15\. GANs leverage a generator and discriminator algorithm.
  id: totrans-353
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-15\. GANs 利用生成器和判别器算法。
- en: A generator is a CNN that learns to create new content based on the patterns
    of the input data. The discriminator is another CNN that is trained to actually
    differentiate between real and generated content. Both the generator and the discriminator
    are trained in alternating runs to force the generator to create more and more
    realistic content, while the discriminator improves at identifying synthetic content
    as opposed to real content.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 生成器是一个卷积神经网络（CNN），它根据输入数据的模式学习创建新内容。鉴别器是另一个 CNN，经过训练后真正区分真实内容和生成内容。生成器和鉴别器交替训练，强制生成器创建越来越真实的内容，同时鉴别器在识别合成内容与真实内容方面不断改进。
- en: Applied to our music example, when we play a melody on the keyboard, AWS DeepComposer
    can add up to three additional accompaniment tracks to create a new composition.
    The generator network is adapted from the popular U-Net architecture used in Computer
    Vision and has been trained on a publicly available dataset of Bach’s compositions.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 应用到我们的音乐示例中，当我们在键盘上演奏一段旋律时，AWS DeepComposer 可以添加高达三个附加伴奏轨道，以创建新的作品。生成网络源自计算机视觉中广泛使用的流行
    U-Net 架构，并已在公开可用的巴赫作品数据集上进行了训练。
- en: Program Nature’s Operating System with Quantum Computing
  id: totrans-356
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用量子计算编程自然操作系统
- en: Building useful quantum applications requires new skills and a radically different
    approach to problem solving. Acquiring this expertise takes time and requires
    access to quantum technologies and programming tools.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 构建有用的量子应用程序需要新的技能和完全不同的问题解决方法。获取这些专业知识需要时间，并需要访问量子技术和编程工具。
- en: Amazon Braket helps us explore the potential of quantum hardware, understand
    quantum algorithms, and retool for a quantum future. [Figure 2-16](#the_flywheel_of_quantum_computing_grows)
    shows the flywheel of quantum computing growing the ecosystem through better hardware,
    more developers, and more use cases.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Braket 帮助我们探索量子硬件的潜力，理解量子算法，并为量子未来重新调整。[图 2-16](#the_flywheel_of_quantum_computing_grows)
    展示了通过更好的硬件、更多的开发者和更多的使用案例推动量子计算生态系统增长的量子计算飞轮。
- en: '![](assets/dsaw_0216.png)'
  id: totrans-359
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0216.png)'
- en: Figure 2-16\. The flywheel of quantum computing grows with Amazon Braket.
  id: totrans-360
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-16\. 通过 Amazon Braket 推动量子计算的飞轮增长。
- en: There are many similarities between today’s graphics processing units (GPUs)
    and tomorrow’s quantum processing units (QPUs). GPUs revolutionized AI and machine
    learning though highly parallel, digital computations. GPUs also required a different
    set of skills, libraries (i.e., NVIDIA’s CUDA), and hardware to take advantage
    of this massive parallelism. Additionally, GPU devices are “off-chip” relative
    to the CPU devices that traditionally manage the larger computation workflow.
    Synchronizing data between CPUs and GPUs requires special hardware and software
    to accommodate the physical separation.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 当今的图形处理单元（GPU）与明天的量子处理单元（QPU）之间存在许多相似之处。GPU 通过高度并行的数字计算彻底改变了人工智能和机器学习。GPU 还需要一套不同的技能、库（例如
    NVIDIA 的 CUDA）和硬件，以利用这种大规模并行性。此外，GPU 设备与传统管理较大计算工作流程的 CPU 设备是“片外”的。在 CPU 和 GPU
    之间同步数据需要特殊的硬件和软件来适应物理分离。
- en: Similarly, QPUs perform computations through massively parallel, quantum computations—many
    orders of magnitude more parallel than their digital counterparts. Additionally,
    QPUs require a different set of skills, libraries, and hardware. They are off-chip
    relative to CPUs and therefore require special hardware and software to perform
    the synchronization operations similar to GPUs, as shown in [Figure 2-17](#using_a_quantum_processing_unit_left_pa).
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，QPUs 通过高度并行的量子计算执行计算，比其数字对应物并行度高出许多个数量级。此外，QPUs 需要一套不同的技能、库和硬件。它们与 CPU 片外，因此需要特殊的硬件和软件来执行类似于
    GPU 的同步操作，如[图 2-17](#using_a_quantum_processing_unit_left_pa) 所示。
- en: '![](assets/dsaw_0217.png)'
  id: totrans-363
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0217.png)'
- en: Figure 2-17\. Using a QPU with a classic digital computer.
  id: totrans-364
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-17\. 使用经典数字计算机的量子处理器单元（QPU）。
- en: Quantum Bits Versus Digital Bits
  id: totrans-365
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 量子位与数字位的对比
- en: Quantum bits (qubits) are the quantum computing equivalent of classical digital
    bits. However, their state (0 or 1) is probabilistic and therefore requires a
    READ operation before the value is known. This probabilistic state is referred
    to as “superposition” and is a key principle behind quantum computing.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 量子比特（qubits）是经典数字比特的量子计算等效物。然而，它们的状态（0 或 1）是概率性的，因此在知道值之前需要进行一次读取操作。这种概率状态被称为“叠加态”，是量子计算的关键原理之一。
- en: Today’s accessible quantum computers are around 70 to 100 qubits. However, a
    significant portion of these qubits are required for error correction given the
    relative “noisy” environment of the quantum hardware. Cryptography, for example,
    requires nearly 6,000 clean qubits to break 2048-bit RSA. Six thousand clean qubits
    requires approximately 1,000,000 error-correcting, redundant qubits to adjust
    for the noisy environment offered by current quantum hardware.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 当前可访问的量子计算机约为70至100个量子比特。然而，由于量子硬件的相对“嘈杂”环境，这些比特的大部分都需要用于纠错。例如，加密需要近6000个干净的量子比特来破解2048位RSA。六千个干净的量子比特需要约1000000个纠错冗余量子比特来调整当前量子硬件提供的嘈杂环境。
- en: Quantum Supremacy and the Quantum Computing Eras
  id: totrans-368
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 量子霸权和量子计算时代
- en: Until recently, we were in the “classically simulatable” phase where we could
    simulate the performance improvements of quantum computers. However, in 2019,
    we reached a point of “quantum supremacy” where we are no longer able to simulate
    and measure additional performance improvements from quantum computers due to
    limitations with today’s digital computers.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 直到最近，我们处于“经典模拟”阶段，在这个阶段我们能够模拟量子计算机的性能提升。然而，2019年，我们达到了“量子霸权”的阶段，在今天的数字计算机的限制下，我们不再能够模拟和测量量子计算机的额外性能提升。
- en: The current era is called *Noisy Intermediate-Scale Quantum*. During this era,
    we are trying to correct for the noise introduced by the quantum computing environment,
    which requires very specific temperature and vacuum characteristics. Similar to
    error-correcting registers and RAM chips, we need error-correcting qubits and
    QRAM to enter the next era, called the *Error-Corrected Quantum Computer* era,
    as shown in [Figure 2-18](#quantum_computing_eras).
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 当前时代被称为*噪声中间尺度量子*。在这个时代，我们试图纠正由量子计算环境引入的噪声，这需要非常具体的温度和真空特性。类似于纠错寄存器和RAM芯片，我们需要纠错量子比特和QRAM来进入下一个时代，即*纠错量子计算机*时代，如[图 2-18](#quantum_computing_eras)所示。
- en: '![](assets/dsaw_0218.png)'
  id: totrans-371
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0218.png)'
- en: Figure 2-18\. Quantum computing eras.
  id: totrans-372
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-18. 量子计算时代。
- en: Cracking Cryptography
  id: totrans-373
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 破解密码学
- en: It is estimated that quantum computers are only 10 or so years away from cracking
    modern-day RSA cryptography. Today, cryptography is effective because we don’t
    have enough computing power to perform the numeric factorization required to crack
    the code.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 据估计，距离量子计算机破解现代RSA加密仅有大约10年左右的时间。今天，加密是有效的，因为我们没有足够的计算能力来执行需要破解代码的数值因式分解。
- en: However, with an estimated 6,000 “perfect” qubits (no error correcting needed),
    we can crack the RSA code within just a few minutes. This is scary and has given
    rise to “quantum-aware” or “post-quantum” cryptography such as Amazon’s s2n [open
    source implementation of the TLS protocol](https://oreil.ly/o3U7G), which uses
    post-quantum cryptography as opposed to classical cryptography. We dive deeper
    into post-quantum cryptography in [Chapter 12](ch12.html#secure_data_science_on_aws).
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，使用约6000个“完美”量子比特（无需纠错），我们可以在几分钟内破解RSA代码。这是令人担忧的，并且已经催生了“量子感知”或“后量子”密码学，例如亚马逊的s2n
    [TLS协议的开源实现](https://oreil.ly/o3U7G)，它使用后量子密码学而不是经典密码学。我们在[第12章](ch12.html#secure_data_science_on_aws)中深入探讨后量子密码学。
- en: Molecular Simulations and Drug Discovery
  id: totrans-376
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分子模拟和药物发现
- en: Quantum computers have unique parallelization capabilities and can natively
    manipulate quantum mechanical states. Therefore, they have the potential to solve
    very important problems, such as mapping the electronic structure of molecules.
    Quantum simulations will likely lead to discovering new materials, catalysts,
    drugs, and high-temperature superconductors.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 量子计算机具有独特的并行化能力，并且能够本地操作量子机械状态。因此，它们有可能解决非常重要的问题，如映射分子的电子结构。量子模拟可能会导致发现新材料、催化剂、药物和高温超导体。
- en: Logistics and Financial Optimizations
  id: totrans-378
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 物流和金融优化
- en: Optimization problems are ubiquitous across many domains, including supply chain
    logistics and financial services. Finding the optimal approach from an exponential
    set of possible options can saturate the resources of a classical digital computer.
    Quantum computers can break through this barrier and accelerate many optimization
    techniques, including linear programming algorithms and Monte Carlo methods.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 优化问题在许多领域中普遍存在，包括供应链物流和金融服务。从指数集合中找到最优方法可能会耗尽经典数字计算机的资源。量子计算机可以突破这一障碍，并加速许多优化技术，包括线性规划算法和蒙特卡洛方法。
- en: Quantum Machine Learning and AI
  id: totrans-380
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 量子机器学习和人工智能
- en: Unfortunately, today’s use of quantum computers in machine learning and AI is
    pretty limited. We have seen some early improvements in linear algorithms, such
    as support vector machines and Principal Component Analysis. We have also seen
    examples where quantum research has [inspired improvements in classical recommendation
    algorithms](https://oreil.ly/H99mZ). In the future, error-correcting quantum computers
    will likely lead to a rich class of scalable and high-performance quantum machine
    learning and AI models.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，目前量子计算机在机器学习和人工智能中的应用还相当有限。我们已经看到一些线性算法，如支持向量机和主成分分析，有一些早期的改进。我们还看到量子研究已经启发了改进经典推荐算法的例子。未来，纠错量子计算机可能会导致一类可伸缩和高性能的量子机器学习和人工智能模型。
- en: Programming a Quantum Computer with Amazon Braket
  id: totrans-382
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Amazon Braket 编程量子计算机
- en: Amazon Braket supports Jupyter Notebook and offers a Python SDK to allow developers
    to interact with a quantum computer. Using the Python SDK, we asynchronously submit
    tasks to a remote QPU. This is similar to how we submitted jobs and “rented” a
    shared computer back in the early days of computing to complete those jobs. This
    is also similar to offloading compute from a CPU to a GPU. The key difference,
    however, is that the CPU and GPU share classical digital fundamentals—the QPU
    does not.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Braket 支持 Jupyter Notebook，并提供了 Python SDK，允许开发人员与量子计算机进行交互。使用 Python
    SDK，我们可以将任务异步提交到远程 QPU。这类似于早期计算时我们提交作业并“租用”共享计算机来完成这些作业的方式。这也类似于将计算从 CPU 转移到 GPU。然而，关键的区别在于
    CPU 和 GPU 共享经典的数字基础，而 QPU 则不然。
- en: 'The following code demonstrates how to build a quantum circuit involving multiple
    qubits. This example demonstrates how to perform “quantum teleportation” where
    information (*not* matter) is transported from one qubit to another without using
    classical digital circuits or network cables:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码演示了如何构建涉及多量子比特的量子电路。这个示例展示了如何执行“量子传输”，其中信息（*而不是* 物质）从一个量子比特传输到另一个量子比特，而不使用经典数字电路或网络电缆：
- en: '[PRE26]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: AWS Center for Quantum Computing
  id: totrans-386
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS 量子计算中心
- en: AWS has partnered with Caltech to build the AWS Center for Quantum Computing,
    scheduled to open in 2021\. This center will focus on developing useful quantum
    applications, error-correcting qubits, quantum programming models, and new quantum
    hardware.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 已经与加州理工学院合作建立 AWS 量子计算中心，预计于 2021 年开放。该中心将专注于开发有用的量子应用、纠错量子比特、量子编程模型和新的量子硬件。
- en: Increase Performance and Reduce Cost
  id: totrans-388
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提高性能并降低成本
- en: What if we were able to double our code speed and reduce our server-pool size
    by half? We could potentially save significant money. What if we could automatically
    detect operational issues in our applications and see the recommended fixes to
    improve availability? Reducing application downtime is another huge cost-saving
    opportunity.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们能够将代码速度提高一倍并将服务器池大小减少一半会怎么样？我们可能会节省大量资金。如果我们能够自动检测应用程序中的操作问题并查看推荐的修复方法来提高可用性，会怎么样？减少应用程序停机时间是另一个巨大的节省成本的机会。
- en: In this section, we introduce the fully managed services Amazon CodeGuru Reviewer,
    Amazon CodeGuru Profiler, and Amazon DevOps Guru. CodeGuru Reviewer and Profiler
    help us improve code performance and reduce our resource requirements, while Amazon
    DevOps Guru helps to detect operational issues and improve application availability.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们介绍了完全托管的服务 Amazon CodeGuru Reviewer、Amazon CodeGuru Profiler 和 Amazon
    DevOps Guru。CodeGuru Reviewer 和 Profiler 帮助我们提高代码性能并减少资源需求，而 Amazon DevOps Guru
    则有助于检测操作问题并提高应用程序的可用性。
- en: Automatic Code Reviews with CodeGuru Reviewer
  id: totrans-391
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 CodeGuru Reviewer 进行自动代码审查
- en: Code reviews are a well-known best practice for software development. The idea
    is that our code is reviewed by a more experienced set of team members to provide
    feedback on code performance, quality, and security. In addition to domain expertise,
    these experienced team members possess tacit knowledge of the team’s coding idioms
    as well as an acute sense of code smell.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 代码审查是软件开发中众所周知的最佳实践。其思想是我们的代码由经验更丰富的团队成员审查，以提供关于代码性能、质量和安全性的反馈。除了领域专业知识外，这些经验丰富的团队成员还具备团队编码习惯的隐性知识和对代码“气味”的敏锐感知。
- en: Sometimes, however, even the most experienced team member will miss subtle performance
    bottlenecks or mishandled exceptions. These reviewers are often focused on domain-specific
    issues such as poor implementation of the domain model or misconfigured service
    integrations. Additionally, reviewers are often limited to a static view of the
    code versus live metrics into the code’s runtime. CodeGuru consists of CodeGuru
    Reviewer for automated code reviews and CodeGuru Profiler to monitor code performance.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有时即使是最经验丰富的团队成员也会忽略微妙的性能瓶颈或处理不当的异常。这些审查者通常专注于特定领域的问题，如领域模型的不良实现或服务集成的配置错误。此外，审查者通常受限于对代码的静态视图，而非代码运行时的实时指标。CodeGuru
    包括 CodeGuru Reviewer 用于自动化代码审查和 CodeGuru Profiler 用于监控代码性能。
- en: CodeGuru Reviewer automates the code-review process and makes suggestions using
    machine learning models trained on millions of lines of code from hundreds of
    thousands of Amazon’s internal code bases as well as 10,000+ open source projects
    on GitHub.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: CodeGuru Reviewer 自动化代码审查过程，并使用机器学习模型进行建议，这些模型在数百万行亚马逊内部代码库和 10,000+ GitHub
    开源项目的基础上进行了训练。
- en: We simply point CodeGuru to our source code repository in a secure and private
    manner—CodeGuru will start making suggestions. CodeGuru analyzes all pull requests
    on our source code repositories and automatically flags critical defects such
    as credential leaks, resource leaks, concurrency race conditions, and inefficient
    use of AWS resources. It suggests changes to specific lines of code to remediate
    the defects, as shown in [Figure 2-19](#codeguru_reviewer_analyzes_our_source_c).
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需以安全和私密的方式将 CodeGuru 指向我们的源代码库即可 —— CodeGuru 将开始提出建议。CodeGuru 分析我们源代码库中的所有拉取请求，并自动标记关键缺陷，如凭证泄漏、资源泄漏、并发竞争条件以及对
    AWS 资源的低效使用。它建议对特定代码行进行更改，以纠正这些缺陷，如 [图 2-19](#codeguru_reviewer_analyzes_our_source_c)
    所示。
- en: '![](assets/dsaw_0219.png)'
  id: totrans-396
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0219.png)'
- en: Figure 2-19\. CodeGuru Reviewer analyzes our source code and adds suggestions
    to improve performance and reduce cost.
  id: totrans-397
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-19\. CodeGuru Reviewer 分析我们的源代码，并添加建议以改善性能并降低成本。
- en: In this case, the original code from a Lambda function was creating a new DynamoDB
    client on every invocation instead of creating the client once and caching it.
    Without this change, we will waste unnecessary compute cycles and memory registers
    as we continuously re-create the same DynamoDB client object on every invocation.
    With this change, our Lambda functions can handle more requests per second, which
    results in fewer resources and lower cost.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，Lambda 函数的原始代码在每次调用时都会创建一个新的 DynamoDB 客户端，而不是创建一次客户端并对其进行缓存。如果不进行这些更改，我们将浪费不必要的计算周期和内存寄存器，因为我们会不断重新创建相同的
    DynamoDB 客户端对象。通过这种改变，我们的 Lambda 函数可以处理更多的请求每秒，这导致资源更少，成本更低。
- en: CodeGuru Reviewer checks for Python and Java best practices, including connection
    pooling and exception handling. Reviewer includes Security Detector to detect
    security issues such as unsanitized arguments passed to OS-level Python subprocess
    calls. CodeGuru Reviewer also identifies code smells, reduces technical debt,
    and improves codebase maintainability.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: CodeGuru Reviewer 检查 Python 和 Java 的最佳实践，包括连接池和异常处理。Reviewer 包括 Security Detector
    来检测诸如未经过消毒的参数传递到操作系统级 Python 子进程调用等安全问题。CodeGuru Reviewer 还识别代码异味，减少技术债务，并提高代码库的可维护性。
- en: Improve Application Performance with CodeGuru Profiler
  id: totrans-400
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过 CodeGuru Profiler 改进应用程序性能
- en: CodeGuru Profiler can detect bottlenecks in our code at runtime by analyzing
    the application runtime profile, flagging the most expensive line of code, and
    providing intelligent recommendations. Profiler creates visualizations such as
    the flame graph in [Figure 2-20](#flame_graph_generated_by_amazon_codegur) to
    identify where we should spend our time to optimize performance and save the most
    money.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: CodeGuru Profiler 可以在运行时分析应用程序的运行时配置文件，检测代码中的瓶颈，并提供智能建议。Profiler 创建可视化图表，如 [图 2-20](#flame_graph_generated_by_amazon_codegur)
    中的火焰图，以确定我们应该优化性能并节省最多资金的位置。
- en: '![](assets/dsaw_0220.png)'
  id: totrans-402
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dsaw_0220.png)'
- en: Figure 2-20\. Flame graph generated by CodeGuru Profiler to highlight performance
    bottlenecks in our code.
  id: totrans-403
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-20\. CodeGuru Profiler 生成的火焰图，突出显示我们代码中的性能瓶颈。
- en: The flame graph shows the call stack in human-readable form with the exact function
    names. When analyzing flame graphs, we should dive deep into any plateaus that
    we find. Plateaus often indicate that a resource is stalled waiting for network
    or disk I/O. Ideally, our flame graph will show a lot of narrow peaks and not
    a lot of plateaus.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 火焰图以人类可读的形式显示调用堆栈及其确切的函数名称。在分析火焰图时，我们应该深入研究发现的任何平台。平台通常表明某个资源因等待网络或磁盘I/O而停滞不前。理想情况下，我们的火焰图将显示许多窄峰和少量平台。
- en: Improve Application Availability with DevOps Guru
  id: totrans-405
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过DevOps Guru提高应用程序的可用性
- en: Amazon DevOps Guru is an ML-powered operations service that automatically detects
    operational issues in applications and recommends fixes. DevOps Guru looks at
    application metrics, logs, and events to identify any behavior that deviates from
    normal operating patterns, such as increased response latencies, elevated error
    rates, and excessive resource utilization. When such a pattern is recognized,
    DevOps Guru sends an alert together with a summary of related anomalies, the potential
    root cause, and a possible resolution.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon DevOps Guru是一项由ML驱动的运营服务，可以自动检测应用程序中的操作问题并建议修复措施。DevOps Guru查看应用程序的指标、日志和事件，以识别任何偏离正常操作模式的行为，例如增加的响应延迟、升高的错误率和过度的资源利用。一旦识别出这样的模式，DevOps
    Guru将发送警报，并附上相关异常的摘要、潜在的根本原因和可能的解决方案。
- en: Summary
  id: totrans-407
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have shown many different use cases that can be solved with
    various AWS AI and machine learning services out of the box with little or no
    code. Whether we are application developers and don’t know much about machine
    learning or experienced data scientists who want to focus on the difficult machine
    learning problems, the managed AI and machine learning services by Amazon are
    worth exploring.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们展示了许多可以通过各种AWS AI和机器学习服务解决的用例，无需或几乎不需要编写代码。无论我们是应用开发人员并且对机器学习知之甚少，还是经验丰富的数据科学家希望专注于复杂的机器学习问题，亚马逊提供的托管AI和机器学习服务都值得探索。
- en: We can easily enrich our applications with ready-to-use AI services, whether
    our business use case requires us to bring machine learning to the edge or we
    are just at the beginning of our AI/ML journey and want to find some fun educational
    ways to get started with computer vision, reinforcement learning, or GANs.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以轻松地为我们的应用程序增添现成的AI服务，无论我们的业务用例是否需要将机器学习引入边缘，还是我们刚刚开始AI/ML之旅，希望找到一些有趣的教育方式来开始计算机视觉、强化学习或GANs。
- en: We’ve also shown some examples of how to put the high-level AI services to work,
    including Amazon Personalize for recommendations and Forecast for forecast demand.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还展示了如何利用高级AI服务，包括Amazon Personalize提供推荐和Forecast预测需求。
- en: We showed how machine learning powers a lot of existing AWS services, including
    predictive Amazon EC2 auto-scaling and warm-pooling. We also explored how to detect
    and prevent sensitive data leaks using Macie and prevent fraud using Amazon Fraud
    Detector. We covered how to improve the customer support experience with Amazon
    Contact Lens for Amazon Connect, Comprehend, Kendra, and Lex. We also described
    how we can automate source code reviews and identify performance and cost benefits
    using CodeGuru Reviewer, CodeGuru Profiler, and DevOps Guru.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 我们展示了机器学习如何驱动许多现有的AWS服务，包括预测性Amazon EC2自动扩展和暖池技术。我们还探讨了如何使用Macie检测和防止敏感数据泄漏，并利用Amazon
    Fraud Detector防止欺诈行为。我们介绍了如何通过Amazon Contact Lens for Amazon Connect、Comprehend、Kendra和Lex来改善客户支持体验。我们还描述了如何利用CodeGuru
    Reviewer、CodeGuru Profiler和DevOps Guru自动化源代码审查，并识别性能和成本效益。
- en: In [Chapter 3](ch03.html#automated_machine_learnin), we will discuss the concept
    of automated machine learning. We will show how to build predictive models in
    just a few clicks with Amazon SageMaker Autopilot and Amazon Comprehend.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第三章](ch03.html#automated_machine_learnin)中，我们将讨论自动化机器学习的概念。我们将展示如何仅需几次点击即可使用Amazon
    SageMaker Autopilot和Amazon Comprehend构建预测模型。
