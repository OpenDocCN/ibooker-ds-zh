- en: Chapter 6\. Predictive Analytics in R and Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章。R 和 Python 中的预测分析
- en: The team at Big Bonanza Warehouse is running into some problems with sales forecasting,
    and the VP of Sales has turned to Duane, who works as a Sales and Distribution
    Analyst, for some help. About once per quarter they gather their data and send
    it to an outside company that performs some magic on it. The result is a forecast
    of all their products for the upcoming quarters, but they’ve found that the forecast
    being generated for them is too generic (based on quarters) and often woefully
    inaccurate. Couldn’t they get something that would help them understand what sales
    might be next week? To put it succinctly, they want a forecast of sales of their
    top-selling products by week.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Big Bonanza Warehouse 的团队在销售预测方面遇到了一些问题，销售副总裁转向作为销售和分销分析师工作的 Duane 寻求帮助。每季度他们大约收集一次数据并将其发送给外部公司进行处理。结果是预测他们未来几个季度所有产品的销售，但他们发现为他们生成的预测太过一般化（基于季度），并且经常是极不准确的。他们是否可以得到一些帮助他们了解下周销售可能是什么的东西？简言之，他们想要对畅销产品的销售进行每周预测。
- en: Duane has some ideas. Having worked with his company’s data scientists Greg
    and Paul, he knows a little bit about data science. Sales of a product over a
    period is a time-series^([1](ch06.html#ch06fn1)) problem. They have enough historical
    data to attempt to look for patterns. This is not pure forecasting, but pattern
    detection. It is something that the sales team could use, rather than their gut
    feelings. Duane decides to use a bit of *predictive analytics*. With the right
    set of R or Python tools and some up-front knowledge of predictive analytics,
    Duane won’t need to spend months of time paying expensive consultants to build
    massive data lakes. He can get his hands dirty and find answers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Duane 有一些想法。他曾与公司的数据科学家 Greg 和 Paul 合作过，对数据科学有一些了解。一段时间内产品的销售是一个时间序列^([1](ch06.html#ch06fn1))问题。他们有足够的历史数据来尝试寻找模式。这不是纯粹的预测，而是模式检测。这是销售团队可以使用的东西，而不是他们的直觉感觉。Duane
    决定使用一些*预测分析*。借助正确的 R 或 Python 工具集和一些预测分析的前期知识，Duane 不需要花几个月时间支付昂贵的顾问费用来建立庞大的数据湖。他可以动手找到答案。
- en: There are many slippery terms in data science (including *data science* itself!),
    but *predictive analytics* owns a special share of un-graspability. You may have
    heard of the now infamous “prediction” tale. Retail giant Target predicted a teenager’s
    pregnancy before her father even knew. In case you haven’t heard the story...
    Target started sending baby coupons to a teenage girl. Her father complained that
    they were encouraging her daughter to get pregnant. The reality was, the girl
    was already pregnant. Did Target *predict* this teenager’s pregnancy? The answer
    is no. This is not a prediction; this is inference or classification. The features
    they use are the shopping behaviors of their customers. The buying habits of the
    teenage girl led the classification algorithm to put her in the category “pregnant.”
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学中有许多术语很模糊（包括*数据科学*本身！），但*预测分析*占据了特殊的不可理解性份额。您可能已经听说了那个如今臭名昭著的“预测”故事。零售巨头
    Target 在父亲甚至不知道之前预测了一个少女的怀孕。如果您还没有听说这个故事…… Target 开始向一个少女发送婴儿优惠券。她的父亲抱怨说他们在鼓励他的女儿怀孕。事实是，这个女孩已经怀孕了。Target
    是否*预测*了这个少女的怀孕？答案是否定的。这不是预测；这是推断或分类。他们使用的特征是客户的购物行为。这个少女的购买习惯导致分类算法将她归类为“怀孕”类别。
- en: 'The point of this story is to highlight two common uses of the word *prediction*.
    One of those predictions is statistical inference and the other is forecasting.
    Let’s be honest here, you can debate these definitions ad nauseum. For our purposes,
    we will draw a line in the sand between forecasting and inference. Prediction
    for us will be forecasting.^([2](ch06.html#ch06fn2)) Let’s make sure we have a
    common understanding of the term: *prediction is the act of predicting the future*.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这个故事的要点是突出显示“预测”一词的两种常见用法。其中一种预测是统计推断，另一种是预测。让我们在这里诚实一点，您可以对这些定义进行无休止的辩论。对于我们的目的，我们将在预测和推断之间划清界限。对我们来说，预测将是预测。^([2](ch06.html#ch06fn2))
    让我们确保我们对术语的理解是一致的：*预测是预测未来的行为*。
- en: The litmus test for determining if the analysis falls into prediction is to
    ask, “Has the event occurred?” If it has, then, from our definition, it is likely
    something other than prediction.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 确定分析是否属于预测的试金石是询问：“事件是否已发生？”如果是，那么根据我们的定义，它很可能不是预测。
- en: 'Below are some examples of common topics and exercises in data science learning
    materials that are often mislabeled as predictions:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是数据科学学习材料中常见的被误标记为预测的主题和练习的一些示例：
- en: Predicting Boston housing value
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 预测波士顿房价
- en: This is a classification/inference problem based on the features of a given
    property such as location, square footage, number of bedrooms, etc.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个基于给定物业的特征（如位置、面积、卧室数量等）的分类/推理问题。
- en: Predicting the survival rate on the *Titanic*
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 预测 *泰坦尼克号* 的生存率
- en: This is another classification/inference problem based on features such as sex,
    cabin number (location), number of family members, embarking point, and others.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个基于性别、客舱号码（位置）、家庭成员数量、出发点等特征的分类/推理问题。
- en: Predicting fraudulent credit card behavior
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 预测欺诈信用卡行为
- en: This is an anomaly detection problem determining if the behavior of the card
    holder falls within tolerance. It’d be more descriptive to call it “detecting
    fraudulent credit card behavior.”
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个异常检测问题，确定持卡人的行为是否在容忍范围内。更具描述性的称呼可能是“检测欺诈信用卡行为”。
- en: Predicting why and when a patient will readmit
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 预测为什么和何时患者会再次收治
- en: This sounds very close to prediction. It is another classification/inference
    problem based on patients that have already readmitted. If their features match
    the features of a patients not yet readmitted, there is a likelihood they will
    readmit.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这听起来非常接近预测。这是另一个基于已被再次收治的患者的特征进行分类/推理的问题。如果他们的特征与尚未再次收治的患者的特征匹配，他们可能会再次收治。
- en: 'Some examples of topics and exercises that are properly labeled as predictions:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一些被正确标记为预测的主题和练习的示例：
- en: Predicting Boston housing value *next* year
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 预测波士顿房价 *明年*
- en: Next year’s house values is a classification of the current value of the home
    based on certain features. This classification merges with other salient data
    such as GDP to make a future prediction.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 明年的房屋价值是基于某些特征对当前房屋价值的分类。这一分类与其他显著数据（如 GDP）融合，以进行未来预测。
- en: Predicting future stock value
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 预测未来股票价值
- en: You figure this one out...let us know. Many different sources of data contribute
    to predicting a stock’s performance. A company’s quarterly performance reports
    in EDGAR^([3](ch06.html#ch06fn3)) is a good starting point.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你来解决这个问题……告诉我们。许多不同的数据源有助于预测股票的表现。公司在 EDGAR^([3](ch06.html#ch06fn3)) 的季度业绩报告是一个很好的起点。
- en: Predicting Sales in R
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预测销售在 R 中
- en: In this chapter, we will walk through Duane’s exercise in predictive analytics
    and try to do sales order predictions. We will follow the process in [Figure 6-1](#flow_for_data_analysis_and_prediction)
    for this mission.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将详细介绍 Duane 在预测分析中的练习，并尝试进行销售订单预测。我们将按照 [图 6-1](#flow_for_data_analysis_and_prediction)
    中的流程进行此任务。
- en: '![Flow for data analysis and prediction](assets/pdss_0601.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![数据分析与预测流程](assets/pdss_0601.png)'
- en: Figure 6-1\. Flow for data analysis and prediction
  id: totrans-23
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-1\. 数据分析与预测流程
- en: 'Step 1: Identify Data'
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '步骤 1: 确定数据'
- en: Not ready to completely fly on his own, Duane approached the data science team
    to obtain better metrics for predicting sales in the near and semi-near future—the
    upcoming weeks, months, quarters, and as far out as one year. Prediction accuracy
    becomes more volatile the further out we get. Quite simply, it is much easier
    to predict tomorrow’s sales because we know yesterday’s. However, it is not the
    same to say we can predict next year’s sales because we knew last year’s. What
    we do know is that we will have sales data for a list of products over time.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 还不准备完全独立行动，Duane 向数据科学团队寻求更好的指标，以预测未来销售——接下来的几周、几个月、几个季度，以及一年内。随着预测准确度随着预测的时间越远而变得更加不稳定。简单地说，预测明天的销售要比预测明年的销售容易得多，因为我们知道昨天的销售情况。然而，并不是说我们可以预测明年的销售，因为我们知道去年的情况。我们知道的是，我们将会有一系列产品的销售数据。
- en: 'Step 2: Gather Data'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '步骤 2: 收集数据'
- en: Our source of data is SAP. We will extract the data using the same method used
    in [Chapter 4](ch04.html#exploratory_data_analysis_with_r). Using an ABAP QuickViewer
    Query, we gather simple sales data from the VBAP and VBAK tables. We will take
    only the created date ERDAT from VBAK. We will take MATNR (material) and KWMENG
    (quantity sold) from table VBAP.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数据来源是 SAP。我们将使用与 [第 4 章](ch04.html#exploratory_data_analysis_with_r) 中相同的方法提取数据。使用
    ABAP QuickViewer 查询，我们从 VBAP 和 VBAK 表中收集简单的销售数据。我们只从 VBAK 中取 ERDAT（创建日期）。我们从 VBAP
    表中取 MATNR（物料）和 KWMENG（销售数量）。
- en: 'Step 3: Explore Data'
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '步骤 3: 探索数据'
- en: 'Once we have exported the data as a CSV file from SAP we will read it into
    R to take a look at it:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 从SAP导出数据为CSV文件后，我们将其读入R进行查看：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let’s take a look at the first 10 rows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看前10行：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We see two things right away. The rows came in under column X, we don’t need
    that. Also, the date field came in oddly, it looks like UNIX time and we need
    to convert it. When we look into it further we see it is indeed UNIX, but it is
    padded on the end with three unnecessary zeros. Let’s correct these before moving
    on:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们立即看到两件事。行进来时在列X下，我们不需要它。此外，日期字段看起来很奇怪，看起来像UNIX时间，我们需要进行转换。进一步查看后，我们发现它确实是UNIX时间，但末尾多余的三个零需要去掉。让我们在继续之前先纠正这些问题：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now that we’ve done some manipulation let’s take a look at the structure of
    our data. Use the function `str()` to view the structure of the data:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了一些操作，让我们来看看我们数据的结构。使用函数`str()`来查看数据的结构：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We see that we have a dataframe with 2,359 observations of three variables.
    Let’s find the distribution of the materials in the dataframe. Use the following
    command from the `ggplot2` library (this renders in [Figure 6-2](#the_distribution_of_materials_in_our_sal)).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到我们有一个包含三个变量的数据框，共有2,359个观测。让我们来找出数据框中材料的分布情况。使用`ggplot2`库中的以下命令（这会在[图 6-2](#the_distribution_of_materials_in_our_sal)中呈现）：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![The distribution of materials in our sales data.](assets/pdss_0602.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![我们销售数据中材料的分布。](assets/pdss_0602.png)'
- en: Figure 6-2\. The distribution of materials in our sales data
  id: totrans-40
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-2\. 我们销售数据中材料的分布
- en: We have the data in a format we’d like. Now it is time to plot and explore the
    data.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经有了我们喜欢的数据格式。现在是时候绘制和探索数据了。
- en: 'Step 4: Model Data'
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第四步：建模数据
- en: 'We will use the [`ggplot2`](https://ggplot2.tidyverse.org/), [`dplyr`](http://bit.ly/2lRCudc),
    and [`scales`](http://bit.ly/2lRCudc) libraries from R to model our data. These
    are some of the most useful and versatile packages in the R ecosystem:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用R中的[`ggplot2`](https://ggplot2.tidyverse.org/)、[`dplyr`](http://bit.ly/2lRCudc)和[`scales`](http://bit.ly/2lRCudc)库来建模我们的数据。这些是R生态系统中最有用和多功能的包之一：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: First let’s do some up-front work. We want our chart to have nice numbers, so
    we use the `format_format` function from `scales` to define this for us. The effect
    of this function is to simply format our numbers such that the decimal is a period,
    the thousands break is a comma, and scientific notation is not used.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们进行一些前期工作。我们希望我们的图表有漂亮的数字，所以我们使用来自`scales`的`format_format`函数来定义这些内容。该函数的效果是简单地将我们的数字格式化，使小数点为句点，千位数为逗号，并且不使用科学计数法。
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Let’s simply plot the sales of the materials over time:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简单地绘制材料随时间的销售情况：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In human-speak this R code says, “Take the sales dataframe and send it (“%>%”)
    to `ggplot`. Make the x-axis the `ReqDeliveryDate` and the y-axis the `DailySales`.
    Use points with a color palette of `darchorchid4`. Then scale the y to have the
    `point` format. Finally, label everything nicely and give it a basic theme and
    size.” The results are shown in [Figure 6-3](#sales_for_all_materials_over_time).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 用人类语言说，这段R代码的意思是：“取销售数据框并将其发送到`ggplot`。将x轴设为`ReqDeliveryDate`，y轴设为`DailySales`。使用`darchorchid4`色调的点。然后将y轴格式化为`point`格式。最后，好好标注一切并给它一个基本的主题和大小。”
    结果显示在[图 6-3](#sales_for_all_materials_over_time)中。
- en: '![Sales for all materials over time.](assets/pdss_0603.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![所有材料随时间的销售情况。](assets/pdss_0603.png)'
- en: Figure 6-3\. Sales for all materials over time
  id: totrans-51
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-3\. 所有材料随时间的销售情况
- en: This gives us an idea of the distribution of sales over time, but it mixes the
    materials and points aren’t the best for plotting a time series. Let’s break out
    the materials and choose line instead of point. We see the results in [Figure 6-4](#sales_for_materials_broken_out_by_color).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这给了我们关于销售随时间的分布的想法，但它混合了材料，并且点并不适合绘制时间序列。让我们分开材料，并选择线而不是点。我们在[图 6-4](#sales_for_materials_broken_out_by_color)中看到了结果。
- en: '![Sales for materials broken out by color over time.](assets/pdss_0604.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![按颜色分开的材料随时间的销售情况。](assets/pdss_0604.png)'
- en: Figure 6-4\. Sales for materials broken out by color over time
  id: totrans-54
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-4\. 按颜色分开的材料随时间的销售情况
- en: 'This is better, but the materials are still too mixed to be clear. Perhaps
    we need to break them out completely. `ggplot2`’s `facet_wrap` does this nicely.
    The following code produces the chart in [Figure 6-5](#sales_of_material_over_time_broken_up_so):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做更好了，但材料仍然混杂在一起不够清晰。也许我们需要完全分开它们。`ggplot2`的`facet_wrap`可以很好地完成这项任务。以下代码生成了[图 6-5](#sales_of_material_over_time_broken_up_so)中的图表：
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Sales of material over time broken up so we can see each plot separately.](assets/pdss_0605.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![销售材料随时间变化的图表，以便我们可以分开查看每个绘图](assets/pdss_0605.png)'
- en: Figure 6-5\. Sales of material over time broken up so we can see each plot separately
  id: totrans-58
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6-5. 销售材料随时间变化的分段图表
- en: We can more easily see now the distributions of each of the materials. We can
    quickly spot that two of these materials only recently began to sell.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以更轻松地看到每种材料的分布情况。我们可以快速发现其中两种材料最近才开始销售。
- en: Let’s focus on just one material, 1234\. We will add a simple linear model using
    the `geom_smooth` function. We only have one material here, but we leave in `facet_wrap`
    because it makes such a nice header (the results are shown in [Figure 6-6](#sales_over_time_with_a_simple_linear_map)).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们专注于一个材料，1234。我们将使用`geom_smooth`函数添加一个简单线性模型。这里我们只有一个材料，但我们保留`facet_wrap`是因为它使得标题非常漂亮（结果显示在[图6-6](#sales_over_time_with_a_simple_linear_map)中）：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Sales over time with a simple linear mapping](assets/pdss_0606.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![简单线性映射下的销售随时间变化](assets/pdss_0606.png)'
- en: Figure 6-6\. Sales over time with a simple linear mapping
  id: totrans-63
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6-6. 简单线性映射下的销售随时间变化
- en: We are curious about how these sales by year match up against one another. The
    line chart makes it difficult to see if overall sales by week are greater in 2015
    than they are in 2018.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想知道这些年度销售如何相互匹配。线性图表使得难以判断2015年的整体周销量是否高于2018年。
- en: Let’s sit back and approach this in an intuitive way. There are many important
    concepts in R programming, but two of the most influential are *Tidy Data* and
    *Split-Apply-Combine*.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们放松心态，以直觉的方式来解决问题。在R编程中有许多重要概念，但其中两个最具影响力的是*Tidy Data*和*Split-Apply-Combine*。
- en: 'Understanding these concepts will help you think through problems more easily.
    We will simply split our `sales` dataframe into one that we can more easily plot
    with. First we will copy our sales data into a subsetted dataframe for just our
    material:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 理解这些概念将帮助您更轻松地思考问题。我们将简单地将我们的`sales`数据框分割成一个更容易绘制的子数据框。首先，我们将我们的销售数据复制到一个仅包含我们材料的子数据框中：
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Secondly, we need to make a week variable and a year variable from our date
    variable. This is easy in R with the base function `strftime`:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们需要从日期变量中创建一个周变量和一个年变量。在R中，使用基本函数`strftime`很容易实现这一点：
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We no longer need the `ReqDeliveryDate` or the `Material`:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不再需要`ReqDeliveryDate`或`Material`：
- en: '[PRE12]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We also want to aggregate our weeks into one bucket. We may have had multiple
    sales for a given week in our `sales` dataframe, which we want in only one week
    in our `sales_week` dataframe:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还想将我们的周聚合到一个桶中。在我们的`sales`数据框中，可能会有给定周的多次销售，我们希望在`sales_week`数据框中只保留一个周的销售：
- en: '[PRE13]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If we look at our dataframe now it has these columns:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在查看我们的数据框，它具有以下列：
- en: '[PRE14]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now we can use `ggplot2` again to see what the sales year over year look like
    when the weeks are compared (the results are in [Figure 6-7](#area_chart_of_sales_by_year)):'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以再次使用`ggplot2`来查看按年度比较周销量的情况（结果在[图6-7](#area_chart_of_sales_by_year)中显示）：
- en: '[PRE15]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Area chart of sales by year](assets/pdss_0607.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![按年度销售面积图](assets/pdss_0607.png)'
- en: Figure 6-7\. Area chart of sales by year
  id: totrans-79
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图6-7. 按年度销售面积图
- en: This chart shows us something that we couldn’t see clearly before. The spikes
    and valleys of each year’s sales are strongly correlated. Such a strong correlation
    between the years would lead us to believe we can model based on that pattern.
    2018 did not have a full recorded year of sales so that chart stops on week 29\.
    We also see a distinct uptick in sales between weeks 35 and 40 and 4 and 9.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图告诉我们一些以前无法清晰看到的内容。每年销售量的峰值和谷底之间有着强烈的相关性。这种年度之间的强相关性让我们相信可以根据这种模式进行建模。2018年没有完整记录的年度销售，所以该图表在第29周停止。我们还看到在第35至40周和第4至9周之间销售明显上升。
- en: 'To move further in our exploration we need to visit a base object in R, the
    `ts` (time-series) object. It is an array of values over time periods. What we
    have been working with thus far is a dataframe. It is easy to convert a `data.frame`
    to a `ts` object in R. This function takes the data itself as its first argument
    and then has a series of other arguments we will cover now. Type `**args(ts)**`
    into the console to see a list of arguments for the base `ts` function:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要进一步探索，我们需要访问R中的一个基本对象，即`ts`（时间序列）对象。它是一组随时间变化的数值数组。到目前为止，我们一直在使用的是数据框（dataframe）。在R中，将`data.frame`轻松转换为`ts`对象。此函数以数据本身作为第一个参数，然后是一系列其他参数，我们现在将逐一介绍。在控制台中键入`**args(ts)**`以查看基本`ts`函数的参数列表：
- en: '[PRE16]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The arguments that we will use are:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的参数是：
- en: The `start` and `end` arguments define the starting date and ending date of
    the `ts` object.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`start`和`end`参数定义了`ts`对象的起始日期和结束日期。'
- en: The `frequency` argument specifies the number of observations per unit of time.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`frequency`参数指定了单位时间内的观察次数。'
- en: In order to do this more easily and clearly we need to reformat our dataframe.
    This will lead to a nice clean `ts` object.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更轻松、更清晰地完成这一任务，我们需要重新格式化我们的数据框架。这将导致一个整洁美观的`ts`对象。
- en: 'This time we will do an analysis by month. Just like we did with the week-by-week
    analysis, we will subset the `sales` dataframe. However, this time we will rename
    the columns so they are easier to use and remember:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次我们将按月进行分析。就像我们按周进行分析一样，我们将子集化`sales`数据框架。不过，这一次我们会重新命名列，以便更容易使用和记忆：
- en: '[PRE17]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Also, `ts` objects do not like gaps. If you are going to analyze data by days,
    `ts` objects want every day represented...even if there is no data for that day.
    If you are going to analyze data by minutes, likewise every minute has to have
    a presence. For instance, if there were no sales of this material for a particular
    day there will be a gap in the date sequence. We want to fill all of these gaps
    with 0 because that is how much was actually sold on that day. First we create
    a new dataframe with all the possible dates starting at our first day of our `sales_month`
    and ending with the last:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，`ts`对象不喜欢间隙。如果你要按天分析数据，`ts`对象希望每天都有数据……即使某天没有销售数据。如果按分钟分析数据，同样每分钟都必须有数据。例如，如果某天没有销售某种材料，日期序列中就会出现间隙。我们想用0填补所有这些间隙，因为那天实际销售的数量就是0。首先，我们创建一个新的数据框架，包含从`sales_month`的第一天开始到最后一天的所有可能日期：
- en: '[PRE18]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then we want to merge this dataframe with `sales_month`:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们想将这个数据框架与`sales_month`合并：
- en: '[PRE19]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Let’s take a look at our data:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看我们的数据：
- en: '[PRE20]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'We notice right away that we have NAs in our data. This is for the days when
    there were no sales. Let’s replace that with zeros:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们马上注意到我们的数据中有缺失值（NA）。这是在没有销售的那些天。让我们用0替换它们：
- en: '[PRE21]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now it is easy to create a `ts` object. Frankly, `ts` objects in R have always
    been a bit of a quandary. Follow our advice—take the time to nicely and simply
    format your dataframe and you’ll breeze through the `ts` object part:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在创建一个`ts`对象就很容易了。坦率地说，在R中，`ts`对象一直是一个难题。听从我们的建议——花时间对数据框架进行清晰简洁的格式化，你将轻松通过`ts`对象部分：
- en: '[PRE22]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now that we have a nicely formatted `ts` object, we can do some simple charting
    on it:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个格式良好的`ts`对象，可以在其上做一些简单的图表：
- en: '[PRE23]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Simple plot of ts object](assets/pdss_0608.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![ts对象的简单图](assets/pdss_0608.png)'
- en: Figure 6-8\. Simple plot of ts object
  id: totrans-102
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-8\. `ts`对象的简单图
- en: 'We can also see monthly sales and averages easily. Looking at the average sales
    across months in [Figure 6-9](#month_plot_of_ts_object) we can see that the overall
    sales amount is relatively equal despite the peaks and valleys:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以轻松地查看每月的销售额和平均销售额。通过观察[图 6-9](#month_plot_of_ts_object)，我们可以看到尽管有高峰和低谷，整体销售金额相对平均。
- en: '[PRE24]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![Month plot of ts object](assets/pdss_0609.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![ts对象的月度图](assets/pdss_0609.png)'
- en: Figure 6-9\. Month plot of ts object
  id: totrans-106
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-9\. `ts`对象的月度图
- en: Plots for prediction
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 预测图表
- en: 'There are three types of simple plots that we typically want to use in predictive
    analytics: mean, naive, and drift. Let’s examine each of these.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在预测分析中，我们通常要使用三种简单图形：均值、朴素和漂移。让我们分别来看看这些图形。
- en: 'The first plot is a simple prediction of the mean into the future. This prediction
    assumes that the average of past sales will continue to be the average. To make
    these charts we will need the `forecast`^([4](ch06.html#ch06fn7)) library. We
    see the results of the mean forecast in [Figure 6-10](#simple_mean_prediction_with_confidence_i):'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个图是对未来均值的简单预测。这一预测假设过去销售的平均值将继续保持。要创建这些图表，我们需要使用`forecast`^([4](ch06.html#ch06fn7))库。我们在[图 6-10](#simple_mean_prediction_with_confidence_i)中看到了均值预测的结果。
- en: '[PRE25]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: You may wonder what the gray rectangular area of the chart (at far right) is
    telling you. The gray area is the confidence interval, which by default is 95%.
    The line in the middle of the gray area indicates where the prediction should
    fall, the gray area says, “I am 95% confident that the value, if not on the line,
    is within the grey area.” As may be assumed, a 95% confidence interval is pretty
    high so the area must therefore be large enough to ensure this.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会想知道图表（最右侧的灰色矩形区域）告诉您什么。灰色区域是置信区间，默认情况下为95%。灰色区域中间的线表示预测应该落在哪里，灰色区域表示：“我有95%的信心，如果值不在线上，它会在灰色区域内。”可以假设，95%的置信区间相当高，因此该区域必须足够大以确保这一点。
- en: '![Simple mean prediction with confidence intervals](assets/pdss_0610.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![简单的均值预测及其置信区间](assets/pdss_0610.png)'
- en: Figure 6-10\. Simple mean prediction with confidence intervals
  id: totrans-113
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-10\. 简单的均值预测及其置信区间
- en: 'The naive assumption is that the sales will be the same as the last observation
    as seen in [Figure 6-11](#simple_naive_prediction_with_confidence):'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 天真的假设是销售将与最后一次观察相同，如[图 6-11](#simple_naive_prediction_with_confidence)所示：
- en: '[PRE26]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![Simple naive prediction with confidence intervals](assets/pdss_0611.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![简单的天真预测及其置信区间](assets/pdss_0611.png)'
- en: Figure 6-11\. Simple naive prediction with confidence intervals
  id: totrans-117
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-11\. 简单的天真预测及其置信区间
- en: 'Finally, we can view the drift of the chart easily with the `forecast` library.
    Drift starts with the naive beginning, but then is adjusted positively or negatively
    based on the average overall change in the data. We see the results in [Figure 6-12](#simple_drift_prediction_with_confidence).
    Notice the ever so slight downward trend:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以很容易地通过`forecast`库查看图表的漂移。漂移从天真的起点开始，但然后根据数据的平均整体变化进行正向或负向调整。我们在[图 6-12](#simple_drift_prediction_with_confidence)中看到了结果。请注意，这里有一个细微的向下趋势：
- en: '[PRE27]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![Simple drift prediction with confidence intervals](assets/pdss_0612.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![简单的漂移预测及其置信区间](assets/pdss_0612.png)'
- en: Figure 6-12\. Simple drift prediction with confidence intervals
  id: totrans-121
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-12\. 简单的漂移预测及其置信区间
- en: Clearly these plots are not going to be satisfying to the VP of sales, but it
    is the start of our prediction process and we will refine this process until we
    have results we like.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，这些图表并不能令销售副总裁满意，但这只是我们预测过程的开始，我们将继续改进这个过程，直到我们获得满意的结果。
- en: 'Step 5: Evaluate Model'
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第五步：评估模型
- en: First, let’s analyze the accuracy of the three plots that we just created. With
    the `forecast` package this is easy, but before we do that we need to discuss
    how accuracy can be measured. There are six ways we will analyze accuracy, and
    [Table 6-1](#Table_caption_goes_here-id0001) illustrates the most commonly used
    measurements.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们分析刚刚创建的三个图的准确性。使用`forecast`包很容易做到这一点，但在此之前，我们需要讨论如何衡量准确性。我们将分析六种方式来分析准确性，而[表 6-1](#Table_caption_goes_here-id0001)展示了最常用的测量方法。
- en: Table 6-1\. Measures of acccuracy
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6-1\. 准确性测量
- en: '| Measurement | Description | Notation |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| 测量 | 描述 | 符号 |'
- en: '| --- | --- | --- |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| ME | Mean error: the average of the total number of errors in predictions.
    The positive errors have the potential of wiping out the negatives. | mean(e[i])
    |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| ME | 平均误差：预测误差的平均数。正误差有可能抵消负误差。 | mean(e[i]) |'
- en: '| MAE | Mean absolute error: measurement of the mean of the errors in predictions.
    This does not take into consideration whether it is over or under…just the magnitude
    of the error. | mean(&#124;e[i]&#124;) |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| MAE | 平均绝对误差：预测误差的平均值。这不考虑误差是过高还是过低，只考虑误差的大小。 | mean(&#124;e[i]&#124;) |'
- en: '| RMSE | Root mean squared error: same as the MAE but errors are squared before
    the square root of the total is taken. This results in large errors having more
    value than small errors. Consider this an improvement over MAE if you want to
    strongly penalize large errors. | SQRT(mean(e²[i])) |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| RMSE | 均方根误差：与MAE相同，但在总和开平方之前对误差进行了平方。这样做的结果是大误差比小误差更有价值。如果您希望严重惩罚大误差，可以考虑此改进。
    | SQRT(mean(e²[i])) |'
- en: '| MPE | Mean percentage error: the mean of the percentage of the errors. |
    mean((e[i] / actual[i]) *100) |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| MPE | 平均百分比误差：误差百分比的平均值。 | mean((e[i] / actual[i]) *100) |'
- en: '| MAPE | Mean absolute percentage error: the mean of the absolute percentage
    of the errors. | mean((&#124;e[i] / actual[i]) *100&#124;) |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| MAPE | 平均绝对百分比误差：误差的绝对百分比的平均值。 | mean((&#124;e[i] / actual[i]) *100&#124;)
    |'
- en: '| MASE | Mean absolute scaled error: the mean of the absolute values of the
    *scaled^([a](ch06.html#ch06fn8)) (q)* errors. Scaling is an alternative to percentage
    errors. A MASE of > 1 indicates the prediction is worse than the naive prediction.
    If it is < 1 it is better. | mean(&#124;q[i]&#124;) |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| MASE | 平均绝对标度误差：绝对值的*标度^([a](ch06.html#ch06fn8))*误差的均值。标度是代替百分比误差的一种方法。MASE
    > 1 表明预测比天真预测更糟糕。如果 < 1 则更好。 | mean(&#124;q[i]&#124;) |'
- en: '| ^([a](ch06.html#ch06fn8-marker)) MASE was proposed in 2005 by statistician
    [Rob Hyndman](http://bit.ly/2ZKRo7z) and is used for determining comparative accuracy
    of forecasts. |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| ^([a](ch06.html#ch06fn8-marker)) MASE是由统计学家[罗布·海德曼](http://bit.ly/2ZKRo7z)于2005年提出的，用于确定预测的比较准确性。
    |'
- en: 'We can view these values easily with the `forecast` package (see [Table 6-2](#Table_caption_goes_here-id0002)):'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`forecast`包轻松查看这些值（见[表 6-2](#Table_caption_goes_here-id0002)）：
- en: '[PRE28]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Table 6-2\. Measures of accuracy for mean, naive, and drift forecasts
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6-2\. 均值、天真和漂移预测的准确性度量
- en: '|   | ME | RMSE | MAE | MPE | MAPE | MASE |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '|   | ME | RMSE | MAE | MPE | MAPE | MASE |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| Mean | -2.46E-13 | 28535.31 | 23019.78 | -Inf | Inf | 1 |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| Mean | -2.46E-13 | 28535.31 | 23019.78 | -Inf | Inf | 1 |'
- en: '| Naïve | -33.81419 | 31653.02 | 23017.03 | -Inf | Inf | 1 |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| Naïve | -33.81419 | 31653.02 | 23017.03 | -Inf | Inf | 1 |'
- en: '| Drift | 1.25E-12 | 31653 | 23021.87 | NaN | Inf | 1.00021 |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| Drift | 1.25E-12 | 31653 | 23021.87 | NaN | Inf | 1.00021 |'
- en: What are good values for these evaluations? Consider that every set of data
    is different and has different scales. Data in one experiment might have a range
    of 1 to 1,000,000 and the RMSE is 10, which seems pretty good. However, the same
    RMSE value if the data has a range of 1 to 20 is terrible. Because of this, consider
    using your evaluation methods as a comparison between different plots and tests;
    avoid the pitfall of blindly seeing small evaluation results as good. In the simple
    methods we just looked at, the mean seems to pull ahead. Our results also shows
    us some of the dangers of using percentages. There is a risk of division by zero
    or near zero, which leads to infinite values.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些评估，什么是好的值？请考虑每组数据都不同且具有不同的比例。一个实验中的数据可能在1到1,000,000的范围内，而RMSE为10，这似乎非常好。然而，如果数据的范围是1到20，则相同的RMSE值就很糟糕了。因此，考虑使用您的评估方法来比较不同的图表和测试，避免盲目地将小评估结果视为好的陷阱。在我们刚刚看过的简单方法中，均值似乎领先。我们的结果还向我们展示了使用百分比的一些风险。存在除以零或接近零的风险，导致无限值。
- en: 'Another thing we can look for in our data is seasonality. This is a different
    way to explore the data that is made much easier using the `tseries`^([5](ch06.html#ch06fn9))
    library. Is there some kind of pattern based on a recurring event? An example
    of seasonality in a time series would be the sales of mittens. Clearly sales of
    mittens increase in the winter and decrease in the summer. Another way of stating
    this is to say that the data is either stationary or not stationary. Stationary
    data is independent of the actual time series. We can test for stationarity or
    nonstationarity with the `tseries` package by using the `adf.test` method:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的数据中，另一件需要关注的事情是季节性。这是一种通过使用`tseries`^([5](ch06.html#ch06fn9))库大大简化的探索数据的不同方式。是否有基于周期事件的某种模式？时间序列中季节性的一个示例是连指手套的销售。显然，连指手套的销售在冬季增加，在夏季减少。另一种说法是数据是否平稳或不平稳。平稳数据与实际时间序列无关。我们可以通过使用`tseries`包中的`adf.test`方法来测试平稳性或非平稳性：
- en: '[PRE29]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The result we get indicates clearly that the data is stationary (has no seasonality):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到的结果清楚地表明数据是平稳的（没有季节性）：
- en: '[PRE30]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now it is time to do some predictions that are better than mean, naive, or
    drift. We will use the ARIMA model to start with. ARIMA^([6](ch06.html#ch06fn10))
    stands for Autoregressive Integrated Moving Average. ARIMA is a prediction (forecasting)
    technique that projects the future values of a series depending on its previous
    data points. Like the name says, it uses a moving average. First we create the
    future values with the following command:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候进行一些比均值、天真或漂移更好的预测了。我们将首先使用ARIMA模型。ARIMA^([6](ch06.html#ch06fn10))代表自回归积分移动平均。ARIMA是一种根据其先前数据点预测（预测）未来值的技术。正如名称所示，它使用移动平均。首先，我们使用以下命令创建未来的值：
- en: '[PRE31]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'To better understand the results, let’s take a look at the structure of the
    time series object we are working with. Use the `str()` command:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解结果，让我们看一下我们正在处理的时间序列对象的结构。使用`str()`命令：
- en: '[PRE32]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'This tells us that we have 1,294 objects in our time series. Our `forecast`
    function will plot out another 10 values into the future. This gives us the following
    sales values with confidence intervals of 80 and 95\. Let’s look at time series
    object 1300 as an example. This tells us that the forecast is 20892.628 with a
    *Lo 80* of -8393.256 and a *Hi 80* of 50178.51\. This means that we are 80% confident
    sales will be between $-8,393.256 and $50,178.51\. A confidence interval of 95
    is obviously wider to account for a higher degree of confidence and therefore
    has a higher range of $-23,896.27 to $65,681.52:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉我们，在我们的时间序列中有 1,294 个对象。我们的`forecast`函数将预测未来另外 10 个值。这给出了以下销售值和 80 和 95 的置信区间。让我们以时间序列对象
    1300 为例。这告诉我们预测值为 20892.628，*Lo 80* 为 -8393.256，*Hi 80* 为 50178.51。这意味着我们有 80%
    的置信度销售额将在 -8,393.256 到 50,178.51 美元之间。95% 的置信区间显然更宽，以应对更高的置信度，因此其范围更大，为 -23,896.27
    到 65,681.52 美元：
- en: '[PRE33]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Now let’s plot this chart. This time we will have a starting point that is
    later than the beginning of the chart so we don’t have such a small prediction
    interval. We will only plot the time series from point 750 to 1304\. The results
    in [Figure 6-13](#arima_forecasting) show the point value in a dark line, the
    80% confidence interval in a light shading, and the 90% confidence interval in
    an even lighter shading:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们绘制这张图表。这次我们将从点 750 到 1304 开始，这样我们就不会有这么小的预测间隔。我们只会绘制时间序列从点 750 到 1304\.
    在[图 6-13](#arima_forecasting)中的结果显示点值是黑线，80% 置信区间是浅色阴影，90% 置信区间是更浅的阴影：
- en: '[PRE34]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![ARIMA Forecasting](assets/pdss_0613.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![ARIMA 预测](assets/pdss_0613.png)'
- en: Figure 6-13\. ARIMA forecasting
  id: totrans-157
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-13\. ARIMA 预测
- en: We’ve done a bit of prediction so far and learned a lot along the way. Perhaps
    we should sit back and look at our data and wonder if this ARIMA is good enough
    as it is? Should we try something new? What comes to mind when you look at [Figure 6-13](#arima_forecasting)?
    When we look at it we see those flat lines on the bottom. That is where we put
    in missing dates, those dates when the material has zero sales. Should that be
    included in the model that does the prediction? In many cases the answer would
    be no. However, there is a good argument here that sales of zero are important.
    Any day of sale is a data point as well as any day of nonsales.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经进行了一些预测，并且在这个过程中学到了很多。也许我们应该坐下来看看我们的数据，并想一想这个 ARIMA 是否已经足够好了？我们应该尝试一些新的东西吗？当您看到[图
    6-13](#arima_forecasting)时，脑海中会想到什么？当我们看到它时，我们看到底部的平直线。那是我们输入缺失日期的地方，那些材料没有销售的日期。这些是否应该包含在进行预测的模型中？在许多情况下，答案可能是否定的。然而，在这里有一个很好的论点，即零销售也很重要。任何销售日都是一个数据点，任何非销售日也是如此。
- en: Next we will shift to a different language and a different model. We will take
    the same series of data that we explored in R and perform the same five-step analysis
    in Python.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将切换到另一种语言和不同的模型。我们将采用在 R 中探索过的同一系列数据，并在 Python 中执行相同的五步分析。
- en: Predicting Sales in Python
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Python 中预测销售
- en: There are many ways to analyze data using different tools such as Python and
    R. In this section we will approach the same data from a Python perspective.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多方法可以使用不同的工具（如 Python 和 R）分析数据。在本节中，我们将从 Python 的角度处理相同的数据。
- en: 'Step 1: Identify Data'
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一步：识别数据
- en: This time we will use a quick OData utility class that could speed up future
    identify-gather phases. We will use OData and Python to help predict future sales
    for upcoming weeks, months, and up to a year. This identification phase is the
    same as what we did for R earlier.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这次我们将使用一个快速的 OData 实用类，它可以加快未来识别和收集阶段的速度。我们将使用 OData 和 Python 来帮助预测未来几周、几个月甚至一年的销售情况。此识别阶段与我们之前在
    R 中所做的相同。
- en: 'Step 2: Gather Data'
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二步：收集数据
- en: Remember [Chapter 3](ch03.html#ch03) when we created an example OData service
    for listing plants out of the SAP backend? We’re going to do exactly the same
    thing here—only with some adjusted structures, fields, and a little bit of ABAP
    code to make the pull easy. Most importantly, defining a process in this way will
    allow you to programmatically gather different sets of materials and date ranges
    with ease! We’ll highlight the major differences here versus the approach as laid
    out in [Chapter 3](ch03.html#ch03).
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 还记得[第三章](ch03.html#ch03)中我们为从 SAP 后端列出植物创建了一个示例 OData 服务的时候吗？我们将在这里完全做同样的事情——只是有些调整结构、字段，并加入少许
    ABAP 代码以使拉取变得简单。最重要的是，以这种方式定义一个过程将使您能够轻松地以编程方式收集不同的材料和日期范围！我们将在此处突出显示与[第三章](ch03.html#ch03)中所述方法的主要区别。
- en: First, create a structure in transaction SE11 and choose the fields from [Figure 6-14](#se11_structure_for_the_sales_data)
    to populate it. We’re going to give this the same basic shape as the R example
    from before.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在事务 SE11 中创建一个结构，并从[图 6-14](#se11_structure_for_the_sales_data)中选择字段进行填充。我们将其与之前的
    R 示例具有相同的基本结构。
- en: '![SE11 structure for the sales data.](assets/pdss_0614.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![销售数据的 SE11 结构。](assets/pdss_0614.png)'
- en: Figure 6-14\. SE11 structure for the sales data
  id: totrans-168
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-14\. 销售数据的 SE11 结构
- en: Next, go to transaction SEGW to create a new OData service and enter project
    details as noted in [Figure 6-15](#odata_service_details_from_segw).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，转到事务 SEGW 创建一个新的 OData 服务，并按[图 6-15](#odata_service_details_from_segw)中的项目详情输入。
- en: '![OData service details from SEGW.](assets/pdss_0615.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![从 SEGW 中的 OData 服务获取的详情。](assets/pdss_0615.png)'
- en: Figure 6-15\. OData service details from SEGW
  id: totrans-171
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-15\. 来自 SEGW 的 OData 服务详情
- en: Remember to import the structure we created, just like in [Chapter 3](ch03.html#ch03).
    See Figures [6-16](#importing_the_se11_structure_into_a_new), [6-17](#choose_all_the_available_fields_to_impor),
    and [6-18](#material_and_req_delivery_date_are_the_k) for settings to use.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 记住导入我们创建的结构，就像在[第三章](ch03.html#ch03)中一样。参见[图 6-16](#importing_the_se11_structure_into_a_new)、[图
    6-17](#choose_all_the_available_fields_to_impor)和[图 6-18](#material_and_req_delivery_date_are_the_k)以获取要使用的设置。
- en: '![Importing the SE11 structure into a new OData service.](assets/pdss_0616.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![将 SE11 结构导入到新的 OData 服务中。](assets/pdss_0616.png)'
- en: Figure 6-16\. Importing the SE11 structure into a new OData service
  id: totrans-174
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-16\. 将 SE11 结构导入到新的 OData 服务中
- en: '![Choose all the available fields to import.](assets/pdss_0617.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![选择所有可用字段进行导入。](assets/pdss_0617.png)'
- en: Figure 6-17\. Choose all the available fields to import
  id: totrans-176
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-17\. 选择所有可用字段进行导入
- en: '![MATERIAL and REQ_DELIVERY_DATE are the key fields.](assets/pdss_0618.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![MATERIAL 和 REQ_DELIVERY_DATE 是关键字段。](assets/pdss_0618.png)'
- en: Figure 6-18\. MATERIAL and REQ_DELIVERY_DATE are the key fields
  id: totrans-178
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-18\. MATERIAL 和 REQ_DELIVERY_DATE 是关键字段
- en: 'Again just like [Chapter 3](ch03.html#ch03), redefine the `GetEntitySet (Query)`
    method for the entity we just created. Use the following ABAP code to set up a
    quick filtering operation on sales order item data. Remember, as discussed before:
    we won’t dive deep into explanations of ABAP code in this book. If you’re a data
    scientist who really wants SAP data and you don’t have a SAP team to help you,
    then you might wish to supplement this material with some of the ABAP basics available
    on SAP’s free training site, [*https://open.sap.com*](https://open.sap.com):'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，就像[第三章](ch03.html#ch03)一样，重新定义刚刚创建的实体的 `GetEntitySet (Query)` 方法。使用以下 ABAP
    代码设置销售订单项数据的快速过滤操作。如前所述：本书不会深入解释 ABAP 代码。如果您是一位数据科学家，确实需要 SAP 数据但没有 SAP 团队帮助，那么您可能希望在
    SAP 的免费培训网站[*https://open.sap.com*](https://open.sap.com)上补充一些 ABAP 基础知识：
- en: '[PRE35]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Once the SAP Gateway code is completed and activated, you have a service that
    can send the required sales data to any client that can make OData requests. Naturally,
    you’d love to use your own laptop as one of those clients, so we came up with
    a little utility class that can do some basic OData filtering, requesting, and
    creating of CSV files on your local computer. This may be useful in many SAP data
    retrieval scenarios, since any basic OData service should work:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 完成并激活 SAP Gateway 代码后，您将拥有一个能够向任何能发出 OData 请求的客户端发送所需销售数据的服务。自然地，您希望将自己的笔记本电脑用作其中之一，因此我们设计了一个小的实用类，可以在您的本地计算机上执行一些基本的
    OData 过滤、请求和创建 CSV 文件的操作。在许多 SAP 数据检索场景中，这可能非常有用：
- en: '[PRE36]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: With the utility class defined, we are ready to perform the request. You’ll
    need to replace the code set in italics with your own values.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 定义好实用类后，我们准备执行请求。您需要用您自己的值替换斜体代码。
- en: '[PRE37]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Step 3: Explore Data'
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 3：探索数据
- en: 'Now that we have our data we can easily read it into Python. We will need some
    standard libraries to start with. These are very common, oft-used libraries:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了数据，可以轻松将其读入 Python。我们将需要一些标准库来开始。这些是非常常见且经常使用的库：
- en: '[PRE38]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'We will use the `pandas` library to read in the data:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 `pandas` 库来读取数据：
- en: '[PRE39]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Let’s view our data by taking a look at the first few rows:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过查看前几行来查看我们的数据：
- en: '[PRE40]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: It should be of no surprise that the data has the same problems we experienced
    when reading it into R. In [Figure 6-19](#unconverted_sales_data_frame_in_python)
    we see that there are columns to be removed, and a date column to be adjusted.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 毫不奇怪，数据在读入 R 时遇到了与之前相同的问题。在[图 6-19](#unconverted_sales_data_frame_in_python)中，我们看到需要删除列和调整日期列。
- en: '![Unconverted Sales data frame in Python](assets/pdss_0619.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![Python 中未转换的销售数据框](assets/pdss_0619.png)'
- en: Figure 6-19\. Unconverted sales dataframe in Python
  id: totrans-194
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-19\. Python 中未转换的销售数据框
- en: 'We will perform the same functions we did in R but this time in Python. Those
    basic steps are:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 Python 中执行与 R 中相同的功能。这些基本步骤是：
- en: Drop a column
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除一列
- en: Convert the date column to a true date
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将日期列转换为真实日期
- en: Subset the dataframe by a single material
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按单一材料子集数据框
- en: Drop the material column
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除材料列
- en: Make the date the index of the dataframe
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将日期作为数据框的索引
- en: '[PRE41]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Let’s take a look at our dataframe again, but this time by doing a quick plot
    (which is shown in [Figure 6-20](#initial_plot_of_sales_in_python)):'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次查看我们的数据框，但这次通过快速绘图（显示在[图 6-20](#initial_plot_of_sales_in_python)中）：
- en: '[PRE42]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '![Initial plot of sales in Python](assets/pdss_0620.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![Python 中销售初始图](assets/pdss_0620.png)'
- en: Figure 6-20\. Initial plot of sales in Python
  id: totrans-205
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-20\. Python 中销售初始图
- en: 'We will then use the `statsmodels` package in Python to perform a decomposition
    of the time series. This is a statistical task that deconstructs the time series
    object into several categories or patterns. These patterns are observed, trend,
    seasonal, and residual. Residuals can also be referred to as errors. We will decompose
    our time series and plot it (the results are in [Figure 6-21](#decomposed_charts_of_our_sales_data)):'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将使用 Python 中的`statsmodels`包执行时间序列的分解。这是一个统计任务，将时间序列对象拆解为几个类别或模式。这些模式包括观察值、趋势、季节性和残差。我们将分解我们的时间序列并绘制它（结果显示在[图
    6-21](#decomposed_charts_of_our_sales_data)中）：
- en: '[PRE43]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: This gives us a general view of our time-series data. The *Observed* chart gives
    us an exact representation of what is observed in the data. The *Trend* chart
    shows us what the overall trend of the observations. Think of this as the smoothing
    of the observations. The *Seasonal* chart highlights if there are any seasonal
    aspects to the data. If you observe repeating patterns here there could be seasonality
    in your data. Finally, the *Residual* chart shows the errors between the observed
    value and a predicted value.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们一个关于时间序列数据的总体视图。*观察*图表为我们提供了数据的精确表示。*趋势*图表显示了观察值的整体趋势。可以将其视为观察值的平滑处理。*季节性*图表突出显示数据是否存在任何季节性方面。如果在此处观察到重复模式，则数据可能存在季节性。最后，*残差*图表显示观察值和预测值之间的误差。
- en: '![Decomposed charts of our sales data.](assets/pdss_0621.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![我们销售数据的分解图表。](assets/pdss_0621.png)'
- en: Figure 6-21\. Decomposed charts of our sales data
  id: totrans-210
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-21\. 我们销售数据的分解图表
- en: 'Step 4: Model Data'
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 4：建模数据
- en: 'Like we did in R, we are now going to create an ARIMA prediction. This is made
    easy in Python with the `pyramid.arima`^([7](ch06.html#ch06fn11)) package. Explore
    the package to understand all the settings that can be made:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们在 R 中所做的那样，现在我们将在 Python 中创建一个 ARIMA 预测。使用`pyramid.arima`^([7](ch06.html#ch06fn11))包在
    Python 中非常方便。探索该包以了解可以进行的所有设置：
- en: '[PRE44]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The log will print as it is running:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 日志将如打印时所运行的那样：
- en: '[PRE45]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The next step is to break our time series into two sets. One for training and
    one for testing. We want to train on the majority of our data and test on the
    remaining. For our dataset, we have a time series from 2015-01-05 to 2018-07-21\.
    Therefore, we’ve decided to take the range from 2015-01-05 to 2018-04-01 to train
    against and the remaining dates to validate against:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将时间序列分成两组：一组用于训练，一组用于测试。我们希望在大多数数据上进行训练，然后在剩余数据上进行测试。对于我们的数据集，时间序列从 2015-01-05
    到 2018-07-21\. 因此，我们决定选择从 2015-01-05 到 2018-04-01 的范围进行训练，然后用剩余的日期进行验证：
- en: '[PRE46]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The next step is to fit the model to the training data:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将模型拟合到训练数据：
- en: '[PRE47]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Let’s predict what will come after 2018-04-01 for the number of time steps
    in the test set. The number of time steps in the test series is seen with:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们预测在 2018-04-01 之后会发生什么，测试集中时间步数的数量。测试系列的时间步数如下所示：
- en: '[PRE48]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The command to make the prediction is easy:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 进行预测的命令很简单：
- en: '[PRE49]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'To see the results of our prediction you can simply type `**future**`. Our
    `future` object is an array of predictions made from our training data. We used
    73 periods because we want the length of the prediction to be exactly as long
    as the length of our `test` array. This way, as you will see later, we can plot
    them on top of one another and visualize the accuracy:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看我们预测的结果，只需简单输入`**future**`。我们的`future`对象是从训练数据中预测的数组。我们使用了 73 个期间，因为我们希望预测的长度与我们的`test`数组的长度完全相同。稍后您将看到，我们可以将它们叠加在一起并可视化准确性：
- en: '[PRE50]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Step 5: Evaluate Model'
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 5：评估模型
- en: While this all looks fine now, what does our prediction look like when charted
    against the real results of our test dataframe? First we need to convert our future
    to a proper dataframe with a column title “Prediction.”
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管现在看起来一切都很好，但是当我们的预测与测试数据框架的实际结果对比时会是什么样子？首先，我们需要将未来转换为具有“预测”列标题的适当数据框架。
- en: '[PRE51]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Next, we simply concatenate the test and the future together and plot them,
    which is made easy using Pandas (the results are shown in [Figure 6-22](#results_of_actuals_and_predictions_using)):'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们简单地将测试和未来的数据连接起来，并绘制它们的图表，这在 Pandas 中非常容易实现（结果显示在[图 6-22](#results_of_actuals_and_predictions_using)）：
- en: '[PRE52]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '![Results of actuals and predictions using ARIMA model.](assets/pdss_0622.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![ARIMA 模型的实际和预测结果。](assets/pdss_0622.png)'
- en: Figure 6-22\. Results of actuals and predictions using ARIMA model
  id: totrans-232
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-22\. ARIMA 模型的实际和预测结果
- en: The results of the ARIMA model look like they are somewhat close to the mean
    of the sales for the time period. Looking at the combination of peaks and valleys
    of the prediction compared to the actuals shows that the direction of the prediction
    is in line with the actuals, just not to the same degree. This means that when
    the actuals go up, often the prediction goes up on or near that time period.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: ARIMA 模型的结果看起来与该时间段的销售均值相当接近。比较预测与实际的峰值和谷值组合表明，预测的趋势与实际情况基本一致，只是程度不同。这意味着当实际数据上升时，预测往往也会在或接近该时间段上升。
- en: 'To see how the prediction looks against the entirety of the data is just as
    simple (the results are in [Figure 6-23](#results_of_prediction_when_compared_to_t)):'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 查看预测与整体数据的对比非常简单（结果见[图 6-23](#results_of_prediction_when_compared_to_t)）：
- en: '[PRE53]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '![Results of prediction when compared to the original data](assets/pdss_0623.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![预测结果与原始数据的对比](assets/pdss_0623.png)'
- en: Figure 6-23\. Results of prediction when compared to the original data
  id: totrans-237
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-23\. 预测结果与原始数据的对比
- en: The results of our visualization make something clear that was not previously
    apparent. When looking at the daily sales over time we cannot really tell if sales
    are declining or increasing from 2015 to 2018\. The prediction that is plotted
    here makes it clear that sales overall are declining. We can see that by the distinct
    downward trend of the prediction line.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的可视化结果揭示了一个之前不明显的问题。当查看随时间变化的日销售时，我们无法真正确定从2015年到2018年销售是在下降还是在上升。这里绘制的预测清楚地显示了整体销售在下降。
- en: Summary
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter we have completed the process of identifying a business need
    for prediction, extracting data from SAP, exploring the data, modeling that data,
    and evaluating the accuracy of that model. Time-series predictions are a fascinating
    and multifaceted area of data science. In our model we simply had univariate time
    series data; that is, simply a date and a value. With that we looked for patterns
    in the data that might help us make future predictions using standard ARIMA models
    in both R and Python. Multivariate time-series analysis is when there are multiple
    factors influencing the target variable. This is often more robust and can take
    into account features that affect a target variable (such as sales) across time.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们完成了识别预测业务需求、从 SAP 中提取数据、探索数据、对数据建模和评估模型准确性的整个过程。时间序列预测是数据科学中一个迷人且多层次的领域。在我们的模型中，我们只使用了单变量时间序列数据；即，只有日期和一个数值。我们在数据中寻找可能帮助我们使用标准的
    R 和 Python 中的 ARIMA 模型进行未来预测的模式。多变量时间序列分析是当有多个因素影响目标变量时。这通常更加健壮，并且可以考虑影响目标变量（如销售）随时间变化的特征。
- en: Note
  id: totrans-241
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注
- en: Univariate time-series data is simply a single value over time. Think of the
    closing price of a stock over time. You could easily employ the techniques here
    for stock data and get some interesting results. However, it would not be very
    robust and would not take into account countless other factors that affect the
    stock price.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 单变量时间序列数据就是随时间变化的单一数值。想象一下股票的收盘价格随时间的变化。你可以轻松地将这里的技术应用于股票数据，并得到一些有趣的结果。然而，这种方法不够健壮，也不考虑影响股价的无数其他因素。
- en: Multivariate time-series data is multiple features over time. Let’s use our
    closing stock price again. We have the value of stock over time, but we also have
    the quarterly company’s earnings from EDGAR (see footnote 2) and social sentiment
    analysis from Twitter.^([8](ch06.html#ch06fn12)) Making stock predictions based
    on these multiple features would be more robust, but significantly more difficult.
    As an introduction to making predictions, we felt inclined not to go with multivariate
    analysis.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量时间序列数据是随时间变化的多个特征。让我们再次使用我们的收盘股价。我们不仅拥有股票随时间的价值，还有来自EDGAR（见注释2）的季度公司收益和来自Twitter的社交情感分析。^([8](ch06.html#ch06fn12))
    基于这些多个特征进行股票预测将更为稳健，但显然更为困难。作为预测的入门，我们倾向于不采用多变量分析。
- en: 'Back to our univariate times series data. What if you just have sales and date
    and nothing more, like we have here? Are we stuck with just univariate analysis?
    Maybe not. Think of what else in that data could influence sales. Perhaps day
    of the week? Week of the year? There could be value within the date variable itself.
    With R and Python, it is easy to extract those values. In Python for instance,
    these commands give you all the help you need from a date variable:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们的单变量时间序列数据。如果你只有销售和日期而已，像我们这里一样，你会陷入单变量分析的困境吗？也许不会。考虑一下数据中还有什么可能影响销售的因素。也许是星期几？一年中的哪一周？日期变量本身可能具有价值。在R和Python中，提取这些值是非常容易的。例如，在Python中，以下命令为你从日期变量中提取所有需要的帮助：
- en: '[PRE54]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: In an afternoon’s work, the data scientists made some basic predictions using
    SAP data and common tools. They return to Duane from the SAP team and show him
    that Big Bonanza can indeed do predictions on sales data. It is up to him and
    the business to decide if the current ARIMA model, either in R or Python, is good
    enough or if they need something more accurate and robust. If business leaders
    want more accuracy, then a multivariate time-series analysis is likely in order
    and perhaps a recursive neural network or a temporal convolutional network.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个下午的工作中，数据科学家们利用SAP数据和常见工具进行了一些基本预测。他们向SAP团队的杜安展示，大富翁确实可以对销售数据进行预测。现在取决于他和业务团队决定当前的ARIMA模型（无论是在R还是Python中）是否足够好，或者他们是否需要更精确和稳健的模型。如果业务领导需要更高的准确性，那么很可能需要进行多变量时间序列分析，也许是递归神经网络或时间卷积网络。
- en: '^([1](ch06.html#ch06fn1-marker)) Time series: a series of data points indexed
    over time.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch06.html#ch06fn1-marker)) 时间序列：随时间索引的一系列数据点。
- en: ^([2](ch06.html#ch06fn2-marker)) You may disagree with this sharp distinction
    between inference and forecasting and our use of the term prediction. This is
    a very slippery semantic slope. However, you should understand the need to make
    the definition clear for the purposes of teaching.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch06.html#ch06fn2-marker)) 你可能不同意我们对推断和预测之间的尖锐区别及其对预测术语的使用。这是一个非常棘手的语义斜坡。然而，为了教学目的，你应该理解需要明确定义。
- en: '^([3](ch06.html#ch06fn3-marker)) EDGAR: The government’s open source Electronic
    Data Gathering, Analysis, and Retrieval system. It uses XBRL (eXtensible Business
    Reporting Language). Trust us, it’s a fun rabbit hole. [*https://www.codeproject.com/Articles/1227765/Parsing-XBRL-with-Python*](https://www.codeproject.com/Articles/1227765/Parsing-XBRL-with-Python).'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch06.html#ch06fn3-marker)) EDGAR：政府的开源电子数据收集、分析和检索系统。它使用XBRL（可扩展业务报告语言）。相信我们，这是一个有趣的深坑。[*https://www.codeproject.com/Articles/1227765/Parsing-XBRL-with-Python*](https://www.codeproject.com/Articles/1227765/Parsing-XBRL-with-Python)。
- en: ^([4](ch06.html#ch06fn7-marker)) The `forecast` library [*https://cran.r-project.org/web/packages/forecast/forecast.pdf*](https://cran.r-project.org/web/packages/forecast/forecast.pdf)
    is written by Rob J. Hyndaman and contains methods for displaying and analyzing
    univariate time series.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch06.html#ch06fn7-marker)) `forecast`库 [*https://cran.r-project.org/web/packages/forecast/forecast.pdf*](https://cran.r-project.org/web/packages/forecast/forecast.pdf)
    由Rob J. Hyndaman编写，包含显示和分析单变量时间序列的方法。
- en: ^([5](ch06.html#ch06fn9-marker)) [*https://cran.r-project.org/web/packages/tseries/tseries.pdf*](https://cran.r-project.org/web/packages/tseries/tseries.pdf)
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: ^([5](ch06.html#ch06fn9-marker)) [*https://cran.r-project.org/web/packages/tseries/tseries.pdf*](https://cran.r-project.org/web/packages/tseries/tseries.pdf)
- en: ^([6](ch06.html#ch06fn10-marker)) Fitting an ARIMA model is sometimes referred
    to as the Box–Jenkins method.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: ^([6](ch06.html#ch06fn10-marker)) 适配ARIMA模型有时被称为Box-Jenkins方法。
- en: ^([7](ch06.html#ch06fn11-marker)) [*https://pypi.org/project/pyramid-arima/*](https://pypi.org/project/pyramid-arima/)
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: ^([7](ch06.html#ch06fn11-marker)) [*https://pypi.org/project/pyramid-arima/*](https://pypi.org/project/pyramid-arima/)
- en: ^([8](ch06.html#ch06fn12-marker)) For example, see [*https://ieeexplore.ieee.org/document/7955659*](https://ieeexplore.ieee.org/document/7955659)
    and [*https://www.tandfonline.com/doi/full/10.1080/23322039.2017.1367147*](https://www.tandfonline.com/doi/full/10.1080/23322039.2017.1367147).
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: ^([8](ch06.html#ch06fn12-marker)) 例如，参见[*https://ieeexplore.ieee.org/document/7955659*](https://ieeexplore.ieee.org/document/7955659)和[*https://www.tandfonline.com/doi/full/10.1080/23322039.2017.1367147*](https://www.tandfonline.com/doi/full/10.1080/23322039.2017.1367147)。
