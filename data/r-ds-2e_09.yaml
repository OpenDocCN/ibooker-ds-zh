- en: 'Chapter 8\. Workflow: Getting Help'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章 工作流：获取帮助
- en: This book is not an island; there is no single resource that will allow you
    to master R. As you begin to apply the techniques described in this book to your
    own data, you will soon find questions that we do not answer. This section describes
    a few tips on how to get help and to help you keep learning.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书不是一个孤岛；没有单一的资源能让你精通R。当你开始将本书描述的技术应用到自己的数据中时，你很快会发现我们没有回答的问题。本节描述了一些关于如何获取帮助和帮助你继续学习的技巧。
- en: Google Is Your Friend
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 谷歌是你的朋友
- en: 'If you get stuck, start with Google. Typically adding “R” to a query is enough
    to restrict it to relevant results: if the search isn’t useful, it often means
    that there aren’t any R-specific results available. Additionally, adding package
    names like “tidyverse” or “ggplot2” will help narrow down the results to code
    that will feel more familiar to you as well, e.g., “how to make a boxplot in R”
    versus “how to make a boxplot in R with ggplot2.” Google is particularly useful
    for error messages. If you get an error message and you have no idea what it means,
    try googling it! Chances are that someone else has been confused by it in the
    past, and there will be help somewhere on the web. (If the error message isn’t
    in English, run `Sys.setenv(LANGUAGE = "en")` and rerun the code; you’re more
    likely to find help for English error messages.)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果遇到困难，请先使用Google。通常在查询中添加“R”就足以限制结果为相关结果：如果搜索结果无用，则通常意味着没有针对R特定的结果可用。此外，添加像“tidyverse”或“ggplot2”这样的包名将有助于缩小结果范围，使得代码对你来说更加熟悉，例如，“如何在R中制作箱线图”与“如何使用ggplot2在R中制作箱线图”。Google对于错误消息尤其有用。如果你收到错误消息并且不知道它的含义，试着Google搜索一下！很有可能以前有人也被这个错误消息困扰过，在网络上会有帮助的地方。（如果错误消息不是英文，运行`Sys.setenv(LANGUAGE
    = "en")`然后重新运行代码；这样你更有可能找到英文错误消息的帮助。）
- en: If Google doesn’t help, try [Stack Overflow](https://oreil.ly/RxSNB). Start
    by spending a little time searching for an existing answer, including `[R]`, to
    restrict your search to questions and answers that use R.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Google没能帮助到你，尝试[Stack Overflow](https://oreil.ly/RxSNB)。首先花点时间搜索现有答案，包括`[R]`，以将搜索限制为使用R的问题和答案。
- en: Making a reprex
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 制作一个reprex
- en: 'If your googling doesn’t find anything useful, it’s a really good idea to prepare
    a *reprex*, short for minimal *repr*oducible *ex*ample. A good reprex makes it
    easier for other people to help you, and often you’ll figure out the problem yourself
    in the course of making it. There are two parts to creating a reprex:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的Google搜索没有找到有用的内容，准备一个*reprex*是个非常好的主意，它是最小*可复现*示例的缩写。一个好的reprex使得其他人更容易帮助你，而且通常在制作它的过程中你会自己找到问题的答案。创建reprex有两个部分：
- en: First, you need to make your code reproducible. This means you need to capture
    everything, i.e., include any [`library()`](https://rdrr.io/r/base/library.xhtml)
    calls and create all necessary objects. The easiest way to make sure you’ve done
    this is using the reprex package.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，你需要让你的代码可复现。这意味着你需要捕获一切，即包括任何[`library()`](https://rdrr.io/r/base/library.xhtml)调用和创建所有必要的对象。确保你已经做到这一点的最简单方法是使用reprex包。
- en: Second, you need to make it minimal. Strip away everything that is not directly
    related to your problem. This usually involves creating a much smaller and simpler
    R object than the one you’re facing in real life or even using built-in data.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其次，你需要让它变得最小化。剥离与你的问题无关的所有内容。这通常涉及创建一个比实际情况中更小更简单的R对象，甚至使用内置数据。
- en: 'That sounds like a lot of work! And it can be, but it has a great payoff:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来工作量很大！而且确实如此，但它会带来巨大的回报：
- en: 80% of the time, creating an excellent reprex reveals the source of your problem.
    It’s amazing how often the process of writing up a self-contained and minimal
    example allows you to answer your own question.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 80%的情况下，创建一个优秀的reprex能揭示出问题的根源。写一个自包含和最小化示例的过程经常让你能够回答自己的问题，这是多么令人惊讶的。
- en: The other 20% of the time, you will have captured the essence of your problem
    in a way that is easy for others to play with. This substantially improves your
    chances of getting help!
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其余20%的时间，你将以一种易于他人处理的方式捕捉到问题的本质。这极大地提高了你获取帮助的机会！
- en: 'When creating a reprex by hand, it’s easy to accidentally miss something, meaning
    your code can’t be run on someone else’s computer. Avoid this problem by using
    the reprex package, which is installed as part of the tidyverse. Let’s say you
    copy this code onto your clipboard (or, on RStudio Server or Cloud, select it):'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当手动创建 reprex 时，很容易偶然遗漏某些内容，这意味着你的代码在别人的计算机上无法运行。通过使用作为 tidyverse 的一部分安装的 reprex
    包来避免这个问题。假设你将这段代码复制到剪贴板上（或者在 RStudio Server 或云端上，选择它）：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then call `reprex()`, where the default output is formatted for GitHub:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然后调用 `reprex()`，其中默认输出已格式化为 GitHub 格式：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'A nicely rendered HTML preview will display in RStudio’s Viewer (if you’re
    in RStudio) or your default browser otherwise. The reprex is automatically copied
    to your clipboard (on RStudio Server or Cloud, you will need to copy this yourself):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在 RStudio 的 Viewer（如果你在使用 RStudio）或默认浏览器中，将会显示一个漂亮的 HTML 预览。reprex 会自动复制到你的剪贴板（在
    RStudio Server 或云端，你需要手动复制）：
- en: '[PRE2] r'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE2] r'
- en: y <- 1:4
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: y <- 1:4
- en: mean(y)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: mean(y)
- en: '#> [1] 2.5'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '#> [1] 2.5'
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This text is formatted in a special way, called Markdown, which can be pasted
    to sites like StackOverflow or GitHub, which will automatically render it to look
    like code. Here’s what that Markdown would look like rendered on GitHub:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此文本以 Markdown 的特殊方式格式化，可以粘贴到类似 StackOverflow 或 GitHub 的网站上，这些网站会自动渲染为代码样式。以下是在
    GitHub 上渲染的 Markdown 样式：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Anyone else can copy, paste, and run this immediately.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 任何人都可以立即复制、粘贴并运行此代码。
- en: 'There are three things you need to include to make your example reproducible:
    required packages, data, and code.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要使你的示例可复现，有三样东西你需要包含：所需的包、数据和代码。
- en: '*Packages* should be loaded at the top of the script so it’s easy to see which
    ones the example needs. This is a good time to check that you’re using the latest
    version of each package; you may have discovered a bug that’s been fixed since
    you installed or last updated the package. For packages in the tidyverse, the
    easiest way to check is to run `tidyverse_update()`.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*包* 应该在脚本的顶部加载，这样很容易看到示例需要哪些包。现在是检查你是否使用每个包的最新版本的好时机；你可能发现了一个自从你安装或上次更新包后修复的
    bug。对于 tidyverse 中的包，检查的最简单方法是运行 `tidyverse_update()`。'
- en: 'The easiest way to include *data* is to use [`dput()`](https://rdrr.io/r/base/dput.xhtml)
    to generate the R code needed to re-create it. For example, to re-create the `mtcars`
    dataset in R, perform the following steps:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含 *数据* 的最简单方法是使用 [`dput()`](https://rdrr.io/r/base/dput.xhtml) 生成重新创建所需数据的
    R 代码。例如，在 R 中重新创建 `mtcars` 数据集，执行以下步骤：
- en: Run `dput(mtcars)` in R.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 R 中运行 `dput(mtcars)`。
- en: Copy the output.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制输出。
- en: In reprex, type `mtcars <-`, and then paste.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 reprex 中，输入 `mtcars <-`，然后粘贴。
- en: Try to use the smallest subset of your data that still reveals the problem.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尽量使用最小的数据子集来展示问题。
- en: 'Spend a little bit of time ensuring that your *code* is easy for others to
    read:'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 花点时间确保你的 *代码* 对他人易读：
- en: Make sure you’ve used spaces and your variable names are concise yet informative.
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你已经使用了空格，并且你的变量名简洁但具有信息性。
- en: Use comments to indicate where your problem lies.
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用注释标明问题所在的位置。
- en: Do your best to remove everything that is not related to the problem.
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽你最大努力删除与问题无关的所有内容。
- en: The shorter your code is, the easier it is to understand and the easier it is
    to fix.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 编写简短的代码，有助于理解和修复问题。
- en: Finish by checking that you have actually made a reproducible example by starting
    a fresh R session and copying and pasting your script.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过开始一个新的 R 会话并复制粘贴你的脚本来检查是否真的创建了一个可复现的示例。
- en: Creating reprexes is not trivial, and it will take some practice to learn to
    create good, truly minimal reprexes. However, learning to ask questions that include
    the code and investing the time to make it reproducible will continue to pay off
    as you learn and master R.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 reprex 并不简单，需要一些练习才能学会创建好的、真正最小化的 reprex。然而，学会提出包含代码并投入时间使其可复现的问题，将会在你学习和掌握
    R 的过程中不断产生回报。
- en: Investing in Yourself
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 投资于自己
- en: 'You should also spend some time preparing yourself to solve problems before
    they occur. Investing a little time in learning R each day will pay off handsomely
    in the long run. One way is to follow what the tidyverse team is doing on the
    [tidyverse blog](https://oreil.ly/KS82J). To keep up with the R community more
    broadly, we recommend reading [R Weekly](https://oreil.ly/uhknU): it’s a community
    effort to aggregate the most interesting news in the R community each week.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在问题出现之前，你也应该花些时间准备自己去解决问题。每天投资一点时间学习R，从长远来看将会带来丰厚的回报。一种方法是关注tidyverse团队在[tidyverse博客](https://oreil.ly/KS82J)上的最新动态。为了更广泛地了解R社区，我们建议阅读[R
    Weekly](https://oreil.ly/uhknU)：这是一个社区努力，每周汇总R社区中最有趣的新闻。
- en: Summary
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'This chapter concludes the “Whole Game” part of the book. You’ve now seen the
    most important parts of the data science process: visualization, transformation,
    tidying, and importing. Now that you’ve gotten a holistic view of the whole process,
    we can start to get into the details of small pieces.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 本章总结了书中“整个游戏”部分。现在你已经看到了数据科学过程中最重要的部分：可视化、转换、整理和导入。既然你已经全面了解了整个过程，我们可以开始深入了解各个细节部分了。
- en: The next part of the book, “Visualize,” does a deeper dive into the grammar
    of graphics and creating data visualizations with ggplot2, showcases how to use
    the tools you’ve learned so far to conduct exploratory data analysis, and introduces
    good practices for creating plots for communication.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 书的下一部分，“可视化”，更深入地探讨了图形语法和使用ggplot2创建数据可视化，展示了如何利用你迄今学到的工具进行探索性数据分析，并介绍了创建沟通图形的良好实践。
