- en: Chapter 8\. Association Rule Mining
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章 关联规则挖掘
- en: Amir is the VP of Sales at Big Bonanza Warehouse. The other evening while shopping
    for cookies on Amazon he got a little message. “People who ordered cookies also
    ordered cookie-holders.” “Cookie-holders? That’s ridiculous.” He thought. But
    he clicked on the item anyway. “Cookie-holders are only a buck, I’ll try one.”
    A moment later he realized, “I bought something I didn’t intend to buy. I’m happy
    with the purchase and the recommendation. How can I do this for my own sales and
    customers?”
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Amir是Big Bonanza Warehouse的销售副总裁。有天晚上，在亚马逊购物时，他收到了一条消息。“购买饼干的人也购买了饼干架。” “饼干架？太荒谬了。”
    他想。但是他还是点开了这个项目。“饼干架只要一块钱，我试试。” 几分钟后他意识到，“我买了一件我本不打算购买的东西。我对购买和推荐感到满意。我怎样才能为我的销售和客户做到这一点？”
- en: The next day in the office he called in Duane, the SAP business analyst for
    Sales. He explained what he was thinking and wanted to know how they could do
    it. “I want to provide sales recommendations for all my retail locations. When
    a customer buys a product, I want the system to provide recommendations for related
    products.” Duane’s first thought was, “SAP doesn’t do that.”
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 第二天在办公室，他叫来了Duane，销售的SAP业务分析师。他解释了他的想法，并想知道他们如何做到。“我想为所有零售位置提供销售推荐。当客户购买产品时，我希望系统提供相关产品的推荐。”
    Duane首先想到的是，“SAP不做这个。”
- en: 'Upon talking to Greg and Paul, Duane learns that what Amir wants can be achieved
    by using a technique called association rule mining. We intend to take sales orders
    from SAP and create associations, or discover the general rules of patterns in
    item purchases. We want to know what products are most often purchased together.
    Consider groceries: if a customer buys bread and eggs, what is the likelihood
    they will buy milk?'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 和Greg以及Paul交谈后，Duane得知Amir想要的可以通过一种称为关联规则挖掘的技术实现。我们打算从SAP接收销售订单并创建关联，或发现商品购买中的一般规则。我们想知道哪些产品经常一起购买。考虑杂货店：如果客户购买了面包和鸡蛋，他们购买牛奶的可能性有多大？
- en: 'However, if you understand that association rule mining employs the rules of
    probability, you start to see many more applications:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你理解关联规则挖掘运用概率规则，你就会看到更多的应用：
- en: Laboratory studies
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 实验室研究
- en: What is the probability of a result based on previous study results? If X and
    Y happen in a study, what is the likelihood of Z? In the pharmaceutical industry,
    ending a study at the right time can have significant financial impacts.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 基于之前的研究结果，结果的概率是多少？如果在一项研究中发生了X和Y，那么发生Z的可能性是多少？在制药行业，恰当时机结束研究可能会带来重大的财务影响。
- en: Medical diagnoses
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 医疗诊断
- en: Diagnosing a patient is not always an easy process. Understanding the co-occurrences
    of symptoms helps healthcare providers make more accurate diagnoses.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 诊断患者并不总是一个容易的过程。了解症状的共同出现有助于医疗提供者做出更准确的诊断。
- en: Class schedules
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 班级时间表
- en: Understanding what classes a student may take can help an organization accurately
    use resources and avoid scheduling bottlenecks.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 理解学生可能选修的课程可以帮助一个组织准确利用资源，并避免排课瓶颈。
- en: Equipment maintenance
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 设备维护
- en: Predicting a malfunction on the manufacturing line can greatly assist in productivity.
    What is the probability that a piece of equipment will malfunction if it has gone
    through maintenance A, B, and C?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 预测制造线上的故障可以极大地提升生产力。如果一台设备经过A、B和C的维护，它出现故障的概率是多少？
- en: 'Customer order assistance: as a distinct subset of straight upselling, take
    into account that certain products are often bought together for a reason. If
    a customer buys hundreds of perfectly square tiles, it is likely they need some
    corner or oddly shaped tiles to complete their project. Use association rule mining
    to create ways for customer service to guide customers to ensuring their interactions
    meet their needs the first time around.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 客户订单帮助：作为直接升级的一个独特子集，考虑到某些产品通常因为某种原因一起购买。如果客户购买了数百块完美的方形瓷砖，他们很可能需要一些角落或奇形怪状的瓷砖来完成他们的项目。利用关联规则挖掘创建客户服务的方式，引导客户确保他们的互动第一次就能满足他们的需求。
- en: In this chapter, our goal is to create an application that will create a sales
    order in SAP and provide the user with product recommendations. To do this we
    use SAPUI5, a standard SAP frontend technology.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们的目标是创建一个应用程序，在SAP中创建销售订单并为用户提供产品推荐。为此，我们使用SAPUI5，这是一种标准的SAP前端技术。
- en: By now the basic order of operations should be familiar. We will follow much
    the same course of action we have with the other chapters, except this time we
    will operationalize the results ([Figure 8-1](#process_flow_used_for_finding_associatio)).
    Operationalization of data science is an important and often overlooked step,
    which is dependent on your company’s infrastructure. Perhaps your company uses
    Azure or Amazon Web Services heavily. Perhaps they only use on-premise machines.
    In this chapter, we will create a locally accessible webservice in R, but the
    deployment options will vary depending on you and your company’s infrastructure
    and preference.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在基本的操作顺序应该很熟悉了。我们将沿用之前章节的大致操作流程，但这次我们将操作结果实施化（[图 8-1](#process_flow_used_for_finding_associatio)）。数据科学的操作化是一个重要但常被忽视的步骤，这取决于您公司的基础设施。也许您的公司大量使用
    Azure 或 Amazon Web Services。也许他们仅使用本地机器。在本章中，我们将在 R 中创建一个本地可访问的 Web 服务，但部署选项将根据您和您公司的基础设施和偏好而有所不同。
- en: '![Process flow used for finding associations in sales data](assets/pdss_0801.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![用于在销售数据中查找关联的流程图](assets/pdss_0801.png)'
- en: Figure 8-1\. Process flow used for finding associations in sales data
  id: totrans-17
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-1\. 用于在销售数据中查找关联的流程图
- en: Understanding Association Rule Mining
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解关联规则挖掘
- en: The techniques in association rule mining (ARM) are all about associating observations
    with rules—for example, we can associate the observation in our data X with the
    rule Y. Unlike sequence mining,^([1](ch08.html#ch08fn1)) ARM does not care about
    the order of the observations. ARM only cares that they occur together. ARM is
    a mature and well-known method of discovering associations in large datasets and
    it works well with categorical data. There are four main concepts in ARM. These
    are support, confidence, lift, and the apriori algorithm.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 关联规则挖掘（ARM）中的技术全都是关于将观察结果与规则关联起来，例如我们可以将数据中的观察 X 与规则 Y 关联起来。与序列挖掘不同，^([1](ch08.html#ch08fn1))
    ARM 不关心观察结果的顺序，只关心它们一起出现的事实。ARM 是一种成熟且著名的大数据集中发现关联的方法，特别适用于分类数据。ARM 中有四个主要概念，即支持度、置信度、提升度和
    Apriori 算法。
- en: Support
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持度
- en: Support is how frequently the set appears in the data. For example, [Figure 8-2](#associations_between_whiskey_and_beer_pu)
    shows that whiskey *and* beer purchases occur in 10 out of 100 total purchases.
    This means a support of 10/100 or 10%.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 支持度是集合在数据中出现的频率。例如，[图 8-2](#associations_between_whiskey_and_beer_pu) 显示威士忌和啤酒的购买同时发生在总购买量的10%中。这意味着支持度为10/100或10%。
- en: '*Support(X to Y) → Transactions containing X and Y / Total transactions*'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*支持度(X 到 Y) → 含有 X 和 Y 的交易数 / 总交易数*'
- en: '![Associations between Whiskey and Beer purchases](assets/pdss_0802.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![威士忌和啤酒购买之间的关联](assets/pdss_0802.png)'
- en: Figure 8-2\. Associations between whiskey and beer purchases
  id: totrans-24
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-2\. 威士忌和啤酒购买之间的关联
- en: Confidence
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 置信度
- en: Confidence indicates how often a rule is true. Using the same example as before,
    out of all the orders, 10 contain whiskey and beer, 15 contain at least beer,
    and 80 contain at least whiskey. So 10 / 10 + 5 is a confidence value of .67\.
    That is a pretty high confidence value indicating these two items are bought together.
    However, confidence can be misleading; items that are simply frequent will naturally
    have higher confidence values. Limitations such as this are overcome by using
    support, confidence, and lift together.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 置信度指示规则成立的频率。使用之前的例子，出于所有订单中，有10个包含威士忌和啤酒，15个至少包含啤酒，80个至少包含威士忌。因此，10 / (10 +
    5) 是置信度值为0.67。这是一个相当高的置信度值，表明这两种物品通常一起购买。然而，置信度可能会误导；仅仅是频繁出现的物品自然会有更高的置信度值。通过同时使用支持度、置信度和提升度等方法，可以克服这类限制。
- en: '*Confidence(X to Y) → Transactions containing X and Y / Transactions containing
    X*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*置信度(X 到 Y) → 含有 X 和 Y 的交易数 / 含有 X 的交易数*'
- en: Lift
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提升度
- en: 'Lift is an indication of how likely something is to be purchased with the presence
    of another item, as opposed to how often it is likely to be purchased independently.
    In other words, how much does product A *lift* the likelihood of product B? Using
    our example with the lift formula: lift = (10 / 10 + 5 ) / (80/100). The result
    is .84\. A lift value of near one indicates there is no effect of one item on
    the other. A lift value of less than one indicates there could be a replacement
    (negative lift) happening. Despite our high confidence from earlier, there is
    no lift to the relationship between whiskey and beer. In fact, the lift is less
    than one, indicating whiskey might be a replacement for beer or visa versa:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Lift是指在存在另一个物品的情况下某物品被购买的可能性，而不是独立购买的频率。换句话说，产品A如何提高产品B的购买可能性？使用我们的提升公式示例：lift
    = (10 / 10 + 5 ) / (80/100)。结果是0.84。接近1的提升值表示一个物品对另一个物品没有影响。小于1的提升值表示可能存在替代（负提升）情况。尽管我们之前有很高的信心，但威士忌和啤酒之间没有提升的关系。事实上，提升值小于1，表明威士忌可能是啤酒的替代品或反之亦然：
- en: '*Lift(X to Y) → Confidence(X to Y) / ((Probability of Y without X) / Total
    transactions)*'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*提升（X到Y）→ 置信度（X到Y）/ （（没有X的Y的概率）/ 总交易数）*'
- en: Apriori Algorithm
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Apriori算法
- en: The apriori algorithm was presented by R. Agrawal and R. Srikant in 1994\. It
    is a method of finding frequent itemsets in a dataset. It uses prior knowledge
    of frequent itemset properties to do this. It is this algorithm in the R [`arules`](http://bit.ly/2ltQ3iX)
    library that creates the association rules. We will use this library later in
    the chapter, when we analyze the data.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Apriori算法由R. Agrawal和R. Srikant于1994年提出。它是在数据集中查找频繁项集的一种方法。它利用频繁项集属性的先验知识来实现这一点。在R的[`arules`](http://bit.ly/2ltQ3iX)库中，正是这个算法创建了关联规则。在本章后面分析数据时，我们将使用这个库。
- en: Operationalization Overview
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运作化概述
- en: Before we begin creating our application, we need to clearly define our programming
    goals. The architecture of our process is not complex, but it is important to
    understand the pieces of the process that will bring our vision to life. [Figure 8-3](#programs_and_applications_overview)
    shows a basic flow of the extraction and transformation, going from extracting
    the data through to display in an SAP Fiori (SAPUI5) application.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始创建我们的应用程序之前，我们需要明确定义我们的编程目标。我们的过程架构并不复杂，但重要的是要理解这些过程中的组成部分，这些组成部分将实现我们的愿景。[图 8-3](#programs_and_applications_overview)展示了从数据提取到在SAP
    Fiori（SAPUI5）应用程序中显示的基本流程。
- en: '![Programs and applications overview](assets/pdss_0803.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![程序和应用概述](assets/pdss_0803.png)'
- en: Figure 8-3\. Programs and applications overview
  id: totrans-36
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-3\. 程序和应用概述
- en: SAP developed SAPUI5 as an HTML5/JavaScript-based web application development
    framework. SAP also created a set of design standards called Fiori that SAPUI5
    strives to help developers meet. The reason? The standard SAP user interface,
    the decades-old SAP GUI, stinks. Nobody likes to use it.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: SAP将SAPUI5开发为基于HTML5/JavaScript的Web应用程序开发框架。SAP还创建了一套名为Fiori的设计标准，SAPUI5致力于帮助开发人员满足这些标准。原因是？标准的SAP用户界面，几十年历史的SAP
    GUI，不受欢迎。
- en: 'SAPUI5 helps developers to create applications that responsively scale all
    the way from desktop-sized monitor screens to mobile handheld screens. SAPUI5
    with Fiori design principles has become commonplace for SAP end users, and this
    includes the sales staff at Big Bonanza. We’ll detail one way to use SAPUI5 to
    enhance the sales experience and display the recommendations that we generate
    from our data science adventure. Data scientist and SAP analyst readers please
    note: just like our other brief forays into ABAP, this book is not intended as
    an SAPUI5 primer.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: SAPUI5帮助开发人员创建可以在从桌面大小的显示屏到移动手持屏幕上响应缩放的应用程序。采用Fiori设计原则的SAPUI5已经成为SAP最终用户的常见选择，包括Big
    Bonanza的销售人员。我们将详细介绍一种使用SAPUI5来增强销售体验并显示从我们的数据科学探险中生成的推荐内容的方法。数据科学家和SAP分析师请注意：就像我们在ABAP方面的其他简短尝试一样，本书并不旨在作为SAPUI5入门。
- en: Collecting the Data
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集数据
- en: This business problem requires a process that ultimately creates association
    rules around purchases. This is something that would not be done too frequently,
    perhaps on a quarterly basis. Our plan is to create a process that we can update
    once a quarter and will be the foundation of an API to an SAP application.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 此业务问题需要一个最终创建购买相关联规则的过程。这不是经常需要的事情，可能每季度进行一次。我们的计划是创建一个每季度更新一次的过程，并作为API到SAP应用程序的基础。
- en: Sales data is easily found in SAP in the VBAK and VBAP tables. All we want to
    know is what products are purchased together. In the end, we want something like
    [Table 8-1](#flattened-pto-mapping), where each record has separate columns for
    the individual items sold. The first row represents an order where two items were
    sold, the second row an order where four were sold, and so on.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在SAP中很容易找到销售数据，在VBAK和VBAP表中。我们只想知道一起购买了哪些产品。最终，我们希望得到类似[表格 8-1](#flattened-pto-mapping)的内容，其中每条记录都有单独的列来显示售出的各个项目。第一行表示一个销售了两个项目的订单，第二行表示销售了四个项目的订单，以此类推。
- en: Table 8-1\. Flattened product-to-order mapping
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 表格 8-1\. 展开的产品到订单映射
- en: '| item1 | item2 | item3 | item4 | item5 |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| item1 | item2 | item3 | item4 | item5 |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| ProductA | ProductB |  |  |  |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 产品A | 产品B |  |  |  |'
- en: '| ProductC | ProductB | ProductE | ProductG |  |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 产品C | 产品B | 产品E | 产品G |  |'
- en: '| ProductA | ProductC |  |  |  |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 产品A | 产品C |  |  |  |'
- en: However, when we select data from the tables in SAP, we end up with [Table 8-2](#pto-mapping-pre-flattening).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在从SAP表中选择数据时，我们得到的是[表格 8-2](#pto-mapping-pre-flattening)。
- en: Table 8-2\. Product-to-order mapping before flattening
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 表格 8-2\. 展开前的产品到订单映射
- en: '| Sales Document (VBAK) | Sales Material |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 销售文档（VBAK） | 销售材料 |'
- en: '| --- | --- |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 10001 | ProductA |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 10001 | 产品A |'
- en: '| 10001 | ProductB |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 10001 | 产品B |'
- en: '| 10002 | ProductC |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 10002 | 产品C |'
- en: '| 10002 | ProductB |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| 10002 | 产品B |'
- en: '| 10002 | ProductE |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| 10002 | 产品E |'
- en: '| 10002 | ProductG |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 10002 | 产品G |'
- en: '| 10003 | ProductZ |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 10003 | 产品Z |'
- en: 'There are a few things that we need to take into consideration here:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几件事情我们需要考虑：
- en: We don’t care about orders with only one item; there is no association there.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们不关心只有一个项目的订单；在这里没有任何关联。
- en: We want our data wide and not long. Recall that we’re aiming for records that
    have columns identifying individual items on the order, not separate records for
    each item in the order.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望我们的数据宽而不是长。记住，我们的目标是记录，每个记录都有列来标识订单中的各个项目，而不是每个项目在订单中单独记录。
- en: We don’t care about the sales order number; it is just used to group materials.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们不关心销售订单号；它只是用来分组材料。
- en: Flipping back to anomaly detection concepts in [Chapter 5](ch05.html#anomaly_detection_with_r_and_python),
    we determine that any order with more than 25 lines is an anomaly and simply cut
    off the table at 25 items.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转回异常检测概念，参见[第5章](ch05.html#anomaly_detection_with_r_and_python)，我们确定超过25行的任何订单都是异常的，简单地在25个项目处截断表格。
- en: Note
  id: totrans-64
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Finding that 25-line cutoff simplifies this step. If we allowed for any number
    of lines we would need to dynamically build the internal table in ABAP thereby
    adding complexity.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 找到这个25行的截断简化了这一步骤。如果我们允许任意数量的行，我们将需要在ABAP中动态构建内部表，从而增加复杂性。
- en: 'We created the simple ABAP program that follows to fulfill our needs. It reads
    all sales order items for a specified date range and creates a local CSV file
    in the format we want. This will make our code for doing the association rules
    super-simple and intuitive. This is a good example of merging various technologies.
    We can format and extract from SAP using ABAP, then the process for R and Python
    is simplified. By simplifying and designing the extract from SAP in a thoughtful
    manner, we turned the R process into three lines of code:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们编写了一个简单的ABAP程序来满足我们的需求。它会读取指定日期范围内的所有销售订单项目，并创建一个符合我们要求格式的本地CSV文件。这将使我们的关联规则代码变得非常简单和直观。这是合并各种技术的一个很好的例子。我们可以使用ABAP格式化和提取SAP数据，然后简化R和Python的过程。通过深思熟虑地简化和设计从SAP提取的过程，我们将R过程简化为三行代码：
- en: '[PRE0]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Cleaning the Data
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 清洗数据
- en: 'We always need to do some cleaning of our data from SAP. However, because we
    wrote our own small custom program to extract the data, we took care to do it
    in such a way that the data would be pristine. It is important to not make assumptions
    about how well we did the extract program, so we’ll read the CSV file into R Studio
    and take a look at it (the results are shown in [Figure 8-4](#investigating_the_data_from_sap_for_sale)):'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们总是需要对从SAP获取的数据进行一些清理。但是，由于我们编写了自己的小型定制程序来提取数据，我们注意确保数据是干净的。重要的是不要对提取程序的效果作任何假设，因此我们将读取CSV文件到R
    Studio并查看它（结果显示在[图 8-4](#investigating_the_data_from_sap_for_sale)中）：
- en: '[PRE1]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Investigating the data from SAP for Sales Data Wide.](assets/pdss_0804.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![调查SAP销售数据的宽格式数据。](assets/pdss_0804.png)'
- en: Figure 8-4\. Investigating the data from SAP for Sales Data Wide
  id: totrans-72
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-4\. 调查SAP销售数据的宽格式数据
- en: Things look exactly as we would want them with the exception of the X column.
    However, this is something being added by our `read.csv` function. We could avoid
    this using the `row.names = NULL` parameter. When we load the data in a different
    way in our next step, we won’t have this problem.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 事情看起来正如我们所希望的，只是X列是个例外。然而，这是我们的`read.csv`函数添加的内容。我们可以使用`row.names = NULL`参数来避免这个问题。当我们在下一步中以不同的方式加载数据时，我们将不会遇到这个问题。
- en: Analyzing the Data
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析数据
- en: 'Using the [`arules` package](http://bit.ly/2ltQ3iX) allows us some amazing
    results very easily. Because we have nicely formatted our data using ABAP we can
    transform it into a [`transaction` object](http://bit.ly/2lvlPMm) in R using the
    following code:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`arules`包](http://bit.ly/2ltQ3iX)可以非常轻松地获得一些惊人的结果。因为我们已经使用ABAP格式化了我们的数据，所以可以使用以下代码将其转换为R中的[`transaction`对象](http://bit.ly/2lvlPMm)：
- en: '[PRE2]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To create rules based on the transactions we loaded, use the following code.
    This is where the apriori algorithm (mentioned earlier) comes into play. We will
    set the support to be a minimum of .1% and our confidence to be 80%. The support
    is low because the dataset is huge and varied. We have over a half million rows
    of item sets. A support of .1% is still 500 occurrences. A confidence of .8 means
    that 80% of the time the rule is considered to be true.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 要基于加载的交易创建规则，请使用以下代码。这是先前提到的Apriori算法发挥作用的地方。我们将支持设置为最低0.1%，置信度设置为80%。由于数据集庞大且多样化，支持较低。我们有超过50万行的项目集。0.1%的支持仍然是500次出现。置信度为0.8意味着规则被认为是真实的80%的时间。
- en: Note
  id: totrans-78
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Data science is a combination of business logic, art, and actual machine learning
    knowhow. A certain degree of trial and error is needed to properly set the support
    and confidence values.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学是业务逻辑、艺术和实际机器学习知识的结合。适当设置支持和置信度值需要一定程度的试验和错误。
- en: '[PRE3]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We can see our results with confidence, lift, and support using the following
    command:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下命令查看我们的结果与置信度、提升和支持。
- en: '[PRE4]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Lhs stands for *lefthand side*; rhs stands for *righthand side*. Items on the
    right were frequently purchased with items on the left with the listed support,
    confidence, and lift. While our support values are not very high, the amount of
    data we have is enough to provide good confidence and lift among our top values.
    For instance, line 1 above indicates that when item 4614440 is purchased there
    is a 100% confidence that item 79353 is also purchased. Furthermore, there is
    a lift of 2.4267 for this relationship. (Remember, a lift value near 1 indicates
    there is no effect of one item on the other.)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Lhs代表*左侧*；rhs代表*右侧*。右侧的项目经常与左侧的项目一起购买，列出的支持、置信度和提升。虽然我们的支持值不是很高，但我们拥有的数据量足以提供顶级值之间的良好置信度和提升。例如，上面的第1行表明当购买项目4614440时，有100%的置信度会购买项目79353。此外，这种关系的提升为2.4267。（请记住，接近1的提升值表示一个项目对另一个项目没有影响。）
- en: 'We have created our association rules; now we will save them as a *transaction*
    object to be used in our operationalization later:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经创建了我们的关联规则；现在我们将它们保存为*transaction*对象，以便稍后在我们的操作化中使用：
- en: '[PRE5]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-86
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: We are going to operationalize this at a local level first and move to a more
    universal level later.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先将在本地层面进行操作化，然后再向更普遍的层面发展。
- en: 'Before we operationalize, we want to test what would happen if we analyze a
    simple result. Create a simple vector from a dataframe with the top result in
    it:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们操作化之前，我们想要测试如果分析一个简单的结果会发生什么。从一个数据框中创建一个简单的向量，其中包含顶部的结果：
- en: '[PRE6]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now match the rules created with the results of our vector:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将创建的规则与我们向量的结果进行匹配：
- en: '[PRE7]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Inspect those rules like we did earlier with the `inspect` function. We see
    that it returns the same values that we had earlier when inspecting the rules
    manually:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 像我们之前用`inspect`函数一样检查这些规则。我们看到它返回了我们之前手动检查规则时得到的相同值：
- en: '[PRE8]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now to create a simple API we need to first create a function from the following
    code with the *dataset* set as an input variable:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在要创建一个简单的API，我们需要首先从以下代码创建一个函数，其中*数据集*作为输入变量：
- en: '[PRE9]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You can create a very quick and simple web API in R Studio using the [`plumber`
    library](https://www.rplumber.io/). You need to be on version > 1.2 of R Studio
    to use some of the features we will outline here. The first step to creating a
    web API is to open a new plumber file using the menu path File → New File → Plumber
    API, as shown in [Figure 8-5](#creating_your_first_plumber_api).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`plumber`库](https://www.rplumber.io/)在 R Studio 中快速创建简单的 Web API。要使用我们将在此概述的某些功能，您需要在
    R Studio 版本 > 1.2 上进行操作。创建 Web API 的第一步是使用菜单路径 文件 → 新建文件 → 管道 API 打开一个新的 plumber
    文件，如[图 8-5](#creating_your_first_plumber_api)所示。
- en: '![Creating your first Plumber API.](assets/pdss_0805.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![创建您的第一个管道 API。](assets/pdss_0805.png)'
- en: Figure 8-5\. Creating your first Plumber API
  id: totrans-98
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-5\. 创建您的第一个管道 API
- en: 'This will give you a base file for `plumber` with a few examples in it. We
    will discard those examples and use the following code:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为`plumber`提供一个基本文件，并包含一些示例。我们将放弃这些示例，使用以下代码：
- en: '[PRE10]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: What this code says in human-speak is, “Take the input received and make it
    a vector so we can search with it. Create a new object that is a subset of our
    association rules that matched our input with the lhs (lefthand side). Return
    that result using the `inspect()` function.”
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码的人类语言意思是，“接收输入并将其转换为向量，以便我们可以进行搜索。创建一个新对象，它是与 lhs（左手边）匹配的关联规则的子集。使用`inspect()`函数返回该结果。”
- en: The preceding code will render our association rules results in a JSON format
    when queried from a browser. The Plumber API is easy to use from R Studio; simply
    click on the Run API button in the upper-right corner of the window.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当从浏览器查询时，上述代码将以 JSON 格式呈现关联规则结果。在 R Studio 中使用 Plumber API 非常简单；只需点击窗口右上角的“运行
    API”按钮即可。
- en: A window will appear that will allow the API to be reviewed and tested. It is
    shown in [Figure 8-6](#swagger_and_the_plumber_api).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 将出现一个窗口，允许对 API 进行审查和测试。显示在[图 8-6](#swagger_and_the_plumber_api)中。
- en: '![Swagger and the Plumber API.](assets/pdss_0806.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![Swagger 和管道 API。](assets/pdss_0806.png)'
- en: Figure 8-6\. Swagger and the Plumber API
  id: totrans-105
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-6\. Swagger 和管道 API
- en: Click on the “Try it out” button and enter a material number. When finished
    click on the Execute button, as shown in [Figure 8-7](#testing_the_plumber_api_with_a_material).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“试一试”按钮并输入物料号。完成后，点击执行按钮，如[图 8-7](#testing_the_plumber_api_with_a_material)所示。
- en: '![Testing the Plumber API with a material number.](assets/pdss_0807.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![使用物料号测试管道 API。](assets/pdss_0807.png)'
- en: Figure 8-7\. Testing the Plumber API with a material number
  id: totrans-108
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-7\. 使用物料号测试管道 API
- en: The results of the web API are displayed in the response section, as shown in
    [Figure 8-8](#results_of_the_plumber_api_call).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Web API 的结果显示在响应部分中，如[图 8-8](#results_of_the_plumber_api_call)所示。
- en: '![Results of the Plumber API call.](assets/pdss_0808.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![管道 API 调用的结果。](assets/pdss_0808.png)'
- en: Figure 8-8\. Results of the Plumber API call
  id: totrans-111
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-8\. 管道 API 调用的结果
- en: 'The results of the API show the following in JSON format:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: API 的结果以 JSON 格式显示如下：
- en: LHS (antecedent)
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LHS (前提)
- en: RHS (consequent)
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RHS (结果)
- en: Support
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持
- en: Confidence
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 置信度
- en: Lift
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lift
- en: This is all data that can be used in an application providing sales recommendations.
    We’ve successfully created a web API, but it is restricted to our local computer.
    There are many ways to host and publish APIs. This is largely governed by your
    company’s environment. Does your company use Azure, Amazon Web Services, Digital
    Ocean, or something else? Perhaps there is no cloud environment at all and an
    on-premises server is deployed. The options are too varied to be covered in this
    little book.^([2](ch08.html#ch08fn6))
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据都可以用于提供销售推荐的应用程序。我们成功创建了一个 Web API，但仅限于我们的本地计算机。有许多方式来托管和发布 API。这主要受您公司环境的管理。您的公司使用
    Azure、Amazon Web Services、Digital Ocean 还是其他什么？也许根本没有云环境，而是部署在本地服务器上。选择太多，无法在这本小书中详细介绍。^([2](ch08.html#ch08fn6))
- en: Note
  id: totrans-119
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: 'Remember: we’re not building an entire mobile app here. This scenario assumes
    that Big Bonanza has an existing SAPUI5-based Fiori application, and that Greg,
    Paul, and Duane are just sprinkling in some extra logic. All of the changes suggested
    here are contrived examples, and while they require knowledge of HTML, JavaScript,
    and XML they do not require knowledge of developing full-functioning iOS or Android
    apps in their native programming languages.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 记住：我们这里不是在构建一个完整的移动应用程序。此场景假设 Big Bonanza 公司已有一个基于 SAPUI5 的 Fiori 应用程序，并且 Greg、Paul
    和 Duane 只是添加了一些额外的逻辑。这里提出的所有更改都是虚构的例子，虽然需要了解 HTML、JavaScript 和 XML，但并不需要在其本地编程语言中开发完整功能的
    iOS 或 Android 应用程序。
- en: Fiori
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Fiori
- en: We have an operational, web-accessible point of reference to get at our Plumber
    API. As discussed at the beginning of the chapter, Big Bonanza uses an SAPUI5-based
    Fiori^([3](ch08.html#ch08fn7)) application to allow field sales personnel to enter
    sales orders via smartphone. Before getting heavily into fun data science scenarios,
    Duane from the SAP team had a hand in designing the sales order entry application.
    He did a great job simplifying what can be very complex in the normal desktop
    SAP GUI down to a couple of screens on mobile.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个操作性的、可通过网络访问的参考点，可以使用我们的Plumber API。正如本章开头讨论的那样，Big Bonanza使用基于SAPUI5的Fiori^([3](ch08.html#ch08fn7))应用程序，允许现场销售人员通过智能手机输入销售订单。在深入进行有趣的数据科学场景之前，SAP团队的Duane在设计销售订单录入应用程序时做了一些工作。他在移动设备上简化了通常在桌面SAP
    GUI中可能非常复杂的操作到几个屏幕上。
- en: To get the field salespeople really pushing those cookie-holder extras, let’s
    map out a small enhancement to Duane’s order entry app. We’ll add a screen that
    pops up after the sales staff confirms a new order, which will list out the additional
    materials that are often purchased together with the order’s items. The salesperson
    can then choose to add one or more of those items to the order by suggesting them
    to the customer on the spot.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让现场销售人员真正推动那些小额额外销售，让我们为Duane的订单录入应用程序制定一个小增强计划。我们将添加一个屏幕，在销售人员确认新订单后弹出，列出通常与订单商品一起购买的附加材料。销售人员可以根据需要向客户推荐这些项目中的一个或多个，以便立即将其添加到订单中。
- en: Note
  id: totrans-124
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Visit [*https://open.sap.com/*](https://open.sap.com/) and search “SAPUI5” to
    learn more about building SAPUI5 applications for the Fiori experience.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[*https://open.sap.com/*](https://open.sap.com/) 并搜索“SAPUI5”，了解更多关于为Fiori体验构建SAPUI5应用程序的信息。
- en: SAPUI5 applications follow a common model-view-controller^([4](ch08.html#ch08fn8))
    structure. “View” files define the layout of the elements on the screen. “Controller”
    files define the behavior and logic. Woven through both are references to “models”
    that define how the data is stored on the client device for application use. For
    our use case, we will modify view files to create a little pop-up screen that
    holds the suggested new items. We will create a new model to hold information
    about the suggested products. Finally, we will modify controller files to ensure
    that the pop-up screen appears at the right time.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: SAPUI5应用程序遵循一种常见的模型-视图-控制器^([4](ch08.html#ch08fn8))结构。“视图”文件定义了屏幕上元素的布局。“控制器”文件定义了行为和逻辑。在这两者中，都有关于“模型”的引用，它定义了如何在客户端设备上存储数据以供应用使用。对于我们的用例，我们将修改视图文件以创建一个小弹出屏幕，用于显示建议的新产品。我们将创建一个新的模型来保存关于建议产品的信息。最后，我们将修改控制器文件，确保弹出屏幕在正确的时间出现。
- en: Big Bonanza has a very stripped-down UI like [Figure 8-9](#simplified_order_entrycomma_ability_to_a).
    Just add items to the last screen after selecting a customer to submit to SAP
    to create the order.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Big Bonanza有一个非常简化的UI，类似于[图8-9](#simplified_order_entrycomma_ability_to_a)。在选择客户后，只需在最后一个屏幕上添加项目即可提交到SAP以创建订单。
- en: We’re going to put our recommendation flow into the process where the salesperson
    would tap Complete Order. Let’s start with the view files that govern our buttons.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把我们的推荐流程放入销售人员点击“完成订单”的流程中。让我们从管理我们按钮的视图文件开始。
- en: 'In the main view file (*Table.view.xml*, which governs this screen), the SAPUI5
    developer has already defined the buttons in the footer. We can quickly check
    on that to see where we can hook up our extra logic:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在主视图文件（*Table.view.xml*，管理此屏幕）中，SAPUI5开发人员已经在页脚中定义了按钮。我们可以快速检查一下，看看我们可以在哪里连接我们的额外逻辑：
- en: '[PRE11]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Simplified order entry, ability to add another product or to complete the
    order.](assets/pdss_0809.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![简化订单录入，能够添加其他产品或完成订单。](assets/pdss_0809.png)'
- en: Figure 8-9\. Simplified order entry with ability to add another product or to
    complete the order
  id: totrans-132
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图8-9\. 简化订单录入，能够添加其他产品或完成订单
- en: 'The `press` attribute of the Complete Order button tells us what function (`onOrderPress`)
    will be executed when the user taps that button. So let’s jump into that code,
    in the *Table.controller.js* file:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: “完成订单”按钮的`press`属性告诉我们，当用户点击该按钮时将执行什么功能（`onOrderPress`）。所以让我们进入那段代码，在*Table.controller.js*文件中：
- en: '[PRE12]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: There’s one more piece to this puzzle. Near the top of the `onOrderPress` function,
    we call out to an XML fragment. This fragment defines the look and feel of the
    pop-up dialog that appears ([Figure 8-10](#fig0810)) after pressing Complete Order.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这个拼图还有一个碎片。在`onOrderPress`函数的顶部附近，我们调用了一个XML片段。该片段定义了按下“完成订单”后出现的弹出对话框的外观和感觉（[图8-10](#fig0810)）。
- en: '![On mobile phone, the suggestions list shows over the top of the existing
    order items list, and allows for selecting one or multiple items to add to the
    sales order](assets/pdss_0810.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![在手机上，建议列表显示在现有订单项目列表的顶部，并允许选择一个或多个项目添加到销售订单](assets/pdss_0810.png)'
- en: Figure 8-10\. On mobile phone, the suggestions list shows over the top of the
    existing order items list, and allows for selecting one or multiple items to add
    to the sales order.
  id: totrans-137
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-10\. 在手机上，建议列表显示在现有订单项目列表的顶部，并允许选择一个或多个项目添加到销售订单。
- en: 'To set up the suggestion list dialog, create a file called *RecommendDialog.fragment.xml*
    in your SAPUI5 project, and add the following XML:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置建议列表对话框，请在您的SAPUI5项目中创建名为*RecommendDialog.fragment.xml*的文件，并添加以下XML内容：
- en: '[PRE13]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Summary
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'With a mid-process prompt for selling associated items, Duane has given Amir
    the VP of Sales a powerful tool to prod his sales team to upsell on the spot.
    We used sales data gathered from SAP tables in an ABAP program that packed things
    nicely into a CSV file. Using R, we analyzed this data looking for three key factors
    in association rule mining: support, confidence, and lift.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 通过中间过程提示销售相关项目，Duane为销售副总裁Amir提供了一个强大的工具，以促使其销售团队立即进行增值销售。我们使用了从SAP表中收集的销售数据，在一个ABAP程序中将其整理成一个CSV文件。使用R，我们分析了这些数据，寻找了关联规则挖掘中的三个关键因素：支持度、置信度和提升度。
- en: The `arules` package gave us a quick way to analyze the raw data for those three
    factors. We layered a function on top of it, so as to quickly allow an input of
    a product number and an output of 1 to *n* products that have strong associations.
    Using the `plumber` library in R, we quickly turned that function into a web-callable
    API.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`arules`包为我们提供了快速分析这三个因素原始数据的方法。我们在其上层添加了一个函数，以便快速输入产品编号并输出具有强关联的1到*n*个产品。使用R中的`plumber`库，我们快速将该函数转换为可通过Web调用的API。'
- en: Given that sales team members in the field use SAP Fiori apps on their mobile
    phones to enter sales orders from customers, we looked at how to quickly adapt
    the SAPUI5 codebase of the Fiori application to present a “suggested items” prompt
    to users. This gives them one last upsell tool before submitting the order. Not
    every customer chooses to add the upsell items—but enough of them do that it has
    positively impacted Amir’s sales numbers.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到销售团队成员在现场使用SAP Fiori应用程序在其手机上为客户录入销售订单，我们研究了如何快速调整Fiori应用程序的SAPUI5代码库，向用户展示“建议项目”提示。在提交订单之前，这为他们提供了一个最后的增值销售工具。并非每个客户都选择添加增值项目，但足够多的客户选择这样做，这对Amir的销售数字产生了积极的影响。
- en: Association rule mining has been around in one way or another for a long time.
    Putting it in the hands of SAP users is a fresh take on a mature approach; the
    information is right there for the taking!
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 关联规则挖掘长期以来一直存在。将其交给SAP用户使用是成熟方法的新尝试；信息就在那里，可以随时获取！
- en: ^([1](ch08.html#ch08fn1-marker)) Sequence mining is a type of association rule
    mining but is not included here. Some things just can’t make it.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch08.html#ch08fn1-marker)) 序列挖掘是一种关联规则挖掘的一种类型，但此处未包括。有些事情就是无法被实现。
- en: ^([2](ch08.html#ch08fn6-marker)) We will be providing a follow-up blog on using
    Digital Ocean as a platform for a public API with R and plumber.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch08.html#ch08fn6-marker)) 我们将在博客中提供有关使用Digital Ocean作为公共API平台的后续文章，并结合R和plumber进行介绍。
- en: ^([3](ch08.html#ch08fn7-marker)) Also recall that SAPUI5 is a web application
    development framework. SAP’s user experience capabilities have evolved a great
    deal in the last four to five years, and SAPUI5 is the leader of those changes.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch08.html#ch08fn7-marker)) 还要记住，SAPUI5是一个Web应用程序开发框架。在过去四到五年中，SAP的用户体验能力有了很大的发展，而SAPUI5正是这些变化的领导者。
- en: ^([4](ch08.html#ch08fn8-marker)) [The model-view-controller structure](https://en.wikipedia.org/wiki/Model–view–controller)
    is one of the oldest, most-used architectures in software development with graphical
    user interfaces.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch08.html#ch08fn8-marker)) [模型-视图-控制器结构](https://zh.wikipedia.org/wiki/Model–view–controller)是软件开发中最古老、最常用的架构之一，特别适用于图形用户界面。
