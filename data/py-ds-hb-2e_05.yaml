- en: Part II. Introduction to NumPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分. NumPy 入门
- en: 'This part of the book, along with [Part III](part03.xhtml#section-0300-introduction-to-pandas),
    outlines techniques for effectively loading, storing, and manipulating in-memory
    data in Python. The topic is very broad: datasets can come from a wide range of
    sources and in a wide range of formats, including collections of documents, collections
    of images, collections of sound clips, collections of numerical measurements,
    or nearly anything else. Despite this apparent heterogeneity, many datasets can
    be represented fundamentally as arrays of numbers.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的这一部分，连同[第三部分](part03.xhtml#section-0300-introduction-to-pandas)，概述了在 Python
    中有效加载、存储和操作内存中数据的技术。这个主题非常广泛：数据集可以来自各种来源，以及各种格式，包括文档集合、图像集合、声音片段集合、数字测量集合，或者几乎任何其他类型的数据。尽管看似多样化，但许多数据集本质上都可以表示为数字数组。
- en: For example, images—particularly digital images—can be thought of as simply
    two-dimensional arrays of numbers representing pixel brightness across the area.
    Sound clips can be thought of as one-dimensional arrays of intensity versus time.
    Text can be converted in various ways into numerical representations, such as
    binary digits representing the frequency of certain words or pairs of words. No
    matter what the data is, the first step in making it analyzable will be to transform
    it into arrays of numbers. (We will discuss some specific examples of this process
    in [Chapter 40](ch40.xhtml#section-0504-feature-engineering).)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，图像——特别是数字图像——可以简单地被视为表示整个区域内像素亮度的二维数组。声音片段可以被视为与时间的强度一维数组。文本可以以各种方式转换为数字表示，比如表示特定单词或词组频率的二进制数字。无论数据是什么，使其可分析的第一步将是将其转换为数字数组。（我们将在[第40章](ch40.xhtml#section-0504-feature-engineering)中讨论此过程的一些具体示例。）
- en: 'For this reason, efficient storage and manipulation of numerical arrays is
    absolutely fundamental to the process of doing data science. We’ll now take a
    look at the specialized tools that Python has for handling such numerical arrays:
    the NumPy package and the Pandas package (discussed in [Part III](part03.xhtml#section-0300-introduction-to-pandas)).'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，对数字数组的有效存储和操作对于进行数据科学的过程是绝对基本的。我们现在将看看 Python 专门用于处理这种数字数组的专用工具：NumPy 软件包和
    Pandas 软件包（在[第三部分](part03.xhtml#section-0300-introduction-to-pandas)中讨论）。
- en: This part of the book will cover NumPy in detail. NumPy (short for *Numerical
    Python*) provides an efficient interface to store and operate on dense data buffers.
    In some ways, NumPy arrays are like Python’s built-in `list` type, but NumPy arrays
    provide much more efficient storage and data operations as the arrays grow larger
    in size. NumPy arrays form the core of nearly the entire ecosystem of data science
    tools in Python, so time spent learning to use NumPy effectively will be valuable
    no matter what aspect of data science interests you.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的这一部分将详细介绍 NumPy。NumPy（缩写为 *Numerical Python*）提供了一个高效的接口来存储和操作密集数据缓冲区。在某些方面，NumPy
    数组类似于 Python 的内置 `list` 类型，但是随着数组大小的增长，NumPy 数组提供了更高效的存储和数据操作。NumPy 数组几乎构成了 Python
    数据科学工具生态系统的全部核心，因此花时间学习如何有效地使用 NumPy 对无论你感兴趣的数据科学的哪个方面都是有价值的。
- en: 'If you followed the advice in the [Preface](preface01.xhtml#section-0000-preface)
    and installed the Anaconda stack, you already have NumPy installed and ready to
    go. If you’re more the do-it-yourself type, you can go to [NumPy.org](http://www.numpy.org)
    and follow the installation instructions found there. Once you do, you can import
    NumPy and double-check the version:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你遵循了[前言](preface01.xhtml#section-0000-preface)中的建议并安装了 Anaconda 栈，那么你已经安装并准备好使用
    NumPy 了。如果你更喜欢自己动手，你可以访问[NumPy.org](http://www.numpy.org)并按照那里的安装说明进行操作。一旦你安装完成，你就可以导入
    NumPy 并检查版本：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For the pieces of the package discussed here, I’d recommend NumPy version 1.8
    or later. By convention, you’ll find that most people in the SciPy/PyData world
    will import NumPy using `np` as an alias:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章讨论的软件包的组件，我建议使用 NumPy 版本 1.8 或更高版本。按照惯例，在 SciPy/PyData 世界中，大多数人都会使用 `np`
    作为 NumPy 的别名导入：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Throughout this chapter, and indeed the rest of the book, you’ll find that this
    is the way we will import and use NumPy.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章以及书中的其余部分中，你会发现这是我们导入和使用 NumPy 的方式。
