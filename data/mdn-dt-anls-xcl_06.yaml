- en: Chapter 5\. Merging and Appending Data in Power Query
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章\. 在 Power Query 中合并和追加数据
- en: So far in [Part I](part01.html#part-1), you have learned various operations
    to transform the rows and columns of a single table using Power Query. However,
    data often comes from multiple tables, including sources outside of Excel. In
    this chapter, you will discover how to merge multiple files into a single dataset.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在[第一部分](part01.html#part-1)中，您已经学习了使用 Power Query 转换单个表格的行和列的各种操作。然而，数据通常来自多个表格，包括
    Excel 外部的数据源。在本章中，您将了解如何将多个文件合并成一个数据集。
- en: Because this chapter focuses on connecting to external files rather than tables
    inside the same workbook, start following along by opening a new workbook.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本章重点是连接到外部文件而不是工作簿内部的表格，请通过打开一个新的工作簿开始跟进。
- en: Appending Multiple Sources
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 追加多个来源
- en: Data often arrives in formats that require vertically stacking files together.
    For example, [Figure 5-1](#append-queries-example) illustrates a common scenario
    where sales data is presented in separate tables for January, February, and March.
    In these instances, it’s helpful to merge them into a single source. This enables
    the computation of total sales for quarter 1, for instance.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 数据通常以需要垂直堆叠文件的格式到达。例如，[图 5-1](#append-queries-example)展示了一个常见情景，即销售数据分别以单独的表格呈现了一月、二月和三月的数据。在这些情况下，将它们合并为一个来源是很有帮助的。这使得例如计算第一季度的总销售额成为可能。
- en: '![Example queries to append](assets/mdae_0501.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![追加查询示例](assets/mdae_0501.png)'
- en: Figure 5-1\. A simple example of datasets to append
  id: totrans-6
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-1\. 追加数据集的简单示例
- en: The append operation in Power Query facilitates this process.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Power Query 中，追加操作有助于简化此过程。
- en: Connecting to External Excel Workbooks
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接到外部 Excel 工作簿
- en: So far, this book has used Power Query for the manipulation of data sources
    within a workbook. However, the utility of Power Query extends significantly beyond
    this scope. It facilitates integration with a multitude of data sources, notably
    external Excel files and *.csv* files, which will be a primary focus of this chapter.
    The *ch_05* folder in the book’s companion repository features datasets sourced
    from sports journalist Sean Lahman’s [Major League Baseball database](http://seanlahman.com),
    through the conclusion of the 2022 season.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，本书已经使用 Power Query 来操作工作簿内部的数据源。然而，Power Query 的实用性远不止于此。它大大扩展了与多种数据源的集成能力，特别是外部的
    Excel 文件和 *.csv* 文件，这将是本章的主要关注点。该书配套资料库中的 *ch_05* 文件夹包含了从体育记者肖恩·拉曼的[大联盟棒球数据库](http://seanlahman.com)，直至2022赛季结束的数据集。
- en: The files *people_born_in_usa.xlsx* and *people_born_outside_usa.xlsx* consist
    of information about Major League Baseball individuals who were born inside and
    outside of the United States, respectively. The goal is to vertically append these
    two files into a single table using Power Query.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 文件 *people_born_in_usa.xlsx* 和 *people_born_outside_usa.xlsx* 包含了有关出生在美国以及出生在美国以外的个人的信息。目标是使用
    Power Query 将这两个文件垂直追加到一个表中。
- en: To begin the process, navigate to the Data tab on the ribbon and select Get
    Data → From File → From Excel Workbook, as shown in [Figure 5-2](#power-query-connect-to-excel).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始这个过程，请在功能区的数据选项卡上导航并选择获取数据 → 从文件 → 从 Excel 工作簿获取数据，如 [图 5-2](#power-query-connect-to-excel)
    所示。
- en: '![Importing connection](assets/mdae_0502.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![导入连接](assets/mdae_0502.png)'
- en: Figure 5-2\. Connecting to an Excel file in Power Query
  id: totrans-13
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-2\. 在 Power Query 中连接到 Excel 文件
- en: Start by connecting to *people_born_in_usa.xlsx*. Keep in mind that an Excel
    workbook can contain multiple worksheets, named ranges, tables, and more. That
    means you need to select exactly what entity of the workbook you want to load
    into Power Query. In this case, we want the `people_born_in_usa` table, so click
    on that option underneath the search bar in the Navigator dialog box, as shown
    in [Figure 5-3](#people-born-usa-pq-navigator).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先连接到 *people_born_in_usa.xlsx*。请记住，Excel 工作簿可以包含多个工作表、命名范围、表格等内容。这意味着您需要精确选择要加载到
    Power Query 中的工作簿实体。在这种情况下，我们希望加载`people_born_in_usa`表格，因此请点击导航对话框中搜索栏下方的该选项，如
    [图 5-3](#people-born-usa-pq-navigator) 所示。
- en: '![Importing connection](assets/mdae_0503.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![导入连接](assets/mdae_0503.png)'
- en: Figure 5-3\. Loading an external Excel workbook into Power Query
  id: totrans-16
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-3\. 将外部 Excel 工作簿加载到 Power Query 中
- en: Before loading data into your workbook, you can clean or transform it by accessing
    the Power Query Editor. This is done by selecting the Transform Data button. However,
    I will proceed to load the data directly into the workbook for now. If there’s
    a need to transform the data later, I can always return to Power Query to make
    the necessary adjustments.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在将数据加载到工作簿之前，您可以通过访问Power Query编辑器来清理或转换数据。可以通过选择“转换数据”按钮来完成此操作。但是，目前我将直接将数据加载到工作簿中。如果以后需要转换数据，则可以返回Power
    Query进行必要的调整。
- en: To proceed, click the drop-down button next to Load, and then select Load To
    in the Navigator dialog box and choose the Only Create Connection option. Since
    the goal is to append this file to another one for combined analysis later, there’s
    no need to load the data into a separate Excel table at this stage.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要继续，请单击“加载”旁边的下拉按钮，然后在导航器对话框中选择“加载到”并选择“仅创建连接”选项。由于目标是稍后将此文件附加到另一个文件以进行联合分析，因此在此阶段无需将数据加载到单独的Excel表格中。
- en: Next, repeat these steps to load *people_born_outside_usa.xlsx*. Again, load
    the query as Only Create Connection. You have now loaded both files as connections
    only to Power Query.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，重复这些步骤以加载*people_born_outside_usa.xlsx*。同样，将查询加载为仅创建连接。现在，您已经仅将这两个文件加载为Power
    Query的连接。
- en: On the ribbon, while the Data tab is still selected, go to Queries & Connections.
    Here, you’ll find both `people_born_in_usa` and `people_born_outside_usa` listed
    as connections. Right-click on `people_born_in_usa` and choose Edit to open the
    Power Query Editor, as seen in [Figure 5-4](#power-query-excel-navigation).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在选定“数据”选项卡时，回到功能区的“查询与连接”中。在这里，您将找到列出为连接的`people_born_in_usa`和`people_born_outside_usa`。右键单击`people_born_in_usa`，选择“编辑”以打开Power
    Query编辑器，如[图 5-4](#power-query-excel-navigation)所示。
- en: '![Navigator menu](assets/mdae_0504.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![导航菜单](assets/mdae_0504.png)'
- en: Figure 5-4\. Viewing queries in the Queries & Connections Pane
  id: totrans-22
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-4\. 在“查询与连接”窗格中查看查询
- en: Appending the Queries
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附加查询
- en: Next, head to Home on the Power Query Editor ribbon and click the Append Queries
    dropdown in the Combine group. Select “Append Queries as New” to proceed, as seen
    in [Figure 5-5](#append-queries-as-new).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，转到Power Query编辑器功能区的“主页”，并在“组合”组中单击“附加查询”下拉菜单。选择“附加查询作为新查询”继续，如[图 5-5](#append-queries-as-new)所示。
- en: '![Append as New menu](assets/mdae_0505.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![附加为新菜单](assets/mdae_0505.png)'
- en: Figure 5-5\. Appending queries as new in Power Query
  id: totrans-26
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-5\. 在Power Query中附加查询作为新查询
- en: Append Queries combines data from multiple tables into an existing query, enlarging
    it, whereas “Append Queries as New” combines them into a new query, keeping original
    tables unchanged.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 附加查询将多个表格的数据合并到现有查询中，从而扩展其大小，而“附加查询作为新查询”将它们合并到新查询中，保持原始表格不变。
- en: Note
  id: totrans-28
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: The queries you are seeking to append should have a consistent data structure,
    including the same number of columns, column names, and data types. Otherwise,
    you may need to perform some data transformation steps to align the structure
    before appending.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您希望附加的查询应具有一致的数据结构，包括相同数量的列、列名和数据类型。否则，在附加之前可能需要执行一些数据转换步骤来对齐结构。
- en: You will now see an Append dialog box asking which tables to combine into a
    single table. Choose `people_born_in_usa` and `people_born_outside_usa`, as seen
    in [Figure 5-6](#append-tables).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将看到一个附加对话框，询问要合并成单个表格的表格是哪些。选择`people_born_in_usa`和`people_born_outside_usa`，如[图 5-6](#append-tables)所示。
- en: '![Append as New menu](assets/mdae_0506.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![附加为新菜单](assets/mdae_0506.png)'
- en: Figure 5-6\. Appending two tables in Power Query
  id: totrans-32
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-6\. 在Power Query中附加两个表格
- en: Well done! You appended the two tables to create a new query named `Append1`.
    Rename it to `people_append` for clarity. Close and load your results to an Excel
    table. The resulting query will have 20,370 rows, representing the combined total
    of rows from both tables. You can confirm this count using Power Query’s data
    profiling features as covered in [Chapter 2](ch02.html#ch_02).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 干得好！您已经附加了两个表格，创建了一个名为`Append1`的新查询。为了清晰起见，将其重命名为`people_append`。关闭并加载您的结果到Excel表格中。生成的查询将有20,370行，代表了来自两个表格的行的合计。您可以使用Power
    Query的数据分析功能确认此计数，如[第 2 章](ch02.html#ch_02)中所述。
- en: Understanding Relational Joins
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解关系连接
- en: After appending all individual-level records into one table, the next step involves
    linking it with other tables to gain further insights. The original Lahman database
    comprises various tables at the individual record, including batting records,
    All-Star game appearances, and others. By utilizing the `playerID` column, these
    tables can be interconnected efficiently.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有个体级别记录附加到一个表后，下一步是将其与其他表格连接以获取进一步的见解。原始的 Lahman 数据库包括各种个体记录的表，包括击球记录、全明星比赛出场记录等。通过利用
    `playerID` 列，这些表可以在 Power Query 中高效地互连。
- en: To try this out in your current workbook, use Power Query to connect to the
    dataset named *hof_inductions.csv* located in the same folder. This dataset comprises
    information on inductees into the Baseball Hall of Fame. To proceed, navigate
    in Excel to Data → Get Data → From File → From Text/CSV. Then, locate and select
    *hof_inductions.csv*. Because a *.csv* file does not support multiple sheets or
    ranges like Excel does, it will display the data immediately, as shown in [Figure 5-7](#load-hof-navigator-menu).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要在当前工作簿中尝试这一功能，请使用 Power Query 连接到同一文件夹中名为 *hof_inductions.csv* 的数据集。该数据集包含了进入棒球名人堂的入选者信息。要继续，请在
    Excel 中导航到 数据 → 获取数据 → 从文件 → 从文本/CSV。然后，定位并选择 *hof_inductions.csv*。由于 *.csv* 文件不支持像
    Excel 那样的多个工作表或范围，它将立即显示数据，如[图 5-7](#load-hof-navigator-menu)所示。
- en: '![Loading people into Navigator](assets/mdae_0507.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![将人员加载到导航器中](assets/mdae_0507.png)'
- en: Figure 5-7\. Loading a *.csv* file into Power Query
  id: totrans-38
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-7\. 将 *.csv* 文件加载到 Power Query 中
- en: Load `hof_inductions` as a connection only into your workbook.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `hof_inductions` 仅作为连接加载到您的工作簿中。
- en: With all relevant data loaded into Power Query, it’s time to find a way to consolidate
    the information found in the `people_append` table with that found in the `hof_inductions`
    table by way of the shared `playerID` column.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有相关数据加载到 Power Query 后，现在是时候找到一种方法，通过共享的 `playerID` 列，将 `people_append` 表中的信息与
    `hof_inductions` 表中的信息整合在一起。
- en: One option to do this might be to use an Excel lookup function like `VLOOKUP()`
    to retrieve the corresponding name records for each value of `playerID`. I like
    to call `VLOOKUP()` the “duct tape of Excel” because of this ability to append
    additional columns to a dataset.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 可以选择的一个方法是使用 Excel 查找函数，如 `VLOOKUP()`，来检索每个`playerID`值的对应姓名记录。我喜欢称呼 `VLOOKUP()`
    为 Excel 的“胶带”，因为它可以将额外的列附加到数据集中。
- en: But if `VLOOKUP()` is duct tape, then the relational join is a full-on welder.
    I say this because `VLOOKUP()` is primarily designed for single-condition lookups
    within Excel’s environment. Furthermore, it doesn’t have a systematic approach
    to handle missing values, which can lead to data inconsistencies. It can also
    lead to slow and unreliable workbooks, as each `VLOOKUP()` formula must be recalculated
    every time the workbook calculates.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果 `VLOOKUP()` 是胶带，那么关系连接就是完整的焊接机。我这样说是因为 `VLOOKUP()` 主要设计用于 Excel 环境中的单条件查找。此外，它没有处理缺失值的系统化方法，这可能导致数据不一致。它还可能导致工作簿运行缓慢且不可靠，因为每次工作簿计算时都必须重新计算每个
    `VLOOKUP()` 公式。
- en: Note
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: The new `XLOOKUP()` function in Excel is designed as a modern upgrade to `VLOOKUP()`,
    addressing several of its limitations. However, it too does not overcome all the
    issues when compared to relational joins in Power Query. For more information
    on the `XLOOKUP()` function, refer to [Chapter 10](ch10.html#ch_10).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Excel 中的新 `XLOOKUP()` 函数被设计为 `VLOOKUP()` 的现代升级，解决了其几个限制。然而，与 Power Query 中的关系连接相比，它也不能完全解决所有问题。有关
    `XLOOKUP()` 函数的更多信息，请参阅[第 10 章](ch10.html#ch_10)。
- en: Power Query provides a more comprehensive solution. It allows for merging data
    based on multiple conditions, handles larger datasets more efficiently, offers
    a systematic way to address missing values, records transformation steps to ensure
    data integrity, and can pull data from a range of sources.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Power Query 提供了更全面的解决方案。它允许根据多个条件合并数据，更高效地处理大型数据集，提供系统化的方法来处理缺失值，记录转换步骤以确保数据完整性，并且可以从各种来源获取数据。
- en: This method is also more computationally efficient, as the merge is created
    just once and only re-evaluated when the query gets refreshed. The resulting merge
    table is a flat, formula-free object that is much easier to use. This makes Power
    Query a more dynamic tool for intricate data integration and transformation.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法在计算效率上也更高，因为合并只需创建一次，并且仅在查询刷新时重新评估。生成的合并表是一个平面、无公式的对象，更易于使用。这使得 Power Query
    成为处理复杂数据集成和转换的**终极**工具。
- en: 'The following sections explore two of the most common relational join types:
    the left outer join and the inner join.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分探讨了两种最常见的关系连接类型：左外连接和内连接。
- en: 'Left Outer Join: Think VLOOKUP()'
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 左外连接：类似于 VLOOKUP()
- en: The *left outer join* retains all records from the first merged table and searches
    for matching values in the second. If no matches are found, a `null` result is
    returned. This join type is very similar to `VLOOKUP()`, with one notable difference
    being the use of `null` to indicate missing values, where `VLOOKUP()` would return
    `#N/A`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*左外连接* 保留来自第一个合并表的所有记录，并在第二个表中查找匹配的值。如果找不到匹配项，则返回`null`结果。此连接类型非常类似于`VLOOKUP()`，但有一个显著区别是使用`null`来指示缺失值，而`VLOOKUP()`会返回`#N/A`。'
- en: An example of the result of a left outer join on a small dataset is seen in
    [Figure 5-8](#left-outer-join).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在小数据集上执行左外连接的结果示例如[图5-8](#left-outer-join)所示。
- en: '![Left outer join](assets/mdae_0508.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![左外连接](assets/mdae_0508.png)'
- en: Figure 5-8\. Illustration of a left outer join
  id: totrans-52
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-8\. 左外连接示例
- en: 'To get started on the join, head back to the Power Query Editor and select
    the `people_append` table. Next, head to the Combine group on the ribbon and select
    Merge Queries as New, as shown in [Figure 5-9](#merge-queries-as-new):'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始连接，请返回到Power Query Editor并选择`people_append`表。接下来，转到功能区中的合并组，并选择“合并查询为新查询”，如[图5-9](#merge-queries-as-new)所示：
- en: '![Left outer join](assets/mdae_0509.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![左外连接](assets/mdae_0509.png)'
- en: Figure 5-9\. Merging queries as new in Power Query
  id: totrans-55
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-9\. 在Power Query中合并查询为新查询
- en: To complete the join, select `hof_inductions` from the second drop-down menu
    of the Merge dialog box. Click on `playerID` in both tables to identify it as
    the column to merge on. Finally, confirm Left Outer as the desired Join Kind in
    the third drop-down menu.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成连接操作，请在合并对话框的第二个下拉菜单中选择`hof_inductions`。点击两个表中的`playerID`来标识它作为连接依据的列。最后，在第三个下拉菜单中确认左外连接为所需的连接类型。
- en: Your Merge dialog should look like [Figure 5-10](#left_outer_join_menu).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您的合并对话框应如[图5-10](#left_outer_join_menu)所示。
- en: '![Left outer join](assets/mdae_0510.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![左外连接](assets/mdae_0510.png)'
- en: Figure 5-10\. Left outer join in Power Query
  id: totrans-59
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-10\. Power Query 中的左外连接
- en: Click OK, and you will see the merge results in a query named `Merge1`. Go ahead
    and double-click that name to rename the query `people_left`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 单击“确定”，您将在名为`Merge1`的查询中看到合并结果。双击该名称以重命名查询为`people_left`。
- en: Scroll to the right of your `people_left` dataset. The data in our query looks
    a little unusual right now, specifically the `hof_inductions` column, which is
    set to Table in every row of the data. This represents a nested table containing
    all the matched rows from the second table for a given row in the first table.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动到您的`people_left`数据集右侧。我们查询的数据看起来有点不寻常，特别是`hof_inductions`列，它在数据的每一行中都设置为表。这表示一个嵌套表，包含第二个表中与第一个表中给定行匹配的所有行。
- en: Go ahead and click the button next to the `hof_inductions` header and then OK
    to expand the nested data, as shown in [Figure 5-11](#left-join-unnest-results).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 单击`hof_inductions`标题旁边的按钮，然后单击“确定”以展开嵌套数据，如[图5-11](#left-join-unnest-results)所示。
- en: '![Inner join](assets/mdae_0511.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![内连接](assets/mdae_0511.png)'
- en: Figure 5-11\. Unnesting the results of a left outer join
  id: totrans-64
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-11\. 展开左外连接的结果
- en: From this menu, you can select as many columns as you wish from the matching
    records in the `hof_inductions` table. You also have the option to prefix these
    columns with the name of their source table. For simplicity, we’ll use the default
    approach, loading all columns with the prefix. However, for more streamlined queries
    in your actual work, you’ll likely prefer to reduce the number of selected columns.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从此菜单中选择`hof_inductions`表中匹配记录的多个列。您还可以选择使用其源表的名称作为这些列的前缀。为简单起见，我们将使用默认方法加载所有带前缀的列。然而，在实际工作中，为了更简洁的查询，您可能更倾向于减少选择的列数。
- en: Load the results into a table in Excel.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 将结果加载到Excel表中。
- en: The `people_left` table, like the original `people_append` table, has 20,370
    records. This is because a left outer join includes all records from the `people`
    table, whether there’s a matching record on the left or not. The results of the
    join are similar to those of `VLOOKUP()`, pulling related Hall of Fame records
    for each player. The advantage? It fetches all records from the `hof_inductions`
    table in one go and doesn’t error out on unmatched records.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`people_left`表，就像原始的`people_append`表一样，有20,370条记录。这是因为左外连接包含`people`表中的所有记录，无论左侧是否有匹配记录。连接的结果类似于`VLOOKUP()`，为每位球员拉取相关的名人堂记录。它的优势在于一次性从`hof_inductions`表中获取所有记录，并且不会因为未匹配的记录而出错。'
- en: 'Inner Join: Only the Matches'
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内连接：仅保留匹配项
- en: By contrast, the *inner join* only keeps records in the resulting table where
    a match is found in both tables, as shown in [Figure 5-12](#inner_join).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，*内连接* 只保留在结果表中在两个表中都有对应匹配的记录，如[图5-12](#inner_join)所示。
- en: '![Inner join](assets/mdae_0512.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![内连接](assets/mdae_0512.png)'
- en: Figure 5-12\. Illustration of an inner join
  id: totrans-71
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-12\. 内连接示意图
- en: 'Following the logic of a left outer join, the `country_id` of 4 in the right
    table will not appear in the resulting table, as there is no corresponding match
    in the left table. Similarly, the `country_id` of 99 in the left table will also
    be excluded from the result for the same reason: it lacks a counterpart in the
    right table. For an entry to be included in the results, there must be a match
    in both tables.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 按照左外连接的逻辑，右表中的`country_id`为4的条目将不会出现在结果表中，因为左表中没有对应的匹配。同样地，左表中`country_id`为99的条目也将因为同样的原因被排除在结果之外：它在右表中缺少对应项。要包含在结果中，必须在两个表中都找到匹配项。
- en: This approach is useful for keeping only complete records and eliminating data
    with potential integrity issues. Applying these rules, the inner join will produce
    fewer rows than the left outer join.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法非常有用，可以保留仅有完整记录并消除可能存在完整性问题的数据。按照这些规则进行内连接将生成比左外连接更少的行。
- en: Following the same steps as above, perform the inner join in Power Query. Select
    `people_append` inside the Editor, then Home → Merge Queries → Merge Queries as
    New. Your merge dialog box should look like [Figure 5-13](#inner-join-merge-menu).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 按照上述步骤，在Power Query中执行内连接。在编辑器中选择`people_append`，然后依次选择 主页 → 合并查询 → 合并查询为新查询。你的合并对话框应该类似于[图5-13](#inner-join-merge-menu)。
- en: '![Inner join](assets/mdae_0513.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![内连接](assets/mdae_0513.png)'
- en: Figure 5-13\. Merge settings to perform an inner join
  id: totrans-76
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-13\. 执行内连接的合并设置
- en: You can expand the matching columns from the nested table in the same manner
    as with the left outer join, then rename the query `people_inner`. Load the resulting
    query into a table. This table consists of only 323 records.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按照左外连接的方式扩展嵌套表中的匹配列，然后将查询重命名为`people_inner`。将得到的查询加载到一个表中。该表仅包含323条记录。
- en: 'The distinction is quite straightforward: an inner join only returns records
    that have a corresponding match in both tables. Not all `playerID` instances appear
    in the `hof_inductions` table, because not every player has been inducted into
    the Hall of Fame, resulting in the absence of their `playerID`s in the merged
    table.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 区分非常直接：内连接仅返回两个表中都有相应匹配的记录。并非所有的`playerID`实例都出现在`hof_inductions`表中，因为并非每位球员都入选名人堂，所以在合并表中缺少他们的`playerID`。
- en: Managing Your Queries
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理你的查询
- en: Great job on loading and merging data from various sources and formats! As you
    delve deeper into Power Query, it’s likely that you’ll accumulate multiple queries
    within your workbook. Managing and comprehending how these queries interact and
    function together will become crucial.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在从各种来源和格式加载和合并数据方面做得非常好！随着你深入使用Power Query，你的工作簿中可能会累积多个查询。管理和理解这些查询如何相互作用和共同运作将变得至关重要。
- en: Grouping Your Queries
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分组你的查询
- en: Grouping queries in Power Query enhances organization and streamlines maintenance
    by categorizing related queries. This approach makes managing complex Excel projects
    more manageable. By grouping your queries, you clearly distinguish between root
    queries and their dependencies, such as appends and merges, that build on those
    foundational queries.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在Power Query中对查询进行分组可增强组织性并通过对相关查询进行分类来简化维护工作。这种方法使得管理复杂的Excel项目更为容易。通过对查询进行分组，你可以清楚地区分基础查询和依赖于这些基础查询（如附加和合并）的查询。
- en: To try it out, head back to the Power Query Editor.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 要尝试它，请返回Power Query编辑器。
- en: 'Under the Queries list on the left side of the Editor window, hold down Ctrl
    and select the source queries: `people_born_in_usa`, `people_born_outside_usa`,
    and `hof_inductions`. Right-click, then select Move To Group → New Group as in
    [Figure 5-14](#power-query-group-queries).'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑窗口左侧的查询列表下，按住 Ctrl 键选择源查询：`people_born_in_usa`、`people_born_outside_usa`
    和 `hof_inductions`。右键单击，然后选择移动到分组 → 新建分组，如 [图 5-14](#power-query-group-queries)
    所示。
- en: '![Grouped queries](assets/mdae_0514.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![分组查询](assets/mdae_0514.png)'
- en: Figure 5-14\. Creating Group queries in Power Query
  id: totrans-86
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-14\. 在 Power Query 中创建分组查询
- en: When the New Group pop-up appears, call this group Sources. Click OK. You’ll
    now see these three sources grouped into a folder in the Queries list. `hof_append`,
    `hof_left`, and `hof_inner` have also automatically been moved into a group called
    Other Queries, as shown in [Figure 5-15](#power-query-grouped-queries).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当新建分组弹出窗口出现时，请将此分组命名为 Sources。点击确定。您现在将看到这三个来源被分组到查询列表中的一个文件夹中。`hof_append`、`hof_left`
    和 `hof_inner` 也自动移动到名为其他查询的组中，如 [图 5-15](#power-query-grouped-queries) 所示。
- en: '![Query Dependencies](assets/mdae_0515.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![查询依赖关系](assets/mdae_0515.png)'
- en: Figure 5-15\. Viewing the grouped queries
  id: totrans-89
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-15\. 查看分组查询
- en: Viewing Query Dependencies
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看查询依赖关系
- en: View Query Dependencies displays how queries are interconnected, which helps
    identify the impact of changes and manage dependencies effectively, ensuring data
    integrity and reducing errors in complex projects. To check it out, go to View
    on the ribbon, then select Query Dependencies. It should look something like [Figure 5-16](#power-query-query-dependencies).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 查看查询依赖关系显示了查询之间的互相关联，有助于识别变更的影响并有效地管理依赖关系，确保复杂项目中的数据完整性并减少错误。要查看它，请转到功能区中的“视图”，然后选择“查询依赖关系”。它应该类似于
    [图 5-16](#power-query-query-dependencies)。
- en: Here, you can see which queries are derived directly from raw data sources,
    such as *.csv* files, the locations of these files, which sources are involved
    in merges or appends, which are loaded into the workbook, and more.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以看到直接从原始数据源（如 *.csv* 文件）派生的查询，这些文件的位置，涉及合并或追加的来源，加载到工作簿中的来源等等。
- en: '![Query Dependencies](assets/mdae_0516.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![查询依赖关系](assets/mdae_0516.png)'
- en: Figure 5-16\. Viewing query dependencies
  id: totrans-94
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-16\. 查看查询依赖关系
- en: When you are finished viewing the Query Dependencies diagram, click Close.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当您完成查看查询依赖关系图后，请单击关闭。
- en: Conclusion
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This chapter highlighted the process of merging and appending data in Power
    Query and the importance of understanding the results. The tools allow for integration
    of various files, such as Excel workbooks and *.csv* files, into a unified dataset.
    By efficiently joining tables, data analysis becomes more streamlined.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍了在 Power Query 中合并和追加数据的过程以及理解结果的重要性。这些工具允许将各种文件（如 Excel 工作簿和 *.csv* 文件）集成到统一的数据集中。通过有效地连接表格，数据分析变得更加高效。
- en: Other join types exist within Power Query, such as the outer join that returns
    matching rows from both tables. For a detailed overview of join techniques, consult
    [this Microsoft Learn article](https://oreil.ly/MSsYz).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Power Query 中还有其他的连接类型，比如外连接，它会返回两个表中匹配的行。有关连接技术的详细概述，请参阅 [此 Microsoft Learn
    文章](https://oreil.ly/MSsYz)。
- en: The overarching theme of [Part I](part01.html#part-1) has been the indispensability
    of clean data for effective data analysis. Having established a strong foundation
    in data cleaning, the next phase of data analysis encompasses modeling and reporting
    using Power Pivot. This is the focus of [Part II](part02.html#part-2).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一部分](part01.html#part-1) 的主题是高效数据分析所需的干净数据的必要性。在建立了数据清理的坚实基础后，数据分析的下一阶段涵盖了使用
    Power Pivot 进行建模和报告。这是 [第二部分](part02.html#part-2) 的重点。'
- en: Exercises
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: Practice combining data sources into a single query using the files found in
    the *exercises\ch_05_exercises* folder in the book’s [companion repository](https://oreil.ly/modern-analytics-excel-exercises).
    These files provide information on all outbound flights from the three major airports
    in New York City during the year 2013.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 练习：结合书中 *exercises\ch_05_exercises* 文件夹中的文件，使用这些文件可以获得2013年纽约市三大机场所有出站航班的信息。这些文件位于书的
    [伴侣存储库](https://oreil.ly/modern-analytics-excel-exercises) 中。
- en: 'Append the *ewr-flights.csv*, *jfk-flights.csv*, and *lga-flights.csv* files,
    consisting of the flight records from Newark Liberty, John F. Kennedy, and LaGuardia
    airports, respectively. Name this query `flights`. (Hint: Select “Three or more
    tables” from the Append menu in Power Query to expedite this process.)'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将*ewr-flights.csv*、*jfk-flights.csv*和*lga-flights.csv*文件追加到一起，包含从纽瓦克自由国际机场、约翰·肯尼迪国际机场和拉瓜迪亚机场的航班记录。将此查询命名为`flights`。（提示：在Power
    Query的追加菜单中选择“三个或更多表格”以加快此过程。）
- en: 'Merge this query with *planes.xlsx* using a left outer join, and then an inner
    join. Call the queries `flights_left` and `flights_inner`, respectively. How many
    records are returned for each? (Hint: Merge the tables based on `tailnum`).'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用左外连接将此查询与*planes.xlsx*合并，然后再进行内连接。分别将查询命名为`flights_left`和`flights_inner`。每个查询返回多少条记录？（提示：根据`tailnum`合并表格。）
- en: You can find the solutions in *ch_05_solutions.xlsx* in the same folder.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在*ch_05_solutions.xlsx*文件的同一文件夹中找到解决方案。
