- en: Chapter 3\. Vectors, Part 2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章。向量，第二部分
- en: The previous chapter laid the groundwork for understanding vectors and basic
    operations acting on vectors. Now you will expand the horizons of your linear
    algebra knowledge by learning about a set of interrelated concepts including linear
    independence, subspaces, and bases. Each of these topics is crucially important
    for understanding operations on matrices.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 前一章为理解向量和作用在向量上的基本操作奠定了基础。现在你将通过学习一系列相互关联的概念扩展你的线性代数知识，包括线性独立性，子空间和基。这些主题对理解矩阵操作至关重要。
- en: Some of the topics here may seem abstract and disconnected from applications,
    but there is a very short path between them, e.g., vector subspaces and fitting
    statistical models to data. The applications in data science come later, so please
    keep focusing on the fundamentals so that the advanced topics are easier to understand.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的一些主题可能看起来抽象，并且与应用无关，但它们之间有一条非常短的路径，例如，向量子空间和将统计模型拟合到数据中。数据科学中的应用稍后会介绍，所以请继续专注于基础知识，这样高级主题会更容易理解。
- en: Vector Sets
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向量集
- en: 'We can start the chapter with something easy: a collection of vectors is called
    a *set*. You can imagine putting a bunch of vectors into a bag to carry around.
    Vector sets are indicated using capital italics letters, like *S* or *V*. Mathematically,
    we can describe sets as the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从一些简单的事情开始这一章：向量的集合称为*集合*。你可以想象把一堆向量放进袋子里携带。向量集使用大写斜体字母表示，如 *S* 或 *V*。数学上，我们可以描述集合如下：
- en: <math alttext="upper V equals StartSet bold v bold 1 comma period period period
    comma bold v Subscript bold n Baseline EndSet" display="block"><mrow><mi>V</mi>
    <mo>=</mo> <mo>{</mo> <msub><mi>𝐯</mi> <mn mathvariant="bold">1</mn></msub> <mo>,</mo>
    <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>,</mo> <msub><mi>𝐯</mi> <mi>𝐧</mi></msub>
    <mo>}</mo></mrow></math>
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper V equals StartSet bold v bold 1 comma period period period
    comma bold v Subscript bold n Baseline EndSet" display="block"><mrow><mi>V</mi>
    <mo>=</mo> <mo>{</mo> <msub><mi>𝐯</mi> <mn mathvariant="bold">1</mn></msub> <mo>,</mo>
    <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>,</mo> <msub><mi>𝐯</mi> <mi>𝐧</mi></msub>
    <mo>}</mo></mrow></math>
- en: Imagine, for example, a dataset of the number of Covid-19 positive cases, hospitalizations,
    and deaths from one hundred countries; you could store the data from each country
    in a three-element vector, and create a vector set containing one hundred vectors.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，例如，一个包含一百个国家的 Covid-19 正确案例、住院和死亡数的数据集；你可以将每个国家的数据存储在一个三元素向量中，并创建一个包含一百个向量的向量集。
- en: Vector sets can contain a finite or an infinite number of vectors. Vector sets
    with an infinite number of vectors may sound like a uselessly silly abstraction,
    but vector subspaces are infinite vector sets and have major implications for
    fitting statistical models to data.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 向量集可以包含有限数量或无限数量的向量。带有无限数量向量的向量集听起来可能像一个毫无用处的愚蠢抽象，但向量子空间是无限向量集，并对将统计模型拟合到数据中具有重要影响。
- en: Vector sets can also be empty, and are indicated as *V* = {}. You’ll encounter
    empty vector sets when you learn about matrix spaces.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 向量集也可以是空的，并且被表示为 *V* = {}。当你学习矩阵空间时，你会遇到空的向量集。
- en: Linear Weighted Combination
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线性加权组合
- en: A *linear weighted combination* is a way of mixing information from multiple
    variables, with some variables contributing more than others. This fundamental
    operation is also sometimes called *linear mixture* or *weighted combination*
    (the *linear* part is assumed). Sometimes, the term *coefficient* is used instead
    of *weight*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*线性加权组合* 是一种混合多个变量信息的方法，其中一些变量的贡献大于其他变量。这种基本操作有时也称为*线性混合*或*加权组合*（*线性*部分被假定）。有时，术语*系数*也被用来代替*权重*。'
- en: 'Linear weighted combination simply means scalar-vector multiplication and addition:
    take some set of vectors, multiply each vector by a scalar, and add them to produce
    a single vector ([Equation 3-1](#linearweighted)).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 线性加权组合简单地意味着标量与向量的乘法和加法：取一些向量集，将每个向量乘以一个标量，然后加起来得到一个单一的向量（[方程式 3-1](#linearweighted)）。
- en: Equation 3-1\. Linear weighted combination
  id: totrans-12
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 方程式 3-1。线性加权组合
- en: <math alttext="bold w equals lamda 1 bold v 1 plus lamda 2 bold v 2 plus period
    period period plus lamda Subscript n Baseline bold v Subscript n Baseline" display="block"><mrow><mi>𝐰</mi>
    <mo>=</mo> <msub><mi>λ</mi> <mn>1</mn></msub> <msub><mi>𝐯</mi> <mn>1</mn></msub>
    <mo>+</mo> <msub><mi>λ</mi> <mn>2</mn></msub> <msub><mi>𝐯</mi> <mn>2</mn></msub>
    <mo>+</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>+</mo> <msub><mi>λ</mi> <mi>n</mi></msub>
    <msub><mi>𝐯</mi> <mi>n</mi></msub></mrow></math>
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="bold w equals lamda 1 bold v 1 plus lamda 2 bold v 2 plus period
    period period plus lamda Subscript n Baseline bold v Subscript n Baseline" display="block"><mrow><mi>𝐰</mi>
    <mo>=</mo> <msub><mi>λ</mi> <mn>1</mn></msub> <msub><mi>𝐯</mi> <mn>1</mn></msub>
    <mo>+</mo> <msub><mi>λ</mi> <mn>2</mn></msub> <msub><mi>𝐯</mi> <mn>2</mn></msub>
    <mo>+</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>+</mo> <msub><mi>λ</mi> <mi>n</mi></msub>
    <msub><mi>𝐯</mi> <mi>n</mi></msub></mrow></math>
- en: It is assumed that all vectors <math alttext="bold v Subscript i"><msub><mi>𝐯</mi>
    <mi>i</mi></msub></math> have the same dimensionality; otherwise, the addition
    is invalid. The <math alttext="lamda"><mi>λ</mi></math> s can be any real number,
    including zero.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 假设所有向量 <math alttext="bold v Subscript i"><msub><mi>𝐯</mi> <mi>i</mi></msub></math>
    都具有相同的维度；否则，加法是无效的。 <math alttext="lamda"><mi>λ</mi></math> 可以是任意实数，包括零。
- en: Technically, you could rewrite [Equation 3-1](#linearweighted) for subtracting
    vectors, but because subtraction can be handled by setting a <math alttext="lamda
    Subscript i"><msub><mi>λ</mi> <mi>i</mi></msub></math> to be negative, it’s easier
    to discuss linear weighted combinations in terms of summation.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，你可以重新编写 [方程式 3-1](#linearweighted) 来减去向量，但因为减法可以通过将 <math alttext="lamda
    Subscript i"><msub><mi>λ</mi> <mi>i</mi></msub></math> 设置为负数来处理，所以更容易通过求和来讨论线性加权组合。
- en: '[Equation 3-2](#linweightcombo) shows an example to help make it more concrete:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[方程式 3-2](#linweightcombo) 展示了一个例子，以帮助更加具体：'
- en: Equation 3-2\. Linear weighted combination
  id: totrans-17
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 方程式 3-2。线性加权组合
- en: <math display="block"><mrow><msub><mi>λ</mi> <mn>1</mn></msub> <mo>=</mo> <mn>1</mn>
    <mo>,</mo> <msub><mi>λ</mi> <mn>2</mn></msub> <mo>=</mo> <mn>2</mn> <mo>,</mo>
    <msub><mi>λ</mi> <mn>3</mn></msub> <mo>=</mo> <mo>-</mo> <mn>3</mn> <mo>,</mo>
    <msub><mi>𝐯</mi> <mn mathvariant="bold">1</mn></msub> <mo>=</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>4</mn></mtd></mtr> <mtr><mtd><mn>5</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <msub><mi>𝐯</mi>
    <mn mathvariant="bold">2</mn></msub> <mo>=</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mrow><mo>-</mo>
    <mn>4</mn></mrow></mtd></mtr> <mtr><mtd><mrow><mphantom><mo>-</mo></mphantom>
    <mn>0</mn></mrow></mtd></mtr> <mtr><mtd><mrow><mo>-</mo> <mn>4</mn></mrow></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <msub><mi>𝐯</mi> <mn mathvariant="bold">3</mn></msub> <mo>=</mo> <mfenced
    close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>3</mn></mtd></mtr>
    <mtr><mtd><mn>2</mn></mtd></mtr></mtable></mfenced></mrow></math> <math display="block"><mpadded
    height="120%"><mrow><mi>𝐰</mi> <mo>=</mo> <msub><mi>λ</mi> <mn>1</mn></msub> <msub><mi>𝐯</mi>
    <mn mathvariant="bold">1</mn></msub> <mo>+</mo> <msub><mi>λ</mi> <mn>2</mn></msub>
    <msub><mi>𝐯</mi> <mn mathvariant="bold">2</mn></msub> <mo>+</mo> <msub><mi>λ</mi>
    <mn>3</mn></msub> <msub><mi>𝐯</mi> <mn mathvariant="bold">3</mn></msub> <mo>=</mo>
    <mfenced close="]" open="["><mtable><mtr><mtd><mrow><mo>-</mo> <mn>7</mn></mrow></mtd></mtr>
    <mtr><mtd><mrow><mo>-</mo> <mn>4</mn></mrow></mtd></mtr> <mtr><mtd><mrow><mo>-</mo>
    <mn>13</mn></mrow></mtd></mtr></mtable></mfenced></mrow></mpadded></math>
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: <math display="block"><mrow><msub><mi>λ</mi> <mn>1</mn></msub> <mo>=</mo> <mn>1</mn>
    <mo>,</mo> <msub><mi>λ</mi> <mn>2</mn></msub> <mo>=</mo> <mn>2</mn> <mo>,</mo>
    <msub><mi>λ</mi> <mn>3</mn></msub> <mo>=</mo> <mo>-</mo> <mn>3</mn> <mo>,</mo>
    <msub><mi>𝐯</mi> <mn mathvariant="bold">1</mn></msub> <mo>=</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>4</mn></mtd></mtr> <mtr><mtd><mn>5</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <msub><mi>𝐯</mi>
    <mn mathvariant="bold">2</mn></msub> <mo>=</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mrow><mo>-</mo>
    <mn>4</mn></mrow></mtd></mtr> <mtr><mtd><mrow><mphantom><mo>-</mo></mphantom>
    <mn>0</mn></mrow></mtd></mtr> <mtr><mtd><mrow><mo>-</mo> <mn>4</mn></mrow></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <msub><mi>𝐯</mi> <mn mathvariant="bold">3</mn></msub> <mo>=</mo> <mfenced
    close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>3</mn></mtd></mtr>
    <mtr><mtd><mn>2</mn></mtd></mtr></mtable></mfenced></mrow></math> <math display="block"><mpadded
    height="120%"><mrow><mi>𝐰</mi> <mo>=</mo> <msub><mi>λ</mi> <mn>1</mn></msub> <msub><mi>𝐯</mi>
    <mn mathvariant="bold">1</mn></msub> <mo>+</mo> <msub><mi>λ</mi> <mn>2</mn></msub>
    <msub><mi>𝐯</mi> <mn mathvariant="bold">2</mn></msub> <mo>+</mo> <msub><mi>λ</mi>
    <mn>3</mn></msub> <msub><mi>𝐯</mi> <mn mathvariant="bold">3</mn></msub> <mo>=</mo>
    <mfenced close="]" open="["><mtable><mtr><mtd><mrow><mo>-</mo> <mn>7</mn></mrow></mtd></mtr>
    <mtr><mtd><mrow><mo>-</mo> <mn>4</mn></mrow></mtd></mtr> <mtr><mtd><mrow><mo>-</mo>
    <mn>13</mn></mrow></mtd></mtr></mtable></mfenced></mrow></mpadded></math>
- en: Linear weighted combinations are easy to implement, as the following code demonstrates.
    In Python, the data type is important; test what happens when the vectors are
    lists instead of NumPy arrays:^([1](ch03.xhtml#idm45733308219360))
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 线性加权组合易于实现，如下面的代码所示。在Python中，数据类型很重要；测试当向量是列表而不是NumPy数组时会发生什么：^([1](ch03.xhtml#idm45733308219360))
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Storing each vector and each coefficient as separate variables is tedious and
    does not scale up to larger problems. Therefore, in practice, linear weighted
    combinations are implemented via the compact and scalable matrix-vector multiplication
    method, which you’ll learn about in [Chapter 5](ch05.xhtml#Chapter_5); for now,
    the focus is on the concept and coding implementation.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 每个向量和每个系数作为单独的变量存储是繁琐的，并且不能扩展到更大的问题。因此，在实践中，线性加权组合是通过紧凑且可扩展的矩阵向量乘法方法来实现的，你将在第
    [Chapter 5](ch05.xhtml#Chapter_5) 章学习到；目前，重点是概念和编码实现。
- en: 'Linear weighted combinations have several applications. Three of those include:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 线性加权组合有多个应用场景。其中三个包括：
- en: The predicted data from a statistical model are created by taking the linear
    weighted combination of regressors (predictor variables) and coefficients (scalars)
    that are computed via the least squares algorithm, which you’ll learn about in
    Chapters [11](ch11.xhtml#Chapter_11) and [12](ch12.xhtml#Chapter_12).
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从统计模型中预测的数据是通过回归器（预测变量）和系数（标量）的线性加权组合创建的，这些系数是通过最小二乘算法计算得出的，你将在第 [11](ch11.xhtml#Chapter_11)
    章和第 [12](ch12.xhtml#Chapter_12) 章学习到。
- en: In dimension-reduction procedures such as principal components analysis, each
    component (sometimes called factor or mode) is derived as a linear weighted combination
    of the data channels, with the weights (the coefficients) selected to maximize
    the variance of the component (along with some other constraints that you’ll learn
    about in [Chapter 15](ch15.xhtml#Chapter_15)).
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主成分分析等降维过程中，每个成分（有时称为因子或模式）都是数据通道的线性加权组合，其中所选的权重（系数）被选择以最大化成分的方差（以及一些其他你将在[第15章](ch15.xhtml#Chapter_15)中学到的约束条件）。
- en: 'Artificial neural networks (the architecture and algorithm that powers deep
    learning) involve two operations: linear weighted combination of the input data,
    followed by a nonlinear transformation. The weights are learned by minimizing
    a cost function, which is typically the difference between the model prediction
    and the real-world target variable.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人工神经网络（支持深度学习的架构和算法）涉及两种操作：输入数据的线性加权组合，然后是非线性变换。权重通过最小化成本函数学习，通常是模型预测与真实目标变量之间的差异。
- en: The concept of a linear weighted combination is the mechanism of creating vector
    subspaces and matrix spaces, and is central to linear independence. Indeed, linear
    weighted combination and the dot product are two of the most important elementary
    building blocks from which many advanced linear algebra computations are built.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 线性加权组合的概念是创建向量子空间和矩阵空间的机制，是线性独立性的核心。确实，线性加权组合和点积是许多高级线性代数计算的两个最重要的基本构建模块之一。
- en: Linear Independence
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线性独立性
- en: A set of vectors is *linearly dependent* if at least one vector in the set can
    be expressed as a linear weighted combination of other vectors in that set. And
    thus, a set of vectors is *linearly independent* if no vector can be expressed
    as a linear weighted combination of other vectors in the set.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果集合中至少有一个向量可以表示为该集合中其他向量的线性加权组合，则向量集合*线性相关*。因此，如果集合中没有向量可以表示为该集合中其他向量的线性加权组合，则向量集合*线性独立*。
- en: Following are two vector sets. Before reading the text, try to determine whether
    each set is dependent or independent. (The term *linear independence* is sometimes
    shortened to *independence* when the *linear* part is implied.)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是两组向量集合。在阅读文本之前，请尝试确定每组向量集合是依赖还是独立的。（术语*线性独立*有时在*线性*部分被隐含时缩写为*独立*。）
- en: <math alttext="upper V equals StartSet StartBinomialOrMatrix 1 Choose 3 EndBinomialOrMatrix
    comma StartBinomialOrMatrix 2 Choose 7 EndBinomialOrMatrix EndSet upper S equals
    StartSet StartBinomialOrMatrix 1 Choose 3 EndBinomialOrMatrix comma StartBinomialOrMatrix
    2 Choose 6 EndBinomialOrMatrix EndSet" display="block"><mrow><mi>V</mi> <mo>=</mo>
    <mfenced close="}" open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>3</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>2</mn></mtd></mtr> <mtr><mtd><mn>7</mn></mtd></mtr></mtable></mfenced></mfenced>
    <mi>S</mi> <mo>=</mo> <mfenced close="}" open="{" separators=""><mfenced close="]"
    open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>3</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>2</mn></mtd></mtr>
    <mtr><mtd><mn>6</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper V equals StartSet StartBinomialOrMatrix 1 Choose 3 EndBinomialOrMatrix
    comma StartBinomialOrMatrix 2 Choose 7 EndBinomialOrMatrix EndSet upper S equals
    StartSet StartBinomialOrMatrix 1 Choose 3 EndBinomialOrMatrix comma StartBinomialOrMatrix
    2 Choose 6 EndBinomialOrMatrix EndSet" display="block"><mrow><mi>V</mi> <mo>=</mo>
    <mfenced close="}" open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>3</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>2</mn></mtd></mtr> <mtr><mtd><mn>7</mn></mtd></mtr></mtable></mfenced></mfenced>
    <mi>S</mi> <mo>=</mo> <mfenced close="}" open="{" separators=""><mfenced close="]"
    open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>3</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>2</mn></mtd></mtr>
    <mtr><mtd><mn>6</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
- en: 'Vector set *V* is linearly indepedent: it is impossible to express one vector
    in the set as a linear multiple of the other vector in the set. That is to say,
    if we call the vectors in the set <math alttext="bold v 1"><msub><mi>𝐯</mi> <mn>1</mn></msub></math>
    and <math alttext="bold v 2"><msub><mi>𝐯</mi> <mn>2</mn></msub></math> , then
    there is no possible scalar <math alttext="lamda"><mi>λ</mi></math> for which
    <math alttext="bold v 1 equals lamda bold v 2"><mrow><msub><mi>𝐯</mi> <mn>1</mn></msub>
    <mo>=</mo> <mi>λ</mi> <msub><mi>𝐯</mi> <mn>2</mn></msub></mrow></math> .'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 向量集合*V*是线性无关的：无法将集合中的一个向量表示为集合中其他向量的线性倍数。换句话说，如果我们将集合中的向量称为<math alttext="bold
    v 1"><msub><mi>𝐯</mi> <mn>1</mn></msub></math>和<math alttext="bold v 2"><msub><mi>𝐯</mi>
    <mn>2</mn></msub></math>，那么不存在可能的标量<math alttext="lamda"><mi>λ</mi></math>使得<math
    alttext="bold v 1 equals lamda bold v 2"><mrow><msub><mi>𝐯</mi> <mn>1</mn></msub>
    <mo>=</mo> <mi>λ</mi> <msub><mi>𝐯</mi> <mn>2</mn></msub></mrow></math>。
- en: How about set *S*? This one is dependent, because we can use linear weighted
    combinations of some vectors in the set to obtain other vectors in the set. There
    is an infinite number of such combinations, two of which are **s**[1] = .5*s*[2]
    and **s**[2] = 2*s*[1].
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 那么*S*集合呢？这个是相关的，因为我们可以使用集合中一些向量的线性加权组合来得到集合中的其他向量。这种组合有无数种，其中两种是**s**[1] = .5*s*[2]和**s**[2]
    = 2*s*[1]。
- en: 'Let’s try another example. Again, the question is whether set *T* is linearly
    independent or linearly dependent:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再来看一个例子。同样，问题是*T*集合是线性独立还是线性相关：
- en: <math alttext="upper T equals StartSet Start 4 By 1 Matrix 1st Row  8 2nd Row  negative
    4 3rd Row  14 4th Row  6 EndMatrix comma Start 4 By 1 Matrix 1st Row  4 2nd Row  6
    3rd Row  0 4th Row  3 EndMatrix comma Start 4 By 1 Matrix 1st Row  14 2nd Row  2
    3rd Row  4 4th Row  7 EndMatrix comma Start 4 By 1 Matrix 1st Row  13 2nd Row  2
    3rd Row  9 4th Row  8 EndMatrix EndSet" display="block"><mrow><mi>T</mi> <mo>=</mo>
    <mfenced close="}" open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mrow><mphantom><mo>-</mo></mphantom>
    <mn>8</mn></mrow></mtd></mtr> <mtr><mtd><mrow><mo>-</mo> <mn>4</mn></mrow></mtd></mtr>
    <mtr><mtd><mn>14</mn></mtd></mtr> <mtr><mtd><mrow><mphantom><mo>-</mo></mphantom>
    <mn>6</mn></mrow></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>4</mn></mtd></mtr> <mtr><mtd><mn>6</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>3</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>14</mn></mtd></mtr>
    <mtr><mtd><mn>2</mn></mtd></mtr> <mtr><mtd><mn>4</mn></mtd></mtr> <mtr><mtd><mn>7</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>13</mn></mtd></mtr>
    <mtr><mtd><mn>2</mn></mtd></mtr> <mtr><mtd><mn>9</mn></mtd></mtr> <mtr><mtd><mn>8</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper T equals StartSet Start 4 By 1 Matrix 1st Row  8 2nd Row  negative
    4 3rd Row  14 4th Row  6 EndMatrix comma Start 4 By 1 Matrix 1st Row  4 2nd Row  6
    3rd Row  0 4th Row  3 EndMatrix comma Start 4 By 1 Matrix 1st Row  14 2nd Row  2
    3rd Row  4 4th Row  7 EndMatrix comma Start 4 By 1 Matrix 1st Row  13 2nd Row  2
    3rd Row  9 4th Row  8 EndMatrix EndSet" display="block"><mrow><mi>T</mi> <mo>=</mo>
    <mfenced close="}" open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mrow><mphantom><mo>-</mo></mphantom>
    <mn>8</mn></mrow></mtd></mtr> <mtr><mtd><mrow><mo>-</mo> <mn>4</mn></mrow></mtd></mtr>
    <mtr><mtd><mn>14</mn></mtd></mtr> <mtr><mtd><mrow><mphantom><mo>-</mo></mphantom>
    <mn>6</mn></mrow></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>4</mn></mtd></mtr> <mtr><mtd><mn>6</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>3</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>14</mn></mtd></mtr>
    <mtr><mtd><mn>2</mn></mtd></mtr> <mtr><mtd><mn>4</mn></mtd></mtr> <mtr><mtd><mn>7</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>13</mn></mtd></mtr>
    <mtr><mtd><mn>2</mn></mtd></mtr> <mtr><mtd><mn>9</mn></mtd></mtr> <mtr><mtd><mn>8</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
- en: Wow, this one is a lot harder to figure out than the previous two examples.
    It turns out that this is a linearly dependent set (for example, the sum of the
    first three vectors equals twice the fourth vector). But I wouldn’t expect you
    to be able to figure that out just from visual inspection.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 哇，这个比前两个例子难多了。结果证明这是一个线性相关的集合（例如，前三个向量的和等于第四个向量的两倍）。但我不希望你仅凭视觉检查就能弄清楚。
- en: So how do you determine linear independence in practice? The way to determine
    linear independence is to create a matrix from the vector set, compute the rank
    of the matrix, and compare the rank to the smaller of the number of rows or columns.
    That sentence may not make sense to you now, because you haven’t yet learned about
    matrix rank. Therefore, focus your attention now on the concept that a set of
    vectors is linearly dependent if at least one vector in the set can be expressed
    as a linear weighted combination of the other vectors in the set, and a set of
    vectors is linearly independent if no vector can be expressed as a combination
    of other vectors.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 那么在实践中如何确定线性独立性呢？确定线性独立性的方法是从向量集创建矩阵，计算矩阵的秩，并将秩与行或列的较小者进行比较。现在这句话可能对你来说没有意义，因为你还没有学习矩阵秩。因此，现在请将注意力集中在这个概念上：如果集合中至少有一个向量可以表示为其他向量的线性加权组合，则该向量集是线性相关的；如果没有向量可以表示为其他向量的组合，则向量集是线性独立的。
- en: The Math of Linear Independence
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线性独立性的数学基础
- en: Now that you understand the concept, I want to make sure you also understand
    the formal mathematical definition of linear dependence, which is expressed in
    [Equation 3-3](#eq_linearindependence).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经理解了这个概念，我想确保你也理解线性相关的正式数学定义，这在[方程 3-3](#eq_linearindependence)中表达出来。
- en: Equation 3-3\. Linear dependence^([2](ch03.xhtml#idm45733312796240))
  id: totrans-39
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 方程 3-3\. 线性相关^([2](ch03.xhtml#idm45733312796240))
- en: <math alttext="bold 0 equals lamda 1 bold v 1 plus lamda 2 bold v 2 plus period
    period period plus lamda Subscript n Baseline bold v Subscript n Baseline comma
    lamda element-of double-struck upper R" display="block"><mrow><mn mathvariant="bold">0</mn>
    <mo>=</mo> <msub><mi>λ</mi> <mn>1</mn></msub> <msub><mi>𝐯</mi> <mn>1</mn></msub>
    <mo>+</mo> <msub><mi>λ</mi> <mn>2</mn></msub> <msub><mi>𝐯</mi> <mn>2</mn></msub>
    <mo>+</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>+</mo> <msub><mi>λ</mi> <mi>n</mi></msub>
    <msub><mi>𝐯</mi> <mi>n</mi></msub> <mo>,</mo> <mi>λ</mi> <mo>∈</mo> <mi>ℝ</mi></mrow></math>
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="bold 0 equals lamda 1 bold v 1 plus lamda 2 bold v 2 plus period
    period period plus lamda Subscript n Baseline bold v Subscript n Baseline comma
    lamda element-of double-struck upper R" display="block"><mrow><mn mathvariant="bold">0</mn>
    <mo>=</mo> <msub><mi>λ</mi> <mn>1</mn></msub> <msub><mi>𝐯</mi> <mn>1</mn></msub>
    <mo>+</mo> <msub><mi>λ</mi> <mn>2</mn></msub> <msub><mi>𝐯</mi> <mn>2</mn></msub>
    <mo>+</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>+</mo> <msub><mi>λ</mi> <mi>n</mi></msub>
    <msub><mi>𝐯</mi> <mi>n</mi></msub> <mo>,</mo> <mi>λ</mi> <mo>∈</mo> <mi>ℝ</mi></mrow></math>
- en: This equation says that linear dependence means that we can define some linear
    weighted combination of the vectors in the set to produce the zeros vector. If
    you can find some <math alttext="lamda"><mi>λ</mi></math> s that make the equation
    true, then the set of vectors is linearly dependent. Conversely, if there is no
    possible way to linearly combine the vectors to produce the zeros vector, then
    the set is linearly independent.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方程表明，线性相关意味着我们可以定义一些向量集中的线性加权组合来生成零向量。如果你能找到一些<math alttext="lamda"><mi>λ</mi></math>使得这个方程成立，那么这个向量集是线性相关的。反之，如果没有可能的方式将向量线性组合为零向量，则集合是线性独立的。
- en: 'That might initially be unintuitive. Why do we care about the zeros vector
    when the question is whether we can express at least one vector in the set as
    a weighted combination of other vectors in the set? Perhaps you’d prefer rewriting
    the definition of linear dependence as the following:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能起初看起来不直观。为什么我们在问题是是否可以将集合中至少一个向量表达为其他向量的加权组合时要关心零向量？也许你更喜欢将线性相关的定义重写为以下内容：
- en: <math alttext="lamda 1 bold v 1 equals lamda 2 bold v 2 plus period period period
    plus lamda Subscript n Baseline bold v Subscript n Baseline comma lamda element-of
    double-struck upper R" display="block"><mrow><msub><mi>λ</mi> <mn>1</mn></msub>
    <msub><mi>𝐯</mi> <mn>1</mn></msub> <mo>=</mo> <msub><mi>λ</mi> <mn>2</mn></msub>
    <msub><mi>𝐯</mi> <mn>2</mn></msub> <mo>+</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo>
    <mo>+</mo> <msub><mi>λ</mi> <mi>n</mi></msub> <msub><mi>𝐯</mi> <mi>n</mi></msub>
    <mo>,</mo> <mi>λ</mi> <mo>∈</mo> <mi>ℝ</mi></mrow></math>
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="lamda 1 bold v 1 equals lamda 2 bold v 2 plus period period period
    plus lamda Subscript n Baseline bold v Subscript n Baseline comma lamda element-of
    double-struck upper R" display="block"><mrow><msub><mi>λ</mi> <mn>1</mn></msub>
    <msub><mi>𝐯</mi> <mn>1</mn></msub> <mo>=</mo> <msub><mi>λ</mi> <mn>2</mn></msub>
    <msub><mi>𝐯</mi> <mn>2</mn></msub> <mo>+</mo> <mo>.</mo> <mo>.</mo> <mo>.</mo>
    <mo>+</mo> <msub><mi>λ</mi> <mi>n</mi></msub> <msub><mi>𝐯</mi> <mi>n</mi></msub>
    <mo>,</mo> <mi>λ</mi> <mo>∈</mo> <mi>ℝ</mi></mrow></math>
- en: Why not start with that equation instead of putting the zeros vector on the
    left-hand side? Setting the equation to zero helps reinforce the principle that
    the *entire set* is dependent or independent; no individual vector has the privileged
    position of being the “dependent vector” (see [“Independent Sets”](#sidebar-independence)).
    In other words, when it comes to independence, vector sets are purely egalitarian.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么不从这个方程开始，而不是将零向量放在左侧？将方程设置为零有助于强化这样一个原则：*整个集合*是相关还是独立的；没有一个单独的向量有特权地位成为“依赖向量”（参见[“独立集合”](#sidebar-independence)）。换句话说，当涉及独立性时，向量集是纯粹平等的。
- en: 'But wait a minute. Careful inspection of [Equation 3-3](#eq_linearindependence)
    reveals a trivial solution: set all <math alttext="lamda"><mi>λ</mi></math> ’s
    to zero, and the equation reads <math alttext="bold 0 equals bold 0"><mrow><mn
    mathvariant="bold">0</mn> <mo>=</mo> <mn mathvariant="bold">0</mn></mrow></math>
    , regardless of the vectors in the set. But, as I wrote in [Chapter 2](ch02.xhtml#Chapter_2),
    trivial solutions involving zeros are often ignored in linear algebra. So we add
    the constraint that at least one <math alttext="lamda not-equals 0"><mrow><mi>λ</mi>
    <mo>≠</mo> <mn>0</mn></mrow></math> .'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 但请稍等。仔细检查[方程 3-3](#eq_linearindependence)，会发现一个平凡的解：将所有<math alttext="lamda"><mi>λ</mi></math>设为零，这个方程变成<math
    alttext="bold 0 equals bold 0"><mrow><mn mathvariant="bold">0</mn> <mo>=</mo>
    <mn mathvariant="bold">0</mn></mrow></math>，无论集合中的向量如何。但是，正如我在[第 2 章](ch02.xhtml#Chapter_2)中写道，涉及零的平凡解在线性代数中经常被忽略。因此，我们增加了至少一个<math
    alttext="lamda not-equals 0"><mrow><mi>λ</mi> <mo>≠</mo> <mn>0</mn></mrow></math>的约束。
- en: 'This constraint can be incorporated into the equation by dividing through by
    one of the scalars; keep in mind that <math alttext="bold v 1"><msub><mi>𝐯</mi>
    <mn>1</mn></msub></math> and <math alttext="lamda 1"><msub><mi>λ</mi> <mn>1</mn></msub></math>
    can refer to any vector/scalar pair in the set:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将方程除以标量之一，可以将这种约束条件纳入方程中；请记住，<math alttext="bold v 1"><msub><mi>𝐯</mi> <mn>1</mn></msub></math>
    和 <math alttext="lamda 1"><msub><mi>λ</mi> <mn>1</mn></msub></math> 可以指代集合中的任何向量/标量对：
- en: <math alttext="bold 0 equals bold v 1 plus period period period plus StartFraction
    lamda Subscript n Baseline Over lamda 1 EndFraction bold v Subscript n Baseline
    comma lamda element-of double-struck upper R comma lamda 1 not-equals 0" display="block"><mrow><mn
    mathvariant="bold">0</mn> <mo>=</mo> <msub><mi>𝐯</mi> <mn>1</mn></msub> <mo>+</mo>
    <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>+</mo> <mfrac><msub><mi>λ</mi> <mi>n</mi></msub>
    <msub><mi>λ</mi> <mn>1</mn></msub></mfrac> <msub><mi>𝐯</mi> <mi>n</mi></msub>
    <mo>,</mo> <mi>λ</mi> <mo>∈</mo> <mrow><mi>ℝ</mi> <mo>,</mo> <msub><mi>λ</mi>
    <mn>1</mn></msub> <mo>≠</mo> <mn>0</mn></mrow></mrow></math>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="bold 0 equals bold v 1 plus period period period plus StartFraction
    lamda Subscript n Baseline Over lamda 1 EndFraction bold v Subscript n Baseline
    comma lamda element-of double-struck upper R comma lamda 1 not-equals 0" display="block"><mrow><mn
    mathvariant="bold">0</mn> <mo>=</mo> <msub><mi>𝐯</mi> <mn>1</mn></msub> <mo>+</mo>
    <mo>.</mo> <mo>.</mo> <mo>.</mo> <mo>+</mo> <mfrac><msub><mi>λ</mi> <mi>n</mi></msub>
    <msub><mi>λ</mi> <mn>1</mn></msub></mfrac> <msub><mi>𝐯</mi> <mi>n</mi></msub>
    <mo>,</mo> <mi>λ</mi> <mo>∈</mo> <mrow><mi>ℝ</mi> <mo>,</mo> <msub><mi>λ</mi>
    <mn>1</mn></msub> <mo>≠</mo> <mn>0</mn></mrow></mrow></math>
- en: Independence and the Zeros Vector
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 独立性和零向量
- en: 'Simply put, any vector set that includes the zeros vector is automatically
    a linearly dependent set. Here’s why: any scalar multiple of the zeros vector
    is still the zeros vector, so the definition of linear dependence is always satisfied.
    You can see this in the following equation:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，任何包含零向量的向量集都自动成为线性相关集。原因在于：零向量的任何标量倍数仍然是零向量，因此总是满足线性相关的定义。你可以在以下方程中看到这一点：
- en: <math alttext="lamda 0 bold 0 equals 0 bold v 1 plus 0 bold v 2 plus 0 bold
    v Subscript n" display="block"><mrow><msub><mi>λ</mi> <mn>0</mn></msub> <mn mathvariant="bold">0</mn>
    <mo>=</mo> <mn>0</mn> <msub><mi>𝐯</mi> <mn>1</mn></msub> <mo>+</mo> <mn>0</mn>
    <msub><mi>𝐯</mi> <mn>2</mn></msub> <mo>+</mo> <mn>0</mn> <msub><mi>𝐯</mi> <mi>n</mi></msub></mrow></math>
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="lamda 0 bold 0 equals 0 bold v 1 plus 0 bold v 2 plus 0 bold
    v Subscript n" display="block"><mrow><msub><mi>λ</mi> <mn>0</mn></msub> <mn mathvariant="bold">0</mn>
    <mo>=</mo> <mn>0</mn> <msub><mi>𝐯</mi> <mn>1</mn></msub> <mo>+</mo> <mn>0</mn>
    <msub><mi>𝐯</mi> <mn>2</mn></msub> <mo>+</mo> <mn>0</mn> <msub><mi>𝐯</mi> <mi>n</mi></msub></mrow></math>
- en: As long as <math alttext="lamda 0 not-equals 0"><mrow><msub><mi>λ</mi> <mn>0</mn></msub>
    <mo>≠</mo> <mn>0</mn></mrow></math> , we have a nontrivial solution, and the set
    fits with the definition of linear dependence.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 只要<math alttext="lamda 0 not-equals 0"><mrow><msub><mi>λ</mi> <mn>0</mn></msub>
    <mo>≠</mo> <mn>0</mn></mrow></math>，我们就有一个非平凡解，且该集合符合线性相关的定义。
- en: What About Nonlinear Independence?
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于非线性独立性？
- en: “But Mike,” I imagine you protesting, “isn’t life, the universe, and everything
    *non*linear?” I suppose it would be an interesting exercise to count the total
    number of linear versus nonlinear interactions in the universe and see which sum
    is larger. But linear algebra is all about, well, *linear* operations. If you
    can express one vector as a nonlinear (but not linear) combination of other vectors,
    then those vectors still form a linearly independent set. The reason for the linearity
    constraint is that we want to express transformations as matrix multiplication,
    which is a linear operation. That’s not to throw shade on nonlinear operations—in
    my imaginary conversation, you have eloquently articulated that a purely linear
    universe would be rather dull and predictable. But we don’t need to explain the
    entire universe using linear algebra; we need linear algebra only for the linear
    parts. (It’s also worth mentioning that many nonlinear systems can be well approximated
    using linear functions.)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: “但是迈克，”我想象你会反驳，“生命、宇宙和一切不都是*非*线性的吗？”我想这会是一个有趣的练习，统计宇宙中线性与非线性相互作用的总数，看看哪个总和更大。但是线性代数关注的是，嗯，*线性*操作。如果你能将一个向量表达为其他向量的非线性（但非线性）组合，那么这些向量仍然构成线性独立集合。线性约束的原因在于我们希望将变换表达为矩阵乘法，而这是一种线性操作。这并不是在贬低非线性操作——在我的想象对话中，你已经精辟地阐述了一个纯线性的宇宙将会相当乏味和可预测。但我们不需要用线性代数来解释整个宇宙；我们只需要用线性代数来处理其中的线性部分。（还值得一提的是，许多非线性系统可以很好地用线性函数来近似。）
- en: Subspace and Span
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 子空间与张量
- en: When I introduced linear weighted combinations, I gave examples with specific
    numerical values for the weights (e.g., <math alttext="lamda 1 equals 1 comma
    lamda 3 equals negative 3"><mrow><msub><mi>λ</mi> <mn>1</mn></msub> <mo>=</mo>
    <mn>1</mn> <mo>,</mo> <msub><mi>λ</mi> <mn>3</mn></msub> <mo>=</mo> <mo>-</mo>
    <mn>3</mn></mrow></math> ). A *subspace* is the same idea but using the infinity
    of possible ways to linearly combine the vectors in the set.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 当我介绍线性加权组合时，我使用了具体的权重数值示例（例如，<math alttext="lamda 1 equals 1 comma lamda 3 equals
    negative 3"><mrow><msub><mi>λ</mi> <mn>1</mn></msub> <mo>=</mo> <mn>1</mn> <mo>,</mo>
    <msub><mi>λ</mi> <mn>3</mn></msub> <mo>=</mo> <mo>-</mo> <mn>3</mn></mrow></math>）。*子空间*是相同的概念，但使用了集合中向量的无限可能的线性组合方式。
- en: 'That is, for some (finite) set of vectors, the infinite number of ways to linearly
    combine them—using the same vectors but different numerical values for the weights—creates
    a *vector subspace*. And the mechanism of combining all possible linear weighted
    combinations is called the *span* of the vector set. Let’s work through a few
    examples. We’ll start with a simple example of a vector set containing one vector:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 即，对于某些（有限）向量集，通过使用相同的向量但不同的权重数值进行线性组合的无限方法，创建了一个*向量子空间*。结合所有可能的线性加权组合的机制被称为向量集合的*张量*。让我们通过几个例子来理解一下。我们从一个包含一个向量的简单例子开始：
- en: <math alttext="upper V equals StartSet StartBinomialOrMatrix 1 Choose 3 EndBinomialOrMatrix
    EndSet" display="block"><mrow><mi>V</mi> <mo>=</mo> <mfenced close="}" open="{"
    separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>3</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper V equals StartSet StartBinomialOrMatrix 1 Choose 3 EndBinomialOrMatrix
    EndSet" display="block"><mrow><mi>V</mi> <mo>=</mo> <mfenced close="}" open="{"
    separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>3</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
- en: The span of this vector set is the infinity of vectors that can be created as
    linear combinations of the vectors in the set. For a set with one vector, that
    simply means all possible scaled versions of that vector. [Figure 3-1](#fig_3_1)
    shows the vector and the subspace it spans. Consider that any vector in the gray
    dashed line can be formed as some scaled version of the vector.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这个向量集的张成是由这些向量的线性组合形成的无穷向量集。对于只有一个向量的集合，这意味着所有可能的向量缩放版本。[图3-1](#fig_3_1)展示了向量及其所张成的子空间。注意，灰色虚线上的任何向量都可以表示为向量的某种缩放版本。
- en: '![span > spam](assets/plad_0301.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![span > spam](assets/plad_0301.png)'
- en: Figure 3-1\. A vector (black) and the subspace it spans (gray)
  id: totrans-60
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3-1\. 一个向量（黑色）及其所张成的子空间（灰色）
- en: 'Our next example is a set of two vectors in <math alttext="double-struck upper
    R cubed"><msup><mi>ℝ</mi> <mn>3</mn></msup></math> :'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一个例子是在<math alttext="double-struck upper R cubed"><msup><mi>ℝ</mi> <mn>3</mn></msup></math>中的两个向量集：
- en: <math alttext="upper V equals StartSet Start 3 By 1 Matrix 1st Row  1 2nd Row  0
    3rd Row  2 EndMatrix comma Start 3 By 1 Matrix 1st Row  negative 1 2nd Row  1
    3rd Row  2 EndMatrix EndSet" display="block"><mrow><mi>V</mi> <mo>=</mo> <mfenced
    close="}" open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>2</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mrow><mo>-</mo> <mn>1</mn></mrow></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>2</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper V equals StartSet Start 3 By 1 Matrix 1st Row  1 2nd Row  0
    3rd Row  2 EndMatrix comma Start 3 By 1 Matrix 1st Row  negative 1 2nd Row  1
    3rd Row  2 EndMatrix EndSet" display="block"><mrow><mi>V</mi> <mo>=</mo> <mfenced
    close="}" open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>2</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mrow><mo>-</mo> <mn>1</mn></mrow></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>2</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
- en: The vectors are in <math alttext="double-struck upper R cubed"><msup><mi>ℝ</mi>
    <mn>3</mn></msup></math> , so they are graphically represented in a 3D axis. But
    the subspace that they span is a 2D plane in that 3D space ([Figure 3-2](#fig_3_2)).
    That plane passes through the origin, because scaling both vectors by zero gives
    the zeros vector.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这些向量位于<math alttext="double-struck upper R cubed"><msup><mi>ℝ</mi> <mn>3</mn></msup></math>，因此在三维坐标系中图形化表示。但它们所张成的子空间是三维空间中的一个二维平面（参见[图3-2](#fig_3_2)）。该平面通过原点，因为将这两个向量同时按零缩放将得到零向量。
- en: '![span > spam](assets/plad_0302.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![span > spam](assets/plad_0302.png)'
- en: Figure 3-2\. Two vectors (black) and the subspace they span (gray)
  id: totrans-65
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3-2\. 两个向量（黑色）及其张成的子空间（灰色）
- en: 'The first example had one vector and its span was a 1D subspace, and the second
    example had two vectors and their span was a 2D subspace. There seems to be a
    pattern emerging—but looks can be deceiving. Consider the next example:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个例子有一个向量，其张成的是一维子空间，第二个例子有两个向量，其张成的是一个二维子空间。看起来似乎有一种模式出现了，但外表可能会误导人。考虑下一个例子：
- en: <math alttext="upper V equals StartSet Start 3 By 1 Matrix 1st Row  1 2nd Row  1
    3rd Row  1 EndMatrix comma Start 3 By 1 Matrix 1st Row  2 2nd Row  2 3rd Row  2
    EndMatrix EndSet" display="block"><mrow><mi>V</mi> <mo>=</mo> <mfenced close="}"
    open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>2</mn></mtd></mtr>
    <mtr><mtd><mn>2</mn></mtd></mtr> <mtr><mtd><mn>2</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper V equals StartSet Start 3 By 1 Matrix 1st Row  1 2nd Row  1
    3rd Row  1 EndMatrix comma Start 3 By 1 Matrix 1st Row  2 2nd Row  2 3rd Row  2
    EndMatrix EndSet" display="block"><mrow><mi>V</mi> <mo>=</mo> <mfenced close="}"
    open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>2</mn></mtd></mtr>
    <mtr><mtd><mn>2</mn></mtd></mtr> <mtr><mtd><mn>2</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
- en: Two vectors in <math alttext="double-struck upper R cubed"><msup><mi>ℝ</mi>
    <mn>3</mn></msup></math> , but the subspace that they span is still only a 1D
    subspace—a line ([Figure 3-3](#fig_3_3)). Why is that? It’s because one vector
    in the set is already in the span of the other vector. Thus, in terms of span,
    one of the two vectors is redundant.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 两个向量在<math alttext="double-struck upper R cubed"><msup><mi>ℝ</mi> <mn>3</mn></msup></math>中，但它们张成的子空间仍然只是一维子空间—一条直线（参见[图3-3](#fig_3_3)）。为什么会这样？因为集合中的一个向量已经在另一个向量的张成空间中。因此，在张成方面，这两个向量中的一个是多余的。
- en: '![span > spam](assets/plad_0303.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![span > spam](assets/plad_0303.png)'
- en: Figure 3-3\. The 1D subspace (gray) spanned by two vectors (black)
  id: totrans-70
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3-3\. 由两个向量（黑色）张成的一维子空间（灰色）
- en: So then, what is the relationship between the dimensionality of the spanned
    subspace and the number of vectors in the set? You might have guessed that it
    has something to do with linear independence.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，所张成子空间的维度与向量集中的向量数量之间有什么关系？你可能猜到这与线性独立性有关。
- en: The dimensionality of the subspace spanned by a set of vectors is the smallest
    number of vectors that forms a linearly independent set. If a vector set is linearly
    independent, then the dimensionality of the subspace spanned by the vectors in
    that set equals the number of vectors in that set. If the set is dependent, then
    the dimensionality of the subspace spanned by those vectors is necessarily less
    than the number of vectors in that set. Exactly how much smaller is another matter—to
    know the relationship between the number of vectors in a set and the dimensionality
    of their spanning subspace, you need to understand matrix rank, which you’ll learn
    about in [Chapter 6](ch06.xhtml#Chapter_6).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 由一组向量张成的子空间的维数是形成线性无关集的最小向量数量。如果一个向量集是线性无关的，则其张成的子空间的维数等于集合中的向量数。如果集合是相关的，则这些向量张成的子空间的维数必然小于集合中的向量数。到底小多少则是另一回事—要了解向量集中的向量数量与其张成子空间的维数之间的关系，您需要了解矩阵秩，在[第6章](ch06.xhtml#Chapter_6)中会详细讲解。
- en: The formal definition of a vector subspace is a subset that is closed under
    addition and scalar multiplication, and includes the origin of the space. That
    means that any linear weighted combination of vectors in the subspace must also
    be in the same subspace, including setting all weights to zero to produce the
    zeros vector at the origin of the space.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 向量子空间的正式定义是空间中的一个包含原点并在加法和标量乘法下封闭的子集。这意味着子空间中向量的任何线性加权组合也必须在同一子空间中，包括将所有权重设置为零以在空间原点产生零向量。
- en: Please don’t lose sleep meditating on what it means to be “closed under addition
    and scalar multiplication”; just remember that a vector subspace is created from
    all possible linear combinations of a set of vectors.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 请不要因为“封闭于加法和标量乘法”而失眠沉思；只需记住，向量子空间是由一组向量的所有可能线性组合创建的。
- en: Basis
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础
- en: How far apart are Amsterdam and Tenerife? Approximately 2,000\. What does “2,000”
    mean? That number makes sense only if we attach a basis unit. A basis is like
    a ruler for measuring a space.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 阿姆斯特丹和特内里费有多远？大约2000。那么“2000”是什么意思？只有在我们附加一个基本单位时，这个数字才有意义。基础就像是用来测量空间的尺子。
- en: 'In this example, the unit is *mile*. So our basis measurement for Dutch-Spanish
    distance is 1 mile. We could, of course, use different measurement units, like
    nanometers or light-years, but I think we can agree that mile is a convenient
    basis for distance at that scale. What about the length that your fingernail grows
    in one day—should we still use miles? Technically we can, but I think we can agree
    that *millimeter* is a more convenient basis unit. To be clear: the amount that
    your fingernail has grown in the past 24 hours is the same, regardless of whether
    you measure it in nanometers, miles, or light-years. But different units are more
    or less convenient for different problems.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，单位是*英里*。因此，我们荷兰和西班牙之间的距离基础测量是1英里。当然，我们可以使用不同的测量单位，比如纳米或光年，但我认为我们可以同意，英里在这个尺度上是一个方便的距离基准。你的指甲在一天内增长了多少长度——我们仍然应该使用英里吗？从技术上讲，我们可以，但我认为我们可以同意*毫米*是一个更方便的基本单位。明确一点：在过去24小时内你的指甲增长的长度是相同的，无论你是用纳米、英里还是光年来衡量。但对于不同的问题，不同的单位更或者不太方便。
- en: 'Back to linear algebra: a *basis* is a set of rulers that you use to describe
    the information in the matrix (e.g., data). Like with the previous examples, you
    can describe the same data using different rulers, but some rulers are more convenient
    than others for solving certain problems.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 回到线性代数：*基础*是一组用来描述矩阵（例如数据）中信息的尺子。就像前面的例子一样，你可以用不同的尺子描述相同的数据，但某些尺子对解决特定问题更方便。
- en: 'The most common basis set is the Cartesian axis: the familiar XY plane that
    you’ve used since elementary school. We can write out the basis sets for the 2D
    and 3D Cartesian graphs as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的基础集是笛卡尔坐标系：你从小学就熟悉的XY平面。我们可以写出2D和3D笛卡尔图形的基础集如下：
- en: <math alttext="upper S 2 equals StartSet StartBinomialOrMatrix 1 Choose 0 EndBinomialOrMatrix
    comma StartBinomialOrMatrix 0 Choose 1 EndBinomialOrMatrix EndSet upper S 3 equals
    StartSet Start 3 By 1 Matrix 1st Row  1 2nd Row  0 3rd Row  0 EndMatrix comma
    Start 3 By 1 Matrix 1st Row  0 2nd Row  1 3rd Row  0 EndMatrix comma Start 3 By
    1 Matrix 1st Row  0 2nd Row  0 3rd Row  1 EndMatrix EndSet" display="block"><mrow><msub><mi>S</mi>
    <mn>2</mn></msub> <mo>=</mo> <mfenced close="}" open="{" separators=""><mfenced
    close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>0</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced></mfenced> <msub><mi>S</mi>
    <mn>3</mn></msub> <mo>=</mo> <mfenced close="}" open="{" separators=""><mfenced
    close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper S 2 equals StartSet StartBinomialOrMatrix 1 Choose 0 EndBinomialOrMatrix
    comma StartBinomialOrMatrix 0 Choose 1 EndBinomialOrMatrix EndSet upper S 3 equals
    StartSet Start 3 By 1 Matrix 1st Row  1 2nd Row  0 3rd Row  0 EndMatrix comma
    Start 3 By 1 Matrix 1st Row  0 2nd Row  1 3rd Row  0 EndMatrix comma Start 3 By
    1 Matrix 1st Row  0 2nd Row  0 3rd Row  1 EndMatrix EndSet" display="block"><mrow><msub><mi>S</mi>
    <mn>2</mn></msub> <mo>=</mo> <mfenced close="}" open="{" separators=""><mfenced
    close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>0</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced></mfenced> <msub><mi>S</mi>
    <mn>3</mn></msub> <mo>=</mo> <mfenced close="}" open="{" separators=""><mfenced
    close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr> <mtr><mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
- en: Notice that the Cartesian basis sets comprise vectors that are mutually orthgonal
    and unit length. Those are great properties to have, and that’s why the Cartesian
    basis sets are so ubiquitous (indeed, they are called the *standard basis set*).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，笛卡尔基础集包括相互正交且单位长度的向量。这些是非常好的特性，这就是为什么笛卡尔基础集如此普遍（实际上，它们被称为*标准基础集*）。
- en: But those are not the only basis sets. The following set is a different basis
    set for <math alttext="double-struck upper R squared"><msup><mi>ℝ</mi> <mn>2</mn></msup></math>
    .
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 但这些并不是唯一的基础集。以下集合是<math alttext="double-struck upper R squared"><msup><mi>ℝ</mi>
    <mn>2</mn></msup></math>的另一个基础集。
- en: <math alttext="upper T equals StartSet StartBinomialOrMatrix 3 Choose 1 EndBinomialOrMatrix
    comma StartBinomialOrMatrix negative 3 Choose 1 EndBinomialOrMatrix EndSet" display="block"><mrow><mi>T</mi>
    <mo>=</mo> <mfenced close="}" open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>3</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mrow><mo>-</mo> <mn>3</mn></mrow></mtd></mtr> <mtr><mtd><mrow><mphantom><mo>-</mo></mphantom>
    <mn>1</mn></mrow></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper T equals StartSet StartBinomialOrMatrix 3 Choose 1 EndBinomialOrMatrix
    comma StartBinomialOrMatrix negative 3 Choose 1 EndBinomialOrMatrix EndSet" display="block"><mrow><mi>T</mi>
    <mo>=</mo> <mfenced close="}" open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>3</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mrow><mo>-</mo> <mn>3</mn></mrow></mtd></mtr> <mtr><mtd><mrow><mphantom><mo>-</mo></mphantom>
    <mn>1</mn></mrow></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
- en: Basis set <math alttext="upper S 2"><msub><mi>S</mi> <mn>2</mn></msub></math>
    and *T* both span the same subspace (all of <math alttext="double-struck upper
    R squared"><msup><mi>ℝ</mi> <mn>2</mn></msup></math> ). Why would you prefer *T*
    over *S*? Imagine we want to describe data points *p* and *q* in [Figure 3-4](#fig_3_4).
    We can describe those data points as their relationship to the origin—that is,
    their coordinates—using basis *S* or basis *T*.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 基础集<math alttext="upper S 2"><msub><mi>S</mi> <mn>2</mn></msub></math>和*T*都跨越相同的子空间（<math
    alttext="double-struck upper R squared"><msup><mi>ℝ</mi> <mn>2</mn></msup></math>的全部）。为什么你会更喜欢*T*而不是*S*？想象一下，我们想要描述[图3-4](#fig_3_4)中的数据点*p*和*q*。我们可以描述这些数据点作为它们与原点的关系，即它们的坐标，使用基础*S*或基础*T*。
- en: In basis *S*, those two coordinates are *p* = (3, 1) and *q* = (−6, 2). In linear
    algebra, we say that the points are expressed as the linear combinations of the
    basis vectors. In this case, that combination is <math alttext="3 bold s 1 plus
    1 bold s 2"><mrow><mn>3</mn> <msub><mi>𝐬</mi> <mn>1</mn></msub> <mo>+</mo> <mn>1</mn>
    <msub><mi>𝐬</mi> <mn>2</mn></msub></mrow></math> for point *p*, and <math alttext="minus
    6 bold s 1 plus 2 bold s 2"><mrow><mo>-</mo> <mn>6</mn> <msub><mi>𝐬</mi> <mn>1</mn></msub>
    <mo>+</mo> <mn>2</mn> <msub><mi>𝐬</mi> <mn>2</mn></msub></mrow></math> for point
    *q*.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在基础 *S* 中，这两个坐标是 *p* = (3, 1) 和 *q* = (−6, 2)。在线性代数中，我们说这些点被表达为基础向量的线性组合。在这种情况下，该组合是
    <math alttext="3 bold s 1 plus 1 bold s 2"><mrow><mn>3</mn> <msub><mi>𝐬</mi> <mn>1</mn></msub>
    <mo>+</mo> <mn>1</mn> <msub><mi>𝐬</mi> <mn>2</mn></msub></mrow></math> 对于点 *p*，和
    <math alttext="minus 6 bold s 1 plus 2 bold s 2"><mrow><mo>-</mo> <mn>6</mn> <msub><mi>𝐬</mi>
    <mn>1</mn></msub> <mo>+</mo> <mn>2</mn> <msub><mi>𝐬</mi> <mn>2</mn></msub></mrow></math>
    对于点 *q*。
- en: Now let’s describe those points in basis *T*. As coordinates, we have *p* =
    (1, 0) and *q* = (0, 2). And in terms of basis vectors, we have <math alttext="1
    bold t 1 plus 0 bold t 2"><mrow><mn>1</mn> <msub><mi>𝐭</mi> <mn>1</mn></msub>
    <mo>+</mo> <mn>0</mn> <msub><mi>𝐭</mi> <mn>2</mn></msub></mrow></math> for point
    *p* and <math alttext="0 bold t 1 plus 2 bold t 2"><mrow><mn>0</mn> <msub><mi>𝐭</mi>
    <mn>1</mn></msub> <mo>+</mo> <mn>2</mn> <msub><mi>𝐭</mi> <mn>2</mn></msub></mrow></math>
    for point *q* (in other words, *p* = <math alttext="bold t 1"><msub><mi>𝐭</mi>
    <mn>1</mn></msub></math> and *q*= <math alttext="2 bold t 2"><mrow><mn>2</mn>
    <msub><mi>𝐭</mi> <mn>2</mn></msub></mrow></math> ). Again, the data points *p*
    and *q* are the same regardless of the basis set, but *T* provided a compact and
    orthogonal description.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们用基础 *T* 来描述这些点。作为坐标，我们有 *p* = (1, 0) 和 *q* = (0, 2)。在基础向量方面，我们有 <math alttext="1
    bold t 1 plus 0 bold t 2"><mrow><mn>1</mn> <msub><mi>𝐭</mi> <mn>1</mn></msub>
    <mo>+</mo> <mn>0</mn> <msub><mi>𝐭</mi> <mn>2</mn></msub></mrow></math> 对于点 *p*
    和 <math alttext="0 bold t 1 plus 2 bold t 2"><mrow><mn>0</mn> <msub><mi>𝐭</mi>
    <mn>1</mn></msub> <mo>+</mo> <mn>2</mn> <msub><mi>𝐭</mi> <mn>2</mn></msub></mrow></math>
    对于点 *q*（换句话说，*p* = <math alttext="bold t 1"><msub><mi>𝐭</mi> <mn>1</mn></msub></math>
    和 *q*= <math alttext="2 bold t 2"><mrow><mn>2</mn> <msub><mi>𝐭</mi> <mn>2</mn></msub></mrow></math>）。同样，数据点
    *p* 和 *q* 无论基础集如何都是相同的，但 *T* 提供了一个简洁和正交的描述。
- en: 'Bases are extremely important in data science and machine learning. In fact,
    many problems in applied linear algebra can be conceptualized as finding the best
    set of basis vectors to describe some subspace. You’ve probably heard of the following
    terms: dimension reduction, feature extraction, principal components analysis,
    independent components analysis, factor analysis, singular value decomposition,
    linear discriminant analysis, image approximation, data compression. Believe it
    or not, all of those analyses are essentially ways of identifying optimal basis
    vectors for a specific problem.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 基础在数据科学和机器学习中非常重要。事实上，应用线性代数中的许多问题可以概念化为找到描述某些子空间的最佳基础向量集。你可能听说过以下术语：维度约简、特征提取、主成分分析、独立成分分析、因子分析、奇异值分解、线性判别分析、图像逼近、数据压缩。信不信由你，所有这些分析本质上都是为特定问题识别最优基础向量的方式。
- en: '![Points and bases](assets/plad_0304.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![点和基础](assets/plad_0304.png)'
- en: Figure 3-4\. The same points (*p* and *q*) can be described by basis set *S*
    (black solid lines) or *T* (black dashed lines)
  id: totrans-89
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-4。相同的点（*p* 和 *q*）可以用基础集 *S*（黑色实线）或 *T*（黑色虚线）来描述。
- en: 'Consider [Figure 3-5](#fig_3_5): this is a dataset of two variables (each dot
    represents a data point). The figure actually shows three distinct bases: the
    “standard basis set” corresponding to the x = 0 and y = 0 lines, and basis sets
    defined via a principal components analysis (PCA; left plot) and via an independent
    components analysis (ICA; right plot). Which of these basis sets provides the
    “best” way of describing the data? You might be tempted to say that the basis
    vectors computed from the ICA are the best. The truth is more complicated (as
    it tends to be): no basis set is intrinsically better or worse; different basis
    sets can be more or less helpful for specific problems based on the goals of the
    analysis, the features of the data, constraints imposed by the analyses, and so
    on.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑[图 3-5](#fig_3_5)：这是一个包含两个变量的数据集（每个点表示一个数据点）。实际上，图中展示了三个不同的基：对应于 x = 0 和 y
    = 0 线的“标准基础集”，以及通过主成分分析（PCA；左图）和独立成分分析（ICA；右图）定义的基础集。哪种基础集提供了描述数据的“最佳”方式？你可能会倾向于说从
    ICA 计算得到的基向量是最好的。事实更为复杂（通常是如此）：没有一种基础集本质上更好或更差；不同的基础集可以根据分析的目标、数据的特征、分析所施加的约束等情况对解决特定问题更有帮助或不那么有帮助。
- en: '![Points and bases](assets/plad_0305.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![点和基](assets/plad_0305.png)'
- en: Figure 3-5\. A 2D dataset using different basis vectors (black lines)
  id: totrans-92
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-5\. 使用不同基向量（黑色线）的2D数据集
- en: Definition of Basis
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基的定义
- en: 'Once you understand the concept of a basis and basis set, the formal definition
    is straightforward. In fact, basis is simply the combination of span and independence:
    a set of vectors can be a basis for some subspace if it (1) spans that subspace
    and (2) is an independent set of vectors.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你理解了基和基组的概念，其形式化定义就变得很直接。事实上，基本上基本就是由生成和独立性组成的：如果一组向量（1）生成了该子空间并且（2）是一组独立的向量，则可以将其作为该子空间的基。
- en: The basis needs to span a subspace for it to be used as a basis for that subspace,
    because you cannot describe something that you cannot measure.^([3](ch03.xhtml#idm45733308973168))
    [Figure 3-6](#fig_3_6) shows an example of a point outside of a 1D subspace. A
    basis vector for that subspace cannot measure the point *r*. The black vector
    is still a valid basis vector for the subspace it spans, but it does not form
    a basis for any subspace beyond what it spans.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 基需要生成一个子空间才能用作该子空间的基，因为你不能描述你无法测量的东西。^([3](ch03.xhtml#idm45733308973168)) [图 3-6](#fig_3_6)
    展示了一个在一维子空间外的点的示例。该子空间的基向量无法测量点 *r*。黑色向量仍然是所跨越子空间的有效基向量，但它不构成任何超出其跨越范围的子空间的基础。
- en: '![You can only measure what you can measure.](assets/plad_0306.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![你只能测量你能测量到的东西。](assets/plad_0306.png)'
- en: Figure 3-6\. A basis set can measure only what is contained inside its span
  id: totrans-97
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Figure 3-6\. 一个基组只能测量其空间中包含的内容。
- en: 'So a basis needs to span the space that it is used for. That’s clear. But why
    does a basis set require linear independence? The reason is that any given vector
    in the subspace must have a unique coordinate using that basis. Let’s imagine
    describing point *p* from [Figure 3-4](#fig_3_4) using the following vector set:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，基需要跨越其用于的空间。这很清楚。但是为什么基组需要线性独立呢？原因是子空间中的任何给定向量必须使用该基具有唯一的坐标。让我们想象使用以下向量集来描述来自[图 3-4](#fig_3_4)
    的点 *p*：
- en: <math alttext="upper U equals StartSet StartBinomialOrMatrix 0 Choose 1 EndBinomialOrMatrix
    comma StartBinomialOrMatrix 0 Choose 2 EndBinomialOrMatrix comma StartBinomialOrMatrix
    1 Choose 0 EndBinomialOrMatrix EndSet" display="block"><mrow><mi>U</mi> <mo>=</mo>
    <mfenced close="}" open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>2</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: <math alttext="upper U equals StartSet StartBinomialOrMatrix 0 Choose 1 EndBinomialOrMatrix
    comma StartBinomialOrMatrix 0 Choose 2 EndBinomialOrMatrix comma StartBinomialOrMatrix
    1 Choose 0 EndBinomialOrMatrix EndSet" display="block"><mrow><mi>U</mi> <mo>=</mo>
    <mfenced close="}" open="{" separators=""><mfenced close="]" open="["><mtable><mtr><mtd><mn>0</mn></mtd></mtr>
    <mtr><mtd><mn>1</mn></mtd></mtr></mtable></mfenced> <mo>,</mo> <mfenced close="]"
    open="["><mtable><mtr><mtd><mn>0</mn></mtd></mtr> <mtr><mtd><mn>2</mn></mtd></mtr></mtable></mfenced>
    <mo>,</mo> <mfenced close="]" open="["><mtable><mtr><mtd><mn>1</mn></mtd></mtr>
    <mtr><mtd><mn>0</mn></mtd></mtr></mtable></mfenced></mfenced></mrow></math>
- en: '*U* is a perfectly valid vector set, but it is definitely *not* a basis set.
    Why not?^([4](ch03.xhtml#idm45733308946272))'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*U* 是一个完全有效的向量集，但显然*不*是一个基组。为什么不是呢？^([4](ch03.xhtml#idm45733308946272))'
- en: What linear weighted combination describes point *p* in set *U*? Well, the coefficients
    for the linear weighted combination of the three vectors in *U* could be (3, 0,
    1) or (0, 1.5, 1) or…a bajillion other possibilities. That’s confusing, and so
    mathematicians decided that a vector must have *unique* coordinates within a basis
    set. Linear independence guarantees uniqueness.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在集合 *U* 中，什么线性加权组合描述了点 *p*？好吧，三个向量在 *U* 中的线性加权组合的系数可以是（3, 0, 1）或（0, 1.5, 1）或……还有无数其他可能性。这很令人困惑，因此数学家决定，向量在一个基组内必须具有*唯一*的坐标。线性独立性保证了唯一性。
- en: 'To be clear, point *p* (or any other point) can be described using an infinite
    number of basis sets. So the measurement is not unique in terms of the plethora
    of possible basis sets. But *within* a basis set, a point is defined by exactly
    one linear weighted combination. It’s the same thing with my distance analogy
    at the beginning of this section: we can measure the distance from Amsterdam to
    Tenerife using many different measurement units, but that distance has only one
    value per measurement unit. The distance is not simultaneously 3,200 miles and
    2,000 miles, but it is simultaneously 3,200 *kilometers* and 2,000 *miles*. (Note
    for nerds: I’m approximating here, OK?)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 明确一点，点 *p*（或任何其他点）可以用无限多个基组描述。因此，从可能的基组的角度来看，测量并不是唯一的。但是在一个基组内，一个点由一个线性加权组合精确定义。在本节开头的距离类比中，情况也是如此：我们可以使用许多不同的测量单位来测量从阿姆斯特丹到特内里费的距离，但该距离每个测量单位只有一个值。该距离不会同时为3,200英里和2,000英里，但却同时为3,200
    *公里*和2,000 *英里*。（注：这里我做了近似，好吗？）
- en: Summary
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'Congratulations on finishing another chapter! (Well, almost finished: there
    are coding exercises to solve.) The point of this chapter was to bring your foundational
    knowledge about vectors to the next level. Below is a list of key points, but
    please remember that underlying all of these points is a very small number of
    elementary principles, primarily linear weighted combinations of vectors:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你完成了另一章！（嗯，几乎完成了：还有编码练习要解决。）本章的重点是将你关于向量的基础知识带到下一个水平。以下是关键点列表，但请记住，所有这些点的底层是非常少量的基本原则，主要是向量的线性加权组合：
- en: A vector set is a collection of vectors. There can be a finite or an infinite
    number of vectors in a set.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向量集是一组向量的集合。集合中可以有有限个或无限个向量。
- en: Linear weighted combination means to scalar multiply and add vectors in a set.
    Linear weighted combination is one of the single most important concepts in linear
    algebra.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性加权组合指的是对集合中的向量进行标量乘法和加法运算。线性加权组合是线性代数中最重要的概念之一。
- en: A set of vectors is linearly dependent if a vector in the set can be expressed
    as a linear weighted combination of other vectors in the set. And the set is linearly
    independent if there is no such linear weighted combination.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一个向量集中的某个向量可以被其他向量的线性加权组合表示，那么这个向量集是线性相关的。如果没有这样的线性加权组合，则集合是线性无关的。
- en: A subspace is the infinite set of all possible linear weighted combinations
    of a set of vectors.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子空间是一组向量的所有可能的线性加权组合的无限集。
- en: A basis is a ruler for measuring a space. A vector set can be a basis for a
    subspace if it (1) spans that subspace and (2) is linearly independent. A major
    goal in data science is to discover the best basis set to describe datasets or
    to solve problems.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基是空间的度量尺。如果一个向量集（1）张成了该子空间，并且（2）线性无关，那么它可以成为子空间的基。在数据科学中的一个主要目标是发现描述数据集或解决问题的最佳基础集。
- en: Code Exercises
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码练习
- en: Exercise 3-1\.
  id: totrans-111
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 练习 3-1。
- en: Rewrite the code for linear weighted combination, but put the scalars in a list
    and the vectors as elements in a list (thus, you will have two lists, one of scalars
    and one of NumPy arrays). Then use a `for` loop to implement the linear weighted
    combination operation. Initialize the output vector using `np.zeros()`. Confirm
    that you get the same result as in the previous code.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 重写线性加权组合的代码，但是将标量放入一个列表中，将向量作为 NumPy 数组的元素放入另一个列表中。然后使用`for`循环来执行线性加权组合操作。使用`np.zeros()`初始化输出向量。确认你得到了与之前代码相同的结果。
- en: Exercise 3-2\.
  id: totrans-113
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 练习 3-2。
- en: Although the method of looping through lists in the previous exercise is not
    as efficient as matrix-vector multiplication, it is more scalable than without
    a `for` loop. You can explore this by adding additional scalars and vectors as
    elements in the lists. What happens if the new added vector is in <math alttext="double-struck
    upper R Superscript 4"><msup><mi>ℝ</mi> <mn>4</mn></msup></math> instead of <math
    alttext="double-struck upper R cubed"><msup><mi>ℝ</mi> <mn>3</mn></msup></math>
    ? And what happens if you have more scalars than vectors?
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在前一个练习中通过列表循环的方法不如矩阵-向量乘法高效，但比没有`for`循环更具可扩展性。你可以通过将额外的标量和向量作为列表元素添加来探索这一点。如果新添加的向量在<math
    alttext="double-struck upper R Superscript 4"><msup><mi>ℝ</mi> <mn>4</mn></msup></math>而不是<math
    alttext="double-struck upper R cubed"><msup><mi>ℝ</mi> <mn>3</mn></msup></math>中会发生什么？如果标量比向量更多会发生什么？
- en: Exercise 3-3\.
  id: totrans-115
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 练习 3-3。
- en: In this exercise, you will draw random points in subspaces. This will help reinforce
    the idea that subspaces comprise *any* linear weighted combination of the spanning
    vectors. Define a vector set containing one vector [1, 3]. Then create 100 numbers
    drawn randomly from a uniform distribution between −4 and +4\. Those are your
    random scalars. Multiply the random scalars by the basis vector to create 100
    random points in the subspace. Plot those points.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你将在子空间中绘制随机点。这将有助于加强子空间由*所有*生成向量的线性加权组合组成的理念。定义一个包含一个向量 [1, 3] 的向量集。然后从均匀分布在
    -4 到 +4 之间随机抽取 100 个数。这些就是你的随机标量。将随机标量乘以基向量，创建子空间中的 100 个随机点。绘制这些点。
- en: 'Next, repeat the procedure but using two vectors in <math alttext="double-struck
    upper R cubed"><msup><mi>ℝ</mi> <mn>3</mn></msup></math> : [3, 5, 1] and [0, 2,
    2]. Note that you need 100 × 2 random scalars for 100 points and two vectors.
    The resulting random dots will be on a plane. [Figure 3-7](#fig_3_7) shows what
    the results will look like (it’s not clear from the figure that the points lie
    on a plane, but you’ll see this when you drag the plot around on your screen).'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，重复这个过程，但在<math alttext="double-struck upper R cubed"><msup><mi>ℝ</mi> <mn>3</mn></msup></math>中使用两个向量：[3,
    5, 1] 和 [0, 2, 2]。注意，你需要 100 × 2 个随机标量来得到 100 个点和两个向量。生成的随机点将位于一个平面上。[图 3-7](#fig_3_7)
    展示了结果的样子（从图中不清楚这些点位于平面上，但当你在屏幕上拖动图表时你会看到）。
- en: 'I recommend using the `plotly` library to draw the dots, so you can click-drag
    the 3D axis around. Here’s a hint for getting it to work:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我推荐使用`plotly`库来绘制这些点，这样你可以在3D轴上点击拖动。以下是使其工作的提示：
- en: '[PRE1]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Finally, repeat the <math alttext="double-struck upper R cubed"><msup><mi>ℝ</mi>
    <mn>3</mn></msup></math> case but setting the second vector to be 1/2 times the
    first.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，重复 <math alttext="双击上 R 立方"><msup><mi>ℝ</mi> <mn>3</mn></msup></math> 的情况，但将第二个向量设为第一个的一半。
- en: '![Lines and planes](assets/plad_0307.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![直线和平面](assets/plad_0307.png)'
- en: Figure 3-7\. Exercise 3-3
  id: totrans-122
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-7\. 练习 3-3
- en: ^([1](ch03.xhtml#idm45733308219360-marker)) As shown in Chapters [2](ch02.xhtml#Chapter_2)
    and [16](ch16.xhtml#Chapter_16), list-integer multiplication repeats the list
    instead of scalar multiplying it.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch03.xhtml#idm45733308219360-marker)) 如第 [2](ch02.xhtml#Chapter_2) 章和第
    [16](ch16.xhtml#Chapter_16) 章所示，列表-整数乘法重复列表而不是对其进行标量乘法。
- en: ^([2](ch03.xhtml#idm45733312796240-marker)) This equation is an application
    of linear weighted combination!
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch03.xhtml#idm45733312796240-marker)) 这个方程是线性加权组合的一个应用！
- en: ^([3](ch03.xhtml#idm45733308973168-marker)) A general truism in science.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch03.xhtml#idm45733308973168-marker)) 这是科学中的一个普遍真理。
- en: ^([4](ch03.xhtml#idm45733308946272-marker)) Because it is a linearly dependent
    set.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch03.xhtml#idm45733308946272-marker)) 因为它是一个线性相关的集合。
