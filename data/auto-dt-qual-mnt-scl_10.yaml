- en: Appendix. Types of Data Quality Issues
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录。数据质量问题的类型
- en: This appendix presents additional information about the types of data quality
    issues that are commonly encountered in real-world data. This list is helpful
    to consider as you evaluate the data quality monitoring solution you are building
    or buying. Ultimately, you’ll want to have a strategy for identifying and addressing
    each of these types of issues for each important dataset in your organization.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录提供了关于现实世界中常见的数据质量问题类型的额外信息。这个列表对于评估您正在构建或购买的数据质量监控解决方案非常有帮助。最终，您将希望为组织中每个重要数据集的每种问题类型确定并解决策略。
- en: For each of these data quality issues, we will provide an example, a summary
    of common causes, an assessment of how these issues typically affect analytics
    (using data and humans to inform decisions) and machine learning (using data and
    algorithms to automate processes), and our recommendations for how best to monitor
    a data source for these issues.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个数据质量问题，我们将提供一个示例，常见原因的总结，这些问题通常如何影响分析（使用数据和人类进行决策）和机器学习（使用数据和算法自动化流程），以及我们对如何最佳监控数据源这些问题的建议。
- en: '![Types of data quality issues organized into four categories  DALL E 3 ](assets/types_of_data_quality_issues_157166_01.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![分成四类别的数据质量问题  DALL E 3 ](assets/types_of_data_quality_issues_157166_01.png)'
- en: Figure A-1\. Types of data quality issues organized into four categories (DALL-E
    3)
  id: totrans-4
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-1\. 分成四类别的数据质量问题 (DALL-E 3)
- en: As [Figure A-1](#fig_1_figure_a_1_types_of_data_quality_issues_organized) shows,
    we have organized the issues in this appendix into four broad categories that
    indicate *at what level* the issues affect data.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图 A-1](#fig_1_figure_a_1_types_of_data_quality_issues_organized)所示，我们已将本附录中的问题分成四个广泛的类别，显示出问题影响数据的*级别*。
- en: Table issues
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格问题
- en: 'Issues that affect the entirety of the table, and aren’t specific to individual
    rows or values:'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 影响整个表的问题，并不限于单个行或值：
- en: Late arrival
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据迟到
- en: When data arrives late and is not available to a consuming system by the time
    the system needs the data
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当数据迟到并且在系统需要数据时不能及时提供给消费系统时
- en: Schema changes
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 模式变更
- en: When there are structural changes in the data such as new or dropped columns,
    changes in column names, changes in data types for columns, or changes in the
    JSON schema in semistructured columns
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当数据结构发生变化，比如新增或删除列，列名变更，列的数据类型变更，或者半结构化列中的JSON模式变更时
- en: Untraceable changes
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无法追踪的变更
- en: When the records in a table are updated in place in ways that cannot be audited
    after the fact
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当表中的记录以无法事后审计的方式进行就地更新时
- en: Row issues
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行问题
- en: 'Issues affecting entire  rows of data in the table:'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 影响表中整行数据的问题：
- en: Incomplete rows
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不完整的行
- en: When data arrives, but only a fraction of the rows exist that ought to be there;
    usually, a specific segment of data is missing
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当数据到达，但应该存在的行数只有一部分存在时，通常是数据的某个特定部分缺失
- en: Duplicate rows
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重复行
- en: When the same row appears multiple times in the data when it was only intended
    to appear once
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当同一行数据在数据中出现多次，而实际上只打算出现一次时
- en: Temporal inconsistency
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 时间上的不一致性
- en: When there are discrepancies or inconsistencies in the timing or sequencing
    of related data records
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当相关数据记录的时间或顺序存在差异或不一致时
- en: Value issues
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值问题
- en: 'Issues affecting specific values or cells of data:'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 影响数据特定值或单元格的问题：
- en: Missing values
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 缺失值
- en: When values in a column in a dataset are not populated, and instead appear as
    NULL, zero, empty strings, or other sentinel values that represent the absence
    of data
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当数据集中某列的数值未填充，而是显示为NULL、零、空字符串或其他代表缺失数据的标志值时
- en: Incorrect values
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不正确的值
- en: When the values in a column are incorrect, due to either a miscoding issue at
    a record level, or a structural error that misrepresents some or all records
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当某列的数值不正确，可能是记录级别的编码问题，或者结构性错误导致某些或所有记录被错误表示时
- en: Invalid values
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 无效值
- en: When values fail to conform to specified formats, constraints, or business rules
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当数值未能符合指定格式、约束或业务规则时
- en: Multi issues
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多重问题
- en: 'Issues about how multiple tables relate to one another:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 多表关系问题：
- en: Relational failures
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关系失败
- en: When the relational integrity between two data sources fails for some records,
    leading to duplicate or missing joins
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当两个数据源之间的关系完整性失败，导致某些记录的重复或缺失连接时
- en: Inconsistent sources
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不一致的来源
- en: When there are differences in data values over time or across data sources that
    should otherwise be identical
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当时间或不同数据源的数据值存在差异时，本应相同的数据。
- en: Note that these issues aren’t necessarily independent, as some of these can
    be both causes *and* symptoms of underlying issues, and so they may co-occur.
    For example, a source table may arrive late, which causes a relational failure
    in the transformation of the data, and missing data in a fact table.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这些问题不一定是独立的，因为其中一些可能既是潜在问题的原因，*也是*其症状，因此它们可能同时发生。例如，源表可能迟到，导致数据转换中的关系失败，并在事实表中缺少数据。
- en: We’ve tried to make this list as exhaustive as we can. But note that we explicitly
    excluded *semantic* issues, which might cover cases where data is technically
    correct but misunderstood by users, and *accessibility* issues, where again the
    data is correct but simply cannot be accessed. Both of these are important data
    governance issues that can be addressed with data catalogs and access control
    platforms.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们尽可能详尽地列出了这些问题。但请注意，我们明确排除了*语义*问题，这可能涵盖数据在技术上是正确的，但被用户误解的情况，以及*可访问性*问题，其中数据虽然正确，但无法访问。这两者都是可以通过数据目录和访问控制平台解决的重要数据治理问题。
- en: Table Issues
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表问题
- en: Late Arrival
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迟到到达
- en: Definition
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: Data arrives late and is not available to a consuming system by the time the
    system needs the data.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 数据迟到，并且在系统需要数据时，消费系统无法获取数据。
- en: Example
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 例子
- en: The system that moves a web application’s event logs from S3 into a data warehouse
    stops processing new log records, such that there is no event data for the most
    recent day when analysts log in to view dashboards about user behavior.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 将 web 应用程序事件日志从 S3 移动到数据仓库的系统停止处理新的日志记录，因此分析师登录查看关于用户行为的仪表板时，最近一天没有事件数据。
- en: Causes
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: No data is being produced upstream, either at the point of capture (logging
    is not working) or because of a processing failure or outage in an upstream system
    or third party.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上游没有生成任何数据，可能是捕获点（日志未工作）或上游系统或第三方的处理故障或中断。
- en: A system responsible for loading data into a data warehouse is not working,
    either because of an outage or a fatal exception encountered in processing the
    data.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负责将数据加载到数据仓库的系统出现问题，可能是因为中断或处理数据时遇到严重异常。
- en: A system responsible for transforming the data is not working, either because
    of an outage or a fatal failure in the logic of the transformation being applied
    (e.g., a SQL query begins to throw an exception in the warehouse).
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负责数据转换的系统出现问题，可能是因为中断或应用转换逻辑时发生严重失败（例如，在数据仓库中的 SQL 查询开始抛出异常）。
- en: The pipeline producing the data stopped publishing because of other data quality
    issues upstream; late data is intended as an affordance to the end user that data
    for the current period is not ready to be consumed.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产数据的管道因上游其他数据质量问题而停止发布；迟到的数据意味着向最终用户提示当前周期的数据尚未准备好供使用。
- en: Analytics impact
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: Dashboards usually appear to be broken when data is late—there may be visualizations
    that don’t render, or that throw an error in the dashboard, or they may show NULL
    or 0 values.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当数据延迟时，仪表板通常会显示异常——可能有可视化图表无法渲染，或在仪表板上显示错误，或显示 NULL 或 0 值。
- en: Users usually recognize that the data is gone and will come back to view the
    dashboard later. If this happens frequently, users will begin to lose confidence
    in the availability of the data and will seek out other sources or make decisions
    without data.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户通常会意识到数据丢失，并稍后返回查看仪表板。如果这种情况经常发生，用户会开始对数据的可用性失去信心，并寻找其他来源或在没有数据的情况下做出决策。
- en: Operational use cases such as analysis of current marketing campaigns or current
    site behavior will be disproportionately impacted by late data for the most recent
    period.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作用例（例如分析当前营销活动或当前站点行为）将受到最近周期的迟到数据的不成比例影响。
- en: ML impact
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML 影响
- en: '*Model training.* Often not disrupted by this, as model training usually takes
    place over a long history of data.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练。*通常不会受到影响，因为模型训练通常是基于长时间的数据历史进行。'
- en: '*Model inference.* Late data often leads to ML features that are NULL or 0
    when they should be some meaningful value instead. Or late data may mean that
    an ML model is using data that is out of date. In both cases, this introduces
    bias into the ML models that can cause predictions to vary wildly.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推断。* 迟到的数据通常会导致 ML 特征为 NULL 或 0，而不是应该有的有意义值。或者，迟到的数据可能意味着 ML 模型正在使用已过时的数据。在这两种情况下，这会引入偏差到
    ML 模型中，可能导致预测大幅变化。'
- en: How to monitor
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: One approach is to use table observability monitoring. On a regular schedule,
    collect the metadata for when the table was last updated. Then build a time series
    model to predict when the next update should arrive, and alert if the update arrives
    late. However, this might miss a case where the table is being updated in place,
    but new records still have not arrived; it might also miss when a table is dropped
    and replaced with no new records.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种方法是使用表观测监控。按照定期时间表，收集表最后更新的元数据。然后建立时间序列模型来预测下一次更新应何时到达，并在更新延迟时发出警报。然而，这可能会忽略表正在原地更新但新记录仍未到达的情况；也可能忽略表被删除并替换但没有新记录的情况。
- en: The most robust approach is to query for the availability of records in the
    most recent time partition of the data. Observe how long it typically takes for
    records to arrive over time, and then again build a time series model to anticipate
    what time (or day) the records should arrive, and alert if that does not happen.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最健壮的方法是查询数据最新时间分区的可用性。观察随时间记录到达所需的时间，然后再次建立时间序列模型来预测记录应该到达的时间（或日期），并在未发生时发出警报。
- en: Note that, instead of using time series models, you can also set a hard SLA
    for when the table should be updated, or when the data should arrive. This is
    advantageous in case you have users or systems that need the data to arrive by
    a specified time. But note that this will be difficult to maintain at scale.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意，除了使用时间序列模型外，您还可以设置表应何时更新或数据应何时到达的硬性 SLA。这在您需要数据按指定时间到达的用户或系统的情况下非常有利。但请注意，这在大规模情况下将很难维护。
- en: Schema Changes
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模式变更
- en: Definition
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: There are  structural changes in the data such as new or dropped columns, changes
    in column names, changes in data types for columns, or changes in the JSON schema
    in semistructured columns.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的结构变更，如新增或删除列、列名称更改、列数据类型更改或半结构化列中 JSON 架构的更改。
- en: Example
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: A column name is confusing, and so the engineering team decides to rename it
    to make it clearer. However, downstream data processing systems depend on that
    column name, and are not also changed, resulting in data processing failures (late
    or incomplete data) or missing data.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 某列名称令人困惑，因此工程团队决定将其重命名以使其更清晰。然而，下游数据处理系统依赖于该列名称，并且也没有进行更改，导致数据处理失败（数据延迟或不完整）或数据丢失。
- en: Causes
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: The root cause of these changes is almost always an intentional change meant
    to expand, optimize, or refactor the data being captured at runtime.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些变更的根本原因几乎总是有意为之，旨在扩展、优化或重构运行时捕获的数据。
- en: Production applications’ data frameworks (e.g., Django) have robust mechanisms
    for ensuring these changes are propagated throughout the application (so-called
    “migrations”), but this will not extend to systems that are ingesting data emitted
    by these applications and must be accounted for manually.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产应用程序的数据框架（例如 Django）具有确保这些变更在整个应用程序中传播的强大机制（所谓的“迁移”），但这不会扩展到摄取这些应用程序发出的数据的系统中，必须手动考虑。
- en: JSON-formatted data is prized for its flexibility—new data can be captured without
    having to perform migrations in the current system or in downstream applications.
    However, any downstream application that depends on the structure of that JSON
    data may be disrupted by those changes. They are often much more frequent and
    happen with less oversight.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSON 格式数据因其灵活性而受到重视，可以捕获新数据而无需在当前系统或下游应用程序中进行迁移。然而，任何依赖该 JSON 数据结构的下游应用程序可能会受到这些变更的影响。这些变更通常更频繁且监管不严。
- en: Analytics impact
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: In their simplest form, schema changes will make columns unavailable, and simply
    break the dashboards that depend on them.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单来说，模式变更将使列不可用，并且仅仅破坏依赖它们的仪表板。
- en: In more complex cases, a schema change is the root cause of what appears to
    be a missing data or distribution change—and so manifests in that manner.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在更复杂的情况下，模式变更是看起来缺失数据或分布变更的根本原因，因此表现为这种方式。
- en: ML impact
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML 影响
- en: '*Model training*. When schemas change, it can be impossible to backfill historical
    data appropriately (e.g., if new information is being captured or the type changes
    in a way that is lossy). In these cases, ML models will become less powerful as
    their data is inconsistent over time.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练*。当模式发生变化时，适当地回填历史数据可能是不可能的（例如，如果新信息正在被捕捉或类型以有损方式发生变化）。在这些情况下，机器学习模型将因为其数据随时间不一致而变得不那么强大。'
- en: '*Model inference*. If a schema change occurs and a model hasn’t been retrained
    to account for it, then the model may simply fail (as the data is not in the correct
    format or shape for predictions), or it may make wild predictions as the changed
    data is forcefully converted to NULL or other sentinel or imputed values.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推断*。如果发生模式更改，并且模型尚未重新训练以适应这些更改，那么模型可能会失败（因为数据不符合预测的正确格式或形状），或者可能进行狂野的预测，因为更改后的数据被强制转换为NULL或其他标志值或填充值。'
- en: How to monitor
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: Validation rules can be used to explicitly state what the schema ought to be
    for any given table. However, this is very hard to maintain over time.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用验证规则明确说明给定表的模式应该是什么。然而，长时间内保持这种验证非常困难。
- en: A more automated approach takes a snapshot of the schema data at some regular
    cadence (we do this daily at Anomalo) and automatically detects adverse changes,
    such as columns being dropped or renamed.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种更自动化的方法是在某个固定的节奏下对模式数据进行快照（我们在Anomalo每天都这样做），并自动检测不良变化，例如列被删除或重命名。
- en: Untraceable Changes
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不可追溯的变化
- en: Definition
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: The records in a table are updated in place in ways that cannot be audited after
    the fact.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 表中的记录以不可追溯的方式直接更新，无法在事后审计。
- en: Example
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: A digital advertising company only stores the current state of its campaigns.
    Campaigns are often extended, but there is no history of the original end dates
    since they keep getting overwritten. Reporting based on projected campaign end
    dates is unreliable. Although campaign start dates should not change, they can
    be overwritten as well. Campaigns can also be renamed while they are running.
    When analysts pull reports day-to-day, their numbers don’t match and they cannot
    trace back to the reason why.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 一个数字广告公司只存储其广告活动的当前状态。广告活动通常会延长，但原始结束日期没有历史记录，因为它们不断被覆盖。基于预计广告活动结束日期的报告是不可靠的。虽然广告活动的开始日期不应更改，但它们也可能被覆盖。在运行期间，广告活动还可以更名。当分析师日复一日地生成报告时，他们的数字不匹配，无法追溯到原因。
- en: Causes
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: Dimensional data is often updated in place to show the current status of customers
    or locations. Attributes of a location can change, such as if it is open or temporarily
    closed, or a customer can have a new address in a different state. If the time
    of these changes is not tracked, historical reports based on the current versions
    of dim tables may be incorrect.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维度数据通常会被直接更新以显示客户或位置的当前状态。位置的属性可能会更改，例如它是否开放或暂时关闭，或者客户可以在不同州份有新地址。如果不跟踪这些更改的时间，基于当前维度表版本的历史报告可能是不正确的。
- en: Customer transactional or claims data may be updated in place, with an initial
    record created when the transaction begins. Various fields will begin as NULL
    values because they are unknown (the final shipping date or the final amount of
    the claim, for example). Then, as these events become known, the records are updated.
    This leads to data that consistently has more NULL values for recent records.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户交易或索赔数据可能会在原地更新，当交易开始时创建一个初始记录。各种字段最初将作为NULL值，因为它们是未知的（例如最终发货日期或索赔金额）。然后，随着这些事件的逐渐了解，记录会被更新。这导致数据始终具有更多最近记录的NULL值。
- en: Data pipelines may be “rerun” to correct mistakes and previously identified
    issues without preserving a record of the incorrect data to compare to.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据管道可以“重新运行”，以纠正错误和之前确定的问题，而不保留不正确数据的记录以进行比较。
- en: Tables may have a data architecture where the entire table is truncated and
    reloaded on a daily basis, masking which records actually had changes.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格可能具有数据架构，整个表格每天被截断和重新加载，掩盖了哪些记录实际上发生了更改。
- en: Note that some data warehouses support the notion of “time traveling” to review
    the history of a table at a recent point in time. This can help to mediate the
    impact of these issues, but support is typically limited to very recent time periods
    and may be difficult to scale to record level time travel for ML applications.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意，一些数据仓库支持“时间旅行”的概念，以便在最近的某个时间点上查看表的历史。这可以帮助缓解这些问题的影响，但支持通常仅限于非常近期的时间段，并且可能难以扩展到用于机器学习应用程序的记录级时间旅行。
- en: Analytics impact
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: Data analysis on these tables is built on quicksand, since running the same
    query two days in a row does not provide the same results. The analyst is unable
    to recreate the conditions that created the prior day’s run.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这些表上进行的数据分析就像建立在流动沙上一样，因为连续两天运行相同的查询不会提供相同的结果。分析师无法重建导致前一天运行的条件。
- en: Metrics for segments of data may have inconsistent values in reporting from
    one day to the next due to changing dimensional data, causing analysts to lose
    trust in the data.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据段的度量可能由于维度数据的变化，在报告中显示出从一天到下一天不一致的值，导致分析师对数据失去信任。
- en: Historical analysis becomes impossible because the analyst cannot recreate the
    world as it was.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于分析师无法重建过去的世界，历史分析变得不可能。
- en: Metrics computed over time may show sudden sharp movements in recent days or
    weeks due to recent data being incomplete, whereas older records have completed
    their updates.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随时间计算的度量可能因为最近数据不完整而显示出突然的尖锐变动，而较早的记录已经完成更新。
- en: ML impact
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 机器学习影响
- en: '*Model training.* Updating data in place without maintaining the full audit
    log of changes erases a lot of information that might be valuable signals for
    an ML model.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练。* 在原地更新数据而不保留完整的更改审计日志会消除可能对 ML 模型有价值的大量信息信号。'
- en: The worst-case scenario is that updates to historical data “leak” information
    about the response that the model is trying to predict. For example, if a customer
    table is updated every time an order is placed, then this data cannot be used
    to predict the chance that a customer will place another order in the future.
    If it is, then the presence of recent changes (or even more complete records)
    will be a very strong signal that the customer will make purchases in the past.
    But this will not generalize to future predictions.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最糟糕的情况是，对历史数据的更新会“泄漏”关于模型试图预测的响应的信息。例如，如果每次下订单时都更新客户表，则此数据不能用于预测客户将来是否会再次下订单。如果是这样，那么最近的更改（或更完整的记录）的存在将是一个非常强烈的信号，表明客户在过去有过购买行为。但这不会推广到未来的预测中。
- en: '*Model inference.* Models are often trained on historical data that is fully
    matured (all in-place updates have been completed). This is acceptable, but only
    if the model will then be used to make predictions on data that is *also* fully
    mature. In practice, this is rarely the case, and the model will be used on data
    that is still incomplete, and the results of the model will be very biased.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推断。* 模型通常是在完全成熟的历史数据（所有原地更新已完成）上训练的。这是可以接受的，但前提是模型随后将用于预测*同样*完全成熟的数据。实际上，这很少发生，模型将用于仍然不完整的数据，并且模型的结果将非常偏向。'
- en: How to monitor
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: The only way to reliably detect this issue is to compare summary statistics
    or samples of data drawn from a given table for a specific set of records over
    time. The set of records could be a randomly chosen set of primary keys. Or it
    could be a specific time window as specified using a SQL WHERE clause querying
    for a date or time partition of data.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可靠地检测这个问题的唯一方法是比较从给定表中随时间抽取的数据摘要统计或样本，用于特定一组记录。这组记录可以是随机选择的主键集，或者可以是使用 SQL WHERE
    子句指定的特定时间窗口，查询日期或数据的时间分区。
- en: Then, you can monitor for drift in the count of the number of rows over time
    (data is removed or added in place over time), or for drift in key statistics,
    like data quality or business metrics.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，您可以监控随时间推移行数的漂移（数据随时间原地删除或添加），或者关键统计数据的漂移，如数据质量或业务指标。
- en: A more robust approach repeatedly samples data from a given time partition over
    time and uses ML to detect differences in the distribution drift of that data.
    This can identify the specific columns and segments of data that are updated in
    place in a fully automated manner.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个更健壮的方法是反复从给定时间分区的数据中取样，并使用机器学习来检测数据分布漂移的差异。这可以自动识别在原地更新的特定列和数据段。
- en: Row Issues
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行问题
- en: Incomplete Rows
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不完整的行
- en: Definition
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: Data arrives, but only a fraction of the rows exist that ought to be there.
    Usually, a specific segment of data is missing.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 数据到达，但应该存在的行数只有一小部分。通常缺少特定数据段。
- en: Example
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 例子
- en: All of the records for a given day of data have arrived except for the records
    from one country, which is delayed because it is processed by a third party in
    that country that is having an outage.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 给定某一天数据的所有记录已经到达，除了一个国家的记录，由于该国家的第三方正在发生故障而延迟处理。
- en: Causes
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: Data may be collected via different processes or vendors for different segments.
    For example, data from different regions comes from different cloud availability
    zones. Or different types of events are collected using different instrumentation.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能通过不同的过程或供应商收集不同分段的数据。例如，来自不同区域的数据来自不同的云可用区。或者使用不同的工具收集不同类型的事件。
- en: Insofar as data is collected or processed separately by segment, then it is
    common for there to be a failure or delay in capture, transmission, or loading
    of data from just one or a handful of segments, but not all of them.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 就分段单独收集或处理数据而言，通常会发生仅有一个或少数几个分段捕获、传输或加载数据失败或延迟的情况，而不是所有分段。
- en: Analytics impact
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: For any metric evaluated in the data, the missing segment may be above or below
    average for that metric—this will bias the metric up or down accordingly. For
    example, if revenue per transaction is lower in Android events, and they are missing,
    then overall revenue per transaction will appear higher than expected.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于数据中评估的任何指标，缺失的分段可能高于或低于该指标的平均水平，这将相应地使指标出现偏差。例如，如果 Android 事件中的交易收入较低，并且这些事件丢失，则整体交易收入将高于预期。
- en: When the metrics are biased in this way, they may lead teams to reach incorrect
    conclusions. For example, any recent business change may be “blamed” for the resulting
    metric change.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当指标以这种方式出现偏差时，可能导致团队得出错误的结论。例如，任何最近的业务变更可能会“怪罪”导致的指标变化。
- en: The smaller the segment causing the data to be incomplete, the harder it is
    to diagnose the root cause of incompleteness. Biased metrics, as described here,
    may become the new normal.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导致数据不完整的分段越小，诊断不完整性根本原因就越困难。如本文所述的偏见指标可能会成为新常态。
- en: It may not be possible to backfill the incomplete data once the issue is identified,
    leading to a permanent scar in the data.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦问题被识别出来，可能无法对不完整的数据进行补填，从而在数据中留下永久的伤痕。
- en: Dashboards that show segment breakdowns for the metric may appear to be broken
    as a certain segment suddenly disappears in the dashboard, leading teams to disregard
    the dashboard as a reliable source of truth.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仪表板显示指标的分段细分可能出现问题，因为某个特定分段突然在仪表板上消失，导致团队忽视仪表板作为可靠的真实数据来源。
- en: ML impact
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML 影响
- en: '*Model training.* In rare situations, a segment of data can go missing and
    undetected for a long period of time. In these cases, the data would be absent
    from the training dataset, and the model would be unable to learn how to behave
    for that segment of data. Then, when the model is used to make predictions on
    records from that segment of data, they may be very unreliable.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练。* 在罕见情况下，数据的某个分段可能会长时间丢失而未被检测到。在这些情况下，数据将缺失于训练数据集中，模型将无法学习如何处理该数据段。然后，当模型用于预测来自该数据段的记录时，它们可能会非常不可靠。'
- en: '*Model inference.* If records are not being processed for a segment at prediction
    time, then those predictions will not be available for the business to act on.
    This may lead to default impersonalized behavior for consumers or failover to
    rules-based behavior for decisioning systems, which will all underperform.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推理。* 如果在预测时未处理某个分段的记录，则这些预测将无法供业务使用。这可能导致消费者的默认非个性化行为，或者决策系统转为基于规则的行为，所有这些都将表现不佳。'
- en: How to monitor
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: Table observability methods can be used to monitor for incomplete rows; however,
    since metadata is being used, they will only be able to detect changes in the
    *overall* row count for the table and will not be nearly as sensitive to the specific
    row counts added for a time partition.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表观察方法可用于监控不完整的行；然而，由于使用了元数据，它们只能检测表的*整体*行数变化，并不像对于特定时间分区添加的行数变化那样敏感。
- en: A more robust approach is to count the rows for time partitions (days or hours)
    using a SQL query and a partition time column in the table. Then you can use a
    time series model to detect if there is an unexpected drop in table row counts.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更稳健的方法是使用 SQL 查询和表中的分区时间列来计算时间分区（天或小时）的行数。然后，您可以使用时间序列模型检测表行数中是否有意外下降。
- en: Unsupervised ML models are very good at detecting if there is a specific segment
    of data that has disappeared or become much less common than expected in the data.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无监督的 ML 模型非常擅长检测数据中是否存在某个特定分段已消失或比预期少得多的情况。
- en: For very high cardinality segments of data (e.g., store POS systems), explicitly
    confirming all stores are included via joining to a dimensional table of stores
    may be necessary.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于数据的非常高基数部分（例如，商店POS系统），通过连接到包含所有商店的维度表，明确确认所有商店是否已包含可能是必要的。
- en: Duplicate Rows
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重复行
- en: Definition
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: The same row appears multiple times in the data when it was only intended to
    appear once.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据行被意外加载多次时，同一行在数据中出现多次，而实际上只有意出现一次。
- en: Example
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 例子
- en: A credit card payment transaction dataset is joined to a reference table of
    metadata available for each type of payment transaction. The reference dataset
    is maintained by hand in Excel and occasionally dropped and reloaded when there
    are changes. A mistake is made, and a payment type is added a second time instead
    of being edited in place. This data is loaded, and now all of the credit payment
    transactions for that type are joined to two reference records, causing thousands
    of transactions to be duplicated downstream.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 信用卡支付交易数据集与每种支付交易类型的元数据参考表连接。这个参考数据集是手动在Excel中维护的，并且在有更改时偶尔会被删除和重新加载。因错误添加了一个支付类型两次而不是直接编辑。这些数据被加载，现在该类型的所有信用支付交易都与两条参考记录连接，导致数千个交易在下游重复。
- en: Causes
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: As illustrated in the credit card example, a small change that introduces one
    duplicate record in a single table may propagate into a large number of duplicates
    once the data is joined to other tables. So, duplicate data tends to proliferate
    and can even expand exponentially if a table with duplicate data is joined to
    itself (to match some rows or the table with others, say, over time).
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如信用卡例子所示，单个表中引入一个重复记录的微小变化，可能在数据连接到其他表后扩散成大量重复。因此，重复数据往往会扩散，如果连接到自身（例如，匹配一些行或与其他表），可能会呈指数级扩展。
- en: One common cause of duplicates is when the same records are loaded into a data
    warehouse multiple times. This can happen when there is an outage in the system
    loading the data, and a data engineer has to manually resume the loading operations.
    The same file, or parts of it, may be inadvertently loaded twice.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复的一个常见原因是同一记录被多次加载到数据仓库中。当系统加载数据时出现故障，并且数据工程师必须手动恢复加载操作时，就可能发生这种情况。同一个文件或其部分可能会被无意中加载两次。
- en: Duplicate data can also arise from logging in distributed systems. These systems
    are meant to be very tolerant to failures of individual nodes. And so they often
    guarantee “at least once” execution of tasks. However, that means it is possible
    they can run more than once, due to communication issues in the distributed system.
    The result can then be duplicated records (possibly with different timestamps).
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复数据还可能源自分布式系统中的日志记录。这些系统通常能够容忍单个节点的故障，并且通常保证任务“至少执行一次”。然而，这意味着由于分布式系统中的通信问题，它们有可能运行多次。结果可能是重复记录（可能具有不同的时间戳）。
- en: Analytics impact
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: Duplicate data will tend to lead to overstatements of analytical results—counts
    of records will be higher than expected, as will any sum-based statistics. This
    can appear to inflate the performance of a business, or of any entity that you
    are aggregating over.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复数据往往会导致分析结果夸大——记录计数会高于预期，基于总和的统计数据也会如此。这可能会使企业的绩效看起来更好，或者对你正在聚合的任何实体有过高评价。
- en: Duplicate data can also bias any average statistics, as the records that are
    duplicated will effectively be given more weight in comparison to the records
    that are not duplicated.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复数据还会对任何平均统计数据产生偏差，因为重复的记录在比较时将有效地获得更大的权重。
- en: ML impact
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML影响
- en: '*Model training.*'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练。*'
- en: When data is duplicated at random in just the training data (a rare occurrence),
    then it is unlikely to materially bias the result of the model. In fact, many
    algorithms use random sampling of rows, which will not be affected at all by randomly
    duplicating the data first.
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当数据在训练数据中随机重复（这种情况很少见）时，它不太可能对模型结果产生实质性偏差。事实上，许多算法使用随机抽样行，这些行不会受随机重复数据的影响。
- en: However, if there is bias in the duplicated data, then the model will learn
    to pay more attention to these duplicated records. And in extreme cases, it will
    memorize them (since they appear so often) and have an unreasonably high confidence
    in its predictions.
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然而，如果重复数据存在偏差，那么模型将学会更多地关注这些重复记录。在极端情况下，它将会记住它们（因为它们出现得如此频繁），并且对其预测具有不合理的高置信度。
- en: The worst (and most common) case is when data is duplicated before training
    and testing splits are done. This will result in some records appearing in both
    the training data and the test data (since they appear twice, this will be possible
    some fraction of the time). This kind of “leakage” of records from the training
    data to the test data will lead to invalid estimates of the model performance.
    This can cause the process of training the model to select a model that is inappropriate
    for the data, resulting in performance in production that is far inferior to the
    performance experienced when developing the model.
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最糟糕（也是最常见）的情况是，在进行训练和测试拆分之前，数据重复。这将导致一些记录同时出现在训练数据和测试数据中（因为它们出现两次，这在一定程度上是可能的）。这种从训练数据到测试数据的记录“泄漏”将导致对模型性能的无效估计。这可能会导致训练模型选择了与数据不匹配的模型，在生产中的表现远远不如开发模型时的表现。
- en: '*Model inference.*'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推理。*'
- en: Duplicate data at inference time is not inherently problematic for the ML model.
    However, whatever system is consuming the predictions of the model will have to
    contend with duplicate records.
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推理时间的重复数据对机器学习模型本身并不构成问题。然而，无论哪个系统消费模型的预测，都必须处理重复的记录。
- en: Often this means that the decision system will try to make the same decision
    multiple times per entity. This could lead to duplicate emails being sent, duplicate
    coupons being given, duplicate loan applications being created, etc.
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这通常意味着决策系统会尝试为同一实体多次做出相同的决策。这可能导致重复发送电子邮件、重复发放优惠券、重复创建贷款申请等问题。
- en: How to monitor
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: Duplicate rows can be detected by creating a validation rule that ensures that
    the data is unique on a primary key column, or on a combination of columns that
    define a primary key. However, this requires asking subject matter experts to
    test and define this rule for every table of interest.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过创建一个验证规则来检测重复行，该规则确保数据在主键列上是唯一的，或者在定义主键的一组列上是唯一的。但是，这需要专家测试并为每个感兴趣的表定义这个规则。
- en: A more scalable approach is to automatically identify columns that are consistently
    unique over time, and alert if duplicate values appear unexpectedly in any of
    these columns.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更可扩展的方法是自动识别那些随时间一直是唯一的列，并在任何这些列中出现意外重复值时进行警报。
- en: Temporal Inconsistency
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间不一致性
- en: Definition
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: There are discrepancies or inconsistencies in the timing or sequencing of related
    data records.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 相关数据记录的时间或顺序存在差异或不一致。
- en: Example
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: A marketing team is analyzing the sequence of steps that users take when they
    first visit the site. There are key events that are tracked, which include the
    first page the user visits, when they create their account, when they first add
    an item to their cart, and when they first complete a transaction. However, one
    of the distributed systems that is logging events related to adding items to carts
    is experiencing degraded performance, and so it has built up a long queue of cart
    additions to log. The timestamp captured is the moment the log record is written,
    rather than when the item was added to the cart in the user’s browser. The result
    is that the first item added is sometimes *after* the first completed transaction.
    The analysis excludes these records as invalid, and it reduces the computed percentage
    of users who transact, given they have added an item to their cart.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 营销团队正在分析用户首次访问网站时所采取的步骤序列。跟踪的关键事件包括用户首次访问的第一个页面、创建帐户时、首次将商品添加到购物车时以及首次完成交易时。然而，与添加商品到购物车相关的某个分布式系统正在经历性能下降，因此积累了长时间的购物车添加日志队列。所捕获的时间戳是记录日志时的时刻，而不是商品在用户浏览器中被添加的时刻。结果是，有时第一次添加的商品会出现在第一次完成交易之后。分析将这些记录排除为无效记录，并减少了已添加商品到购物车的用户完成交易的计算百分比。
- en: Causes
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: The most common cause of these issues is that the timestamps for events are
    either incorrect or the wrong timestamp is being used (in the example above, we
    are using the logged timestamp rather than the client-side event timestamp).
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些问题最常见的原因是事件的时间戳要么不正确，要么使用错误的时间戳（如上例中，我们使用的是记录的时间戳，而不是客户端事件的时间戳）。
- en: Another very common cause of these issues is that different columns in the same
    table are stored with “wall times” in different time zones. For example, a record
    update timestamp is stored in coordinated universal time (UTC), but a transaction
    time is stored in the local time where the transaction occurred.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些问题的另一个非常常见的原因是，同一张表中不同列使用不同时区的“墙上时间”存储。例如，记录更新的时间戳存储在协调世界时（UTC）中，而交易时间存储在发生交易的本地时间中。
- en: These kinds of temporal issues can also often creep into downstream transformations
    of data due to logical mistakes in SQL. For example, an analytics engineer might
    accidentally take the maximum time an item was added to the cart in the first
    session, rather than the minimum. For users who transacted multiple times in their
    first session, this would also lead to add-to-cart times that are later than the
    transaction time.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这类时间问题也常常会因SQL逻辑错误而悄悄潜入数据的下游转换。例如，分析工程师可能会错误地获取用户在第一次会话中将商品添加到购物车的最大时间，而不是最小时间。对于在其首次会话中进行多次交易的用户来说，这也会导致添加到购物车的时间晚于交易时间。
- en: Analytics impact
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: When the temporal sequence of events is inaccurate, then computations about
    the time it takes for events to occur are biased. This can cause analytical errors
    in the estimates of how long key activities take to complete. Time is money, as
    they say, and so these inaccuracies can lead to suboptimal or even value-destroying
    decisions.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当事件的时间顺序不准确时，计算事件发生所需时间的结果就会出现偏差。这可能导致对关键活动完成所需时间的估算出现分析错误。俗话说，时间就是金钱，因此这些不准确性可能导致次优甚至价值破坏的决策。
- en: In some cases, the sequence of events becomes impossible (a user checks out
    without adding anything to their cart). If these impossible records are removed,
    then the results are biased by their absence.
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某些情况下，事件顺序可能会变得不可能（用户结账而未将任何商品添加到购物车中）。如果移除这些不可能的记录，则结果会因其缺失而出现偏差。
- en: If they are included, then they can have wild consequences. For example, we
    have seen issues with timestamp conversion that have caused events to be far,
    far in the future. When times for these events are computed and averaged with
    other times, they can completely overwhelm the computation and lead to irrational
    conclusions.
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果包括它们，可能会产生极端后果。例如，我们曾看到由于时间戳转换问题导致事件被预定到遥远的未来。当这些事件的时间计算并与其他时间平均后，可能会完全混淆计算并导致不合理的结论。
- en: ML impact
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML影响
- en: '*Model training.*'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练.*'
- en: The time it takes for events to occur can be a very important signal to an ML
    model (how long a customer takes to complete an action or how long an internal
    process takes). These inaccuracies will tend to bias the model to think these
    events are less important than they really are.
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件发生所需的时间可能是机器学习模型的非常重要的信号（客户完成动作所需的时间或内部流程所需的时间）。这些不准确性往往会使模型误以为这些事件比实际重要性低。
- en: The more problematic case is when the events themselves are a part of what you
    are trying to predict. For example, if you are predicting how long it will take
    for a delivery to be made and this measure is biased by incorrect temporal data,
    then your entire model can be biased and it will perform poorly in production.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更为棘手的情况是，当事件本身成为你试图预测的内容的一部分时。例如，如果你正在预测交付需要多长时间，而这一度量受到不正确时间数据的偏倚，那么整个模型可能会受到偏倚，并且在实际应用中表现不佳。
- en: '*Model inference**.* At prediction time, these temporal inconsistencies will
    appear as incorrect values, which will have the same adverse effects as for other
    incorrect string or numeric types of data.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推断**.* 在预测时，这些时间上的不一致将表现为错误的数值，这会对其他类型的字符串或数值数据一样产生不利影响。'
- en: How to monitor
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: Complex validation rules can be created that self-join the table to itself,
    compute the sequence or interarrival time between events, and then set explicit
    guards around the ordering of sequences or what the arrival times between events
    should be.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以创建复杂的验证规则，通过表自连接，计算事件之间的顺序或到达时间间隔，然后设置明确的保护措施来保证事件顺序或到达时间的顺序性。
- en: Unsupervised ML algorithms can detect some of these issues, insofar as the data
    is reshaped to have one row per entity or transaction, with the sequence of events
    and timestamps appearing as multiple columns. The algorithm will be able to learn
    the relationships between these columns and identify if there are unexpected changes.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无监督机器学习算法可以检测到这些问题的一些表现形式，只要数据被重塑为每个实体或交易一行，具有多列事件和时间戳序列。算法将能够学习这些列之间的关系，并识别是否存在意外的变化。
- en: Value Issues
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 值问题
- en: Missing Values
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺失值
- en: Definition
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: Values in a column in a dataset are not populated, and instead appear as NULL,
    zero, empty strings, or other sentinel values that represent the absence of data.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集中某列的数值未填充，而是出现了NULL、零、空字符串或其他标志性值，表示数据缺失。
- en: Example
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: 'In an auto insurance dataset, there is a column for each insurance policy that
    shows how many doors there are in the vehicle being insured. There are valid reasons
    for this column to be NULL (e.g., doors are not relevant for motorcycles), but
    suddenly the percentage of NULL values increases because a third-party source
    of vehicle information is incomplete, causing a left join to fail, which introduces
    NULL values for cars that should have a door number. NULL can become an overloaded
    concept in a database: it can represent that the value is not appropriate (motorcycles
    have no doors), unknown (the vehicle type is not yet known), or missing (the car
    is known but the number of doors field is still missing).'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个汽车保险数据集中，每个保险政策都有一列显示被保险车辆的车门数量。这列数据为空（例如，对于摩托车而言车门无关紧要），但突然之间出现了更多的空值，因为一个第三方车辆信息源不完整，导致左连接失败，引入了本应具有车门数量的车辆的空值。在数据库中，NULL可能会成为一个重载概念：它可以表示值不适用（摩托车没有车门）、未知（车辆类型尚未确定）或缺失（已知车辆但车门数量字段尚未填充）。
- en: Causes
  id: totrans-175
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: Missing data can appear at the point of collection when the event itself is
    captured (e.g., a record is written), but a measurement about the event (e.g.,
    context for the event, or key outcomes) is not captured.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失数据可能出现在事件捕获的数据收集点上（例如，记录被写入），但对事件的测量（例如，事件的背景或关键结果）未被捕获。
- en: Missing data can also creep into data as it is moved from one system to another—for
    example, if a system that the data is being loaded into expects an alternate data
    type, then values may be coerced into the new data type, and values that cannot
    be coerced may become missing.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据移动时，缺失数据也可能会渗入数据中，例如，如果数据加载到的系统期望替代数据类型，那么值可能会被强制转换为新数据类型，无法强制转换的值可能会变成缺失数据。
- en: Missing data is also often introduced via left joins. For example, when a set
    of transactions is left-joined to a dimension table, and there are join keys that
    are not present in the dimension table, then any data brought from the dimension
    table to the transactions will be missing for those keys.
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失数据通常也会通过左连接引入。例如，当一组交易左连接到一个维度表时，如果连接键在维度表中不存在，那么从维度表到交易的任何数据都将缺失这些键的数据。
- en: Missing data can also accumulate, where a small fraction of missing data at
    a granular level can turn into a larger fraction of missing data at an aggregate
    level. For example, in some platforms, if you compute the sum of a column that
    contains missing values, the result of the sum can be missing. Thus, a dataset
    that is only 1% missing at the transaction level can become 10% or 50% missing
    when aggregated by customer, product, or geography.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失数据也可能积累，从而导致在粒度级别上的少量缺失数据在聚合级别上变成更大的缺失数据比例。例如，在某些平台上，如果计算包含缺失值的列的总和，则总和的结果可能是缺失的。因此，一个在交易级别上只有1%缺失的数据集，在按客户、产品或地理位置聚合时，可能会变成10%或50%的缺失数据。
- en: Analytics impact
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: Missing data often biases analytics results. The most common treatment is that
    missing data is removed from the analysis. If the data is missing at random, then
    the results will just have more noise.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失数据常常会导致分析结果出现偏差。最常见的处理方法是将缺失数据从分析中移除。如果数据是随机缺失的，那么结果将会更加嘈杂。
- en: But most data doesn’t go missing at random; it goes missing for a specific reason.
    And usually the records that are missing are correlated to other segments of the
    dataset, which may have significantly higher or lower values for any metrics under
    analysis. This will cause a downward or upward bias in the analysis that can influence
    decisions.
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是，大多数数据不会随机缺失；它们缺失是有具体原因的。通常缺失的记录与数据集的其他部分相关联，这些部分可能在任何分析指标下具有显著更高或更低的数值。这将导致分析中的向下或向上偏差，这可能会影响决策。
- en: ML impact
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML 影响
- en: '*Model training.*'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练。*'
- en: Missing raw data will often translate into ML features that are missing or have
    increases in default values (such as 0).
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺失的原始数据通常会转化为缺失或默认值（如0）增加的 ML 特征。
- en: In some cases, a feature will become much less important to the model because
    it can only be used on a small percentage of observations. This will limit how
    powerful the model can be, as it won’t be able to learn as much from this feature
    as it should be able to.
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某些情况下，由于只能应用于少量观测值，某个特征对模型的重要性会大大降低。这将限制模型的能力，因为它无法像应该学习的那样多地从这个特征中学习。
- en: In extreme cases, the missingness will be linked to the response outcome, due
    to a quirk in how the missingness was introduced. For example, a SQL bug causes
    a field to become missing only if a user has churned. Then, using this field in
    a model to predict churn will trick the model into thinking that missingness causes
    churn. This will make the model very untrustworthy at prediction time.
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在极端情况下，缺失数据可能与响应结果相关联，这是由于引入缺失数据的方式所导致的特殊情况。例如，SQL bug 导致某个字段仅在用户流失时变为缺失。然后，将此字段用于模型预测流失将会误导模型认为缺失数据导致了流失。这将使得模型在预测时非常不可靠。
- en: Finally, the missingness can appear in the response itself (we don’t know the
    outcome we are trying to predict). This will cause that data to be removed entirely
    from the modeling exercise, which will limit the strength of the model and bias
    its predictions on any records in the future that previously had this missingness
    pattern.
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，缺失数据可能会出现在响应本身中（我们不知道我们试图预测的结果）。这将导致该数据在建模过程中被完全删除，这将限制模型的强度并使其在以前具有此缺失模式的记录的未来任何预测上产生偏差。
- en: '*Model inference.*'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推理。*'
- en: At prediction time, when a model is fed missing data that it doesn’t expect,
    these missing values may cause the model to fail to make predictions entirely,
    which stops the system from functioning. To avoid that, missing values are often
    coerced into numeric values (often 0), which can lead to wildly inaccurate predictions
    if that value is not frequently present in the training data or is present in
    very different circumstances.
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在预测时，当模型接收到其不期望的缺失数据时，这些缺失值可能会导致模型完全无法进行预测，从而停止系统的正常运行。为了避免这种情况，缺失值通常被强制转换为数值（通常为0），如果该值在训练数据中不经常出现或者出现在非常不同的情况下，可能会导致极其不准确的预测。
- en: In other cases, the missing values will be handled by the model gracefully (e.g.,
    tree-based models can just integrate over splits on that feature), but if the
    values are missing for reasons that are different from how they were missing in
    the training data, the predictions will still be biased.
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在其他情况下，模型可以优雅地处理缺失值（例如，基于树的模型可以在该特征上进行分割整合），但如果缺失的原因与训练数据中的缺失方式不同，预测结果仍然会存在偏差。
- en: How to monitor
  id: totrans-192
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: Validation rules can be used to detect if data is missing, and metrics can be
    used to monitor the percentage of data that is missing. However, both require
    significant maintenance and care.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用验证规则检测数据是否缺失，并使用指标监控缺失数据的百分比。然而，这两者都需要进行大量的维护和细心处理。
- en: Unsupervised ML is very effective at detecting if there is a sudden increase
    in missing data.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无监督机器学习在检测数据突然缺失方面非常有效。
- en: Incorrect Values
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不正确的值
- en: Definition
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: Values in a column are incorrect due to either a miscoding issue at a record
    level or a structural error that misrepresents some or all records.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 由于记录级别的错误编码问题或结构错误误代表了部分或所有记录，某一列中的值是不正确的。
- en: Example
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: A social media platform is tracking the percentage of users who are taking specific
    actions (e.g., liking, sharing, or replying to content). The specific actions
    are tagged by the application code, and to facilitate more fine-grained analysis
    of user behavior, the application splits a tag in two to capture some finer nuance
    of the behavior (e.g., “shared” now becomes “shared with comment” or “shared directly”).
    However, this change is not clearly communicated to all downstream users, so some
    queries that are looking for the old, aggregated tag begin returning no records
    for recent periods of data.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 社交媒体平台正在追踪执行特定操作的用户百分比（例如，喜欢、分享或回复内容）。应用程序代码标记具体操作，并为了更精细地分析用户行为，应用程序将一个标签分成两个，以捕捉某些行为的更细微差别（例如，“分享”现在变成“带评论分享”或“直接分享”）。然而，这种变更并未明确告知所有下游用户，因此一些查询寻找旧的聚合标签开始在最近的数据周期中返回零记录。
- en: Causes
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: The most obvious cause of incorrect values is when they are captured incorrectly
    at the point of data entry—typically when a human is entering data into a form,
    and there are insufficient controls on that form. For example, a user may enter
    an address that is invalid or incorrect. In general, these issues are becoming
    less frequent, as there are better methods of input validation in modern applications.
    However, discrepancies can remain across systems, and master data management (MDM)
    tools can be used to master and reconcile information of this type.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最明显的不正确数值的原因是在数据录入点处错误捕获数据，通常是人类在表单中输入数据时，而表单上又没有足够的控制。例如，用户可能输入一个无效或错误的地址。总体而言，随着现代应用程序中输入验证方法的改善，这些问题变得越来越少见。然而，系统之间仍可能存在差异，主数据管理（MDM）工具可用于管理和协调这类信息。
- en: A more systemic cause of incorrect values is when the system generating the
    data (the application or the third party) makes a change in how the data is generated,
    logged, or processed that affects the values for specific records. Records that
    would have been represented by a specific string value in the past now have a
    new string value, or their numeric value has changed in a way that isn’t related
    to the quantity being measured.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更系统性的不正确值的原因是生成数据的系统（应用程序或第三方）在生成、记录或处理数据的方式上进行了变更，从而影响了特定记录的值。过去以特定字符串值表示的记录现在可能有新的字符串值，或者它们的数值发生了与被测量数量无关的变化。
- en: In some cases, these changes are “bugs” that are misrepresenting the data and
    can be fixed in upstream systems. But in other cases they are intentional changes
    that may refine the granularity or units of the data being captured. For example,
    a financial transaction value might change from USD to EUR. Or a product dimension
    might change from being measured in inches to centimeters.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某些情况下，这些变更是误导数据的“错误”，可以在上游系统中修复。但在其他情况下，它们是有意的变更，可能是为了改进数据的细化程度或单位。例如，财务交易金额可能从美元变为欧元。或者产品尺寸可能从英寸测量变为厘米。
- en: Incorrect values can also enter into datasets due to changes in how the data
    is being processed. For example, SQL may be used to transform a dataset inside
    a data warehouse. That SQL will need to change periodically to accommodate new
    features in the input data, new requirements for the output of the SQL, or to
    adapt to other upstream changes. Each change in the SQL can introduce the risk
    of invalid values, such as when a mistake is made in a `CASE WHEN` statement that
    incorrectly reclassifies string values.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不正确的值也可能由于数据处理方式的变更而进入数据集。例如，SQL 可能用于在数据仓库内转换数据集。该 SQL 需要定期更改，以适应输入数据的新特性、SQL
    输出的新要求，或者适应其他上游变更。每次 SQL 的更改都可能引入无效值的风险，例如在`CASE WHEN`语句中犯错误，错误地重新分类字符串值。
- en: Analytics impact
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: When values are incorrectly coded for individual records, there is unlikely
    to be a significant impact on analytics, which tend to use the data in aggregate.
    However, when a large percentage of values are incorrect, then statistics or visualizations
    based on that data can become badly biased.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当个别记录的值编码不正确时，对分析影响不大，因为分析通常使用聚合数据。然而，当大量值不正确时，基于该数据的统计或可视化可能会严重偏倚。
- en: For example, many analytical queries will be narrowly focused on segments of
    data and will use `WHERE` SQL clauses to narrow the computation to a subset of
    rows. When values are incorrect, these SQL queries will miss the data entirely,
    or will include it in places where it should not be included. This can lead to
    large changes in volume and statistics insofar as these subsets differ from the
    norm (which they usually do).
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，许多分析查询将严格专注于数据的片段，并使用`WHERE` SQL子句将计算缩小到行的子集。当数值不正确时，这些SQL查询将完全错过数据，或者将其包含在不应包含的地方。这可能导致量和统计数据大幅变化，因为这些子集与通常情况下的不同（通常如此）。
- en: When numerical values are incorrect, then all of the analytical computations
    of these values are also inherently flawed. Computing sums, means, or other statistics
    will all be biased in proportion to the percentage of records and amount of variance
    introduced by the incorrect coding.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当数值不正确时，所有这些数值的分析计算也会有本质上的错误。计算总和、均值或其他统计量都会因错误编码引入的记录百分比和方差量而存在偏差。
- en: ML impact
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML 影响
- en: '*Model training.*'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练。*'
- en: When values are invalid, the ML model will still attempt to learn the relationship
    between the invalid values and the outcome that it is trying to predict. In the
    best-case scenario, there is no relationship, and the data simply isn’t as useful
    as it could be, so the model’s performance will be lower than it could have been
    (potentially causing false positives or false negatives).
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当数值无效时，ML模型仍会尝试学习无效值与其试图预测的结果之间的关系。在最好的情况下，这种关系不存在，数据只是没有像它本应有的那样有用，因此模型的性能将低于其本应有的水平（可能导致误报或漏报）。
- en: But if the variable is an important one, then the invalid values will almost
    certainly affect the relationships the model learns between the outcome and the
    data. This can cause the model to associate values with an outcome that is not
    real. As soon as the data quality issue is fixed, the model will begin to behave
    very erratically.
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是如果变量很重要，那么无效值几乎肯定会影响模型在结果和数据之间学习的关系。这可能导致模型将值与不真实的结果相关联。一旦数据质量问题得到解决，模型将开始表现得非常不稳定。
- en: '*Model inference.*'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推理。*'
- en: Whenever a model is presented with an incorrect value, this will affect the
    prediction of the model. The magnitude of the prediction will depend on how important
    the affected data is to the model (how much “weight” that data is given when making
    predictions), and the magnitude of the error in the coding of the data (where
    magnitude here is really measured in terms of how different the predictions become
    for affected records).
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每当模型遇到不正确的数值时，都会影响模型的预测。预测的幅度取决于受影响数据在模型中的重要性（在进行预测时数据被赋予的“权重”），以及数据编码中的错误幅度（这里的幅度实际上是指受影响记录的预测差异有多大）。
- en: In practice, this can range from negligible (a small change in the precision
    of a floating point may not have a meaningful effect, or the miscoding of a category
    that isn’t important to the model’s prediction may have no effect), or it can
    completely ruin the predictions for affected records, causing wildly erroneous
    decisions to made.
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在实践中，这可以从可忽略的（浮点精度的微小变化可能不会产生实质影响，或者对模型预测不重要的类别的错误编码可能不会有影响）到完全破坏受影响记录的预测，导致极端错误的决策。
- en: How to monitor
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: Validation rules can encode a user’s expectations for what types of values in
    a given column are correct given other data in the column, but this requires a
    great deal of care and maintenance.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证规则可以编码用户对给定列中的值类型的期望，考虑到列中的其他数据，但这需要极大的谨慎和维护。
- en: Time series models can be used to monitor the percentage of records available
    for each common value in a column and can detect if there is an unexpected drift.
    However, this approach is best used with just a handful of critical columns on
    important tables. And it will not be able to handle columns with numeric, time,
    or other high cardinality values.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列模型可以用来监测列中每个常见值的可用记录的百分比，并且可以检测是否存在意外的漂移。然而，这种方法最好只用于重要表中少数几个关键列，并且不能处理具有数值、时间或其他高基数值的列。
- en: Unsupervised ML models are very good at detecting unexpected changes in the
    distribution of the data caused by incorrect values, insofar as these changes
    are affecting a meaningful percentage of the rows.
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无监督机器学习模型非常擅长检测由不正确值引起的数据分布意外变化，尤其是这些变化影响了大量行。
- en: Invalid Values
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无效值
- en: Definition
  id: totrans-221
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: Values fail to conform to specified formats, constraints, or business rules.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 值未符合指定格式、约束或业务规则。
- en: Example
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: A mainframe system of customer information exports dates in a YYYYMMDD string
    format. This data is loaded into Snowflake, where marketing campaigns are configured
    to send customers emails based on their date of birth. A configuration change
    is made in the mainframe, and now the dates are exported in DDMMYYYY format instead.
    In Snowflake, this results in birthdates that are far in the distant past, resulting
    in users whose age ranges are never selected for marketing campaigns, causing
    a significant drop in marketing activity and new customer acquisition.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 一个客户信息的主机系统以YYYYMMDD字符串格式导出日期。这些数据被加载到Snowflake中，其中市场活动被配置为根据客户的出生日期发送电子邮件。在主机系统进行配置更改后，现在日期以DDMMYYYY格式导出。在Snowflake中，这导致出生日期远在过去，导致用户的年龄范围永远不会被选择用于市场活动，从而导致营销活动和新客户获取显著下降。
- en: Causes
  id: totrans-225
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: Many data format issues are caught early in data extraction and loading, as
    the type of the data is inconsistent with the type of the table it is being loaded
    into. For example, a string-formatted integer would throw an error in a data load
    into a table that expected the date to be formatted as a numeric type.
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多数据格式问题在数据提取和加载的早期阶段就被捕获，因为数据类型与加载到表中期望的数据类型不一致。例如，字符串格式的整数在加载到期望日期格式为数值类型的表时会报错。
- en: But, within the format constraints of the column, it is still possible that
    the format of the values is inconsistent with what users or downstream systems
    might expect. This is most common with string columns, which, aside from requiring
    valid character sets and possibly having limits on length, rarely have any other
    types enforced. It is also common to have incorrect formats in JSON or other nested
    data (see [Chapter 3](ch03.html#assessing_the_business_impact_of_automa) for more
    on these types).
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 但是，在列的格式约束内，值的格式仍可能与用户或下游系统预期的格式不一致。这在字符串列中最为常见，除了需要有效的字符集和可能有长度限制之外，很少强制执行其他类型的规则。在JSON或其他嵌套数据中出现格式不正确也很常见（有关更多信息，请参见[第三章](ch03.html#assessing_the_business_impact_of_automa)）。
- en: Format issues are most common when changes to the systems capturing or logging
    the data itself change, causing the format to suddenly change. As an example,
    a third party might decide to begin representing US phone numbers in (XXX) XXX-XXXX
    format instead of in XXX-XXX-XXXX format.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 格式问题最常见于捕获或记录数据的系统发生更改时，导致格式突然改变。例如，第三方可能决定开始以(XXX) XXX-XXXX格式而不是XXX-XXX-XXXX格式表示美国电话号码。
- en: In other cases, format issues are caused by there being inconsistent standards
    for the format within the same enterprise. These inconsistencies may not matter
    when data is stored and processed separately in each organization. But as soon
    as the data is brought together in a single data warehouse or data lake, these
    format issues can wreak havoc on data users.
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在其他情况下，格式问题是由于同一企业内部对格式的标准不一致而引起的。当数据分别在每个组织中存储和处理时，这些不一致可能并不重要。但一旦数据汇总到单一的数据仓库或数据湖中，这些格式问题就会对数据使用者造成严重影响。
- en: Finally, there can be invalid data that doesn’t meet constraints that the business
    has in place. For example, it may not be possible for there to be a negative monetary
    transaction (where the company owes the customer for buying the product). In these
    cases, the issue is more that the data itself is incorrect, and it just may be
    more obvious than other incorrect values because the value itself is not allowed.
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，可能存在不符合企业现有约束条件的无效数据。例如，可能不可能存在负货币交易（公司向客户购买产品）。在这些情况下，问题更多是数据本身不正确，而且比其他不正确的值更为明显，因为这些值本身是不允许的。
- en: Analytics impact
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: Incorrect or inconsistently formatted data creates a significant drag on analytics
    teams, as they have to rectify these formatting issues if they want to join, union,
    or aggregate the data in consistent ways. This may need to be done on an ad hoc
    basis, significantly slowing down the time to produce analyses and insights.
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不正确或不一致的格式化数据会显著拖累分析团队，因为他们必须在想要以一致的方式联接、合并或聚合数据时纠正这些格式问题。这可能需要临时处理，大大减慢了生成分析和洞察的时间。
- en: In other cases, when the data is simply invalid, the effect is the same as other
    invalid data, it may just be more obvious to the end user.
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在其他情况下，当数据无效时，效果与其他无效数据相同，只是对最终用户更加显而易见。
- en: ML impact
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML impact
- en: '*Model training.*'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练。*'
- en: High cardinality string data is not often directly used as an input into ML
    models, unless they are doing natural language processing on the data, which can
    in many cases be robust to variances in format.
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高基数的字符串数据通常不直接用作ML模型的输入，除非它们在对数据进行自然语言处理时，这在许多情况下可以对格式变化具有弹性。
- en: However, if there is feature engineering happening on this data, inconsistently
    formatted data can hurt the model’s ability to generalize across the differently
    formatted segments of the population of data it is trained upon. Typically this
    is discovered by the engineer who is doing the feature engineering, and like the
    analytics team, they simply have to do more work to overcome it.
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然而，如果在这些数据上进行特征工程处理，格式不一致的数据会损害模型在训练时对不同格式数据段的泛化能力。通常情况下，进行特征工程的工程师会发现这一点，就像分析团队一样，他们只需多做一些工作来克服这个问题。
- en: '*Model inference.*'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推断。*'
- en: When the format of a string column changes unexpectedly, the features that are
    computed from that column may also change, which will cause a sudden shock to
    the ML model and will cause predictions to behave erratically.
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当字符串列的格式意外改变时，从该列计算的特征也可能会改变，这将导致ML模型出现突然的反应，并导致预测表现不稳定。
- en: How to monitor
  id: totrans-240
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: Invalid values can be found using validation rules, where a subject matter expert
    expresses the expected format of the data.
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用验证规则找到无效值，主题专家会表达数据预期格式。
- en: Unsupervised ML can detect changes in value formats, especially if it can use
    pattern recognition in string values as an input into the ML model.
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无监督机器学习可以检测值格式的变化，特别是如果它可以使用字符串值的模式识别作为ML模型的输入。
- en: Invalid values often cause downstream SQL to error due to type conversion issues
    which make them hard to monitor directly; validation rules using `TRY_CAST` can
    help catch these errors explicitly on an upstream form of the table where all
    column types are treated as variants.
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无效值经常导致下游SQL由于类型转换问题而报错，这使得直接监控它们变得困难；使用`TRY_CAST`的验证规则可以帮助明确捕捉这些错误，特别是在表的上游形式上，其中所有列类型都被视为变体。
- en: Multi Issues
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多问题
- en: Relational Failures
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关系失败
- en: Definition
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Definition
- en: The relational integrity between two data sources fails for some records, leading
    to duplicate or missing joins.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 两个数据源之间的关系完整性对一些记录失败，导致重复或缺失的连接。
- en: Example
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: An ecommerce company wants to analyze what marketing channels are driving the
    most order volume. A table containing marketing attribution data is left joined
    to another table that has customer order information. However, the customer attribution
    data is missing all customers whose first engagement was on Android due to an
    upstream logging issue. The result is that many of the orders are dropped, and
    none of the results include Android data.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 一家电商公司希望分析哪些营销渠道推动了最多的订单量。一个包含营销归因数据的表与另一个包含客户订单信息的表进行左连接。然而，由于上游日志记录问题，所有首次使用安卓设备进行互动的客户的归因数据均丢失。结果是许多订单被丢弃，且所有结果均不包含安卓数据。
- en: Causes
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Causes
- en: The most common causes of relational failures are actually other data quality
    issues—data in one of the tables that are being joined is either missing or duplicated,
    causing the join to fail to be one-to-one, or to produce more or fewer records
    per joined key than expected.
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关系失败的最常见原因实际上是其他数据质量问题——要连接的其中一张表中的数据要么缺失要么重复，导致连接失败或者每个连接键产生的记录数比预期值多或少。
- en: A more subtle cause of relational failures is when the IDs that are used themselves
    have data quality issues, which could be incompatible formats, or incorrect values.
    For example, a user’s email address might be hashed to an alphanumeric string
    to protect their privacy, but still provide a consistent way of identifying the
    user. If one source begins using a different hashing algorithm from the others,
    then the join will fail spectacularly.
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关系失败的一个更微妙的原因是使用的标识符本身具有数据质量问题，这可能是不兼容的格式或不正确的值。例如，为了保护用户的隐私，用户的电子邮件地址可能会被哈希为字母数字字符串，但仍然提供了一种一致的用户标识方法。如果一个源开始使用与其他源不同的哈希算法，那么连接将彻底失败。
- en: Finally, in some cases the join is logically incorrect. For example, if two
    tables are being joined on a day of month column, but one source is using the
    calendar day of month, whereas the other source is using the bank business day
    of month, the join will fail (there are more calendar days than business days
    in every month, so records will be lost).
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，在某些情况下，连接逻辑上是不正确的。例如，如果两个表在一个月的日期列上进行连接，但一个源使用的是日历日期，而另一个源使用的是银行工作日日期，连接将失败（每个月的日历天数多于银行工作日，因此记录将丢失）。
- en: Analytics impact
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: The net result of relational failures is usually either incomplete rows (records
    are dropped), missing values (a left join leads to NULL values), or duplicate
    rows (a join is not one-to-one, and so there are Cartesian joins that explode
    the row counts). The impact on the analytics is the same as for these other data
    quality issues.
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关系失败的净结果通常是不完整的行（记录被丢弃），缺失的值（左连接导致 NULL 值），或重复的行（连接不是一对一，因此有导致行数激增的笛卡尔连接）。对分析的影响与这些其他数据质量问题的影响相同。
- en: ML impact
  id: totrans-256
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML 影响
- en: '*Model training.* The impact will vary based on the net impact of the join
    failure (see the sections [“Incomplete Rows”](#incomplete_rows), [“Missing Values”](#missing_values),
    or [“Duplicate Rows”](#duplicate_rows)).'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练。* 其影响将根据连接失败的净影响而异（请参见[“不完整行”](#incomplete_rows)，[“缺失值”](#missing_values)或[“重复行”](#duplicate_rows)部分）。'
- en: '*Model inference.* The impact will vary based on the net impact of the join
    failure(see the sections [“Incomplete Rows”](#incomplete_rows), [“Missing Values”](#missing_values),
    or [“Duplicate Rows”](#duplicate_rows)).'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推断。* 其影响将根据连接失败的净影响而异（请参见[“不完整行”](#incomplete_rows)，[“缺失值”](#missing_values)或[“重复行”](#duplicate_rows)部分）。'
- en: How to monitor
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: Validation rules that express the expected join semantics between two tables
    can be used to monitor for adherence to those join semantics (at least one record,
    exactly one record, or one or more record as the result of a join).
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用表达预期的连接语义的验证规则来监视对这些连接语义的遵守（至少一个记录，恰好一个记录，或多个记录作为连接的结果）。
- en: In other cases, these issues can be caught by unsupervised ML models in tables
    or views that are the result of joins on tables with relational issues.
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在其他情况下，这些问题可以通过无监督的 ML 模型捕获，这些模型应用于具有关系问题的表或视图的结果。
- en: Inconsistent Sources
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不一致的来源
- en: Definition
  id: totrans-263
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义
- en: There are differences in data values over time or across data sources that should
    otherwise be identical.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 时间或数据源之间的数据值差异应当是相同的，但实际上存在差异。
- en: Example
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 例子
- en: A complex set of financial data is transformed, joined, aggregated, and summarized
    inside of a source relational database to produce internal financial metrics.
    The same raw data is exported from this source database, loaded into a cloud data
    warehouse, and then put through a similar set of transformations and aggregations,
    to produce what ought to be identical sets of reports that will be distributed
    to management and investors. However, there are discrepancies in key financial
    figures between the internal tools built on the source relational data and the
    external reports being generated by the warehouse.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个源关系数据库内，将复杂的财务数据转换、连接、聚合和汇总，以生成内部财务指标。相同的原始数据被导出到云数据仓库，然后经过类似的转换和聚合，生成应当完全相同的报告，这些报告将分发给管理层和投资者。然而，在基于源关系数据构建的内部工具和数据仓库生成的外部报告之间存在关键财务数据的差异。
- en: Causes
  id: totrans-267
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: When the same data is processed in different ways, or through different systems,
    there can be data quality issues introduced into one data processing path that
    are absent in the other path. This can manifest as discrepancies in aggregates
    produced at the end of the pipeline.
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当相同的数据以不同的方式处理，或通过不同的系统处理时，可能会在一个数据处理路径中引入数据质量问题，而另一个路径则不存在这些问题。这可能表现为管道末端产生的聚合数据存在差异。
- en: There can also be logical inconsistencies that are introduced in the two paths
    via code that is written in different languages, by different teams, or by the
    same team at different times. These inconsistencies will eventually show up in
    the data itself.
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 也可能存在逻辑上的不一致性，这是通过不同语言编写的代码、不同团队编写的代码或同一团队在不同时间编写的代码引入的。这些不一致性最终将显示在数据本身中。
- en: Analytics impact
  id: totrans-270
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分析影响
- en: When data that ought to be the same is inconsistent, this usually means that
    one or both of the datasets are also of poor quality. Any of the other data quality
    issues we have discussed may be occurring in the raw, interim, or final datasets.
    These will lead to incorrect decisions and invalid insights in analytics based
    on any of this data.
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当应该相同的数据不一致时，通常意味着两个数据集中的一个或两个质量较差。我们讨论过的任何其他数据质量问题都可能出现在原始、中间或最终数据集中。这些问题将导致基于这些数据的任何分析中产生错误的决策和无效的洞察。
- en: In some cases, the inconsistencies may be too small to have a meaningful impact
    on decisions. However, it is common for these inconsistencies to reduce the trust
    that end users have in the data, as they will manually try to reconcile individual
    statistics, and will question the integrity of the data or its processing if they
    find discrepancies.
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某些情况下，不一致可能太小，对决策没有实质性影响。然而，这些不一致通常会降低最终用户对数据的信任，因为他们将手动尝试调和个别统计数据，并且如果发现差异，会质疑数据的完整性或处理过程。
- en: ML impact
  id: totrans-273
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML 影响
- en: '*Model training.* The biggest ML impact is when the training data used to build
    the model is inconsistent with the data being used at inference time. This can
    often happen when ML engineers construct training datasets using historical data
    stored in a data warehouse or data lake. When a model built on that data is put
    into production, it may instead receive data coming in real time from the source
    systems. That data may be inconsistent with the raw data the original model was
    trained upon, which can lead to very poor performance of the ML model in production.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型训练.* 最大的 ML 影响是在构建模型的训练数据与推断时使用的数据不一致时。这通常发生在 ML 工程师使用存储在数据仓库或数据湖中的历史数据构建训练数据集时。当将基于该数据构建的模型投入生产时，它可能会接收来自源系统的实时数据。这些数据可能与最初用于训练的原始数据不一致，这可能导致模型在生产中表现非常糟糕。'
- en: '*Model inference.* See the answer above for model training, as the primary
    issue here is inconsistency between data used in training and inference.'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*模型推断.* 请参阅上面关于模型训练的答案，因为这里的主要问题是训练和推断中使用的数据不一致。'
- en: How to monitor
  id: totrans-276
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何监控
- en: Validation rules can be used to compute summary statistics for each table and
    to compare those summary statistics across sources. These statistics can also
    be segmented by time or business segment.
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用验证规则为每个表格计算汇总统计信息，并在不同来源之间比较这些汇总统计信息。这些统计信息也可以按时间或业务部门进行分段。
- en: Unsupervised ML can also be used to compare random samples of records drawn
    from both sources and can summarize the variances in the distribution and relationship
    of values.
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无监督 ML 也可以用来比较从两个来源抽取的随机记录样本，并总结值的分布和关系的差异。
- en: Finally, you can compare records one-by-one between two sources, but this is
    often very computationally expensive, as each record must be moved from each source
    to a third platform, which then compares the records in memory. This also requires
    identifying a primary key for each source such that the records can be joined
    together efficiently.
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，你可以逐个比较两个来源之间的记录，但这通常非常消耗计算资源，因为每个记录必须从每个来源移动到第三平台，然后在内存中比较记录。这还需要为每个来源识别一个主键，以便能够有效地将记录连接在一起。
- en: Last but not least, if you can sort the data in a deterministic manner, then
    you can compute cryptographic hashes of the data, and compare those hash values.
    However, this is also very computationally expensive and will not give clear insight
    into exactly where the differences are, or how significant they are. The values
    themselves will also have to be identical, and be converted into string values
    in identical ways, which is very challenging to do across disparate platforms.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后但并非最不重要的是，如果您能以确定性方式对数据进行排序，那么您可以计算数据的加密哈希值，并比较这些哈希值。然而，这也是非常耗费计算资源的，而且不能清楚地显示出差异的具体位置或其重要性。这些数值本身也必须完全相同，并以相同的方式转换为字符串值，这在不同平台之间是非常具有挑战性的。
