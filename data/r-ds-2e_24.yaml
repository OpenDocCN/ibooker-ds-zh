- en: Chapter 20\. Spreadsheets
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 20 章\. 电子表格
- en: Introduction
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In [Chapter 7](ch07.xhtml#chp-data-import) you learned about importing data
    from plain-text files like `.csv` and `.tsv`. Now it’s time to learn how to get
    data out of a spreadsheet, either an Excel spreadsheet or a Google Sheet. This
    will build on much of what you’ve learned in [Chapter 7](ch07.xhtml#chp-data-import),
    but we will also discuss additional considerations and complexities when working
    with data from spreadsheets.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第 7 章](ch07.xhtml#chp-data-import)中，你学习了如何从纯文本文件（如 `.csv` 和 `.tsv`）导入数据。现在是学习如何从电子表格（无论是
    Excel 电子表格还是 Google 表格）中获取数据的时候了。这将基于你在[第 7 章](ch07.xhtml#chp-data-import)学到的内容，但我们还将讨论在处理电子表格数据时的其他注意事项和复杂性。
- en: If you or your collaborators are using spreadsheets for organizing data, we
    strongly recommend reading the paper [“Data Organization in Spreadsheets”](https://oreil.ly/Ejuen)
    by Karl Broman and Kara Woo. The best practices presented in this paper will save
    you much headache when you import data from a spreadsheet into R to analyze and
    visualize.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你或你的合作者使用电子表格来组织数据，强烈推荐阅读卡尔·布罗曼和卡拉·吴的论文[《电子表格中的数据组织》](https://oreil.ly/Ejuen)。这篇论文中提出的最佳实践将在你将数据从电子表格导入到
    R 进行分析和可视化时节省大量麻烦。
- en: Excel
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Excel
- en: Microsoft Excel is a widely used spreadsheet software program where data are
    organized in worksheets inside of spreadsheet files.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Excel 是一款广泛使用的电子表格软件程序，数据以工作表的形式存储在电子表格文件中。
- en: Prerequisites
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 先决条件
- en: In this section, you’ll learn how to load data from Excel spreadsheets in R
    with the readxl package. This package is noncore tidyverse, so you need to load
    it explicitly, but it is installed automatically when you install the tidyverse
    package. Later, we’ll also use the writexl package, which allows us to create
    Excel spreadsheets.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习如何使用 readxl 包在 R 中从 Excel 电子表格中加载数据。这个包不是 tidyverse 的核心包，因此你需要显式加载它，但在安装
    tidyverse 包时它会被自动安装。稍后，我们还将使用 writexl 包，它允许我们创建 Excel 电子表格。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Getting Started
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门指南
- en: 'Most of readxl’s functions allow you to load Excel spreadsheets into R:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 readxl 的函数允许你将 Excel 电子表格加载到 R 中：
- en: '[`read_xls()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) reads
    Excel files with the `XLS` format.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_xls()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) 用于读取
    `XLS` 格式的 Excel 文件。'
- en: '[`read_xlsx()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) reads
    Excel files with the `XLSX` format.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_xlsx()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) 用于读取
    `XLSX` 格式的 Excel 文件。'
- en: '[`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) can
    read files with both the `XLS` and `XLSX` formats. It guesses the file type based
    on the input.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) 可以读取
    `XLS` 和 `XLSX` 格式的文件。它会根据输入自动猜测文件类型。'
- en: These functions all have similar syntax just like other functions we have previously
    introduced for reading other types of files, e.g., [`read_csv()`](https://readr.tidyverse.org/reference/read_delim.xhtml),
    [`read_table()`](https://readr.tidyverse.org/reference/read_table.xhtml), etc.
    For the rest of the chapter we will focus on using [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数的语法与我们之前介绍的读取其他类型文件的函数类似，例如[`read_csv()`](https://readr.tidyverse.org/reference/read_delim.xhtml)，[`read_table()`](https://readr.tidyverse.org/reference/read_table.xhtml)，等等。本章的其余部分将重点介绍使用[`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)。
- en: Reading Excel Spreadsheets
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取 Excel 电子表格
- en: '[Figure 20-1](#fig-students-excel) shows what the spreadsheet we’re going to
    read into R looks like in Excel.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 20-1](#fig-students-excel) 展示了我们将要在 R 中读取的电子表格在 Excel 中的样子。'
- en: '![A look at the students spreadsheet in Excel. The spreadsheet contains information
    on 6 students, their ID, full name, favorite food, meal plan, and age.](assets/rds2_2001.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![查看 Excel 中的学生电子表格。该电子表格包含 6 名学生的信息，包括他们的 ID、全名、喜爱的食物、餐饮计划和年龄。](assets/rds2_2001.png)'
- en: Figure 20-1\. Spreadsheet called `students.xlsx` in Excel.
  id: totrans-18
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 20-1\. Excel 中名为 `students.xlsx` 的电子表格。
- en: The first argument to [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    is the path to the file to read.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) 的第一个参数是要读取的文件路径。'
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) will
    read the file in as a tibble.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) 将文件读取为一个
    tibble。'
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We have six students in the data and five variables on each student. However,
    there are a few things we might want to address in this dataset:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数据中有六名学生，每名学生有五个变量。然而，在这个数据集中可能有一些需要解决的问题：
- en: The column names are all over the place. You can provide column names that follow
    a consistent format; we recommend `snake_case` using the `col_names` argument.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列名乱七八糟。你可以提供遵循一致格式的列名；我们建议使用 `col_names` 参数，采用 `snake_case`。
- en: '[PRE3]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Unfortunately, this didn’t quite do the trick. We now have the variable names
    we want, but what was previously the header row now shows up as the first observation
    in the data. You can explicitly skip that row using the `skip` argument.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不幸的是，这也没能达到效果。现在我们有了想要的变量名，但以前的标题行现在显示为数据的第一个观察结果。你可以使用 `skip` 参数显式跳过该行。
- en: '[PRE4]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the `favourite_food` column, one of the observations is `N/A`, which stands
    for “not available,” but it’s currently not recognized as an `NA` (note the contrast
    between this `N/A` and the age of the fourth student in the list). You can specify
    which character strings should be recognized as `NA`s with the `na` argument.
    By default, only `""` (empty string, or, in the case of reading from a spreadsheet,
    an empty cell or a cell with the formula `=NA()`) is recognized as an `NA`.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `favourite_food` 列中，其中一个观察结果是 `N/A`，表示“不可用”，但目前没有被识别为 `NA`（请注意这个 `N/A` 与列表中第四个学生的年龄之间的对比）。你可以使用
    `na` 参数指定应该将哪些字符串识别为 `NA`。默认情况下，仅会将 `""`（空字符串，或者在从电子表格中读取时，空单元格或带有 `=NA()` 公式的单元格）识别为
    `NA`。
- en: '[PRE5]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: One other remaining issue is that `age` is read in as a character variable,
    but it really should be numeric. Just like with [`read_csv()`](https://readr.tidyverse.org/reference/read_delim.xhtml)
    and friends for reading data from flat files, you can supply a `col_types` argument
    to [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) and
    specify the column types for the variables you read in. The syntax is a bit different,
    though. Your options are `"skip"`, `"guess"`, `"logical"`, `"numeric"`, `"date"`,
    `"text"`, or `"list"`.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另一个剩下的问题是，`age` 被读取为字符变量，但实际上应该是数值型的。就像使用 [`read_csv()`](https://readr.tidyverse.org/reference/read_delim.xhtml)
    和其它用于从平面文件中读取数据的函数一样，你可以给 [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    提供一个 `col_types` 参数，并指定你要读取的变量的列类型。尽管语法有点不同。你的选项有 `"skip"`、`"guess"`、`"logical"`、`"numeric"`、`"date"`、`"text"`
    或 `"list"`。
- en: '[PRE6]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: However, this didn’t quite produce the desired result either. By specifying
    that `age` should be numeric, we have turned the one cell with the non-numeric
    entry (which had the value `five`) into an `NA`. In this case, we should read
    age in as `"text"` and then make the change once the data is loaded in R.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，这样做也没有完全产生期望的结果。通过指定 `age` 应该是数值型，我们已经将包含非数值条目（其值为 `five`）的单元格转换为了 `NA`。在这种情况下，我们应该将
    age 读取为 `"text"`，然后在数据加载到 R 后进行更改。
- en: '[PRE7]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: It took us multiple steps and trial and error to load the data in exactly the
    format we want, and this is not unexpected. Data science is an iterative process,
    and the process of iteration can be even more tedious when reading data in from
    spreadsheets compared to other plain-text, rectangular data files because humans
    tend to input data into spreadsheets and use them not just for data storage but
    also for sharing and communication.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们花了多个步骤和反复试验才成功以期望的格式加载数据，这并不奇怪。数据科学是一个迭代过程，与从其他纯文本、矩形数据文件中读取数据相比，从电子表格中读取数据的迭代过程可能更加繁琐，因为人们倾向于将数据输入到电子表格中，并使用它们不仅仅作为数据存储，还用于分享和交流。
- en: 'There is no way to know exactly what the data will look like until you load
    it and take a look at it. Well, there is one way, actually. You can open the file
    in Excel and take a peek. If you’re going to do so, we recommend making a copy
    of the Excel file to open and browse interactively while leaving the original
    data file untouched and reading into R from the untouched file. This will ensure
    you don’t accidentally overwrite anything in the spreadsheet while inspecting
    it. You should also not be afraid of doing what we did here: load the data, take
    a peek, make adjustments to your code, load it again, and repeat until you’re
    happy with the result.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在加载和查看数据之前，没有办法确切地知道数据的样子。嗯，其实还有一种方式。你可以在 Excel 中打开文件并窥视一下。如果你要这样做，我们建议在打开和浏览交互式地进行的同时，制作
    Excel 文件的副本，以便保持原始数据文件的不变，并从未更改的文件中读入 R。这样做可以确保你在检查时不会意外地覆盖任何电子表格中的内容。你也不必害怕像我们在这里所做的那样：加载数据，查看一下，对代码进行调整，再次加载，如此反复，直到你满意为止。
- en: Reading Worksheets
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取工作表
- en: An important feature that distinguishes spreadsheets from flat files is the
    notion of multiple sheets, called *worksheets*. [Figure 20-2](#fig-penguins-islands)
    shows an Excel spreadsheet with multiple worksheets. The data come from the palmerpenguins
    package. Each worksheet contains information on penguins from a different island
    where data were collected.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 电子表格与平面文件的一个重要特征是多工作表的概念，称为*工作表*。 [图 20-2](#fig-penguins-islands) 显示了一个包含多个工作表的
    Excel 电子表格。数据来自 palmerpenguins 包。每个工作表包含从不同岛屿收集到的企鹅信息。
- en: You can read a single worksheet from a spreadsheet with the `sheet` argument
    in [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml).
    The default, which we’ve been relying on up until now, is the first sheet.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过 [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    中的 `sheet` 参数读取电子表格中的单个工作表。直到现在，我们一直依赖的是默认的第一个工作表。
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![A look at the penguins spreadsheet in Excel. The spreadsheet contains has
    three worksheets: Torgersen Island, Biscoe Island, and Dream Island.](assets/rds2_2002.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![查看 Excel 中的企鹅电子表格。 电子表格包含三个工作表：托尔格森岛、比斯科岛和梦幻岛。](assets/rds2_2002.png)'
- en: Figure 20-2\. Spreadsheet called `penguins.xlsx` in Excel containing three worksheets.
  id: totrans-41
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 20-2\. Excel 中名为 `penguins.xlsx` 的电子表格包含三个工作表。
- en: Some variables that appear to contain numerical data are read in as characters
    due to the character string `"NA"` not being recognized as a true `NA`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 由于字符字符串 `"NA"` 不被识别为真正的 `NA`，一些看起来包含数值数据的变量被读取为字符。
- en: '[PRE9]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Alternatively, you can use [`excel_sheets()`](https://readxl.tidyverse.org/reference/excel_sheets.xhtml)
    to get information on all worksheets in an Excel spreadsheet and then read the
    one(s) you’re interested in.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以使用 [`excel_sheets()`](https://readxl.tidyverse.org/reference/excel_sheets.xhtml)
    获取 Excel 电子表格中所有工作表的信息，然后读取您感兴趣的一个或多个工作表。
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Once you know the names of the worksheets, you can read them in individually
    with [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您知道工作表的名称，您可以使用 [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    单独读取它们。
- en: '[PRE11]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In this case, the full penguins dataset is spread across three worksheets in
    the spreadsheet. Each worksheet has the same number of columns but different numbers
    of rows.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，完整的企鹅数据集分布在电子表格的三个工作表中。每个工作表具有相同数量的列，但不同数量的行。
- en: '[PRE12]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We can put them together with [`bind_rows()`](https://dplyr.tidyverse.org/reference/bind_rows.xhtml):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 [`bind_rows()`](https://dplyr.tidyverse.org/reference/bind_rows.xhtml)
    将它们合并在一起：
- en: '[PRE13]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In [Chapter 26](ch26.xhtml#chp-iteration) we’ll talk about ways of doing this
    sort of task without repetitive code.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 26 章](ch26.xhtml#chp-iteration) 中，我们将讨论如何在不重复编码的情况下执行此类任务的方法。
- en: Reading Part of a Sheet
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取工作表的部分内容
- en: 'Since many use Excel spreadsheets for presentation as well as for data storage,
    it’s quite common to find cell entries in a spreadsheet that are not part of the
    data you want to read into R. [Figure 20-3](#fig-deaths-excel) shows such a spreadsheet:
    in the middle of the sheet is what looks like a data frame, but there is extraneous
    text in cells above and below the data.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由于许多人将 Excel 电子表格用于演示和数据存储，因此在电子表格中找到不属于您想读入 R 的数据的单元格条目是非常常见的。 [图 20-3](#fig-deaths-excel)
    展示了这样一张电子表格：表中间看起来像是数据框架，但是在数据上方和下方的单元格中有多余的文本。
- en: '![A look at the deaths spreadsheet in Excel. The spreadsheet has four rows
    on top that contain non-data information; the text ''For the same of consistency
    in the data layout, which is really a beautiful thing, I will keep making notes
    up here.'' is spread across cells in these top four rows. Then, there is a data
    frame that includes information on deaths of 10 famous people, including their
    names, professions, ages, whether they have kids or not, date of birth and death.
    At the bottom, there are four more rows of non-data information; the text ''This
    has been really fun, but we''re signing off now!'' is spread across cells in these
    bottom four rows.](assets/rds2_2003.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![查看 Excel 中的死亡电子表格。 电子表格顶部有四行，包含非数据信息；文本“为了数据布局的一致性，这真是一件美妙的事情，我将继续在这里做笔记。”分布在这四行顶部的单元格中。然后，数据框架包括有关10位著名人士死亡的信息，包括他们的姓名、职业、年龄、是否有子女、出生日期和死亡日期。在底部，还有四行非数据信息；文本“这真的很有趣，但我们现在要签退了！”分布在这四行底部的单元格中。](assets/rds2_2003.png)'
- en: Figure 20-3\. Spreadsheet called `deaths.xlsx` in Excel.
  id: totrans-56
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 20-3\. Excel 中名为 `deaths.xlsx` 的电子表格。
- en: This spreadsheet is one of the example spreadsheets provided in the readxl package.
    You can use the [`readxl_example()`](https://readxl.tidyverse.org/reference/readxl_example.xhtml)
    function to locate the spreadsheet on your system in the directory where the package
    is installed. This function returns the path to the spreadsheet, which you can
    use in [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    as usual.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 此电子表格是 readxl 包提供的示例电子表格之一。你可以使用 [`readxl_example()`](https://readxl.tidyverse.org/reference/readxl_example.xhtml)
    函数在安装包的目录中找到电子表格。该函数返回电子表格的路径，你可以像往常一样在 [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    中使用它。
- en: '[PRE14]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The top three rows and the bottom four rows are not part of the data frame.
    It’s possible to eliminate these extraneous rows using the `skip` and `n_max`
    arguments, but we recommend using cell ranges. In Excel, the top-left cell is
    `A1`. As you move across columns to the right, the cell label moves down the alphabet,
    i.e., `B1`, `C1`, etc. And as you move down a column, the number in the cell label
    increases, i.e., `A2`, `A3`, etc.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 前三行和后四行不属于数据框。可以使用 `skip` 和 `n_max` 参数消除这些多余的行，但我们建议使用单元格范围。在 Excel 中，左上角的单元格是
    `A1`。随着你向右移动列，单元格标签向字母表的下面移动，即 `B1`、`C1` 等。当你向下移动一列时，单元格标签中的数字增加，即 `A2`、`A3` 等。
- en: 'Here the data we want to read in starts in cell `A5` and ends in cell `F15`.
    In spreadsheet notation, this is `A5:F15`, which we supply to the `range` argument:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要读取的数据从单元格 `A5` 开始，到单元格 `F15` 结束。在电子表格表示法中，这是 `A5:F15`，我们将其提供给 `range` 参数：
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Data Types
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据类型
- en: 'In CSV files, all values are strings. This is not particularly true to the
    data, but it is simple: everything is a string.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CSV 文件中，所有的值都是字符串。这并不完全符合数据本身，但却很简单：一切皆为字符串。
- en: 'The underlying data in Excel spreadsheets is more complex. A cell can be one
    of four things:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Excel 电子表格中的底层数据更加复杂。一个单元格可以是以下四种类型之一：
- en: A Boolean, like `TRUE`, `FALSE`, or `NA`
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔值，比如 `TRUE`、`FALSE` 或 `NA`
- en: A number, like “10” or “10.5”
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字，例如 “10” 或 “10.5”
- en: A datetime, which can also include time like “11/1/21” or “11/1/21 3:00 PM”
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期时间，也可以包括时间，如 “11/1/21” 或 “11/1/21 下午3:00”
- en: A text string, like “ten”
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本字符串，比如 “ten”
- en: When working with spreadsheet data, it’s important to keep in mind that the
    underlying data can be very different than what you see in the cell. For example,
    Excel has no notion of an integer. All numbers are stored as floating points,
    but you can choose to display the data with a customizable number of decimal points.
    Similarly, dates are actually stored as numbers, specifically the number of seconds
    since January 1, 1970\. You can customize how you display the date by applying
    formatting in Excel. Confusingly, it’s also possible to have something that looks
    like a number but is actually a string (e.g., type `'10` into a cell in Excel).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 当处理电子表格数据时，重要的是要记住底层数据可能与单元格中所见的内容非常不同。例如，Excel 没有整数的概念。所有的数字都以浮点数存储，但你可以选择以可定制的小数位数显示数据。类似地，日期实际上以数字形式存储，具体来说是自1970年1月1日以来的秒数。你可以通过在
    Excel 中应用格式设置来自定义日期的显示方式。令人困惑的是，有时你可能看到的是一个看似数字的东西，实际上是一个字符串（例如，在 Excel 中输入 `'10`）。
- en: These differences between how the underlying data are stored versus how they’re
    displayed can cause surprises when the data are loaded into R. By default readxl
    will guess the data type in a given column. A recommended workflow is to let readxl
    guess the column types, confirm that you’re happy with the guessed column types,
    and if not, go back and re-import specifying `col_types`, as shown in [“Reading
    Excel Spreadsheets”](#sec-reading-spreadsheets-excel).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 底层数据存储方式与显示方式之间的这些差异可能会在将数据加载到 R 中时引起意外。默认情况下，readxl 将猜测给定列的数据类型。建议的工作流程是让 readxl
    猜测列类型，确认你对猜测的列类型满意，如果不满意，可以返回并重新导入，指定 `col_types`，如 [“读取 Excel 电子表格”](#sec-reading-spreadsheets-excel)
    中所示。
- en: Another challenge is when you have a column in your Excel spreadsheet that has
    a mix of these types, e.g., some cells are numeric, others text, others dates.
    When importing the data into R, readxl has to make some decisions. In these cases
    you can set the type for this column to `"list"`, which will load the column as
    a list of length 1 vectors, where the type of each element of the vector is guessed.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个挑战是当你的 Excel 电子表格中有一列混合了这些类型，例如，有些单元格是数值，其他是文本，还有日期。在将数据导入 R 时，readxl 必须做出一些决策。在这些情况下，你可以将此列的类型设置为
    `"list"`，这将把列加载为长度为1的向量列表，其中猜测每个元素的类型。
- en: Note
  id: totrans-72
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: '*Sometimes data is stored in more exotic ways, like the color of the cell background
    or whether the text is bold. In such cases, you might find the [tidyxl package](https://oreil.ly/CU5XP)
    useful. See [*https://oreil.ly/jNskS*](https://oreil.ly/jNskS) for more on strategies
    for working with nontabular data from Excel.*  *## Writing to Excel'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*有时数据以更多样的方式存储，例如单元格背景的颜色或文本是否加粗。在这种情况下，您可能会发现 [tidyxl 包](https://oreil.ly/CU5XP)
    很有用。有关处理来自 Excel 的非表格数据的更多策略，请参见 [*https://oreil.ly/jNskS*](https://oreil.ly/jNskS)。*  *##
    写入 Excel'
- en: Let’s create a small data frame that we can then write out. Note that `item`
    is a factor and `quantity` is an integer.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个小数据框，然后将其写出。请注意，`item` 是一个因子，而 `quantity` 是一个整数。
- en: '[PRE16]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You can write data back to disk as an Excel file using [`write_xlsx()`](https://docs.ropensci.org/writexl/reference/write_xlsx.xhtml)
    from the [writexl package](https://oreil.ly/Gzphe):'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 [`write_xlsx()`](https://docs.ropensci.org/writexl/reference/write_xlsx.xhtml)
    函数从 [writexl 包](https://oreil.ly/Gzphe)将数据写回磁盘作为 Excel 文件：
- en: '[PRE17]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[Figure 20-4](#fig-bake-sale-excel) shows what the data looks like in Excel.
    Note that column names are included and bold. These names can be turned off by
    setting the `col_names` and `format_headers` arguments to `FALSE`.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 20-4](#fig-bake-sale-excel)展示了 Excel 中数据的外观。请注意，列名已包括并加粗显示。通过将 `col_names`
    和 `format_headers` 参数设置为 `FALSE`，可以关闭这些列名。'
- en: '![Bake sale data frame created earlier in Excel.](assets/rds2_2004.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![先前在 Excel 中创建的烘焙销售数据框。](assets/rds2_2004.png)'
- en: Figure 20-4\. Spreadsheet called `bake_sale.xlsx` in Excel.
  id: totrans-80
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 20-4\. Excel 中名为 `bake_sale.xlsx` 的电子表格。
- en: Just like reading from a CSV, information on data type is lost when we read
    the data back in. This makes Excel files unreliable for caching interim results
    as well. For alternatives, see [“Writing to a File”](ch07.xhtml#sec-writing-to-a-file).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 就像从 CSV 文件中读取一样，当我们重新读取数据时，数据类型的信息会丢失。这使得 Excel 文件在缓存中间结果时不可靠。有关替代方法，请参见[“写入文件”](ch07.xhtml#sec-writing-to-a-file)。
- en: '[PRE18]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Formatted Output
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 格式化输出
- en: The writexl package is a lightweight solution for writing a simple Excel spreadsheet,
    but if you’re interested in additional features such as writing to sheets within
    a spreadsheet and styling, you will want to use the [openxlsx package](https://oreil.ly/JtHOt).
    We won’t go into the details of using this package here, but we recommend reading
    [*https://oreil.ly/clwtE*](https://oreil.ly/clwtE) for an extensive discussion
    on further formatting functionality for data written from R to Excel with openxlsx.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: writexl 包是写入简单 Excel 电子表格的轻量级解决方案，但如果您对写入到电子表格内不同工作表以及设置样式等附加功能感兴趣，则需要使用 [openxlsx
    包](https://oreil.ly/JtHOt)。我们不会在此详细讨论使用该包的细节，但我们建议阅读 [*https://oreil.ly/clwtE*](https://oreil.ly/clwtE)，详细讨论使用
    openxlsx 从 R 向 Excel 中进一步格式化数据的功能。
- en: Note that this package is not part of the tidyverse, so the functions and workflows
    may feel unfamiliar. For example, function names are camelCase, multiple functions
    can’t be composed in pipelines, and arguments are in a different order than they
    tend to be in the tidyverse. However, this is OK. As your R learning and usage
    expands outside of this book, you will encounter lots of different styles used
    in various R packages that you might use to accomplish specific goals in R. A
    good way of familiarizing yourself with the coding style used in a new package
    is to run the examples provided in the function documentation to get a feel for
    the syntax and the output formats as well as reading any vignettes that might
    come with the package.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此包不属于 tidyverse，因此其函数和工作流可能感觉不熟悉。例如，函数名称采用驼峰命名法，多个函数无法组合在管道中，参数的顺序也与 tidyverse
    中的不同。但这没关系。随着您在 R 的学习和使用扩展到本书之外，您将会遇到许多不同的风格，这些风格可能会用于各种 R 包中，以完成 R 中特定目标的任务。熟悉新包中使用的编码风格的一个好方法是运行函数文档中提供的示例，以了解语法、输出格式以及阅读可能附带的任何小册子。
- en: Exercises
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习
- en: In an Excel file, create the following dataset and save it as `survey.xlsx`.
    Alternatively, you can download it as an [Excel file](https://oreil.ly/03oQy).
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个 Excel 文件中创建以下数据集，并将其另存为 `survey.xlsx`。或者，您可以将其作为[Excel 文件](https://oreil.ly/03oQy)下载。
- en: '![A spreadsheet with 3 columns (group, subgroup, and id) and 12 rows. The group
    column has two values: 1 (spanning 7 merged rows) and 2 (spanning 5 merged rows).
    The subgroup column has four values: A (spanning 3 merged rows), B (spanning 4
    merged rows), A (spanning 2 merged rows), and B (spanning 3 merged rows). The
    id column has twelve values, numbers 1 through 12.](assets/rds2_20in01.png)'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![一个包含 3 列（组、子组和 ID）和 12 行的电子表格。组列有两个值：1（跨越 7 合并行）和 2（跨越 5 合并行）。子组列有四个值：A（跨越
    3 合并行）、B（跨越 4 合并行）、A（跨越 2 合并行）和 B（跨越 3 合并行）。ID 列有 12 个值，从 1 到 12。](assets/rds2_20in01.png)'
- en: Then, read it into R, with `survey_id` as a character variable and `n_pets`
    as a numerical variable.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，将其读入 R 中，其中 `survey_id` 是字符变量，`n_pets` 是数值变量。
- en: '[PRE19]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: In another Excel file, create the following dataset and save it as `roster.xlsx`.
    Alternatively, you can download it as an [Excel file](https://oreil.ly/E4dIi).
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在另一个 Excel 文件中创建以下数据集，并将其保存为 `roster.xlsx`。或者，您可以将其下载为 [Excel 文件](https://oreil.ly/E4dIi)。
- en: '![A spreadsheet with 3 columns (group, subgroup, and id) and 12 rows. The group
    column has two values: 1 (spanning 7 merged rows) and 2 (spanning 5 merged rows).
    The subgroup column has four values: A (spanning 3 merged rows), B (spanning 4
    merged rows), A (spanning 2 merged rows), and B (spanning 3 merged rows). The
    id column has twelve values, numbers 1 through 12.](assets/rds2_20in02.png)'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![一个包含 3 列（组、子组和 ID）和 12 行的电子表格。组列有两个值：1（跨越 7 合并行）和 2（跨越 5 合并行）。子组列有四个值：A（跨越
    3 合并行）、B（跨越 4 合并行）、A（跨越 2 合并行）和 B（跨越 3 合并行）。ID 列有 12 个值，从 1 到 12。](assets/rds2_20in02.png)'
- en: 'Then, read it into R. The resulting data frame should be called `roster` and
    should look like the following:'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，将其读入 R。生成的数据框应该称为 `roster`，并应如下所示：
- en: '[PRE20]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: In a new Excel file, create the following dataset and save it as `sales.xlsx`.
    Alternatively, you can download it as an [Excel file](https://oreil.ly/m6q7i).
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个新的 Excel 文件中创建以下数据集，并将其保存为 `sales.xlsx`。或者，您可以将其下载为 [Excel 文件](https://oreil.ly/m6q7i)。
- en: '![A spreadsheet with 2 columns and 13 rows. The first two rows have text containing
    information about the sheet. Row 1 says "This file contains information on sales".
    Row 2 says "Data are organized by brand name, and for each brand, we have the
    ID number for the item sold, and how many are sold.". Then there are two empty
    rows, and then 9 rows of data.](assets/rds2_20in03.png)'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![一个包含 2 列和 13 行的电子表格。前两行包含有关工作表信息的文本。第 1 行说“此文件包含有关销售的信息”。第 2 行说“数据按品牌名称组织，对于每个品牌，我们有出售的项目的
    ID 号和出售数量”。然后有两行空行，然后是 9 行数据。](assets/rds2_20in03.png)'
- en: 'a. Read `sales.xlsx` in and save as `sales`. The data frame should look like
    the following, with `id` and `n` as column names and nine rows:'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 读取 `sales.xlsx` 并保存为 `sales`。数据框应如下所示，其中 `id` 和 `n` 是列名，共有九行：
- en: '[PRE21]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: b. Modify `sales` further to get it into the following tidy format with three
    columns (`brand`, `id`, and `n`) and seven rows of data. Note that `id` and `n`
    are numeric, and `brand` is a character variable.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 进一步修改 `sales`，使其达到以下整洁的格式，包括三列（`brand`、`id` 和 `n`）和七行数据。请注意，`id` 和 `n` 是数值型变量，`brand`
    是字符型变量。
- en: '[PRE22]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Re-create the `bake_sale` data frame, and write it out to an Excel file using
    the `write.xlsx()` function from the openxlsx package.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新创建 `bake_sale` 数据框，并使用 openxlsx 包的 `write.xlsx()` 函数将其写入 Excel 文件。
- en: In [Chapter 7](ch07.xhtml#chp-data-import) you learned about the [`janitor::clean_names()`](https://rdrr.io/pkg/janitor/man/clean_names.xhtml)
    function to turn column names into snake case. Read the `students.xlsx` file that
    we introduced earlier in this section and use this function to “clean” the column
    names.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 [第 7 章](ch07.xhtml#chp-data-import) 中，您学习了 [`janitor::clean_names()`](https://rdrr.io/pkg/janitor/man/clean_names.xhtml)
    函数，将列名转换为蛇形命名法。请阅读我们在本节早些时候介绍的 `students.xlsx` 文件，并使用此函数“清理”列名。
- en: What happens if you try to read in a file with an `.xlsx` extension with [`read_xls()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)?*  *#
    Google Sheets
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果尝试使用 [`read_xls()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    函数读取一个带有 `.xlsx` 扩展名的文件会发生什么？*  *# Google Sheets
- en: Google Sheets is another widely used spreadsheet program. It’s free and web-based.
    Just like with Excel, in Google Sheets data are organized in worksheets (also
    called *sheets*) inside of spreadsheet files.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Google Sheets 是另一种广泛使用的电子表格程序。它是免费的，基于 Web。就像 Excel 一样，Google Sheets 中的数据是组织在工作表（也称为
    *sheets*）中的。
- en: Prerequisites
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 先决条件
- en: 'This section will also focus on spreadsheets, but this time you’ll be loading
    data from a Google Sheet with the googlesheets4 package. This package is noncore
    tidyverse as well, so you need to load it explicitly:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 本节还将关注电子表格，但这次您将使用 googlesheets4 包从 Google Sheets 中加载数据。这个包也不是 tidyverse 的核心包，因此您需要显式加载它：
- en: '[PRE23]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'A quick note about the name of the package: googlesheets4 uses v4 of the [Sheets
    API v4](https://oreil.ly/VMlBY) to provide an R interface to Google Sheets.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 关于包名称的简短说明：googlesheets4 使用 [Sheets API v4](https://oreil.ly/VMlBY) 提供 R 接口以访问
    Google Sheets。
- en: Getting Started
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门指南
- en: The main function of the googlesheets4 package is [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml),
    which reads a Google Sheet from a URL or a file ID. This function also goes by
    the name [`range_read()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: googlesheets4 包的主要函数是 [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)，它从
    URL 或文件 ID 读取 Google Sheet。此函数也被称为 [`range_read()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)。
- en: You can also create a new sheet with [`gs4_create()`](https://googlesheets4.tidyverse.org/reference/gs4_create.xhtml)
    or write to an existing sheet with [`sheet_write()`](https://googlesheets4.tidyverse.org/reference/sheet_write.xhtml)
    and friends.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以使用 [`gs4_create()`](https://googlesheets4.tidyverse.org/reference/gs4_create.xhtml)
    创建一个新工作表，或者使用 [`sheet_write()`](https://googlesheets4.tidyverse.org/reference/sheet_write.xhtml)
    和相关函数向现有工作表写入内容。
- en: In this section we’ll work with the same datasets as the ones in the Excel section
    to highlight similarities and differences between workflows for reading data from
    Excel and Google Sheets. The readxl and googlesheets4 packages are both designed
    to mimic the functionality of the readr package, which provides the [`read_csv()`](https://readr.tidyverse.org/reference/read_delim.xhtml)
    function you saw in [Chapter 7](ch07.xhtml#chp-data-import). Therefore, many of
    the tasks can be accomplished with simply swapping out [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    for [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml).
    However you’ll also see that Excel and Google Sheets don’t behave in the same
    way; therefore, other tasks may require further updates to the function calls.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将与 Excel 部分中相同的数据集一起工作，以突出显示从 Excel 和 Google Sheets 中读取数据的工作流程之间的相似性和差异。readxl
    和 googlesheets4 包都旨在模仿 readr 包的功能，该包提供了您在 [第 7 章](ch07.xhtml#chp-data-import)
    中看到的 [`read_csv()`](https://readr.tidyverse.org/reference/read_delim.xhtml) 函数。因此，许多任务可以简单地用
    [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)
    替换 [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml) 完成。但是您也会发现
    Excel 和 Google Sheets 的行为方式不同，因此，其他任务可能需要进一步更新函数调用。
- en: Reading Google Sheets
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 读取 Google Sheets
- en: '[Figure 20-5](#fig-students-googlesheets) shows what the spreadsheet we’re
    going to read into R looks like in Google Sheets. This is the same dataset as
    in [Figure 20-1](#fig-students-excel), except it’s stored in a Google Sheet instead
    of Excel.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 20-5](#fig-students-googlesheets) 显示了我们将要在 R 中读取的电子表格的外观。这与 [图 20-1](#fig-students-excel)
    中的数据集相同，只是它存储在 Google Sheets 中而不是 Excel 中。'
- en: '![A look at the students spreadsheet in Google Sheets. The spreadsheet contains
    information on 6 students, their ID, full name, favourite food, meal plan, and
    age.](assets/rds2_2005.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![查看 Google Sheets 中的学生电子表格。 电子表格包含 6 名学生的信息，包括他们的 ID、全名、喜爱的食物、饮食计划和年龄。](assets/rds2_2005.png)'
- en: Figure 20-5\. Google Sheet called students in a browser window.
  id: totrans-116
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 20-5\. Google Sheets 中名为 students 的电子表格在浏览器窗口中显示。
- en: The first argument to [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)
    is the URL of the file to read, and it returns a [tibble](https://oreil.ly/c7DEP).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)
    的第一个参数是要读取的文件的 URL，它返回一个 [tibble](https://oreil.ly/c7DEP)。'
- en: These URLs are not pleasant to work with, so you’ll often want to identify a
    sheet by its ID.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这些网址不好操作，因此您通常会想要通过其 ID 来识别一个工作表。
- en: '[PRE24]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Just like we did with [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml),
    we can supply column names, `NA` strings, and column types to [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们在 [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    中所做的那样，我们可以为 [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)
    提供列名、`NA` 字符串和列类型。
- en: '[PRE25]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note that we defined column types a bit differently here, using short codes.
    For example, “dcccc” stands for “double, character, character, character, character.”
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们在这里稍微不同地定义了列类型，使用了简短的代码。例如，“dcccc”代表“双精度、字符、字符、字符、字符”。
- en: 'It’s also possible to read individual sheets from Google Sheets. Let’s read
    the “Torgersen Island” sheet from the [penguins Google Sheet](https://oreil.ly/qgKTY):'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以从 Google Sheets 中读取单独的表格。让我们从[penguins Google Sheet](https://oreil.ly/qgKTY)中读取“Torgersen
    Island”表格：
- en: '[PRE26]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'You can obtain a list of all sheets within a Google Sheet with [`sheet_names()`](https://googlesheets4.tidyverse.org/reference/sheet_properties.xhtml):'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`sheet_names()`](https://googlesheets4.tidyverse.org/reference/sheet_properties.xhtml)获取
    Google Sheet 中所有表格的列表：
- en: '[PRE27]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Finally, just like with [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml),
    we can read in a portion of a Google Sheet by defining a `range` in [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml).
    Note that we’re also using the [`gs4_example()`](https://googlesheets4.tidyverse.org/reference/gs4_examples.xhtml)
    function to locate an example Google Sheet that comes with the following googlesheets4
    package:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，就像使用[`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)一样，我们可以通过在[`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)中定义一个`range`来读取
    Google Sheet 的一部分。请注意，我们还使用[`gs4_example()`](https://googlesheets4.tidyverse.org/reference/gs4_examples.xhtml)函数来找到一个包含
    googlesheets4 包的示例 Google Sheet：
- en: '[PRE28]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Writing to Google Sheets
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向 Google Sheets 写入
- en: 'You can write from R to Google Sheets with [`write_sheet()`](https://googlesheets4.tidyverse.org/reference/sheet_write.xhtml).
    The first argument is the data frame to write, and the second argument is the
    name (or other identifier) of the Google Sheet to write to:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`write_sheet()`](https://googlesheets4.tidyverse.org/reference/sheet_write.xhtml)将
    R 中的数据写入 Google Sheets。第一个参数是要写入的数据框，第二个参数是要写入的 Google Sheet 的名称（或其他标识符）：
- en: '[PRE29]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If you’d like to write your data to a specific (work)sheet inside a Google
    Sheet, you can specify that with the `sheet` argument as well:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想将数据写入 Google Sheet 中的特定（工作）表中，您也可以使用 `sheet` 参数指定：
- en: '[PRE30]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Authentication
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 认证
- en: While you can read from a public Google Sheet without authenticating with your
    Google account, reading a private sheet or writing to a sheet requires authentication
    so that googlesheets4 can view and manage *your* Google Sheets.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管您可以在不使用 Google 帐号进行认证的情况下从公共 Google Sheet 中读取，但要读取私人表格或向表格写入，需要认证，以便 googlesheets4
    可以查看和管理*您的* Google Sheets。
- en: When you attempt to read in a sheet that requires authentication, googlesheets4
    will direct you to a web browser with a prompt to sign in to your Google account
    and grant permission to operate on your behalf with Google Sheets. However, if
    you want to specify a specific Google account, authentication scope, etc., you
    can do so with [`gs4_auth()`](https://googlesheets4.tidyverse.org/reference/gs4_auth.xhtml),
    e.g., `gs4_auth(email = "mine@example.com")`, which will force the use of a token
    associated with a specific email. For further authentication details, we recommend
    reading the [googlesheets4 auth vignette](https://oreil.ly/G28nV).
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 当您尝试读取需要认证的表格时，googlesheets4 将引导您进入一个网页浏览器，并提示您登录到您的 Google 帐号，并授予权限代表您使用 Google
    Sheets 进行操作。但是，如果您想指定特定的 Google 帐号、认证范围等，您可以使用[`gs4_auth()`](https://googlesheets4.tidyverse.org/reference/gs4_auth.xhtml)，例如，`gs4_auth(email
    = "mine@example.com")`，这将强制使用与特定电子邮件相关联的令牌。有关进一步的认证细节，我们建议阅读[googlesheets4 认证文档](https://oreil.ly/G28nV)。
- en: Exercises
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习
- en: Read the `students` dataset from earlier in the chapter from Excel and also
    from Google Sheets, with no additional arguments supplied to the [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    and [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)
    functions. Are the resulting data frames in R exactly the same? If not, how are
    they different?
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从本章前面的 Excel 和 Google Sheets 中读取`students`数据集，[`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)和[`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)函数没有提供额外的参数。在
    R 中生成的数据框是否完全相同？如果不同，它们有什么不同之处？
- en: Read the [Google Sheet titled survey](https://oreil.ly/PYENq), with `survey_id`
    as a character variable and `n_pets` as a numerical variable.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取[名为 survey 的 Google Sheet](https://oreil.ly/PYENq)，其中`survey_id`为字符变量，`n_pets`为数值变量。
- en: 'Read the [Google Sheet titled roster](https://oreil.ly/sAjBM). The resulting
    data frame should be called `roster` and should look like the following:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 读取[名为 roster 的 Google Sheet](https://oreil.ly/sAjBM)。生成的数据框应命名为`roster`，并且应如下所示：
- en: '[PRE31]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Summary
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Microsoft Excel and Google Sheets are two of the most popular spreadsheet systems.
    Being able to interact with data stored in Excel and Google Sheets files directly
    from R is a superpower! In this chapter, you learned how to read data into R from
    spreadsheets from Excel with [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    from the readxl package and from Google Sheets with [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)
    from the googlesheets4 package. These functions work very similarly to each other
    and have similar arguments for specifying column names, `NA` strings, rows to
    skip on top of the file you’re reading in, etc. Additionally, both functions make
    it possible to read a single sheet from a spreadsheet.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Excel 和 Google Sheets 是两种最流行的电子表格系统。直接从 R 中与存储在 Excel 和 Google Sheets
    文件中的数据交互，是一种超级能力！在本章中，您学习了如何使用 [`read_excel()`](https://readxl.tidyverse.org/reference/read_excel.xhtml)
    函数（来自 readxl 包）从 Excel 读取电子表格中的数据，并使用 [`read_sheet()`](https://googlesheets4.tidyverse.org/reference/range_read.xhtml)
    函数（来自 googlesheets4 包）从 Google Sheets 中读取数据。这两个函数的工作方式非常相似，并且在指定列名、`NA` 字符串、要跳过的顶部行等方面具有类似的参数。此外，这两个函数都可以读取电子表格中的单个工作表。
- en: On the other hand, writing to an Excel file requires a different package and
    function ([`writexl::write_xlsx()`](https://docs.ropensci.org/writexl/reference/write_xlsx.xhtml)),
    while you can write to a Google Sheet with the googlesheets4 package, with [`write_sheet()`](https://googlesheets4.tidyverse.org/reference/sheet_write.xhtml).
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，要将数据写入 Excel 文件则需要使用不同的包和函数（[`writexl::write_xlsx()`](https://docs.ropensci.org/writexl/reference/write_xlsx.xhtml)），而要将数据写入
    Google Sheets 则可以使用 googlesheets4 包中的 [`write_sheet()`](https://googlesheets4.tidyverse.org/reference/sheet_write.xhtml)
    函数。
- en: In the next chapter, you’ll learn about a different data source, databases,
    and how to read data from that source into R.*
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习另一种数据源——数据库，以及如何将该数据源中的数据读取到 R 中。
