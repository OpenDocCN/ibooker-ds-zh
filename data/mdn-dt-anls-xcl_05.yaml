- en: Chapter 4\. Transforming Columns in Power Query
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章\. 在 Power Query 中转换列
- en: '[Chapter 3](ch03.html#ch_03) focused on getting familiar with operating on
    rows; the focus of this chapter shifts to columns. This chapter includes various
    techniques like transforming string case, reformatting columns, creating calculated
    fields, and more. To follow this chapter’s demonstrations, refer to *ch_04.xlsx*
    in the *ch_04* folder of the book’s repository. Go ahead and load the `rentals`
    table into Power Query.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '[第三章](ch03.html#ch_03)侧重于熟悉对行操作；本章的重点转移到列上。本章包括各种技术，如转换字符串大小写、重新格式化列、创建计算字段等。要按照本章的演示操作，请参考书籍存储库中
    *ch_04* 文件夹下 *ch_04.xlsx* 中的 `rentals` 表。继续加载 `rentals` 表到 Power Query 中。'
- en: Changing Column Case
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改列大小写
- en: Power Query streamlines the process of converting text columns between lowercase,
    uppercase, and “proper” case (in which each word is capitalized). To test this
    capability, press the Ctrl key and select the `Title` and `Artist Name` columns
    simultaneously. Next, right-click on one of the columns, navigate to Transform
    → Capitalize Each Word, as shown in [Figure 4-1](#capitalize-each-word).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Power Query 简化了在小写、大写和“合适”大小写之间转换文本列的过程（每个单词首字母大写）。要测试此功能，请按住 Ctrl 键并同时选择`Title`和`Artist
    Name`列。接下来，右键单击其中一列，导航到转换 → 每个单词大写，如[图 4-1](#capitalize-each-word)所示。
- en: '![Changing case in Power Query](assets/mdae_0401.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![在 Power Query 中更改大小写](assets/mdae_0401.png)'
- en: Figure 4-1\. Changing text case in Power Query
  id: totrans-5
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-1\. 在 Power Query 中更改文本大小写
- en: Notice that `Title` and `Artist Name` lack spaces after colons and commas. To
    address this, with both columns still selected, right-click on either column and
    choose Replace Values. In the Replace Values dialog box, search for “`:`” and
    replace it with a colon followed by a space, as shown in [Figure 4-2](#replace-values-power-query).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`Title`和`Artist Name`在冒号和逗号后缺少空格。要解决此问题，仍然选择这两列，右键单击任意列，并选择替换值。在替换值对话框中，搜索“`:`”，并用冒号后跟一个空格替换它，如[图
    4-2](#replace-values-power-query)所示。
- en: '![Replacing values](assets/mdae_0402.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![替换值](assets/mdae_0402.png)'
- en: Figure 4-2\. Replacing values in Power Query
  id: totrans-8
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-2\. 替换 Power Query 中的数值
- en: 'Next, apply the same process to commas: replace them with a comma followed
    by a space.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，对逗号应用相同的过程：用逗号后跟一个空格替换它们。
- en: As demonstrated in [Chapter 3](ch03.html#ch_03), Power Query captures every
    step you perform on the data in the Applied Steps list. This feature greatly facilitates
    the auditing of text changes compared to the conventional find and replace process.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在[第三章](ch03.html#ch_03)中展示的，Power Query 在应用步骤列表中捕获您对数据执行的每一步操作。与传统的查找和替换过程相比，这个功能极大地简化了文本更改的审计过程。
- en: Delimiting by Column
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按列分隔
- en: 'In [Chapter 3](ch03.html#ch_03), you learned how to split comma-delimit text
    into rows. Now it’s time to do the same with columns. Right-click on the `Item
    #` column and split it into two by selecting Split Column → By Delimiter. In the
    dialog box, select Space from the drop-down and click OK. Once again, this process
    offers improved user-friendliness and a broader range of features compared to
    the traditional Text to Columns function.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '在[第三章](ch03.html#ch_03)中，您学习了如何将逗号分隔的文本拆分为行。现在是时候对列执行相同的操作了。右键单击`Item #`列，并选择分列
    → 按分隔符分割。在对话框中，从下拉菜单中选择空格，然后单击确定。再次，与传统的文本到列功能相比，这个过程提供了更好的用户友好性和更广泛的功能。'
- en: 'The delimited columns are initially labeled as `Item #.1` and `Item #.2`. To
    rename them, simply double-click on the column headers in the Editor. As with
    all modifications in Power Query, these alterations are recorded via Applied Steps,
    allowing for effortless reversal or adjustment as needed.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '初始时，分隔的列标记为`Item #.1`和`Item #.2`。要重命名它们，只需在编辑器中双击列标题即可。与 Power Query 中的所有修改一样，这些更改都通过应用步骤记录，允许根据需要轻松地撤消或调整。'
- en: Changing Data Types
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改数据类型
- en: In Power Query, each column is assigned a specific data type, which defines
    the operations that can be performed on it. When importing a dataset, Power Query
    automatically tries to determine the most appropriate data type for each column.
    However, there are situations where this automatic detection can be enhanced or
    adjusted.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Power Query 中，每列都被分配了特定的数据类型，这定义了可以对其执行的操作。在导入数据集时，Power Query 会自动尝试为每列确定最合适的数据类型。然而，在某些情况下，可以增强或调整此自动检测。
- en: For example, take the `UPC` column. By default, it is assigned the Whole Number
    data type. However, since we don’t anticipate conducting significant mathematical
    operations on this column, it’s more suitable to store it as text. To do this,
    click the number icon next to the `UPC` column and change its data type to Text,
    as seen in [Figure 4-3](#changing-data-types-power-query).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑`UPC`列。默认情况下，它被分配为整数数据类型。然而，由于我们不预期在这一列上进行重要的数学操作，将其存储为文本更合适。要做到这一点，请单击`UPC`列旁边的数字图标，并将其数据类型更改为文本，如在[图 4-3](#changing-data-types-power-query)中所示。
- en: 'Proceed with the following data type changes:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 进行以下数据类型更改：
- en: Convert the `ISBN 13` column to Text.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`ISBN 13`列转换为文本。
- en: Convert the `Retail` column to Currency.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`Retail`列转换为货币。
- en: '![Changing data type](assets/mdae_0403.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![改变数据类型](assets/mdae_0403.png)'
- en: Figure 4-3\. Changing column data types in Power Query
  id: totrans-21
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-3\. 在Power Query中更改列数据类型
- en: Deleting Columns
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除列
- en: Removing unnecessary columns from a dataset makes it easier to process and analyze.
    Select the `BTkey` column and press the Delete key to remove it from your query.
    If you decide to include this column later, you can easily retrieve it through
    the Applied Steps list, as explained in [Chapter 2](ch02.html#ch_02).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从数据集中删除不必要的列可简化处理和分析过程。选择`BTkey`列，然后按Delete键将其从查询中移除。如果以后决定包含此列，可以通过已应用步骤列表轻松检索，如[第2章](ch02.html#ch_02)中所述。
- en: Working with Dates
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理日期
- en: Power Query offers an extensive array of sophisticated methods for managing,
    transforming, and formatting dates. It facilitates the modification of date types,
    allowing users to extract components such as the month number and day name, and
    then store these components in the most appropriate data types.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Power Query提供了一系列复杂的方法来管理、转换和格式化日期。它便于修改日期类型，允许用户提取诸如月份编号和日期名称等组件，然后将这些组件存储在最合适的数据类型中。
- en: 'To explore this functionality, let’s apply it to the `Release Date` column
    in a few different ways. Begin by creating copies of this column: right-click
    on the column and choose “Duplicate Column.” Perform this operation two more times
    to generate a total of three duplicate date columns.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要探索此功能，让我们以几种不同的方式将其应用于`Release Date`列。首先创建此列的副本：右键单击列并选择“复制列”。再执行此操作两次，以生成共三个重复日期列。
- en: Right-click the first duplicated `Release Date` column and navigate to Transform
    → Year → Year, as in [Figure 4-4](#transforming-dates). The column will be reformatted
    and its type changed to display only the year instead of the complete date.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 右键单击第一个复制的`Release Date`列，然后导航到Transform → Year → Year，如[图 4-4](#transforming-dates)所示。该列将被重新格式化，并将其类型更改为仅显示年份，而不是完整日期。
- en: '![Transforming dates](assets/mdae_0404.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![转换日期](assets/mdae_0404.png)'
- en: Figure 4-4\. Transforming date columns in Power Query
  id: totrans-29
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-4\. 在Power Query中转换日期列
- en: Extract the month and day numbers from the next two columns. Double-click the
    column headers and rename them as `Year`, `Month`, and `Day`, respectively, to
    reflect the reformatted data. Close and load your results to an Excel table.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 从下两列中提取月份和日期数字。双击列标题，并分别重命名为`Year`、`Month`和`Day`，以反映重新格式化的数据。将您的结果关闭并加载到Excel表格中。
- en: Great job on successfully executing a series of column-oriented data manipulations
    in Power Query. You’re all set to load this query into Excel.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在Power Query中成功执行一系列面向列的数据操作，做得很好。您已准备好将此查询加载到Excel中。
- en: Creating Custom Columns
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义列
- en: Adding a *calculated column* is a common task in data cleaning. Whether it’s
    a profit margin, date duration, or something else, Power Query handles this process
    through its M programming language.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 添加*计算列*是数据清理中的常见任务。无论是利润率、日期间隔还是其他内容，Power Query通过其M编程语言处理此过程。
- en: For this next demonstration, head to the `teams` worksheet of *ch_04.xlsx*.
    This dataset includes season records for every Major League Baseball team since
    2000\. Our objective is to create a new column that calculates the win record
    for each team during the season. This calculation is done by dividing the number
    of wins by the total number of wins and losses combined.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对于下一个演示，请前往*ch_04.xlsx*的`teams`工作表。此数据集包括自2000年以来每支大联盟棒球队的赛季记录。我们的目标是创建一个新列，计算每支球队在赛季期间的胜率。这个计算通过将胜利次数除以总胜负次数完成。
- en: 'The first step, of course, is to load the data into Power Query. Then from
    the ribbon of the Editor, head to Add Column → Custom Column. Name your custom
    column `Wpct` and define it using the following formula:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，第一步是将数据加载到Power Query中。然后从编辑器的功能区中，转到“添加列” → “自定义列”。将自定义列命名为`Wpct`，并使用以下公式定义它：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The M programming language of Power Query follows a syntax resembling Excel
    tables, where column references are enclosed in single square brackets. Take advantage
    of Microsoft’s IntelliSense to hit tab and automatically complete the code as
    you type these references. Additionally, you have the option to double-click on
    the desired columns from the “Available columns” list, which will insert them
    into the formula area.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Power Query的M编程语言遵循类似Excel表格的语法，其中列引用用单方括号括起来。利用Microsoft的IntelliSense，按下Tab键在键入这些引用时自动完成代码。此外，您可以从“可用列”列表中双击所需的列，将其插入到公式区域。
- en: If everything is correct, a green checkmark will appear at the bottom of the
    dialog box, indicating that no syntax errors have been detected, as shown in [Figure 4-5](#creating-wpct).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正确，对话框底部将显示绿色的复选标记，表明未检测到语法错误，如[图 4-5](#creating-wpct)所示。
- en: '![Wpct calculation](assets/mdae_0405.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![Wpct 计算](assets/mdae_0405.png)'
- en: Figure 4-5\. Creating a winning percentage calculation
  id: totrans-40
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-5\. 创建胜率计算
- en: Once you have created this column, go ahead and change its data type in Power
    Query to Percentage.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 创建此列后，立即在Power Query中更改其数据类型为百分比。
- en: Loading & Inspecting the Data
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载和检查数据
- en: Our new column is calculated and ready to work with. On the Power Query Editor
    ribbon, head to Home → Close & Load → Close & Load To, then select PivotTable
    Report and OK. From there, you can analyze the data, such as calculating the average
    `Wpct` for each team name, as shown in [Figure 4-6](#wpct-pivot-table).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的新列已经计算并准备就绪。在Power Query Editor的功能区上，转到主页 → 关闭并加载 → 关闭并加载到，然后选择透视表报表和确定。从那里，您可以分析数据，例如计算每个团队名称的平均`Wpct`，如[图 4-6](#wpct-pivot-table)所示。
- en: '![Wpct PivotTable](assets/mdae_0406.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![Wpct 透视表](assets/mdae_0406.png)'
- en: Figure 4-6\. Summarizing the results in a PivotTable
  id: totrans-45
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-6\. 在透视表中总结结果
- en: Calculated Columns Versus Measures
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算列与度量值
- en: It is important to note that the average `Wpct` displayed in the PivotTable
    is a simple, unweighted average of the season’s winning percentages. This means
    that seasons with a lower number of games—such as the pandemic-affected 2020 season—have
    a disproportionate impact on the calculation. To verify this, compare the `Average
    of Wpct` value in the PivotTable with our own Excel calculation, as shown in [Figure 4-7](#wpct-miscalc).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，在透视表中显示的平均`Wpct`是本赛季胜率的简单未加权平均值。这意味着比赛较少的赛季（例如受到疫情影响的2020赛季）对计算有不成比例的影响。为了验证这一点，请将透视表中的`Wpct
    平均值`与我们自己的Excel计算进行比较，如[图 4-7](#wpct-miscalc)所示。
- en: '![Miscalculated PivotTable](assets/mdae_0407.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![错误的透视表](assets/mdae_0407.png)'
- en: Figure 4-7\. Apparent PivotTable miscalculation
  id: totrans-49
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-7\. 看似出现的透视表计算错误
- en: To address this issue, one approach involves using dynamic measures for real-time
    aggregation and calculations tailored to the analysis context. This is achieved
    with tools such as Power Pivot’s Data Model and the DAX language, discussed in
    [Part II](part02.html#part-2) of this book.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要解决此问题，一种方法是使用动态度量值进行实时聚合和根据分析上下文进行计算。这是通过诸如Power Pivot的数据模型和DAX语言实现的，详见本书的[第
    II 部分](part02.html#part-2)。
- en: This doesn’t mean that calculated columns in Power Query should be avoided altogether.
    They are simple to create and computationally efficient. Nevertheless, if there
    is a possibility that these columns might lead to misleading aggregations, it
    is advisable to opt for a DAX measure instead.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着在Power Query中应完全避免计算列。它们易于创建且计算效率高。尽管如此，如果这些列可能导致误导性的聚合，建议选择DAX度量值。
- en: Reshaping Data
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据重塑
- en: In [Chapter 1](ch01.html#ch_01), you were introduced to the concept of “tidy”
    data, where every variable is stored in one and only one column. You may recall
    the data in the `sales` worksheet as an example of untidy data. Fortunately, Power
    Query resolves this critical data storage problem. To begin, navigate to the familiar
    `sales` worksheet of the *ch_04.xlsx* workbook. Load this table into Power Query
    to initiate the data transformation process.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第 1 章](ch01.html#ch_01)中，您已经了解了“整洁”数据的概念，其中每个变量都存储在一个且仅一个列中。您可能还记得`sales`工作表作为不整洁数据的一个例子。幸运的是，Power
    Query 解决了这个关键的数据存储问题。首先，导航到*ch_04.xlsx*工作簿的熟悉`sales`工作表，将此表加载到Power Query中以启动数据转换过程。
- en: 'The goal is to “unpivot” or “melt” the all sales columns into one column named
    `sales`, along with the labels for those sales in one column called `department`.
    To do so, hold down the Ctrl key and select the first three variables: `customer_id`,
    `channel`, and `region`. Right-click and select Unpivot Other Columns, as shown
    in [Figure 4-8](#pq-unpivoting).'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是将所有销售列“unpivot”或“melt”成一个名为`sales`的列，以及这些销售的标签在一个名为`department`的列中。为此，按住Ctrl键选择前三个变量：`customer_id`、`channel`和`region`。右键单击并选择Unpivot
    Other Columns，如[图 4-8](#pq-unpivoting)所示。
- en: '![Unpivoting in Power Query](assets/mdae_0408.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![在Power Query中进行数据透视](assets/mdae_0408.png)'
- en: Figure 4-8\. Unpivoting a dataset in Power Query
  id: totrans-56
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-8\. 在Power Query中对数据集进行unpivot操作
- en: By default, the two resulting unpivoted columns will be called `Attribute` and
    `Value`. Rename them `department` and `sales`, respectively. You can now load
    the query to a PivotTable and analyze sales by channel and region. The results
    and benefits of creating a PivotTable based on this reshaped data are seen in
    [Figure 4-9](#pq-unpivoted).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，两个未整理的列将被称为`Attribute`和`Value`。将它们分别重命名为`department`和`sales`。现在可以将查询加载到数据透视表中，并分析按渠道和地区的销售情况。基于这些重塑数据创建数据透视表的结果和好处见于[图 4-9](#pq-unpivoted)。
- en: '![Using a PivotTable with an unpivoted dataset](assets/mdae_0409.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![在未整理的数据集中使用数据透视表](assets/mdae_0409.png)'
- en: Figure 4-9\. Operating on an unpivoted dataset with PivotTables
  id: totrans-59
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-9\. 在未整理的数据集上使用数据透视表操作
- en: Conclusion
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This chapter explored different ways to manipulate columns in Power Query. [Chapter 5](ch05.html#ch_05)
    takes a step further by working with multiple datasets in a single query. You’ll
    learn how to merge and append data sources, as well as how to connect to external
    sources like *.csv* files.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 本章探讨了在Power Query中操作列的不同方式。[第 5 章](ch05.html#ch_05)进一步讨论了在单个查询中使用多个数据集的方法。您将学习如何合并和附加数据源，以及如何连接外部源如*.csv*文件。
- en: Exercises
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 练习
- en: 'Practice transforming columns in Power Query with the *ch_04_exercises.xlsx*
    file found in the *exercises\ch_04_exercises* folder in the book’s [companion
    repository](https://oreil.ly/modern-analytics-excel-exercises). Perform the following
    transformations to this work orders dataset:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用书本的[附属库](https://oreil.ly/modern-analytics-excel-exercises)中的*exercises\ch_04_exercises*文件夹中的*ch_04_exercises.xlsx*文件，在Power
    Query中练习转换列。对这份工作订单数据集执行以下转换：
- en: Transform the `date` column to a month format, such as changing *1/1/2023* to
    *January*.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`date`列转换为月份格式，例如将*1/1/2023*更改为*January*。
- en: Transform the `owner` column to proper case.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`owner`列转换为 Proper Case 格式。
- en: 'Split the `location` column into two separate columns: `zip` and `state`.'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`location`列拆分为两个单独的列：`zip`和`state`。
- en: 'Reshape the dataset so that `subscription_cost`, `support_cost`, and `services_cost`
    are consolidated into two columns: `category` and `cost`.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新整理数据集，使得`subscription_cost`、`support_cost`和`services_cost`合并为两列：`category`和`cost`。
- en: Introduce a new column named `tax` that calculates 7% of the values in the `cost`
    column.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引入一个名为`tax`的新列，计算`cost`列值的7%。
- en: Convert the `zip` variable to the Text data type, and update both `cost` and
    `tax` columns to Currency.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`zip`变量转换为文本数据类型，并将`cost`和`tax`列更新为货币格式。
- en: Load the results to a table.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将结果加载到表格中。
- en: For the solutions to these transformations, refer to *ch_04_solutions.xlsx*
    in the same folder.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看这些转换的解决方案，请参阅同一文件夹中的*ch_04_solutions.xlsx*。
