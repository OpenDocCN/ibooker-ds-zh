- en: Chapter 29\. Customizing Plot Legends
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 29 章\. 自定义绘图图例
- en: Plot legends give meaning to a visualization, assigning meaning to the various
    plot elements. We previously saw how to create a simple legend; here we’ll take
    a look at customizing the placement and aesthetics of the legend in Matplotlib.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图图例赋予可视化含义，为各种绘图元素分配含义。我们之前看过如何创建简单的图例；现在我们将看看如何在 Matplotlib 中自定义图例的位置和美观性。
- en: The simplest legend can be created with the `plt.legend` command, which automatically
    creates a legend for any labeled plot elements (see [Figure 29-1](#fig_0406-customizing-legends_files_in_output_4_0)).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的图例可以通过`plt.legend`命令创建，该命令会自动为任何有标签的绘图元素创建图例（参见[图 29-1](#fig_0406-customizing-legends_files_in_output_4_0)）。
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![output 4 0](assets/output_4_0.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![output 4 0](assets/output_4_0.png)'
- en: Figure 29-1\. A default plot legend
  id: totrans-7
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 29-1\. 默认绘图图例
- en: But there are many ways we might want to customize such a legend. For example,
    we can specify the location and turn on the frame (see [Figure 29-2](#fig_0406-customizing-legends_files_in_output_6_0)).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们可能希望以许多方式自定义这样一个图例。例如，我们可以指定位置并打开边框（参见[图 29-2](#fig_0406-customizing-legends_files_in_output_6_0)）。
- en: '[PRE3]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![output 6 0](assets/output_6_0.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![output 6 0](assets/output_6_0.png)'
- en: Figure 29-2\. A customized plot legend
  id: totrans-11
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 29-2\. 自定义绘图图例
- en: We can use the `ncol` command to specify the number of columns in the legend,
    as shown in [Figure 29-3](#fig_0406-customizing-legends_files_in_output_8_0).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`ncol`命令来指定图例中的列数，如[图 29-3](#fig_0406-customizing-legends_files_in_output_8_0)所示。
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![output 8 0](assets/output_8_0.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![output 8 0](assets/output_8_0.png)'
- en: Figure 29-3\. A two-column plot legend
  id: totrans-15
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 29-3\. 一个两列图例
- en: And we can use a rounded box (`fancybox`) or add a shadow, change the transparency
    (alpha value) of the frame, or change the padding around the text (see [Figure 29-4](#fig_0406-customizing-legends_files_in_output_10_0)).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用圆角框（`fancybox`）或添加阴影，更改框架的透明度（alpha 值）或更改文本周围的填充（参见[图 29-4](#fig_0406-customizing-legends_files_in_output_10_0)）。
- en: '[PRE5]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: For more information on available legend options, see the `plt.legend` docstring.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可用图例选项的更多信息，请参阅`plt.legend`的文档字符串。
- en: '![output 10 0](assets/output_10_0.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![output 10 0](assets/output_10_0.png)'
- en: Figure 29-4\. A fancybox plot legend
  id: totrans-20
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 29-4\. 一个带有 fancybox 样式的图例
- en: Choosing Elements for the Legend
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择图例元素
- en: As we have already seen, by default the legend includes all labeled elements
    from the plot. If this is not what is desired, we can fine-tune which elements
    and labels appear in the legend by using the objects returned by `plot` commands.
    `plt.plot` is able to create multiple lines at once, and returns a list of created
    line instances. Passing any of these to `plt.legend` will tell it which to identify,
    along with the labels we’d like to specify (see [Figure 29-5](#fig_0406-customizing-legends_files_in_output_13_0)).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们已经看到的，默认情况下，图例包括来自绘图的所有带标签的元素。如果这不是所需的，我们可以通过使用`plot`命令返回的对象来微调图例中显示的元素和标签。`plt.plot`能够一次创建多条线，并返回创建的线实例列表。将其中任何一条传递给`plt.legend`将告诉它要识别哪些元素，以及我们想指定的标签（参见[图 29-5](#fig_0406-customizing-legends_files_in_output_13_0)）。
- en: '[PRE6]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![output 13 0](assets/output_13_0.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![output 13 0](assets/output_13_0.png)'
- en: Figure 29-5\. Customization of legend elements^([1](ch29.xhtml#idm45858758410736))
  id: totrans-25
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 29-5\. 图例元素的自定义^([1](ch29.xhtml#idm45858758410736))
- en: I generally find in practice that it is clearer to use the first method, applying
    labels to the plot elements you’d like to show on the legend (see [Figure 29-6](#fig_0406-customizing-legends_files_in_output_15_0)).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在实践中，我通常发现使用第一种方法更为清晰，即对你想在图例中显示的绘图元素应用标签（参见[图 29-6](#fig_0406-customizing-legends_files_in_output_15_0)）。
- en: '[PRE7]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Notice that the legend ignores all elements without a `label` attribute set.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，图例会忽略所有未设置`label`属性的元素。
- en: '![output 15 0](assets/output_15_0.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![output 15 0](assets/output_15_0.png)'
- en: Figure 29-6\. Alternative method of customizing legend elements^([2](ch29.xhtml#idm45858758305392))
  id: totrans-30
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 29-6\. 自定义图例元素的另一种方法^([2](ch29.xhtml#idm45858758305392))
- en: Legend for Size of Points
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 点的尺寸图例
- en: Sometimes the legend defaults are not sufficient for the given visualization.
    For example, perhaps you’re using the size of points to mark certain features
    of the data, and want to create a legend reflecting this. Here is an example where
    we’ll use the size of points to indicate populations of California cities. We’d
    like a legend that specifies the scale of the sizes of the points, and we’ll accomplish
    this by plotting some labeled data with no entries (see [Figure 29-7](#fig_0406-customizing-legends_files_in_output_19_0)).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 有时默认的图例设置不足以满足给定的可视化需求。例如，也许您正在使用点的大小来标记数据的某些特征，并且希望创建反映这一点的图例。这里有一个示例，我们将使用点的大小来指示加利福尼亚城市的人口。我们希望一个指定点大小比例的图例，并通过绘制一些带标签的数据项而实现这一目标（参见[图29-7](#fig_0406-customizing-legends_files_in_output_19_0)）。
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![output 19 0](assets/output_19_0.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![output 19 0](assets/output_19_0.png)'
- en: Figure 29-7\. Location, geographic size, and population of California cities
  id: totrans-36
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图29-7\. 加利福尼亚城市的位置、地理大小和人口
- en: The legend will always reference some object that is on the plot, so if we’d
    like to display a particular shape we need to plot it. In this case, the objects
    we want (gray circles) are not on the plot, so we fake them by plotting empty
    lists. Recall that the legend only lists plot elements that have a label specified.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图例始终引用绘图上的某个对象，因此如果我们想显示特定的形状，我们需要绘制它。在这种情况下，我们想要的对象（灰色圆圈）不在绘图上，因此我们通过绘制空列表来伪造它们。请记住，图例仅列出具有指定标签的绘图元素。
- en: By plotting empty lists, we create labeled plot objects that are picked up by
    the legend, and now our legend tells us some useful information. This strategy
    can be useful for creating more sophisticated visualizations.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 通过绘制空列表，我们创建了带标签的绘图对象，这些对象被图例捕捉，现在我们的图例告诉我们一些有用的信息。这种策略对于创建更复杂的可视化效果很有用。
- en: Multiple Legends
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多个图例
- en: 'Sometimes when designing a plot you’d like to add multiple legends to the same
    axes. Unfortunately, Matplotlib does not make this easy: via the standard `legend`
    interface, it is only possible to create a single legend for the entire plot.
    If you try to create a second legend using `plt.legend` or `ax.legend`, it will
    simply override the first one. We can work around this by creating a new legend
    artist from scratch (`Artist` is the base class Matplotlib uses for visual attributes),
    and then using the lower-level `ax.add_artist` method to manually add the second
    artist to the plot (see [Figure 29-8](#fig_0406-customizing-legends_files_in_output_22_0)).'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有时在设计绘图时，您可能希望向同一坐标轴添加多个图例。不幸的是，Matplotlib并不简化这一过程：通过标准的`legend`接口，仅能为整个绘图创建一个图例。如果尝试使用`plt.legend`或`ax.legend`创建第二个图例，它将简单地覆盖第一个。我们可以通过从头开始创建新的图例艺术家（`Artist`是Matplotlib用于视觉属性的基类），然后使用较低级别的`ax.add_artist`方法手动将第二个艺术家添加到绘图中来解决此问题（参见[图29-8](#fig_0406-customizing-legends_files_in_output_22_0)）。
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This is a peek into the low-level artist objects that comprise any Matplotlib
    plot. If you examine the source code of `ax.legend` (recall that you can do this
    with within the Jupyter notebook using `ax.legend??`) you’ll see that the function
    simply consists of some logic to create a suitable `Legend` artist, which is then
    saved in the `legend_` attribute and added to the figure when the plot is drawn.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是查看组成任何Matplotlib绘图的低级艺术家对象的一瞥。如果您检查`ax.legend`的源代码（请记住，您可以在Jupyter笔记本中使用`ax.legend??`来执行此操作），您将看到该函数仅仅由一些逻辑组成，用于创建一个适当的`Legend`艺术家，然后将其保存在`legend_`属性中，并在绘制绘图时将其添加到图形中。
- en: '![output 22 0](assets/output_22_0.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![output 22 0](assets/output_22_0.png)'
- en: Figure 29-8\. A split plot legend
  id: totrans-44
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图29-8\. 分割图例
- en: ^([1](ch29.xhtml#idm45858758410736-marker)) A full-color version of this figure
    can be found on [GitHub](https://oreil.ly/PDSH_GitHub).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch29.xhtml#idm45858758410736-marker)) 该图的全彩版本可以在[GitHub](https://oreil.ly/PDSH_GitHub)上找到。
- en: ^([2](ch29.xhtml#idm45858758305392-marker)) A full-color version of this figure
    can be found on [GitHub](https://oreil.ly/PDSH_GitHub).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch29.xhtml#idm45858758305392-marker)) 该图的全彩版本可以在[GitHub](https://oreil.ly/PDSH_GitHub)上找到。
